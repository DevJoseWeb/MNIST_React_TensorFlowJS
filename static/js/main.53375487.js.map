{"version":3,"sources":["../static/js/main.53375487.js","../webpack/bootstrap ccc85af25e9dedc6c1e5","../node_modules/@tensorflow/tfjs-core/dist/util.js","../node_modules/@tensorflow/tfjs-core/dist/environment.js","../node_modules/@tensorflow/tfjs-core/dist/doc.js","../node_modules/@tensorflow/tfjs-core/dist/index.js","../node_modules/@tensorflow/tfjs-layers/dist/errors.js","../node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js","../node_modules/@tensorflow/tfjs-layers/dist/backend/tfjs_backend.js","../node_modules/@tensorflow/tfjs-core/dist/ops/ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/operation.js","../node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js","../node_modules/@tensorflow/tfjs-core/dist/globals.js","../node_modules/webpack/buildin/amd-define.js","../node_modules/@tensorflow/tfjs-layers/dist/types.js","../node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js","../node_modules/@tensorflow/tfjs-core/dist/tensor.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/shader_compiler.js","../node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js","../node_modules/@tensorflow/tfjs-layers/dist/utils/math_utils.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","../node_modules/@tensorflow/tfjs-layers/dist/constraints.js","../node_modules/@tensorflow/tfjs-layers/dist/initializers.js","../node_modules/@tensorflow/tfjs-layers/dist/regularizers.js","../node_modules/@tensorflow/tfjs-core/dist/types.js","../node_modules/webpack/buildin/amd-options.js","../node_modules/webpack/buildin/module.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/tex_util.js","../node_modules/@tensorflow/tfjs-layers/dist/common.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/array_ops.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js","../node_modules/@tensorflow/tfjs-layers/dist/activations.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/serialization.js","../node_modules/webpack/buildin/global.js","../node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","../node_modules/@tensorflow/tfjs-layers/dist/backend/common.js","../node_modules/@tensorflow/tfjs-layers/dist/engine/training.js","../node_modules/@tensorflow/tfjs-layers/dist/losses.js","../node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/object-assign/index.js","../node_modules/react/index.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/backend_util.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/binaryop_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_util.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/unaryop_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/ops/binary_ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/concat.js","../node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops.js","../node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","../node_modules/@tensorflow/tfjs-layers/dist/callbacks.js","../node_modules/@tensorflow/tfjs-layers/dist/index.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/convolutional.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/recurrent.js","../node_modules/@tensorflow/tfjs-layers/dist/metrics.js","../node_modules/@tensorflow/tfjs-layers/dist/models.js","../node_modules/@tensorflow/tfjs-layers/dist/utils/serialization_utils.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/promise/lib/core.js","../node_modules/react-dom/index.js","../node_modules/seedrandom/index.js","index.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/@tensorflow/tfjs-core/dist/browser_util.js","../node_modules/@tensorflow/tfjs-core/dist/device_util.js","../node_modules/@tensorflow/tfjs-core/dist/engine.js","../node_modules/@tensorflow/tfjs-core/dist/gradients.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/backend_cpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/backend_webgl.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/argminmax_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/avg_pool_backprop_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/batchnorm_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/clip_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/concat_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/conv_backprop_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/conv_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/conv_gpu_depthwise.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/from_pixels_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gather_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_context.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/logical_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/lrn_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/max_pool_backprop_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/mulmat_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/multinomial_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/onehot_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/pad_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/pool_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/reduce_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/resize_bilinear_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/resize_nearest_neighbor_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/reverse_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/slice_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/tile_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/transpose_gpu.js","../node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js","../node_modules/@tensorflow/tfjs-core/dist/ops/compare.js","../node_modules/@tensorflow/tfjs-core/dist/ops/conv.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image_ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/logical_ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/lrn.js","../node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","../node_modules/@tensorflow/tfjs-core/dist/ops/matmul.js","../node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js","../node_modules/@tensorflow/tfjs-core/dist/ops/norm.js","../node_modules/@tensorflow/tfjs-core/dist/ops/pool.js","../node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/reduction_ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js","../node_modules/@tensorflow/tfjs-core/dist/ops/slice.js","../node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js","../node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js","../node_modules/@tensorflow/tfjs-core/dist/ops/unary_ops.js","../node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js","../node_modules/@tensorflow/tfjs-core/dist/profiler.js","../node_modules/@tensorflow/tfjs-core/dist/tape.js","../node_modules/@tensorflow/tfjs-core/dist/test_util.js","../node_modules/@tensorflow/tfjs-core/dist/tracking.js","../node_modules/@tensorflow/tfjs-core/dist/train.js","../node_modules/@tensorflow/tfjs-core/dist/version.js","../node_modules/@tensorflow/tfjs-core/dist/weights_loader.js","../node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","../node_modules/@tensorflow/tfjs-layers/dist/exports.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/advanced_activations.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/convolutional_depthwise.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/embeddings.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/merge.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/normalization.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/padding.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/pooling.js","../node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","../node_modules/@tensorflow/tfjs-layers/dist/optimizers.js","../node_modules/@tensorflow/tfjs-layers/dist/version.js","../node_modules/@tensorflow/tfjs/dist/index.js","../node_modules/@tensorflow/tfjs/dist/version.js","../node_modules/asap/browser-raw.js","drawable-canvas.js","../node_modules/babel-runtime/regenerator/index.js","../node_modules/fbjs/lib/EventListener.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/focusNode.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/isNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/seedrandom/lib/alea.js","../node_modules/seedrandom/lib/tychei.js","../node_modules/seedrandom/lib/xor128.js","../node_modules/seedrandom/lib/xor4096.js","../node_modules/seedrandom/lib/xorshift7.js","../node_modules/seedrandom/lib/xorwow.js","../node_modules/seedrandom/seedrandom.js","../node_modules/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","assertArgumentIsTensor","x","argName","functionName","assert","tensor_1","Tensor","assertArgumentsAreTensors","args","arg","Array","isArray","forEach","t","shuffle","array","counter","length","temp","index","Math","random","clamp","min","max","randUniform","a","b","distSquared","result","diff","Number","expr","msg","Error","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertTypesMatch","dtype","flatten","arr","ret","push","inferShape","val","isTypedArray","shape","sizeFromShape","size","isScalarShape","n1","n2","isInt","tanh","Infinity","e2x","exp","sizeToSquarishShape","floor","sqrt","createShuffledIndices","shuffledIndices","Uint32Array","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","Promise","resolve","reject","tryCount","tryFn","nextBackoff","setTimeout","getQueryParams","queryString","params","replace","_i","arguments","decodeParam","join","decodeURIComponent","inferFromImplicitShape","shapeProd","implicitIdx","newShape","slice","squeezeShape","axis","keptDims","j","getTypedArrayFromDType","values","Float32Array","Int32Array","Uint8Array","isTensorInList","tensor","tensorList","id","checkForNaN","vals","isNaN","flattenNameArrayMap","nameArrayMap","keys","xs","xMap","unflattenToNameArrayMap","flatArrays","hasEncodingLoss","oldType","newType","copyTypedArray","bool","round","bytesPerElement","isFunction","f","constructor","apply","extractTensorsFromContainer","extractTensorsFromAny","list","resultObj","isIterable","k","sublist","filter","obj","global","hasExtension","gl","extensionName","getExtension","getWebGLRenderingContext","webGLVersion","tempCanvas","document","createElement","getContext","loseContext","loseContextExtension","isWebGLVersionEnabled","getWebGLDisjointQueryTimerVersion","queryTimerVersion","isFloatTextureReadPixelsEnabled","frameBuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA32F","RGBA","texImage2D","FLOAT","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","frameBufferComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","readPixelsNoError","getError","NO_ERROR","isWebGLGetBufferSubDataAsyncExtensionEnabled","isEnabled","getFeaturesFromURL","features","window","urlParams","util","location","search","TENSORFLOWJS_FLAGS_PREFIX","urlFlags_1","split","keyValue","_a","key","URL_PROPERTIES","urlProperty","console","log","type","Type","NUMBER","BOOLEAN","STRING","warn","getGlobalNamespace","ns","__decorate","this","decorators","target","desc","r","getOwnPropertyDescriptor","Reflect","decorate","device_util","doc_1","engine_1","Environment","registry","setBackend","backendType","safeMode","ENV","initBackend","getBackend","initDefaultBackend","currentBackend","memory","engine","feature","evaluateFeature","set","getBestBackendType","_this","map","entry","sort","priority","isMobile","setFeatures","reset","globalEngine","dispose","backend","findBackend","Engine","registerBackend","factory","err","message","removeBackend","doc","heading","subheading","info","__export","browser_util_1","environment","environment_1","gpgpu_util","webgl_util","test_util","version_1","version_core","version","adadelta_optimizer_1","AdadeltaOptimizer","adagrad_optimizer_1","AdagradOptimizer","adam_optimizer_1","AdamOptimizer","adamax_optimizer_1","AdamaxOptimizer","momentum_optimizer_1","MomentumOptimizer","optimizer_1","Optimizer","rmsprop_optimizer_1","RMSPropOptimizer","sgd_optimizer_1","SGDOptimizer","TensorBuffer","variable","Variable","types_1","Rank","weights_loader_1","loadWeights","loss_ops_1","Reduction","environment_2","nextFrame","BrowserUtil","webgl","__extends","extendStatics","setPrototypeOf","__proto__","__","create","AttributeError","_super","RuntimeError","ValueError","NotImplementedError","AssertionError","IndexError","pyListRepeat","numValues","newArray","concat","fill","pyGetAttr","attrName","defaultValue","undefined","errors_1","pyNormalizeArrayIndex","errMsg","count","refernce","array_1","singletonOrArray","toList","objectListUid","objs","objectList","retVal","objectList_1","abs","isArrayOfShapes","normalizeShapeList","toSnakeCase","intermediate","insecure","toLowerCase","toCamelCase","identifier","indexOf","p1","toUpperCase","serializeKerasObject","instance","className","getClassName","config","getConfig","deserializeKerasObject","moduleObjects","customObjects","printableModuleName","fn","_GLOBAL_CUSTOM_OBJECTS","JSON","stringify","cls","fromConfig","_b","_c","customObjectsCombined","_d","_e","_f","backupCustomObjects","__assign","_g","_h","returnObj","_j","_k","getExactlyOneTensor","getExactlyOneShape","shapes","numberCompare","reverseNumberCompare","stringToDType","DType","float32","stringsEqual","ys","unique","out","xs_1","isObjectEmpty","assign","ClassNameMap","pythonClassNameMap","getMap","register","SerializableEnumRegistry","enumRegistry","fieldName","enumCls","contains","lookup","reverseLookup","enumMap","candidateString","disposeScalarCache","typeKey","scalarCache","requestedBackend","tfc","keep","getScalar","DEFAULT_DTYPE","tfjs_core_1","scalar","isBackendSymbolic","intShape","ndim","normalizeAxis","xShape","thisAxis","generic_utils_1","countParams","reduce","cast","asType","reshape","transpose","perm","reverse","axes","expandDims","outShape","splice","squeeze","temporalPadding","padding","pattern","pad","spatial2dPadding","dataFormat","common_3","imageDataFormat","tile","math_utils","arrayProd","batchFlatten","sliceAlongFirstAxis","start","rank","slice1d","slice2d","slice3d","slice4d","sliceAlongLastAxis","regularNormalizeBatchInTraining","gamma","beta","reductionAxes","epsilon","tidy","meanAndVariance","moments","mean","variance","batchNormalization","broadcastNormalizeBatchInTraining","targetShape","range","broadcastMean","broadcastVariance","broadcastGamma","broadcastBeta","normalizeBatchInTraining","concatenate","tensors","concatAlongFirstAxis","concat1d","concat2d","concat3d","concat4d","constraint","LayerVariable","batchGetValue","read","batchSetValue","variablesAndValues","variableAndValue","write","zeros","zerosVariable","zerosLike","ones","onesVariable","allocated","onesLike","identity","clone","eye","buffer","tensor2d","eyeVariable","neg","add","y","subtract","sub","multiply","mul","divide","div","scalarTimesArray","scalarPlusArray","randomUniform","minval","maxval","seed","randomUniformVariable","truncatedNormal","stddev","truncatedNormalVariable","randomNormal","dtypeString","randomNormalVariable","update","xNew","updateAdd","increment","updateSub","decrement","dot","matMul","xShape0","xShape1","xShape2","sign","zerosLikeX","onesLikeX","where","equal","greater","qr","q","one2D","rjEnd1","normX","norm","rjj","u1","wPre","w","tau","rjEndAll","tauTimesW","qAllJEnd","oneHot","indices","numClasses","toInt","toFloat","keepDims","argmax","argMax","gather","reference","tensor1d","minimum","sum","square","mulStrict","pow","clip","minValue","maxValue","clipByValue","greaterEqual","maximum","sin","cos","batchNormalization2d","batchNormalization3d","batchNormalization4d","biasAdd","bias","common_1","checkDataFormat","biasShape","elu","alpha","selu","relu","softplus","softsign","dropout","level","noiseShape","multiplier","step","l2Normalize","preprocessConv2DInput","conv1dWithBias","kernel","strides","dilationRate","conv1d","conv2d","conv2dWithBias","depthwiseConv2d","depthwiseKernel","pool2d","poolSize","poolMode","checkPoolMode","checkPaddingMode","paddingString","maxPool","avgPool","nameScope","floatx","getUid","prefix","_uidPrefixes","toString","softmax","categoricalCrossentropy","output","fromLogits","sparseCategoricalCrossentropy","flatTarget","outputShape","binaryCrossentropy","sigmoidCrossEntropyWithLogits","maxOutput","outputXTarget","sigmoidOutput","sigmoid","hardSigmoid","inTrainPhase","alt","training","rnn","stepFunction","inputs","initialStates","goBackwards","mask","constants","unroll","inputLength","outputs","lastOutput","states","timeSteps","currentInput","stepOutputs","gradients","lossFn","variables","variableList","valudAndGrads","variableGrads","grads","common_2","int32","permuteDimensions","array_ops_1","batchnorm_1","binary_ops_1","compare_1","concat_1","conv_1","image_ops_1","logical_ops_1","lrn_1","lstm_1","matmul_1","moving_average_1","norm_1","pool_1","reduction_ops_1","reverse_1","slice_1","softmax_1","transpose_1","unary_ops_1","BatchNormOps","ConcatOps","ConvOps","conv2dTranspose","separableConv2d","MatmulOps","matrixTimesVector","outerProduct","vectorTimesMatrix","PoolOps","TransposeOps","ReverseOps","reverse1d","reverse2d","reverse3d","reverse4d","SliceOps","ReductionOps","argMin","logSumExp","CompareOps","equalStrict","greaterStrict","greaterEqualStrict","less","lessStrict","lessEqual","lessEqualStrict","notEqual","notEqualStrict","logicalNot","LogicalOps","logicalAnd","logicalOr","logicalXor","UnaryOps","acos","acosh","asin","asinh","atan","atanh","ceil","cosh","expm1","leakyRelu","log1p","logSigmoid","prelu","reciprocal","sinh","rsqrt","tan","erf","BinaryOps","addStrict","atan2","divStrict","maximumStrict","minimumStrict","mod","modStrict","powStrict","subStrict","squaredDifference","squaredDifferenceStrict","NormOps","ArrayOps","fromPixels","toPixels","rand","multinomial","linspace","tensor3d","tensor4d","print","stack","pad1d","pad2d","pad3d","pad4d","movingAverage","MovingAverageOps","basicLSTMCell","LSTMOps","multiRNNCell","SoftmaxOps","localResponseNormalization","LRNOps","losses","softmaxCrossEntropy","absoluteDifference","LossOps","computeWeightedLoss","image","resizeBilinear","ImageOps","resizeNearestNeighbor","operation","descriptor","globals_1","collectInputShape","inputTensors","generic_utils","inputTensors_1","K","guessOutputDType","Input","batchShape","InputLayer","batchInputShape","sparse","inboundNodes","outputTensors","getSourceInputs","layer","nodeIndex","sourceLayer","node","inboundLayers","sourceTensors","layer_2","nodeIndex_3","nodeIndices","previousSources","previousSources_1","x_1","loadTensor","dataType","make","preprocessWeightsForLoading","weights","originalKerasVersion","originalBackend","startsWith","loadWeightsFromNamedTensorMap","layers","nameToWeight","totalWeightsCount","layers_1","weight","weightValueTuples","name_2","unsetNames","name_3","loadWeightsFromJson","weightsJSON","skipMismatch","layerNames","layers_2","nameToWeights","name_4","layerWeights","weightValues","weightEntry","symbolicWeights","serialization_1","serialization_utils_1","InputSpec","maxNDim","minNDim","_nextNodeID","Node","callArgs","outboundLayer","tensorIndices","inputMasks","outputMasks","inputShapes","outputShapes","outboundNodes","inboundNames","_nextLayerID","Layer","_callHook","_addedWeightNames","_stateful","activityRegularizer","inputSpec","supportsMasking","_trainableWeights","_nonTrainableWeights","_losses","_updates","_built","trainable","updatable","inputShape","batchSize","inputDType","initialWeights","nodeKey","getNodeAtIndex","getInputAt","getOutputAt","calculateLosses","built","trainableWeights","nonTrainableWeights","assertInputCompatibility","inputIndex","spec","xDType","xShapeAtAxis","specDim","dim","kwargs","invokeCallHook","setCallHook","callHook","clearCallHook","inputsList","allAreSymbolic","inputsList_1","input","SymbolicTensor","noneAreSymbolic","inputsList_2","xElem","build","setWeights","outputList","outputListCopy","outputList_1","computeOutputShape","outputDType_1","addInboundNode","getWeights","paramValues","pv","addWeight","initializer","regularizer","addLoss","computeMask","TypeError","maskElement","inputTensorList","inputTensorList_1","tensorIndex","namespace","Serializable","inputTensor","Container","containerNodes","Set","inputLayers","inputLayersNodeIndices","inputLayersTensorIndices","outputLayers","outputLayersNodeIndices","outputLayersTensorIndices","inputNames","outputNames","feedInputShapes","feedInputNames","feedOutputNames","internalInputShapes","internalOutputShapes","nodesDepths","nodeIDToNode","layersDepths","layerIDToLayer","layerIndices","nodesInDecreasingDepth","buildMapOfGraph","finishedNodes","nodesInProgress","numInboundLayers","layer_1","nodeIndex_1","tensorIndex_1","reversedNodesInDecreasingDepth","reversedNodesInDecreasingDepth_1","depth","previousDepth","inboundLayer","inboundNode","previousDepth_1","nodesByDepth","nodeID","layersByDepth","layerID","depthKeys","parseInt","depthKeys_1","layersForDepth","aIndex","bIndex","layersForDepth_1","computableTensors","layersWithCompleteInput","_l","depthKeys_2","_m","_o","_p","_q","_r","_s","allNames","_t","allNames_1","name_1","numOccurrences","isNamedTensorMap","updatedConfig","theConfig","kerasVersion","toJSON","unused","modelConfig","convertTsToPythonic","masks","runInternalGraph","layersToOutputShapes","inputShape_1","shapeKey","depthKeys_3","nodes","nodes_1","inputShapes_1","nodeIndex_2","inputShape_2","outputShapes_1","outputShapeKeys","tensorMap","depthKeys_4","nodes_2","referenceInputTensors","referenceOutputTensors","computedData","referenceInputTensors_1","computedTensors","computedMasks","outputTensors_1","outputMasks_1","computedTensor","computedMask","buildNodeConversionMap","keptNodes","nodeConversionMap","originalNodeIndex","getLayer","has","layerConfigs","layerClassName","layerConfig","filteredInboundNodes","nodeData","nodeKey_1","newNodeIndex","modelInputs","modelOutputs","addUnprocessedNode","unprocessedNodes","createdLayers","layersFromConfig","layersFromConfig_1","layerData","layerName","deserialize","inboundNodesData","inboundNodesData_1","layersFromConfig_2","nodeData_1","inputData","inboundLayerName","inboundNodeIndex","inboundTensorIndex","inputLayersFromConfig","inputLayersFromConfig_1","layerOutputTensors","outputLayersFromConfig","outputLayersFromConfig_1","stateful","subclasses","gradients_1","tracking_1","Tracking","time","grad","Gradients","valueAndGrad","valueAndGrads","customGrad","checkShapesMatch","getValueTensor","ConcreteTensor","_nextUniqueTensorId","outputTensorIndex","originalName","getScopedTensorName","getUniqueTensorName","DEFAULT_VARIABLE_NAME_PREFIX","newVal","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","loc","outIdx","reduceIdx","computeOutAndReduceShapes","aShape","expandShapeToKeepDim","parseAxisParam","every","ax","assertAxesAreInnerMostDims","getAxesPermutation","getUndoAxesPermutation","getInnerMostAxes","numAxes","res","computeStrides","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","e","rejected","done","then","__generator","body","verb","v","op","_","label","ops","pop","trys","g","sent","throw","return","Symbol","iterator","tensor_util","locs","locToIndex","indexToLoc","toTensor","dataId","isDisposed","Tensor_1","nextId","rankType","registerTensor","data","throwIfDisposed","as1D","asScalar","as2D","rows","columns","as3D","as4D","depth2","dataSync","readSync","disposeTensor","toBool","verbose","reshapeAs","tensorToString","reps","transposeA","transposeB","ord","begin","paddings","constantValue","varianceEpsilon","scale","offset","condition","newShape2D","alignCorners","stride","dilation","dimRoundingMode","dilations","depthwiseConv2D","filterSize","radius","initialValue","Variable_1","nextVarId","registerVariable","newValue","makeShader","inputsInfo","userCode","broadcast","sampleSnippet","getSampleSnippet","setOutputSnippet","getSetOutputSnippet","inputPrefixSnippet","inputSamplingSnippet","getInputSamplingSnippet","outTexShape","texShape","outputSamplingSnippet","getOutputSamplingSnippet","logicalShape","SHADER_PREFIX","FLOAT_TEXTURE_SAMPLE_SNIPPET","UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET","FLOAT_TEXTURE_SETOUTPUT_SNIPPET","UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET","getSamplerFromInInfo","inInfo","shapeInfo","getSamplerScalar","getSampler1D","getSampler2D","getSampler3D","getSampler4D","outShapeInfo","getSamplerFlat","getSamplerAtOutputCoords","getOutput1DCoords","getOutput2DCoords","getOutput3DCoords","getOutput4DCoords","stride0","stride1","stride2","inputInfo","texName","charAt","funcName","texNumR","texNumC","squeezedShape","newInputInfo","squeezeInputInfo","getSqueezedParams","tNumR","tNumC","getBroadcastOutputCoordsSampler","texFuncSnippet","inRank","outRank","coordsSnippet","broadcastDims","broadcast_util","getBroadcastDims","rankDiff","unpackedCoordsSnippet","supportsBroadcasting","inTexShape","doBroadcast","broadcastOverOuter","broadcastDimsAreOuter","inSize","broadcastSnippet","getCoordsDataType","parse","tex_util","FLOAT_MIN","FLOAT_MAX","BYTE_NAN_VALUE","inShape","dims","unshift","getReductionAxes","inDim","outAxis","outDim","assertAndGetBroadcastShape","isInteger","end","prod","toArray1D","demeaned","minimize","returnCost","varList","computeGradients","applyGradients","varName","calcL2Norms","serializeConstraint","deserializeConstraint","getConstraint","CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP","Constraint","MaxNorm","defaultMaxValue","defaultAxis","norms","desired","UnitNorm","NonNeg","MinMaxNorm","defaultMinValue","defaultRate","rate","maxNorm","minMaxNorm","nonNeg","unitNorm","checkFanMode","VALID_FAN_MODE_VALUES","checkDistribution","VALID_DISTRIBUTION_VALUES","computeFans","fanIn","fanOut","receptiveFieldSize","math_utils_1","deserializeInitializer","serializeInitializer","getInitializer","INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP","Initializer","fan_in","fan_out","fan_avg","normal","uniform","fromConfigUsesCustomObjects","Zeros","Ones","Constant","RandomUniform","DEFAULT_MINVAL","DEFAULT_MAXVAL","RandomNormal","DEFAULT_MEAN","DEFAULT_STDDEV","TruncatedNormal","Identity","gain","VarianceScaling","mode","distribution","fans","limit","GlorotUniform","GlorotNormal","HeNormal","LeCunNormal","Orthogonal","DEFAULT_GAIN","normalizedShape","constant","glorotNormal","glorotUniform","heNormal","leCunNormal","orthogonal","varianceScaling","l1","L1L2","l2","serializeRegularizer","deserializeRegularizer","getRegularizer","REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP","Regularizer","hasL1","hasL2","L1L2_1","regularization","l1l2","upcastType","typeA","typeB","upcastTypeMap","sumOutType","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","__webpack_amd_options__","webpackPolyfill","deprecate","paths","children","getUnpackedMatrixTextureShapeWidthHeight","getUnpackedArraySizeFromMatrixSize","matrixSize","channelsPerTexture","getColorMatrixTextureShapeWidthHeight","getMatrixSizeFromUnpackedArraySize","unpackedSize","encodeMatrixToUnpackedArray","matrix","unpackedArray","requiredSize","dst","src","encodeFloatArray","floatArray","uintArray","normalizedValue","FLOAT_RANGE","enc","FLOAT_POWERS","buckets","decodeToFloatArray","NaN","FLOAT_DELTAS","delta","decodeMatrixFromUnpackedArray","decodeMatrixFromUnpackedColorRGBAArray","channels","getPackedMatrixTextureShapeWidthHeight","getPackedRGBAArraySizeFromMatrixShape","encodeMatrixToPackedRGBA","packedRGBA","textureWidth","textureHeight","oddWidth","oddHeight","widthInFullBlocks","heightInFullBlocks","dstStride","oneRow","blockY","matrixSrcRow","blockX","matrixSrcCol","srcStride","decodeMatrixFromPackedRGBA","dstRow1","dstRow2","TextureType","VALID_DATA_FORMAT_VALUES","VALID_PADDING_MODE_VALUES","VALID_POOL_MODE_VALUES","_nameScopeStack","currentNameScopePrefix","_nameScopeDivider","tensorName","isValidTensorName","scopedName","nameMap","match","tensorNameRegex","Map","channels_first","channels_last","valid","same","casual","RegExp","createWebGLRenderingContext","attributes","canvas","width","height","createWebGLRenderingContextFromCanvas","webglVersion","callAndCheck","func","returnValue","checkWebGLError","enableDebugWebGLErrorChecking","enabled","webGLDebugErrorCheckingEnabled","error","getWebGLErrorMessage","status","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","getExtensionOrThrow","throwIfNull","createVertexShader","vertexShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createFragmentShader","fragmentShaderSource","fragmentShader","FRAGMENT_SHADER","logShaderSourceAndInfoLog","shaderInfoLog","lineNumberRegexResult","lineNumberRegex","exec","lineNumber","shaderLines","linesWithLineNumbers","line","maxLineLength","beforeErrorLines","errorLine","afterErrorLines","createProgram","linkProgram","program","getProgramParameter","LINK_STATUS","getProgramInfoLog","validateProgram","VALIDATE_STATUS","createStaticVertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","createStaticIndexBuffer","ELEMENT_ARRAY_BUFFER","queryMaxTextureSize","MAX_TEXTURE_SIZE","getParameter","getChannelsPerTexture","validateTextureSize","maxTextureSize","requested","bindVertexBufferToProgramAttribute","attribute","arrayEntriesPerItem","itemStrideInBytes","itemOffsetInBytes","getAttribLocation","vertexAttribPointer","enableVertexAttribArray","bindTextureUnit","textureUnit","validateTextureUnit","activeTexture","TEXTURE0","unbindTextureUnit","getProgramUniformLocationOrThrow","uniformName","getUniformLocation","getProgramUniformLocation","bindTextureToProgramUniformSampler","uniformSamplerLocation","uniform1i","bindCanvasToFramebuffer","viewport","scissor","bindColorTextureToFramebuffer","framebuffer","unbindColorTextureFromFramebuffer","validateFramebuffer","getFramebufferErrorMessage","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","returnTOrNull","failureMessage","tOrNull","maxTextureUnit","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glTextureUnit","textureUnitRange","getTextureShapeFromLogicalShape","logShape","maxTexSize","makeZerosTypedArray","makeOnesTypedArray","toTypedArray","noConversionNeeded","axis_util_1","operation_1","rand_1","inferredShape","der","dy","runKernel","stdDev","randGauss","MPRandGauss","nextValue","randFunction","logits","numSamples","normalized","numOutcomes","origRank","logits2D","onValue","offValue","pixels","numChannels","img","bytes","ctx","imageData","Uint8ClampedArray","ImageData","putImageData","xGrad","expandedTensors","numOrSizeSplits","splitSizes","stop","num","sameStartStop","increasingRangeNegativeStep","decreasingRangePositiveStep","numElements","ops_1","learningRate","setLearningRate","variableGradients","gradient","registeredVariables","getActivation","activationType","linear","relu6","serializeActivation","activation","Function","eval","assertParams","bShape","aRank","bRank","computeOutShape1D","x1Shape","x2Shape","computeOutShape","computeGradientSliceShapes","aBegin","aSize","bBegin","bSize","SELU_SCALEALPHA","SELU_SCALE","rho","accumulatedGrads","accumulatedUpdates","oneMinusRho","this_1","variableName","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","updates","newAccumulatedUpdate","initialAccumulatorValue","beta1","beta2","accumulatedFirstMoment","accumulatedSecondMoment","eps","accBeta1","accBeta2","oneMinusBeta1","oneMinusBeta2","one","oneMinusAccBeta1","oneMinusAccBeta2","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","decay","accumulatedWeightedInfNorm","iteration","lr","weightedInfNorm","ut0","ut1","newWeightedInfNorm","momentum","useNesterov","accumulations","accumulation","newAccumulation","setMomentum","centered","accumulatedMeanSquares","accumulatedMeanGrads","accumulatedMoments","oneMinusDecay","accumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanSquare","newAccumulatedMeanGrad","newAccumulatedMoments","newAccumulatedMeanSquare_1","_epsilon","setEpsilon","isDataTensor","isDataArray","isDataDict","standardizeInputData","names","checkBatchAxis","exceptionPrefix","gotUnexpectedData","arrays","names_1","refDim","checkArrayLengths","targets","setX","setY","checkLossAndTargetCompatibility","lossFns","keyLosses","meanSquaredError","loss","slicedYShape","slicedShape","targetDim","makeBatches","batchStart","batchEnd","sliceArrays","sliceArraysByIndices","checkInputData","collectMetrics","metrics","nestedMetrics","outputNames_1","outputMetrics","callbacks_1","Metrics","optimizers","executor_1","topology_1","ModelLoggingVerbosity","Model","compile","optimizer","getOptimizer","lossFunctions","theLosses","lossFunction_1","feedOutputShapes","feedLossFns","name_5","skipTargetIndices","metricsNames","metricsTensors","weightedLoss","appendMetric","outputIndex","metricName","metricTensor","accFn","weightedMetricFn","metrics_1","metric","binaryAccuracy","sparseCategoricalAccuracy","categoricalAccuracy","suffix","metricFn","metricResult","collectedTrainableWeights","checkTrainableWeightsConsistency","evaluate","standardizedOuts","standardizeUserData","ins","makeTestFunction","testFunction","testOuts","testLoop","steps","checkNumSamples","stepsName","predictLoop","batches","outs","batchIndex","batchOuts","insBatch","feeds","feedDict","FeedDict","execute","batchOuts_1","batchOut","predict","predictOnBatch","fitLoop","outLabels","epochs","callbacks","valF","valIns","callbackMetrics","initialEpoch","stepsPerEpoch","validationSteps","doValidation","numTrainSamples","indexArray","callbackList","_loop_4","epoch","history","History","BaseLogger","CallbackList","setModel","setParams","onTrainBegin","epochLogs","epochIndexArray1D_1","batches_1","_loop_5","onEpochBegin","batchLogs","onBatchBegin","batchIds","valOuts","onBatchEnd","disposeTensorsInLogs","onEpochEnd","onTrainEnd","syncData","getDedupedMetricsNames","dedupedOutLabels","newLabel","totalLoss","valOutputs","lossFunction","meanMetric","fit","valX","valY","valStandardized","splitAt","originalBatchSize","trainFunction","valFunction","validationData","validationSplit","lossValues","metricsValues","totalLossFunction","meanLoss","regularizerLoss","param","standardizeCallbacks","configParamIndices","yTrue","yPred","meanAbsoluteError","meanAbsolutePercentageError","clippedTrue","MAX_VALUE","absResult","meanSquaredLogarithmicError","clippedPred","firstLog","secondLog","squaredHinge","zeroTensor","maxResult","hinge","categoricalHinge","pos","logcosh","log2","predictionDiff","logcoshResult","kullbackLeiblerDivergence","poisson","logPred","cosineProximity","trueNormalized","predNormalized","trueXPred","identifierOrFn","lossesMap","mse","MSE","mae","MAE","mape","MAPE","msle","MSLE","kld","KLD","cosine","normalizeArray","singleValue","convOutputLength","fliterSize","outputLength","dilatedFilterSize","deconvLength","dimSize","strideSize","kernelSize","makeEmptyFunction","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","toObject","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","letter","source","from","symbols","to","castTensor","__1","int","reshapeTensor","CHECK_NAN_SNIPPET","ADD","SUB","MUL","DIV","INT_DIV","POW","SQUARED_DIFFERENCE","EQUAL","NOT_EQUAL","LESS","LESS_EQUAL","GREATER","GREATER_EQUAL","LOGICAL_AND","LOGICAL_OR","MAX","MIN","MOD","ATAN2","ELU_DER","BinaryOpProgram","variableNames","getWebGLContextAttributes","antialias","premultipliedAlpha","preserveDrawingBuffer","stencil","failIfMajorPerformanceCaveat","createWebGLContext","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","createVertexBuffer","vertexArray","createIndexBuffer","triangleVertexIndices","Uint16Array","getTextureInternalFormat","R32F","getTextureFormat","RED","getTextureType","UNSIGNED_BYTE","createAndConfigureTexture","tex2d","format","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","createMatrixTexture","createColorMatrixTexture","createPackedMatrixTexture","bindVertexProgramAttributeStreams","vertexBuffer","uploadPixelDataToTexture","uploadDataToTexture","textureFormat","texSubImage2D","uploadMatrixToTexture","h","uploadMatrixToPackedTexture","getDownloadTargetArrayBuffer","isFloatTexture","decodeDownloadTargetArrayBuffer","downloadTarget","channelsPerPixel","downloadMatrixFromOutputTextureAsync","getBufferSubDataAsyncExtension","gl2","bufferSizeBytes","PIXEL_PACK_BUFFER","getBufferSubDataAsync","downloadMatrixFromOutputTexture","downloadMatrixFromRGBAColorTexture","downloadMatrixFromPackedOutputTexture","STEP","selu_util","erf_util","UnaryOpProgram","opSnippet","ABS","RELU","ELU","SELU","NEG","CEIL","FLOOR","SIGN","ROUND","EXP","EXPM1","LOG","LOG1P","SQRT","RSQRT","SIGMOID","SOFTPLUS","SIN","COS","TAN","ASIN","ACOS","ATAN","SINH","COSH","TANH","ASINH","ACOSH","ATANH","ERF","ERF_P","ERF_A1","ERF_A2","ERF_A3","ERF_A4","ERF_A5","SQUARE","RECIPROCAL","LOGICAL_NOT","TO_INT","reduceAxes","base","saved","save","tmp","two","concat2Tensors","concat_util","a2D","b2D","computePool2DInfo","roundingMode","filterShape","parseTupleParam","filterHeight","filterWidth","computeConv2DInfo","depthwise","inHeight","inWidth","inChannels","filterChannels","strideHeight","strideWidth","dilationHeight","dilationWidth","effectiveFilterHeight","getEffectiveFilterSize","effectiveFilterWidth","getPadAndOutInfo","padInfo","outHeight","outWidth","outChannels","computeOutputShape3D","fieldSize","outDepth","zeroPad","computeDefaultPad","inputRows","inputCols","outputRows","conditionalRound","outputCols","effectiveFieldSize","top","bottom","left","right","padAlongHeight","padAlongWidth","top_1","reduction","SUM_BY_NONZERO_WEIGHTS","NONE","SUM","MEAN","numNonZeros","labels","predictions","padPerCol","computeMaxSizePerColumn","valsLines","subTensorToString","lines","numCols","row","valToString","parseFloat","toFixed","FORMAT_NUM_SIG_DIGITS","isLast","FORMAT_LIMIT_NUM_VALS","firstVals","subarray","FORMAT_NUM_FIRST_LAST_VALS","lastVals","subshape","substrides","sep","newLineSep","resolveScalarsInLogs","logs","promises","valueScalar","all","Callback","callbackConfig","CustomCallback","model","batch","queueLength","append","callback","seen","totals","_loop_1","_loop_2","this_2","valueArray","trainBegin","trainEnd","epochBegin","epochEnd","batchBegin","exports_1","training_1","recurrent_1","RNN","models_1","Sequential","version_layers","ModelExports","sequential","loadModel","LayerExports","constraints","ConstraintExports","initializers","InitializerExports","MetricExports","regularizers","RegularizerExports","activations_1","constraints_1","initializers_1","regularizers_1","conv_utils_1","Conv","DEFAULT_KERNEL_INITIALIZER","DEFAULT_BIAS_INITIALIZER","filters","useBias","kernelInitializer","biasInitializer","kernelConstraint","biasConstraint","kernelRegularizer","biasRegularizer","channelAxis","inputDim","kernelShape","biasValue","newSpace","space","newDim","baseConfig","Conv2D","Conv2DTranspose","hAxis","wAxis","kernelH","kernelW","strideH","strideW","heightAxis","widthAxis","SeparableConv","DEFAULT_DEPTHWISE_INITIALIZER","DEFAULT_POINTWISE_INITIALIZER","pointwiseKernel","depthMultiplier","depthwiseInitializer","depthwiseRegularizer","depthwiseConstraint","pointwiseInitializer","pointwiseRegularizer","pointwiseConstraint","depthwiseKernelShape","pointwiseKernelShape","SeparableConv2D","Conv1D","topology_2","cell","StackedRNNCells","cells","stateSize","returnSequences","returnState","stateSpec","numConstants","getStates","numStates","setStates","outputDim","stateShape","stateSize_1","stepInputShape","resetStates","expectedShape","standardizeArgs","initialState","toListOrNull","standardized","additionalInputs","additionalSpecs","initialState_1","state","fullInput","fullInputSpec","originalInputSpec","getInitialState","timesteps","cellCallKwargs","rnnOutputs","cellConfig","RNNCell","SimpleRNNCell","DEFAULT_ACTIVATION","DEFAULT_RECURRENT_INITIALIZER","units","recurrentInitializer","recurrentRegularizer","recurrentConstraint","recurrentDropout","recurrentKernel","prevOutput","SimpleRNN","GRUCell","DEFAULT_RECURRENT_ACTIVATION","recurrentActivation","implementation","hTMinus1","z","hh","kernelZ","kernelR","recurrentKernelZ","recurrentKernelR","recurrentKernelH","inputsZ","inputsR","inputsH","xZ","xR","xH","biasZ","biasR","biasH","hTMinus1Z","hTMinus1R","hTMinus1H","matrixX","matrixInner","recurrentZ","recurrentR","recurrentH","GRU","LSTMCell","unitForgetBias","capturedBiasInit_1","capturedUnits_1","CustomInit","bI","bF","bCAndH","cTMinus1","kernelI","kernelF","kernelC","kernelO","recurrentKernelI","recurrentKernelF","recurrentKernelC","recurrentKernelO","inputsI","inputsF","inputsC","inputsO","xI","xF","xC","xO","biasI","biasF","biasC","biasO","hTMinus1I","hTMinus1F","hTMinus1C","hTMinus1O","z0","z1","z2","z3","LSTM","nestedStates","callInputs","newNestedStates","cellStates","cellConfigs","tuples","numParams","inputWeights","threshold","yPredThresholded","topKCategoricalAccuracy","sparseTopKCategoricalAccuracy","metricsMap","losses_1","modelFromJSON","modelAndWeightsConfig","modelTopology","tsConfig","uniqueWeightValues","skipMismatches","convertPythonicToTs","weightsManifest","pathPrefix","loadModelInternal","modelConfigPath","modelConfigRequest","fetch","json","substring","lastIndexOf","_updatable","Sequential_1","outputTensor","lastLayerIndex","conf","isArrayItemInputOrOutputName","pythonicConfig","tsArray","arrayLength","item","tsDict","pythonicKey","pythonicValue","tsKey","enumValue","pyArray","pyDict","tsValue","pyKey","enumString","emptyObject","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","handle","Handler","deferred","_10","handleResolved","asap","cb","promise","finale","bind","_97","reason","_61","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","__webpack_exports__","_asyncToGenerator","gen","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2_react_dom__","__WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__","__WEBPACK_IMPORTED_MODULE_4__drawable_canvas__","__WEBPACK_IMPORTED_MODULE_5__style_css__","_createClass","defineProperties","props","protoProps","staticProps","App","_Component","getPrototypeOf","clear","_ref","mark","_callee","wrap","_context","prev","_x","_ref2","_callee2","_this2","_context2","abrupt","maxProb","number","prob","setState","style","textAlign","brushColor","lineWidth","onGetImage","onClick","getElementById","requestAnimationFrame","navigator","userAgent","vendor","opera","test","substr","profiler_1","tape_1","refCounter","WeakMap","nextTapeNodeId","numBytes","numTensors","numDataBuffers","gradientScopeCount","customGradientDepth","activeScope","track","scopeStack","profiler","Profiler","forwardFunc","backwardsFunc","saveFunc","scopeName","profileKernel","shouldRecord","tapeNode","activeTape","refCount","delete","disposeData","addTapeNode","gradientsFunc","inputsMap","idx","resMap","startScope","gradientsMode","scopeInfo","endScope","tensorsToKeep","tensorsToTrackInParent","allowNoGradients","filteredTape","getFilteredNodesXToY","accumulatedGradientMap","backpropagateGradients","gradFunc","query","timingInfo","performance","now","wallMs","checkGrads","gradScope","nameOrScopeFn","scopeFn","originalVarCount","some","namedGrads","seedrandom","axis_util","types","backend_util","MathBackendCPU","throwIfNoData","HTMLCanvasElement","getImageData","HTMLImageElement","HTMLVideoElement","drawImage","numPixels","channel","kernelMs","unreliable","xLoc","xBuffer","outLoc","inLoc","aVals","bVals","broadcastedBinaryOp","aValue","bValue","sharedDim","leftDim","rightDim","aValues","bValues","aOuterStep","aInnerStep","bOuterStep","bInnerStep","aOuterEnd","bOuterEnd","resultIndex","aOuter","bOuter","aInner","bInner","outputDtype","reduceShape","resultDtype","reduceSize","minIndex","maxIndex","aVal","bVal","newValues","topKValues","topK","topKIndices","valuesAndIndices","topkValues","topkIndices","rem","resVals","inVals","resultValues","eluDer","dyValues","scaleAlpha","tooLarge","tooSmall","expX","a1","a2","a3","a4","a5","convInfo","padLeft","padTop","d2","yR","xRCorner","yC","xCCorner","dotProd","wR","wC","d1","pixel","conv2dDerInput","topPad","leftPad","dx","xRMin","yRMax","xCMin","yCMax","conv2dDerFilter","dW","yRMin","yCMin","chMul","xBuf","newLoc","originalLoc","i_1","originalIndex","coords","outCoords","i_2","newIndex","indicesValues","pool","poolType","xRMax","xCMax","minMaxValue","NEGATIVE_INFINITY","POSITIVE_INFINITY","avgValue","maxPoolPositions","maxPositions","maxPosition","maxPoolBackprop","dxR","dxC","dyRCorner","dyCCorner","dyR","dyC","maxPos","curPos","avgPoolBackprop","avgMultiplier","newHeight","newWidth","oldHeight","oldWidth","effectiveInputSize","effectiveOutputSize","sourceFracRow","sourceFracCol","sourceRowFloor","sourceRowCeil","sourceColFloor","sourceColCeil","topLeft","bottomLeft","topRight","bottomRight","rowFrac","colFrac","sourceNearestRow","sourceNearestCol","xValues","meanValues","varianceValues","scaleValues","offsetValues","outValues","localResponseNormalization4D","rad","maxD","probabilities","numEvents","probVals","cdf","event_1","outOffset","sampleId","event_2","event_3","aBroadcastDims","bBroadcastDims","aBuf","bBuf","aLoc","bLoc","float32ToTypedArray","typedArrayToFloat32","reduce_util","argminmax_gpu_1","avg_pool_backprop_gpu_1","batchnorm_gpu_1","binaryop_gpu","binaryop_gpu_1","clip_gpu_1","concat_gpu_1","conv_backprop_gpu_1","conv_gpu_1","conv_gpu_depthwise_1","from_pixels_gpu_1","gather_gpu_1","gpgpu_context_1","gpgpu_math","logical_gpu_1","lrn_gpu_1","max_pool_backprop_gpu_1","mulmat_gpu_1","multinomial_gpu_1","onehot_gpu_1","pad_gpu_1","pool_gpu_1","reduce_gpu_1","resize_bilinear_gpu_1","resize_nearest_neighbor_gpu_1","reverse_gpu_1","slice_gpu_1","tex_util_1","texture_manager_1","tile_gpu_1","transpose_gpu_1","unary_op","unaryop_gpu_1","MathBackendWebGL","gpgpu","delayedStorage","texData","uploadWaitMs","downloadWaitMs","binaryCache","disposed","GPGPUContext","gpgpuCreatedLocally","textureManager","TextureManager","texType","tempPixelArray","getTexture","FromPixelsProgram","compileAndRun","releaseTexture","uploadToGPU","cacheOnCPU","shouldTimeProgram","activeTimers","float32Values","downloadMatrixFromTexture","downloadMatrixFromTextureAsync","runQuery","oldActiveTimers","newActiveTimers","outerMostTime","flattenedActiveTimers","programTimersStack","results","startTimer","beginQuery","startMs","endMs","endTimer","endQuery","getQueryTime","timerQuery","pollQueryTime","getTextureData","getGPGPUContext","SliceProgram","customSetup","getCustomSetupFunc","ReverseProgram","ConcatProgram","MatMulProgram","makeOutputArray","offsetShape","scaleShape","BatchNormProgram","LRNProgram","TileProgram","PadProgram","TransposeProgram","GatherProgram","reduceType","windowSize","computeOptimalWindowSize","reduceInfo","ReduceProgram","cols","argReduce","bestIndicesA","ArgMinMaxProgram","outputDType","WhereProgram","ClipProgram","Conv2DProgram","Conv2DDerInputProgram","Conv2DDerFilterProgram","DepthwiseConv2DProgram","Pool2DProgram","maxPoolPositionsProgram","maxPoolBackPropProgram","MaxPool2DBackpropProgram","avgPoolBackpropProgram","AvgPool2DBackpropProgram","ResizeBilinearProgram","ResizeNearestNeighborProgram","probs","MultinomialProgram","OneHotProgram","inputsData","outputData","makeShaderKey","binary","getAndSaveBinary","compileProgram","runProgram","getBinary","getTextureManager","deleteProgram","webGLProgram","remove","newTexture","acquireTexture","dontKeepCopyOnGPU","firstPass","outSize","compOp","indexSnippet","meanShape","varianceShape","offsetSnippet","scaleSnippet","minFixed","maxFixed","inputDepthNearestVec4","inputDepthVec4Remainder","xNumRows","xNumCols","channelMul","getSourceCoords","currentCoords","sourceCoords","shader_compiler_1","indicesLength","outputTexture","autoDebugValidate","vertexAttrsAreBound","textureFloatExtension","colorBufferFloatExtension","indexBuffer","finish","deleteFramebuffer","deleteBuffer","enableAutomaticDebugValidation","deleteMatrixTexture","deleteTexture","downloadMatrixDriver","downloadMatrixDriverAsync","downloadMatrixFromPackedTexture","attachShader","setProgram","useProgram","shouldThrow","getAttributeLocation","getUniformLocationNoThrow","setInputMatrixTexture","inputMatrixTexture","uniformLocation","throwIfNoProgram","setOutputMatrixTexture","outputMatrixTexture","setOutputMatrixTextureDriver","setOutputPackedMatrixTexture","outputPackedMatrixTexture","setOutputMatrixWriteRegion","startRow","numRows","startColumn","numColumns","setOutputMatrixWriteRegionDriver","setOutputPackedMatrixWriteRegion","debugValidate","executeProgram","drawElements","TRIANGLES","UNSIGNED_SHORT","blockUntilAllProgramsCompleted","getQueryTimerExtension","disjointQueryTimerExtension","getQueryTimerExtensionWebGL2","getQueryTimerExtensionWebGL1","queryFn","ext_1","query_1","createQuery","TIME_ELAPSED_EXT","ext","createQueryEXT","beginQueryEXT","ext_2","endQueryEXT","isQueryAvailable","available","getQueryParameter","QUERY_RESULT_AVAILABLE","disjoint","GPU_DISJOINT_EXT","getQueryObjectEXT","QUERY_RESULT_AVAILABLE_EXT","resolveWithWarning","catch","timeElapsedNanos","QUERY_RESULT","QUERY_RESULT_EXT","downloadMatrixDriverSetup","downloadMatrixDriverTeardown","downloadAndDecode","outputMatrixTextureMaybePacked","shouldUploadNaNUniform","inputInfos","inShapeInfos","shader_compiler","uniformLocations","NAN_UNIFORM_NAME","validateBinaryAndProgram","shapeInfos","texShapeA","texShapeB","outTex","tex","variableUniformLocation","uniform1f","keyInputs","keyUserCode","keyBroadcast","cRank","cCoords","abCoords","cCoordVars","abCoordVars","powOperator","basis","lastIndex","outerShapeA","outerShapeB","aSnippetFromOffset","vec4Offset","indexVar","bSnippetFromOffset","sharedDimNearestVec4","sharedDimVec4Remainder","seedLoc","numIndices","unpackedCoords","computePositions","isAvgPool","initializationValue","filterWidthNearestVec4","filterWidthVec4Remainder","updateSnippet","isReduceSum","compareOp","windowSizeNearestVec4","windowSizeVec4Remainder","checkOutOfBounds","effectiveInSize","effectiveOutSize","getInCoord","inCoords","getCoords","destSize","startLoc","uniform2i","uniform3i","uniform4i","getKeyFromTextureShape","shapeRowsCol","numUsedTextures","numFreeTextures","freeTextures","logEnabled","allocatedTextures","usedTextureCount","shapeRC","shift","total","getNumUsedTextures","getNumFreeTextures","getSwitchedCoords","originalOrder","switchedCoords","switched","batchnormReshape4D","broadcast_util_1","x4D","scaleValue","tileShape","xMinusMean","dyTimesScaleValue","oneOverSqrtVariance","minusHalfRCube","meanDer","varianceDer","xMinusMean2TimesRsqrt","scaleDer","offsetDer","tupleValuesAreOne","dimA","dimB","eitherStridesOrDilationsAreOne","conv_util","x3D","reshapedTo3D","filter4D","input4D","reshapedTo4D","xShape4D","dy4D","inDepth","depthwiseFilter","pointwiseFilter","channelMultiplier","images","batchImages","lstmCells","newStates","newC","newH","forgetBias","lstmKernel","lstmBias","combined","weighted","sliceCols","sliceSize","innerShapeA","innerShapeB","dotProduct","v1","v2","zeroDebias","normImpl","keepDimsShape","y4D","stdDeviation","truncated","nextVal","upper","lower","seedValue","resultX","resultY","isValid","isValidTruncated","convertValue","PARALLELIZE_THRESHOLD","nearestDivisor","xMax","permutation","permutedX","expandedDyShape","reduceSizeScalar","origAxes","permutedAxes","slice_util","begin_","size_","assertParamsValid","lse","logResult","dyTimesY","predictedProbs","dyShape","undoPerm","bck","clipValueMin","clipValueMax","stepRes","greaterThanZeroDer","lessEqualZeroDer","zero","PI","OptimizerConstructors","sgd","rmsprop","adam","adadelta","adamax","adagrad","backendTimer","logger","Logger","holdResultWrapperFn","timer","timing","logKernelProfile","timeMs","paddedName","tape","tensorsFromX","nodesFromX","nodeInputs","inputName","anyInputFromX","tensorsLeadToY","nodesToY","prunedInputs","nodeInput","prunedNode","tensorAccumulatedGradientMap","inputGradients","curGradient","expectArraysClose","actual","expected","TEST_EPSILON","aType","bType","actualValues","expectedValues","areClose","expectPromiseToFail","fail","expectArraysEqual","expectNumbersClose","expectValuesInRange","low","high","actualVals","WEBGL_ENVS","BACKEND","CPU_ENVS","ALL_ENVS","util_1","nameOrFn","gradMode","container","optimizer_constructors_1","train","manifest","filePathPrefix","weightNames","requestOptions","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","weightsNotFound","groupIndicesToFetch","requests","responses","buffers","weightsTensorMap","bufferIndexOffset","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","weightsBytes","DTYPE_VALUE_SIZE_MAP","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","found","accumulator","shouldFetch","filepath","fetchUrl","endsWith","response","arrayBuffer","numBuffers","groupBytes","byteLength","groupBuffer","ArrayBuffer","groupByteBuffer","groupBufferOffset","typedArray","byteBuffer","assertFeedCompatibility","fetches","arrayFetches","fetchArray","internalFeedDict","fetchArray_1","fetch_1","executeInternal","hasKey","getValue","inputValues","inputs_1","inputVal","layerOutputs","getNodeOutputs","outputSymbolicTensors","id2Value","feeds_1","feed","addFeed","advanced_activations_1","convolutional_1","convolutional_depthwise_1","core_1","embeddings_1","merge_1","normalization_1","padding_1","pooling_1","wrappers_1","useDocsFrom","inputLayer","leakyReLU","LeakyReLU","Softmax","thresholdedReLU","ThresholdedReLU","DepthwiseConv2D","Activation","dense","Dense","Dropout","Flatten","repeatVector","RepeatVector","Reshape","embedding","Embedding","Add","average","Average","Concatenate","Maximum","Minimum","Multiply","BatchNormalization","zeroPadding2d","ZeroPadding2D","averagePooling1d","AveragePooling1D","avgPool1d","avgPooling1d","averagePooling2d","AveragePooling2D","avgPool2d","avgPooling2d","globalAveragePooling1d","GlobalAveragePooling1D","globalAveragePooling2d","GlobalAveragePooling2D","globalMaxPooling1d","GlobalMaxPooling1D","globalMaxPooling2d","GlobalMaxPooling2D","maxPooling1d","MaxPooling1D","maxPooling2d","MaxPooling2D","gru","gruCell","lstm","lstmCell","simpleRNN","simpleRNNCell","stackedRNNCells","bidirectional","Bidirectional","timeDistributed","TimeDistributed","tfjs_backend_1","tfjs_backend_2","DEFAULT_ALPHA","DEFAULT_THETA","theta","thetaTensor","DEFAULT_AXIS","outFilters","outRows","outCols","rateScalar","getNoiseShape","noiseShape_1","inputLastDim","isUnknown","fixUnknownDimension","errorMsg","finalShape","known","unknown","originalSize","anyUnknownDims","embeddings","DEFAULT_EMBEDDINGS_INITIALIZER","embeddingsInitializer","embeddingsRegularizer","embeddingsConstraint","maskZero","inLens","s1","s2","mathUtils","Merge","mergeFunction","computeElementwiseOpOutputShape","shape1","shape2","batchSizes","allRanks","reshapeRequired","reshapedInputs","inputDims","xNDim","transposed","inputs_2","xTransposed","yNDim","yShape","yNDim_1","inputs_3","inputs_4","inputs_5","allNoneShape","inputShape_3","shapeSet","shapeWithoutConcatAxis","exists","shapeSet_1","center","betaInitializer","gammaInitializer","movingMeanInitializer","movingVarianceInitializer","betaConstraint","gammaConstraint","betaRegularizer","gammaRegularizer","stepCount","movingMean","movingVariance","broadcastShape","sortedReductionAxes","needsBroadcasting","broadcastMovingMean","broadcastMovingVariance","normedTraining","sampleSize","varianceDebiased","newMovingMean","newMovingVariance","heightPadding","widthPadding","Pooling1D","poolingFunction","Pooling2D","GlobalPooling1D","GlobalPooling2D","Wrapper","newConfig","childInputShape","childOutputShape","BidirectionalMergeMode","CONCAT","ave","AVE","forwardLayer","backwardLayer","mergeMode","_trainable","numWeights","numeightsOver2","layerShapes","yRev","optimizerMap","Adagrad","Adam","RMSProp","SGD","tfjs_layers_1","tfjs-core","tfjs-layers","tfjs","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","createTextNode","observe","characterData","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","DrawableCanvas","handleOnMouseDown","handleOnTouchStart","handleOnMouseMove","handleOnTouchMove","handleonMouseUp","nextProps","resetCanvas","clearRect","rect","getBoundingClientRect","beginPath","lastX","targetTouches","pageX","lastY","pageY","drawing","clientX","clientY","currentX","currentY","draw","lX","lY","cX","cY","newContext","strokeStyle","moveTo","lineTo","stroke","cursor","border","ref","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","EventListener","listen","eventType","addEventListener","removeEventListener","attachEvent","detachEvent","capture","registerDefault","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","containsNode","outerNode","innerNode","isTextNode","parentNode","compareDocumentPosition","focusNode","focus","getActiveElement","activeElement","isNode","ownerDocument","defaultView","nodeType","nodeName","is","shallowEqual","objA","objB","keysA","keysB","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","remaining","race","options","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_72","timeout","RangeError","D","encodeURIComponent","framesToPop","qa","ta","la","ua","hasBooleanValue","hasStringBooleanValue","hasOverloadedBooleanValue","sa","Ha","Ia","N","_hasCaughtError","_caughtError","Ja","_hasRethrowError","_rethrowError","Ma","Ka","La","Na","extractEvents","eventTypes","Oa","phasedRegistrationNames","Pa","registrationName","Qa","Ra","dependencies","Sa","Ta","Ya","currentTarget","Xa","invokeGuardedCallbackAndCatchFirstError","Za","$a","bb","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","db","jb","stateNode","Va","disabled","kb","lb","ab","mb","rethrowCaughtError","qb","O","tag","rb","sb","pb","Q","ub","vb","dispatchConfig","wb","_targetInst","xb","yb","zb","Ab","Bb","alternate","Eb","Db","documentElement","Fb","R","_fallbackText","_startText","Gb","_root","S","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","B","Qb","eventPool","Rb","destructor","Jb","getPooled","Sb","Tb","dc","Ub","keyCode","ec","detail","gc","which","cc","ac","hc","fc","Vb","ctrlKey","altKey","metaKey","char","$b","mc","Wa","jc","restoreControlledState","oc","kc","lc","pc","rc","tc","sc","vc","uc","wc","srcElement","correspondingUseElement","yc","setAttribute","xc","hasFeature","zc","Ac","setValue","stopTracking","_valueTracker","Bc","Cc","checked","Ec","Dc","change","Hc","Ic","Jc","Rc","Fc","Sc","Gc","propertyName","Tc","Uc","Vc","Wc","Yc","$c","getModifierState","Zc","ad","bd","fd","displayName","gd","effectTag","hd","_reactInternalFiber","jd","child","sibling","current","kd","ld","nd","targetInst","ancestors","containerInfo","od","topLevelType","qd","pd","U","ca","rd","sd","md","ud","yd","wd","vd","xd","Dd","Cd","Bd","Ad","Ed","firstChild","Fd","textContent","nextSibling","Gd","contentEditable","Nd","Md","Jd","da","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusOffset","Ld","ea","Id","select","Kd","Pd","Qd","Rd","Sd","charCode","Vd","Wd","Xd","Yd","Zd","V","de","ce","W","ge","he","fe","ee","ie","contextTypes","C","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","je","X","ke","le","getChildContext","A","me","__reactInternalMemoizedMergedChildContext","ne","Y","memoizedState","updateQueue","memoizedProps","pendingProps","internalContextTag","lastEffect","firstEffect","nextEffect","expirationTime","oe","pe","isReactComponent","qe","re","se","handler","te","ue","pendingChildren","xe","ye","isDisabled","supportsFiber","inject","ve","onCommitFiberRoot","we","onCommitFiberUnmount","ze","Ae","Be","baseState","first","last","hasForceUpdate","isInitialized","Ce","De","Ee","partialState","Le","isReplace","isForced","Me","Ne","updater","isMounted","enqueueSetState","nextCallback","enqueueReplaceState","enqueueForceUpdate","adoptClassInstance","constructClassInstance","mountClassInstance","refs","context","unstable_isAsyncReactComponent","componentWillMount","componentDidMount","updateClassInstance","u","componentWillReceiveProps","componentDidUpdate","F","L","G","shouldComponentUpdate","isPureReactComponent","componentWillUpdate","Pe","$$typeof","Oe","We","Re","Xe","_owner","_stringRef","Ye","Ze","Se","Ve","Te","Ue","Qe","T","I","cf","bf","$e","af","ed","render","pendingContext","shouldSetTextContent","useSyncScheduling","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","enterHydrationState","resetHydrationState","tryToClaimNextHydratableInstance","Kb","beginWork","element","hydrate","beginFailedWork","df","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","getRootHostContainer","popHostContext","getHostContext","popHostContainer","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","mutation","completeWork","ef","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChild","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitAttachRef","commitDetachRef","gf","ff","getChildHostContext","getRootHostContext","resetHostContainer","hf","hydration","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","jf","Lb","ma","isReadyForCommit","vg","wg","xg","He","Ie","Lc","yg","Mc","zg","Ag","Bg","componentDidCatch","componentStack","ba","Fa","fa","na","og","J","ng","Nc","E","eb","mg","Kc","fb","Fe","_debugOwner","_debugSource","fileName","componentName","errorBoundary","errorBoundaryFound","errorBoundaryName","willRetry","Cg","ja","Dg","Mb","Eg","nextScheduledRoot","remainingExpirationTime","M","oa","Ga","ka","Nb","gb","Je","Ke","Fg","pa","Ob","hb","Oc","Pb","Pc","finishedWork","timeRemaining","Gg","Ge","scheduleDeferredCallback","prepareForCommit","resetAfterCommit","computeAsyncExpiration","computeExpirationForFiber","scheduleWork","batchedUpdates","unbatchedUpdates","flushSync","deferredUpdates","kf","createContainer","updateContainer","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","findFiberByHostInstance","findHostInstanceByFiber","Df","Cf","Bf","Af","Ef","mutationMethod","hasNumericValue","hasPositiveNumericValue","Ff","mustUseProperty","attributeName","attributeNamespace","setAttributeNS","Gf","removeAttribute","Hf","defaultChecked","_wrapperState","initialChecked","If","controlled","Jf","Kf","Lf","aa","Children","Mf","Nf","selected","defaultSelected","Of","wasMultiple","multiple","Pf","dangerouslySetInnerHTML","Qf","Rf","Sf","Uf","Vf","Zf","lastChild","nodeValue","cg","ag","trim","setProperty","eg","dg","fg","ig","topBlur","topFocus","topCancel","topClose","zd","kg","gg","innerHTML","createElementNS","lg","pg","jg","hg","__html","Xf","$f","onclick","qg","rg","sg","tg","Jg","Kg","hasAttribute","Lg","_reactRootContainer","Z","Mg","Ng","ha","ia","suppressContentEditableWarning","suppressHydrationWarning","ra","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","HAS_STRING_BOOLEAN_VALUE","injectDOMPropertyConfig","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMMutationMethods","va","wa","H","xa","ya","za","Aa","Ba","allowFullScreen","async","autoFocus","autoPlay","controls","default","defer","download","draggable","formNoValidate","hidden","loop","muted","noValidate","open","playsInline","readOnly","required","reversed","rowSpan","scoped","seamless","span","spellCheck","tabIndex","itemScope","acceptCharset","htmlFor","httpEquiv","validity","badInput","Ca","xlink","xml","Da","autoReverse","externalResourcesRequired","preserveAlpha","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","Ea","injection","injectErrorUtils","invokeGuardedCallback","hasCaughtError","clearCaughtError","Ua","freeze","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","ib","nb","getListener","enqueueEvents","processEventQueue","ob","tb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","Cb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","Hb","Ib","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","augmentClass","Wb","documentMode","Xb","Yb","Zb","bc","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","ic","nc","injectFiberControlledHostComponent","qc","enqueueStateRestore","restoreStateIfNeeded","color","date","datetime","datetime-local","email","month","password","tel","text","url","week","Qc","Xc","_isInputEventSupported","getAttribute","view","Alt","Control","Meta","Shift","screenX","screenY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","cd","mouseEnter","mouseLeave","dd","parentWindow","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","td","_enabled","_handleTopLevel","setHandleTopLevel","setEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","animationend","animationiteration","animationstart","transitionend","animation","transition","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoad","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","Hd","Od","onSelect","animationName","elapsedTime","pseudoElement","clipboardData","Td","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Ud","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","locale","dataTransfer","touches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","$d","ae","be","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","lf","mf","nf","of","pf","qf","requestIdleCallback","xf","rf","sf","tf","uf","vf","wf","yf","zf","postMessage","Tf","html","mathml","svg","Wf","MSApp","execUnsafeLocalFunction","namespaceURI","Yf","charCodeAt","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","bg","menuitem","area","br","col","embed","hr","keygen","link","meta","wbr","ug","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","Hg","Ig","tagName","rangeCount","focusedElem","selectionRange","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","unmount","Og","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","bundleType","rendererPackageName","Pg","Qg","defaultProps","escape","=",":","keyPrefix","forceUpdate","__self","__source","toArray","only","Component","PureComponent","unstable_AsyncComponent","cloneElement","createFactory","isValidElement","hadRuntime","regeneratorRuntime","oldRuntime","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","method","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","process","domain","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","GenStateSuspendedYield","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","iteratorSymbol","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","isGeneratorFunction","genFun","ctor","awrap","iter","skipTempReset","rootEntry","rootRecord","rval","exception","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","__WEBPACK_AMD_DEFINE_RESULT__","define","Alea","mash","Mash","s0","copy","impl","opts","prng","double","quick","XorGen","strseed","bot","math","entropy","shortseed","mixkey","tostring","autoseed","arc4","ARC4","chunks","startdenom","significance","overflow","pass","is_math_call","rngname","keylen","prop","typ","smear","stringseed","nodecrypto","randomBytes","crypto","msCrypto","getRandomValues","browser","normalizeName","normalizeValue","iteratorFor","items","support","Headers","headers","header","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","chars","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","isDataView","_bodyArrayBuffer","isArrayBufferView","decode","normalizeMethod","upcased","methods","Request","credentials","referrer","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","viewClasses","DataView","isView","oldValue","entries","redirectStatuses","redirect","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"static/js/main.53375487.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/MNIST_React_TensorFlowJS/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 175);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = __webpack_require__(14);\nfunction assertArgumentIsTensor(x, argName, functionName) {\n    assert(x instanceof tensor_1.Tensor, \"Argument '\" + argName + \"' passed to '\" + functionName + \"' must be a Tensor, \" +\n        (\"but got \" + typeof x + \".\"));\n}\nfunction assertArgumentsAreTensors(args, functionName) {\n    var _loop_1 = function (argName) {\n        var arg = args[argName];\n        if (Array.isArray(arg)) {\n            arg.forEach(function (t, i) {\n                assertArgumentIsTensor(t, argName + \"[\" + i + \"]\", functionName);\n            });\n        }\n        else {\n            assertArgumentIsTensor(arg, argName, functionName);\n        }\n    };\n    for (var argName in args) {\n        _loop_1(argName);\n    }\n}\nexports.assertArgumentsAreTensors = assertArgumentsAreTensors;\nfunction shuffle(array) {\n    var counter = array.length;\n    var temp = 0;\n    var index = 0;\n    while (counter > 0) {\n        index = (Math.random() * counter) | 0;\n        counter--;\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\nexports.shuffle = shuffle;\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexports.clamp = clamp;\nfunction randUniform(a, b) {\n    return Math.random() * (b - a) + a;\n}\nexports.randUniform = randUniform;\nfunction distSquared(a, b) {\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        var diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\nexports.distSquared = distSquared;\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(msg);\n    }\n}\nexports.assert = assert;\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix) {\n    if (errorMessagePrefix === void 0) { errorMessagePrefix = ''; }\n    assert(arraysEqual(shapeA, shapeB), errorMessagePrefix + (\" Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n}\nexports.assertShapesMatch = assertShapesMatch;\nfunction assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, \" The dtypes of the first(\" + a.dtype + \") and\" +\n        (\" second(\" + b.dtype + \") input must match\"));\n}\nexports.assertTypesMatch = assertTypesMatch;\nfunction flatten(arr, ret) {\n    if (ret === void 0) { ret = []; }\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; ++i) {\n            flatten(arr[i], ret);\n        }\n    }\n    else {\n        ret.push(arr);\n    }\n    return ret;\n}\nexports.flatten = flatten;\nfunction inferShape(val) {\n    if (isTypedArray(val)) {\n        return [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return [];\n    }\n    var shape = [];\n    while (val instanceof Array) {\n        shape.push(val.length);\n        val = val[0];\n    }\n    return shape;\n}\nexports.inferShape = inferShape;\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        return 1;\n    }\n    var size = shape[0];\n    for (var i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexports.sizeFromShape = sizeFromShape;\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nexports.isScalarShape = isScalarShape;\nfunction arraysEqual(n1, n2) {\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (var i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.arraysEqual = arraysEqual;\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nexports.isInt = isInt;\nfunction tanh(x) {\n    if (Math.tanh != null) {\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        var e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexports.tanh = tanh;\nfunction sizeToSquarishShape(size) {\n    for (var a = Math.floor(Math.sqrt(size)); a > 1; --a) {\n        if (size % a === 0) {\n            return [a, size / a];\n        }\n    }\n    return [1, size];\n}\nexports.sizeToSquarishShape = sizeToSquarishShape;\nfunction createShuffledIndices(n) {\n    var shuffledIndices = new Uint32Array(n);\n    for (var i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexports.createShuffledIndices = createShuffledIndices;\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexports.rightPad = rightPad;\nfunction repeatedTry(checkFn, delayFn, maxCounter) {\n    if (delayFn === void 0) { delayFn = function (counter) { return 0; }; }\n    return new Promise(function (resolve, reject) {\n        var tryCount = 0;\n        var tryFn = function () {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            var nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        setTimeout(tryFn, 0);\n    });\n}\nexports.repeatedTry = repeatedTry;\nfunction getQueryParams(queryString) {\n    var params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n        var t = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            t[_i - 1] = arguments[_i];\n        }\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nexports.getQueryParams = getQueryParams;\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction inferFromImplicitShape(shape, size) {\n    var shapeProd = 1;\n    var implicitIdx = -1;\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(\"Shapes can only have 1 implicit size. \" +\n                    (\"Found - 1 at dim \" + implicitIdx + \" and dim \" + i));\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] <= 0) {\n            throw Error(\"Shapes can not be <= 0. Found \" + shape[i] + \" at dim \" + i);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(\"Size(\" + size + \") must match the product of shape \" + shape);\n        }\n        return shape;\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(\"The implicit shape can't be a fractional number. \" +\n            (\"Got \" + size + \" / \" + shapeProd));\n    }\n    var newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexports.inferFromImplicitShape = inferFromImplicitShape;\nfunction squeezeShape(shape, axis) {\n    var newShape = [];\n    var keptDims = [];\n    var j = 0;\n    for (var i = 0; i < shape.length; ++i) {\n        if (axis != null) {\n            if (axis[j] === i && shape[i] > 1) {\n                throw new Error(\"Can't squeeze axis \" + i + \" since its dim '\" + shape[i] + \"' is not 1\");\n            }\n            if ((axis[j] == null || axis[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axis[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] > 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape: newShape, keptDims: keptDims };\n}\nexports.squeezeShape = squeezeShape;\nfunction getTypedArrayFromDType(dtype, size) {\n    var values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n    return values;\n}\nexports.getTypedArrayFromDType = getTypedArrayFromDType;\nfunction isTensorInList(tensor, tensorList) {\n    for (var i = 0; i < tensorList.length; i++) {\n        if (tensorList[i].id === tensor.id) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isTensorInList = isTensorInList;\nfunction checkForNaN(vals, dtype, name) {\n    if (dtype !== 'float32') {\n        return;\n    }\n    for (var i = 0; i < vals.length; i++) {\n        if (isNaN(vals[i])) {\n            throw Error(\"The result of the '\" + name + \"' has NaNs.\");\n        }\n    }\n}\nexports.checkForNaN = checkForNaN;\nfunction flattenNameArrayMap(nameArrayMap, keys) {\n    var xs = [];\n    if (nameArrayMap instanceof tensor_1.Tensor) {\n        xs.push(nameArrayMap);\n    }\n    else {\n        var xMap = nameArrayMap;\n        for (var i = 0; i < keys.length; i++) {\n            xs.push(xMap[keys[i]]);\n        }\n    }\n    return xs;\n}\nexports.flattenNameArrayMap = flattenNameArrayMap;\nfunction unflattenToNameArrayMap(keys, flatArrays) {\n    if (keys.length !== flatArrays.length) {\n        throw new Error(\"Cannot unflatten Tensor[], keys and arrays are not of same length.\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = flatArrays[i];\n    }\n    return result;\n}\nexports.unflattenToNameArrayMap = unflattenToNameArrayMap;\nfunction hasEncodingLoss(oldType, newType) {\n    if (newType === 'float32') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexports.hasEncodingLoss = hasEncodingLoss;\nfunction copyTypedArray(array, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(array);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(array);\n    }\n    else if (dtype === 'bool') {\n        var bool = new Uint8Array(array.length);\n        for (var i = 0; i < bool.length; ++i) {\n            if (Math.round(array[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nexports.copyTypedArray = copyTypedArray;\nfunction isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nexports.isTypedArray = isTypedArray;\nfunction bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.bytesPerElement = bytesPerElement;\nfunction isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexports.isFunction = isFunction;\nfunction extractTensorsFromContainer(result) {\n    return extractTensorsFromAny(result);\n}\nexports.extractTensorsFromContainer = extractTensorsFromContainer;\nfunction extractTensorsFromAny(result) {\n    if (result == null) {\n        return [];\n    }\n    if (result instanceof tensor_1.Tensor) {\n        return [result];\n    }\n    var list = [];\n    var resultObj = result;\n    if (!isIterable(resultObj)) {\n        return [];\n    }\n    for (var k in resultObj) {\n        var sublist = flatten(resultObj[k]).filter(function (x) { return x instanceof tensor_1.Tensor; });\n        list.push.apply(list, sublist);\n    }\n    return list;\n}\nexports.extractTensorsFromAny = extractTensorsFromAny;\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar device_util = __webpack_require__(72);\nvar doc_1 = __webpack_require__(2);\nvar engine_1 = __webpack_require__(73);\nvar util = __webpack_require__(0);\nvar Type;\n(function (Type) {\n    Type[Type[\"NUMBER\"] = 0] = \"NUMBER\";\n    Type[Type[\"BOOLEAN\"] = 1] = \"BOOLEAN\";\n    Type[Type[\"STRING\"] = 2] = \"STRING\";\n})(Type = exports.Type || (exports.Type = {}));\nexports.URL_PROPERTIES = [\n    { name: 'DEBUG', type: Type.BOOLEAN },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', type: Type.BOOLEAN },\n    { name: 'WEBGL_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_FLOAT_TEXTURE_ENABLED', type: Type.BOOLEAN }, {\n        name: 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED',\n        type: Type.BOOLEAN\n    },\n    { name: 'BACKEND', type: Type.STRING }\n];\nfunction hasExtension(gl, extensionName) {\n    var ext = gl.getExtension(extensionName);\n    return ext != null;\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion === 0) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    var tempCanvas = document.createElement('canvas');\n    if (webGLVersion === 1) {\n        return (tempCanvas.getContext('webgl') ||\n            tempCanvas.getContext('experimental-webgl'));\n    }\n    return tempCanvas.getContext('webgl2');\n}\nfunction loseContext(gl) {\n    if (gl != null) {\n        var loseContextExtension = gl.getExtension('WEBGL_lose_context');\n        if (loseContextExtension == null) {\n            throw new Error('Extension WEBGL_lose_context not supported on this browser.');\n        }\n        loseContextExtension.loseContext();\n    }\n}\nfunction isWebGLVersionEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (gl != null) {\n        loseContext(gl);\n        return true;\n    }\n    return false;\n}\nfunction getWebGLDisjointQueryTimerVersion(webGLVersion) {\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    var queryTimerVersion;\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n        webGLVersion === 2) {\n        queryTimerVersion = 2;\n    }\n    else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n        queryTimerVersion = 1;\n    }\n    else {\n        queryTimerVersion = 0;\n    }\n    if (gl != null) {\n        loseContext(gl);\n    }\n    return queryTimerVersion;\n}\nfunction isFloatTextureReadPixelsEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n    }\n    else {\n        if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n            return false;\n        }\n    }\n    var frameBuffer = gl.createFramebuffer();\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var internalFormat = webGLVersion === 2 ? gl.RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var frameBufferComplete = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, new Float32Array(4));\n    var readPixelsNoError = gl.getError() === gl.NO_ERROR;\n    loseContext(gl);\n    return frameBufferComplete && readPixelsNoError;\n}\nfunction isWebGLGetBufferSubDataAsyncExtensionEnabled(webGLVersion) {\n    if (webGLVersion > 0) {\n        return false;\n    }\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var isEnabled = hasExtension(gl, 'WEBGL_get_buffer_sub_data_async');\n    loseContext(gl);\n    return isEnabled;\n}\nvar Environment = (function () {\n    function Environment(features) {\n        this.features = {};\n        this.registry = {};\n        if (features != null) {\n            this.features = features;\n        }\n        if (this.get('DEBUG')) {\n            console.warn('Debugging mode is ON. The output of every math call will ' +\n                'be downloaded to CPU and checked for NaNs. ' +\n                'This significantly impacts performance.');\n        }\n    }\n    Environment.setBackend = function (backendType, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        if (!(backendType in exports.ENV.registry)) {\n            throw new Error(\"Backend type '\" + backendType + \"' not found in registry\");\n        }\n        exports.ENV.initBackend(backendType, safeMode);\n    };\n    Environment.getBackend = function () {\n        exports.ENV.initDefaultBackend();\n        return exports.ENV.currentBackend;\n    };\n    Environment.memory = function () {\n        return exports.ENV.engine.memory();\n    };\n    Environment.prototype.get = function (feature) {\n        if (feature in this.features) {\n            return this.features[feature];\n        }\n        this.features[feature] = this.evaluateFeature(feature);\n        return this.features[feature];\n    };\n    Environment.prototype.set = function (feature, value) {\n        this.features[feature] = value;\n    };\n    Environment.prototype.getBestBackendType = function () {\n        var _this = this;\n        if (Object.keys(this.registry).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        var sortedBackends = Object.keys(this.registry)\n            .map(function (name) {\n            return { name: name, entry: _this.registry[name] };\n        })\n            .sort(function (a, b) {\n            return b.entry.priority - a.entry.priority;\n        });\n        return sortedBackends[0].name;\n    };\n    Environment.prototype.evaluateFeature = function (feature) {\n        if (feature === 'DEBUG') {\n            return false;\n        }\n        else if (feature === 'BACKEND') {\n            return this.getBestBackendType();\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') {\n            var webGLVersion = this.get('WEBGL_VERSION');\n            if (webGLVersion === 0) {\n                return 0;\n            }\n            return getWebGLDisjointQueryTimerVersion(webGLVersion);\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') {\n            return this.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n                !device_util.isMobile();\n        }\n        else if (feature === 'WEBGL_VERSION') {\n            if (isWebGLVersionEnabled(2)) {\n                return 2;\n            }\n            else if (isWebGLVersionEnabled(1)) {\n                return 1;\n            }\n            return 0;\n        }\n        else if (feature === 'WEBGL_FLOAT_TEXTURE_ENABLED') {\n            return isFloatTextureReadPixelsEnabled(this.get('WEBGL_VERSION'));\n        }\n        else if (feature === 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') {\n            return isWebGLGetBufferSubDataAsyncExtensionEnabled(this.get('WEBGL_VERSION'));\n        }\n        throw new Error(\"Unknown feature \" + feature + \".\");\n    };\n    Environment.prototype.setFeatures = function (features) {\n        this.features = features;\n    };\n    Environment.prototype.reset = function () {\n        this.features = getFeaturesFromURL();\n        if (this.globalEngine != null) {\n            this.globalEngine.dispose();\n            this.globalEngine = null;\n        }\n    };\n    Environment.prototype.initBackend = function (backendType, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        this.currentBackend = backendType;\n        if (this.globalEngine != null) {\n            this.globalEngine.dispose();\n        }\n        var backend = exports.ENV.findBackend(backendType);\n        this.globalEngine = new engine_1.Engine(backend, safeMode);\n    };\n    Environment.prototype.findBackend = function (name) {\n        if (!(name in this.registry)) {\n            return null;\n        }\n        return this.registry[name].backend;\n    };\n    Environment.prototype.registerBackend = function (name, factory, priority) {\n        if (priority === void 0) { priority = 1; }\n        if (name in this.registry) {\n            console.warn(name + \" backend was already registered\");\n        }\n        try {\n            var backend = factory();\n            this.registry[name] = { backend: backend, priority: priority };\n            return true;\n        }\n        catch (err) {\n            console.warn(err.message);\n            return false;\n        }\n    };\n    Environment.prototype.removeBackend = function (name) {\n        if (!(name in this.registry)) {\n            throw new Error(name + \" backend not found in registry\");\n        }\n        this.registry[name].backend.dispose();\n        delete this.registry[name];\n    };\n    Object.defineProperty(Environment.prototype, \"engine\", {\n        get: function () {\n            this.initDefaultBackend();\n            return this.globalEngine;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Environment.prototype.initDefaultBackend = function () {\n        if (this.globalEngine == null) {\n            this.initBackend(exports.ENV.get('BACKEND'), false);\n        }\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Environment' })\n    ], Environment, \"setBackend\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Environment' })\n    ], Environment, \"getBackend\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Environment, \"memory\", null);\n    return Environment;\n}());\nexports.Environment = Environment;\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\nfunction getFeaturesFromURL() {\n    var features = {};\n    if (typeof window === 'undefined') {\n        return features;\n    }\n    var urlParams = util.getQueryParams(window.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var urlFlags_1 = {};\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n            var _a = keyValue.split(':'), key = _a[0], value = _a[1];\n            urlFlags_1[key] = value;\n        });\n        exports.URL_PROPERTIES.forEach(function (urlProperty) {\n            if (urlProperty.name in urlFlags_1) {\n                console.log(\"Setting feature override from URL \" + urlProperty.name + \": \" +\n                    (\"\" + urlFlags_1[urlProperty.name]));\n                if (urlProperty.type === Type.NUMBER) {\n                    features[urlProperty.name] = +urlFlags_1[urlProperty.name];\n                }\n                else if (urlProperty.type === Type.BOOLEAN) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name] === 'true';\n                }\n                else if (urlProperty.type === Type.STRING) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name];\n                }\n                else {\n                    console.warn(\"Unknown URL param: \" + urlProperty.name + \".\");\n                }\n            }\n        });\n    }\n    return features;\n}\nfunction getGlobalNamespace() {\n    var ns;\n    if (typeof (window) !== 'undefined') {\n        ns = window;\n    }\n    else if (typeof (global) !== 'undefined') {\n        ns = global;\n    }\n    else {\n        throw new Error('Could not find a global object');\n    }\n    return ns;\n}\nfunction getOrMakeEnvironment() {\n    var ns = getGlobalNamespace();\n    ns.ENV = ns.ENV || new Environment(getFeaturesFromURL());\n    return ns.ENV;\n}\nexports.ENV = getOrMakeEnvironment();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction doc(info) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n}\nexports.doc = doc;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(76);\n__webpack_require__(75);\nvar browser_util_1 = __webpack_require__(71);\nvar environment = __webpack_require__(1);\nexports.environment = environment;\nvar environment_1 = __webpack_require__(1);\nvar gpgpu_util = __webpack_require__(50);\nvar webgl_util = __webpack_require__(27);\nvar test_util = __webpack_require__(128);\nexports.test_util = test_util;\nvar util = __webpack_require__(0);\nexports.util = util;\nvar version_1 = __webpack_require__(131);\nexports.version_core = version_1.version;\nvar adadelta_optimizer_1 = __webpack_require__(35);\nexports.AdadeltaOptimizer = adadelta_optimizer_1.AdadeltaOptimizer;\nvar adagrad_optimizer_1 = __webpack_require__(36);\nexports.AdagradOptimizer = adagrad_optimizer_1.AdagradOptimizer;\nvar adam_optimizer_1 = __webpack_require__(37);\nexports.AdamOptimizer = adam_optimizer_1.AdamOptimizer;\nvar adamax_optimizer_1 = __webpack_require__(38);\nexports.AdamaxOptimizer = adamax_optimizer_1.AdamaxOptimizer;\nvar momentum_optimizer_1 = __webpack_require__(39);\nexports.MomentumOptimizer = momentum_optimizer_1.MomentumOptimizer;\nvar optimizer_1 = __webpack_require__(18);\nexports.Optimizer = optimizer_1.Optimizer;\nvar rmsprop_optimizer_1 = __webpack_require__(40);\nexports.RMSPropOptimizer = rmsprop_optimizer_1.RMSPropOptimizer;\nvar sgd_optimizer_1 = __webpack_require__(29);\nexports.SGDOptimizer = sgd_optimizer_1.SGDOptimizer;\nvar tensor_1 = __webpack_require__(14);\nexports.Tensor = tensor_1.Tensor;\nexports.TensorBuffer = tensor_1.TensorBuffer;\nexports.variable = tensor_1.variable;\nexports.Variable = tensor_1.Variable;\nvar types_1 = __webpack_require__(22);\nexports.Rank = types_1.Rank;\nvar weights_loader_1 = __webpack_require__(132);\nexports.loadWeights = weights_loader_1.loadWeights;\n__export(__webpack_require__(7));\nvar loss_ops_1 = __webpack_require__(56);\nexports.Reduction = loss_ops_1.Reduction;\n__export(__webpack_require__(130));\n__export(__webpack_require__(10));\nvar environment_2 = __webpack_require__(1);\nexports.ENV = environment_2.ENV;\nexports.Environment = environment_2.Environment;\nexports.setBackend = environment_1.Environment.setBackend;\nexports.getBackend = environment_1.Environment.getBackend;\nexports.memory = environment_1.Environment.memory;\nvar doc_1 = __webpack_require__(2);\nexports.doc = doc_1.doc;\nexports.nextFrame = browser_util_1.BrowserUtil.nextFrame;\nexports.webgl = {\n    webgl_util: webgl_util,\n    gpgpu_util: gpgpu_util\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AttributeError = (function (_super) {\n    __extends(AttributeError, _super);\n    function AttributeError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, AttributeError.prototype);\n        return _this;\n    }\n    return AttributeError;\n}(Error));\nexports.AttributeError = AttributeError;\nvar RuntimeError = (function (_super) {\n    __extends(RuntimeError, _super);\n    function RuntimeError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, RuntimeError.prototype);\n        return _this;\n    }\n    return RuntimeError;\n}(Error));\nexports.RuntimeError = RuntimeError;\nvar ValueError = (function (_super) {\n    __extends(ValueError, _super);\n    function ValueError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ValueError.prototype);\n        return _this;\n    }\n    return ValueError;\n}(Error));\nexports.ValueError = ValueError;\nvar NotImplementedError = (function (_super) {\n    __extends(NotImplementedError, _super);\n    function NotImplementedError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, NotImplementedError.prototype);\n        return _this;\n    }\n    return NotImplementedError;\n}(Error));\nexports.NotImplementedError = NotImplementedError;\nvar AssertionError = (function (_super) {\n    __extends(AssertionError, _super);\n    function AssertionError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, AssertionError.prototype);\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexports.AssertionError = AssertionError;\nvar IndexError = (function (_super) {\n    __extends(IndexError, _super);\n    function IndexError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, IndexError.prototype);\n        return _this;\n    }\n    return IndexError;\n}(Error));\nexports.IndexError = IndexError;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(4);\nvar types_1 = __webpack_require__(12);\nfunction pyListRepeat(value, numValues) {\n    if (Array.isArray(value)) {\n        var newArray = [];\n        for (var i = 0; i < numValues; i++) {\n            newArray = newArray.concat(value);\n        }\n        return newArray;\n    }\n    else {\n        var newArray = new Array(numValues);\n        newArray.fill(value);\n        return newArray;\n    }\n}\nexports.pyListRepeat = pyListRepeat;\nfunction pyGetAttr(obj, attrName, defaultValue) {\n    if (attrName in obj) {\n        return obj[attrName];\n    }\n    if (defaultValue === undefined) {\n        throw new errors_1.AttributeError('pyGetAttr: Attempting to get attribute ' + attrName +\n            'with no default value defined');\n    }\n    return defaultValue;\n}\nexports.pyGetAttr = pyGetAttr;\nfunction pyNormalizeArrayIndex(x, index) {\n    if (x == null || index == null) {\n        throw new errors_1.ValueError(\"Must provide a valid array and index for \" +\n            (\"pyNormalizeArrayIndex(). Got array \" + x + \" and index \" + index + \".\"));\n    }\n    var errMsg = \"Index \" + index + \" out of range for array of length \" + x.length;\n    if (index < 0) {\n        if (index < -x.length) {\n            throw new errors_1.IndexError(errMsg);\n        }\n        return x.length + index;\n    }\n    if (index >= x.length) {\n        throw new errors_1.IndexError(errMsg);\n    }\n    return index;\n}\nexports.pyNormalizeArrayIndex = pyNormalizeArrayIndex;\nfunction assert(val, message) {\n    if (!val) {\n        throw new errors_1.AssertionError(message);\n    }\n}\nexports.assert = assert;\nfunction count(array, refernce) {\n    var counter = 0;\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var item = array_1[_i];\n        if (item === refernce) {\n            counter++;\n        }\n    }\n    return counter;\n}\nexports.count = count;\nvar ClassNameMap = (function () {\n    function ClassNameMap() {\n        this.pythonClassNameMap = {};\n    }\n    ClassNameMap.getMap = function () {\n        if (ClassNameMap.instance == null) {\n            ClassNameMap.instance = new ClassNameMap();\n        }\n        return ClassNameMap.instance;\n    };\n    ClassNameMap.register = function (className, cls) {\n        this.getMap().pythonClassNameMap[className] =\n            [cls, cls.fromConfig];\n    };\n    return ClassNameMap;\n}());\nexports.ClassNameMap = ClassNameMap;\nvar SerializableEnumRegistry = (function () {\n    function SerializableEnumRegistry() {\n        this.enumRegistry = {};\n    }\n    SerializableEnumRegistry.getMap = function () {\n        if (SerializableEnumRegistry.instance == null) {\n            SerializableEnumRegistry.instance = new SerializableEnumRegistry();\n        }\n        return SerializableEnumRegistry.instance;\n    };\n    SerializableEnumRegistry.register = function (fieldName, enumCls) {\n        if (SerializableEnumRegistry.contains(fieldName)) {\n            throw new errors_1.ValueError(\"Attempting to register a repeated enum: \" + fieldName);\n        }\n        this.getMap().enumRegistry[fieldName] = enumCls;\n    };\n    SerializableEnumRegistry.contains = function (fieldName) {\n        return fieldName in this.getMap().enumRegistry;\n    };\n    SerializableEnumRegistry.lookup = function (fieldName, value) {\n        return this.getMap().enumRegistry[fieldName][value];\n    };\n    SerializableEnumRegistry.reverseLookup = function (fieldName, value) {\n        var enumMap = this.getMap().enumRegistry[fieldName];\n        for (var candidateString in enumMap) {\n            if (enumMap[candidateString] === value) {\n                return candidateString;\n            }\n        }\n        throw new errors_1.ValueError(\"Could not find serialization string for \" + value);\n    };\n    return SerializableEnumRegistry;\n}());\nexports.SerializableEnumRegistry = SerializableEnumRegistry;\nfunction singletonOrArray(xs) {\n    if (xs.length === 1) {\n        return xs[0];\n    }\n    return xs;\n}\nexports.singletonOrArray = singletonOrArray;\nfunction toList(x) {\n    if (Array.isArray(x)) {\n        return x;\n    }\n    return [x];\n}\nexports.toList = toList;\nfunction objectListUid(objs) {\n    var objectList = toList(objs);\n    var retVal = '';\n    for (var _i = 0, objectList_1 = objectList; _i < objectList_1.length; _i++) {\n        var obj = objectList_1[_i];\n        if (obj.id == null) {\n            throw new errors_1.ValueError(\"Object \" + obj + \" passed to objectListUid without an id\");\n        }\n        if (retVal !== '') {\n            retVal = retVal + ', ';\n        }\n        retVal = retVal + Math.abs(obj.id);\n    }\n    return retVal;\n}\nexports.objectListUid = objectListUid;\nfunction isArrayOfShapes(x) {\n    return Array.isArray(x) && Array.isArray(x[0]);\n}\nexports.isArrayOfShapes = isArrayOfShapes;\nfunction normalizeShapeList(x) {\n    if (x.length === 0) {\n        return [];\n    }\n    if (!Array.isArray(x[0])) {\n        return [x];\n    }\n    return x;\n}\nexports.normalizeShapeList = normalizeShapeList;\nfunction toSnakeCase(name) {\n    var intermediate = name.replace(/(.)([A-Z][a-z0-9]+)/g, '$1_$2');\n    var insecure = intermediate.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();\n    if (insecure[0] !== '_') {\n        return insecure;\n    }\n    return 'private' + insecure;\n}\nexports.toSnakeCase = toSnakeCase;\nfunction toCamelCase(identifier) {\n    if (identifier.length <= 1) {\n        return identifier;\n    }\n    if (identifier.indexOf('_') === -1) {\n        return identifier;\n    }\n    return identifier.replace(/[_]+(\\w|$)/g, function (m, p1) { return p1.toUpperCase(); });\n}\nexports.toCamelCase = toCamelCase;\nvar _GLOBAL_CUSTOM_OBJECTS = {};\nfunction serializeKerasObject(instance) {\n    if (instance === null || instance === undefined) {\n        return null;\n    }\n    return { className: instance.getClassName(), config: instance.getConfig() };\n}\nexports.serializeKerasObject = serializeKerasObject;\nfunction deserializeKerasObject(identifier, moduleObjects, customObjects, printableModuleName) {\n    if (moduleObjects === void 0) { moduleObjects = {}; }\n    if (customObjects === void 0) { customObjects = {}; }\n    if (printableModuleName === void 0) { printableModuleName = 'object'; }\n    if (typeof identifier === 'string') {\n        var functionName = identifier;\n        var fn = void 0;\n        if (functionName in customObjects) {\n            fn = customObjects[functionName];\n        }\n        else if (functionName in _GLOBAL_CUSTOM_OBJECTS) {\n            fn = _GLOBAL_CUSTOM_OBJECTS[functionName];\n        }\n        else {\n            fn = moduleObjects[functionName];\n            if (fn == null) {\n                throw new errors_1.ValueError(\"Unknown \" + printableModuleName + \": \" + identifier);\n            }\n        }\n        return fn;\n    }\n    else {\n        var config = identifier;\n        if (config.className == null || config.config == null) {\n            throw new errors_1.ValueError(printableModuleName + \": Improper config format: \" +\n                (JSON.stringify(config) + \".\\n\") +\n                \"'className' and 'config' must set.\");\n        }\n        var className = config.className;\n        var cls = void 0, fromConfig = void 0;\n        if (className in customObjects) {\n            _a = customObjects.get(className), cls = _a[0], fromConfig = _a[1];\n        }\n        else if (className in _GLOBAL_CUSTOM_OBJECTS) {\n            _b = _GLOBAL_CUSTOM_OBJECTS.className, cls = _b[0], fromConfig = _b[1];\n        }\n        else if (className in moduleObjects) {\n            _c = moduleObjects[className], cls = _c[0], fromConfig = _c[1];\n        }\n        if (cls == null) {\n            throw new errors_1.ValueError(\"Unknown \" + printableModuleName + \": \" + className);\n        }\n        if (fromConfig != null) {\n            var customObjectsCombined = {};\n            for (var _i = 0, _d = Object.keys(_GLOBAL_CUSTOM_OBJECTS); _i < _d.length; _i++) {\n                var key = _d[_i];\n                customObjectsCombined[key] = _GLOBAL_CUSTOM_OBJECTS[key];\n            }\n            for (var _e = 0, _f = Object.keys(customObjects); _e < _f.length; _e++) {\n                var key = _f[_e];\n                customObjectsCombined[key] = customObjects[key];\n            }\n            var nestedConfig = config.config;\n            nestedConfig.customObjects = customObjectsCombined;\n            var backupCustomObjects = __assign({}, _GLOBAL_CUSTOM_OBJECTS);\n            for (var _g = 0, _h = Object.keys(customObjects); _g < _h.length; _g++) {\n                var key = _h[_g];\n                _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n            }\n            var returnObj = fromConfig(cls, config.config);\n            _GLOBAL_CUSTOM_OBJECTS = __assign({}, backupCustomObjects);\n            return returnObj;\n        }\n        else {\n            var backupCustomObjects = __assign({}, _GLOBAL_CUSTOM_OBJECTS);\n            for (var _j = 0, _k = Object.keys(customObjects); _j < _k.length; _j++) {\n                var key = _k[_j];\n                _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n            }\n            var returnObj = new cls(config.config);\n            _GLOBAL_CUSTOM_OBJECTS = __assign({}, backupCustomObjects);\n            return returnObj;\n        }\n    }\n    var _a, _b, _c;\n}\nexports.deserializeKerasObject = deserializeKerasObject;\nfunction getExactlyOneTensor(xs) {\n    var x;\n    if (Array.isArray(xs)) {\n        if (xs.length !== 1) {\n            throw new errors_1.ValueError(\"Expected Tensor length to be 1; got \" + xs.length);\n        }\n        x = xs[0];\n    }\n    else {\n        x = xs;\n    }\n    return x;\n}\nexports.getExactlyOneTensor = getExactlyOneTensor;\nfunction getExactlyOneShape(shapes) {\n    if (Array.isArray(shapes) && Array.isArray(shapes[0])) {\n        if (shapes.length === 1) {\n            shapes = shapes;\n            return shapes[0];\n        }\n        else {\n            throw new errors_1.ValueError(\"Expected exactly 1 Shape; got \" + shapes.length);\n        }\n    }\n    else {\n        return shapes;\n    }\n}\nexports.getExactlyOneShape = getExactlyOneShape;\nfunction numberCompare(a, b) {\n    return (a < b) ? -1 : ((a > b) ? 1 : 0);\n}\nexports.numberCompare = numberCompare;\nfunction reverseNumberCompare(a, b) {\n    return -1 * numberCompare(a, b);\n}\nexports.reverseNumberCompare = reverseNumberCompare;\nfunction stringToDType(dtype) {\n    switch (dtype) {\n        case 'float32':\n            return types_1.DType.float32;\n        default:\n            throw new errors_1.ValueError(\"Invalid dtype: \" + dtype);\n    }\n}\nexports.stringToDType = stringToDType;\nfunction stringsEqual(xs, ys) {\n    if (xs == null || ys == null) {\n        return xs === ys;\n    }\n    if (xs.length !== ys.length) {\n        return false;\n    }\n    for (var i = 0; i < xs.length; ++i) {\n        if (xs[i] !== ys[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.stringsEqual = stringsEqual;\nfunction unique(xs) {\n    if (xs == null) {\n        return xs;\n    }\n    var out = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        if (out.indexOf(x) === -1) {\n            out.push(x);\n        }\n    }\n    return out;\n}\nexports.unique = unique;\nfunction isObjectEmpty(obj) {\n    if (obj == null) {\n        throw new errors_1.ValueError(\"Invalid value in obj: \" + JSON.stringify(obj));\n    }\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isObjectEmpty = isObjectEmpty;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = __webpack_require__(3);\nvar tfjs_core_1 = __webpack_require__(3);\nvar common_1 = __webpack_require__(26);\nvar errors_1 = __webpack_require__(4);\nvar types_1 = __webpack_require__(12);\nvar generic_utils_1 = __webpack_require__(5);\nvar math_utils = __webpack_require__(17);\nvar common_2 = __webpack_require__(41);\nvar common_3 = __webpack_require__(41);\nvar backend = 'webgl';\nvar DEFAULT_DTYPE = types_1.DType.float32;\nfunction disposeScalarCache() {\n    for (var typeKey in scalarCache) {\n        for (var key in scalarCache[typeKey]) {\n            scalarCache[typeKey][key].dispose();\n            delete scalarCache[typeKey][key];\n        }\n    }\n}\nexports.disposeScalarCache = disposeScalarCache;\nfunction setBackend(requestedBackend) {\n    tfc.setBackend(requestedBackend);\n    backend = requestedBackend;\n    disposeScalarCache();\n}\nexports.setBackend = setBackend;\nfunction getBackend() {\n    return backend;\n}\nexports.getBackend = getBackend;\nfunction keep(x) {\n    return tfc.keep(x);\n}\nexports.keep = keep;\nvar scalarCache = {\n    float32: {},\n    int32: {}\n};\nfunction getScalar(value, dtype) {\n    if (dtype === undefined) {\n        dtype = DEFAULT_DTYPE;\n    }\n    if (scalarCache[dtype][value] == null) {\n        scalarCache[dtype][value] = tfjs_core_1.scalar(value, dtype);\n        tfc.keep(scalarCache[dtype][value]);\n    }\n    return scalarCache[dtype][value];\n}\nexports.getScalar = getScalar;\nexports.epsilon = common_2.epsilon;\nfunction isBackendSymbolic() {\n    return false;\n}\nexports.isBackendSymbolic = isBackendSymbolic;\nfunction shape(x) {\n    return x.shape;\n}\nexports.shape = shape;\nfunction intShape(x) {\n    return x.shape;\n}\nexports.intShape = intShape;\nfunction ndim(x) {\n    return x.shape.length;\n}\nexports.ndim = ndim;\nfunction dtype(x) {\n    return (x instanceof tfjs_core_1.Tensor) ? DEFAULT_DTYPE : x.dtype;\n}\nexports.dtype = dtype;\nfunction normalizeAxis(x, axis) {\n    if (axis == null) {\n        return axis;\n    }\n    var xShape = shape(x);\n    if (Array.isArray(axis)) {\n        return axis.map(function (thisAxis) { return generic_utils_1.pyNormalizeArrayIndex(xShape, thisAxis); });\n    }\n    return generic_utils_1.pyNormalizeArrayIndex(xShape, axis);\n}\nexports.normalizeAxis = normalizeAxis;\nfunction countParams(x) {\n    var shape = x.shape;\n    if (shape.length > 0) {\n        return shape.reduce(function (a, b) { return a * b; });\n    }\n    else {\n        return 1;\n    }\n}\nexports.countParams = countParams;\nfunction cast(x, dtype) {\n    return x.asType(dtype);\n}\nexports.cast = cast;\nfunction reshape(x, shape) {\n    return x.reshape(shape);\n}\nexports.reshape = reshape;\nfunction transpose(x, perm) {\n    return tfc.transpose(x, perm);\n}\nexports.transpose = transpose;\nexports.permuteDimensions = transpose;\nfunction reverse(x, axes) {\n    return tfc.reverse(x, axes);\n}\nexports.reverse = reverse;\nfunction expandDims(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    var outShape = shape(x).slice();\n    if (axis < 0) {\n        axis = outShape.length + axis + 1;\n    }\n    outShape.splice(axis, 0, 1);\n    return reshape(x, outShape);\n}\nexports.expandDims = expandDims;\nfunction squeeze(x, axis) {\n    return tfc.squeeze(x, [axis]);\n}\nexports.squeeze = squeeze;\nfunction temporalPadding(x, padding) {\n    if (ndim(x) !== 3) {\n        throw new errors_1.ValueError(\"temporalPadding expects input tensor to be 3-D, but received a \" +\n            (ndim(x) + \"-D tensor.\"));\n    }\n    if (padding == null) {\n        padding = [1, 1];\n    }\n    if (padding.length !== 2) {\n        throw new errors_1.ValueError(\"temporalPadding expects input padding pattern to be a length-2 \" +\n            (\"array, but received a length-\" + padding.length + \" array.\"));\n    }\n    var pattern = [[0, 0], padding, [0, 0]];\n    return tfc.pad(x, pattern);\n}\nexports.temporalPadding = temporalPadding;\nfunction spatial2dPadding(x, padding, dataFormat) {\n    if (ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"temporalPadding expects input tensor to be 4-D, but received a \" +\n            (ndim(x) + \"-D tensor.\"));\n    }\n    if (padding == null) {\n        padding = [[1, 1], [1, 1]];\n    }\n    if (padding.length !== 2 || padding[0].length !== 2 ||\n        padding[1].length !== 2) {\n        throw new errors_1.ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' +\n            'each of which is an Array of two integers.');\n    }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n        throw new errors_1.ValueError(\"Unknown data format: \" + dataFormat + \". \" +\n            \"Supported data formats are 'channelsLast' and 'channelsFirst.\");\n    }\n    var pattern;\n    if (dataFormat === 'channelsFirst') {\n        pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n    }\n    else {\n        pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n    }\n    return tfc.pad(x, pattern);\n}\nexports.spatial2dPadding = spatial2dPadding;\nfunction repeat(x, n) {\n    if (x.shape.length !== 2) {\n        throw new errors_1.ValueError(\"repeat() expects a rank-2 tensor, but received a \" +\n            (\"rank-\" + x.shape.length + \" tensor.\"));\n    }\n    var y = expandDims(x, 1);\n    return tile(y, [1, n, 1]);\n}\nexports.repeat = repeat;\nfunction flatten(x) {\n    var newShape = [math_utils.arrayProd(x.shape)];\n    return reshape(x, newShape);\n}\nexports.flatten = flatten;\nfunction batchFlatten(x) {\n    if (ndim(x) <= 1) {\n        throw new errors_1.ValueError(\"batchFlatten requires a minimum rank of 2. Got rank: \" + ndim(x) + \".\");\n    }\n    var newShape = [x.shape[0], math_utils.arrayProd(x.shape, 1)];\n    return reshape(x, newShape);\n}\nexports.batchFlatten = batchFlatten;\nfunction sliceAlongFirstAxis(array, start, size) {\n    switch (array.rank) {\n        case 1:\n            return tfc.slice1d(array, start, size);\n        case 2:\n            return tfc.slice2d(array, [start, 0], [size, array.shape[1]]);\n        case 3:\n            return tfc.slice3d(array, [start, 0, 0], [size, array.shape[1], array.shape[2]]);\n        case 4:\n            return tfc.slice4d(array, [start, 0, 0, 0], [size, array.shape[1], array.shape[2], array.shape[3]]);\n        default:\n            throw new errors_1.ValueError(\"sliceAlongFirstAxis() received an unsupported tensor rank: \" +\n                (\"\" + array.rank));\n    }\n}\nexports.sliceAlongFirstAxis = sliceAlongFirstAxis;\nfunction sliceAlongLastAxis(array, start, size) {\n    switch (array.rank) {\n        case 1:\n            return tfc.slice1d(array, start, size);\n        case 2:\n            return tfc.slice2d(array, [0, start], [array.shape[0], size]);\n        case 3:\n            return tfc.slice3d(array, [0, 0, start], [array.shape[0], array.shape[1], size]);\n        case 4:\n            return tfc.slice4d(array, [0, 0, 0, start], [array.shape[0], array.shape[1], array.shape[2], size]);\n        default:\n            throw new errors_1.ValueError(\"sliceAlongLastAxis() received an unsupported tensor rank: \" +\n                (\"\" + array.rank));\n    }\n}\nexports.sliceAlongLastAxis = sliceAlongLastAxis;\nfunction regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    return tfjs_core_1.tidy(function () {\n        var meanAndVariance = tfc.moments(x, reductionAxes);\n        var mean = meanAndVariance.mean;\n        var variance = meanAndVariance.variance;\n        var normed = batchNormalization(x, mean, variance, beta, gamma, epsilon);\n        return [normed, mean, variance];\n    });\n}\nfunction broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    return tfjs_core_1.tidy(function () {\n        var meanAndVariance = tfc.moments(x, reductionAxes);\n        var mean = meanAndVariance.mean;\n        var variance = meanAndVariance.variance;\n        var targetShape = [];\n        for (var _i = 0, _a = math_utils.range(0, ndim(x)); _i < _a.length; _i++) {\n            var axis = _a[_i];\n            if (reductionAxes.indexOf(axis) !== -1) {\n                targetShape.push(1);\n            }\n            else {\n                targetShape.push(x.shape[axis]);\n            }\n        }\n        var broadcastMean = reshape(mean, targetShape);\n        var broadcastVariance = reshape(variance, targetShape);\n        var broadcastGamma = gamma == null ? null : reshape(gamma, targetShape);\n        var broadcastBeta = beta == null ? null : reshape(beta, targetShape);\n        var normed = batchNormalization(x, broadcastMean, broadcastVariance, broadcastBeta, broadcastGamma, epsilon);\n        return [normed, mean, variance];\n    });\n}\nfunction normalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    if (tfjs_core_1.util.arraysEqual(reductionAxes.slice().sort(), math_utils.range(0, ndim(x) - 1))) {\n        return regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n    }\n    else {\n        return broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n    }\n}\nexports.normalizeBatchInTraining = normalizeBatchInTraining;\nfunction concatenate(tensors, axis) {\n    if (axis === void 0) { axis = -1; }\n    var rank;\n    if (axis < 0) {\n        rank = ndim(tensors[0]);\n        if (rank !== 0) {\n            axis = rank;\n        }\n        else {\n            axis = 0;\n        }\n    }\n    if (axis === ndim(tensors[0])) {\n        axis = -1;\n    }\n    return tfc.concat(tensors, axis);\n}\nexports.concatenate = concatenate;\nfunction concatAlongFirstAxis(a, b) {\n    switch (a.rank) {\n        case 1:\n            return tfc.concat1d([a, b]);\n        case 2:\n            return tfc.concat2d([a, b], 0);\n        case 3:\n            return tfc.concat3d([a, b], 0);\n        case 4:\n            return tfc.concat4d([a, b], 0);\n        default:\n            throw new errors_1.ValueError('concatAlongFirstAxis() received an unsupported tensor rank: ' +\n                a.rank);\n    }\n}\nexports.concatAlongFirstAxis = concatAlongFirstAxis;\nfunction tile(x, n) {\n    if (!Array.isArray(n)) {\n        n = [n];\n    }\n    if (ndim(x) !== n.length) {\n        throw new errors_1.ValueError(\"The length of input n (\" + n.length + \") does not match \" +\n            (\"the number of dimensions in input x (\" + ndim(x) + \")\"));\n    }\n    return tfc.tile(x, n);\n}\nexports.tile = tile;\nfunction variable(x, dtype, name, constraint) {\n    return new types_1.LayerVariable(x, dtype, name, true, constraint);\n}\nexports.variable = variable;\nfunction batchGetValue(xs) {\n    return xs.map(function (x) { return x.read(); });\n}\nexports.batchGetValue = batchGetValue;\nfunction batchSetValue(variablesAndValues) {\n    variablesAndValues.map(function (variableAndValue) {\n        var variable = variableAndValue[0];\n        variable.write(variableAndValue[1]);\n    });\n}\nexports.batchSetValue = batchSetValue;\nfunction zeros(shape, dtype) {\n    return tfc.zeros(shape);\n}\nexports.zeros = zeros;\nfunction zerosVariable(shape, dtype, name) {\n    return new types_1.LayerVariable(zeros(shape), dtype, name);\n}\nexports.zerosVariable = zerosVariable;\nfunction zerosLike(x, dtype, name) {\n    return new types_1.LayerVariable(tfc.zerosLike(x), dtype, name);\n}\nexports.zerosLike = zerosLike;\nfunction ones(shape, dtype) {\n    return tfc.ones(shape);\n}\nexports.ones = ones;\nfunction onesVariable(shape, dtype, name) {\n    var allocated = tfc.ones(shape);\n    return new types_1.LayerVariable(allocated, dtype, name);\n}\nexports.onesVariable = onesVariable;\nfunction onesLike(x, dtype, name) {\n    var allocated = tfc.onesLike(x);\n    return new types_1.LayerVariable(allocated, dtype, name);\n}\nexports.onesLike = onesLike;\nfunction identity(x) {\n    return x.clone();\n}\nexports.identity = identity;\nfunction eye(size, dtype, name) {\n    var buffer = [];\n    for (var i = 0; i < size; ++i) {\n        for (var j = 0; j < size; ++j) {\n            buffer.push(i === j ? 1 : 0);\n        }\n    }\n    return tfjs_core_1.tensor2d(buffer, [size, size]);\n}\nexports.eye = eye;\nfunction eyeVariable(size, dtype, name) {\n    return new types_1.LayerVariable(eye(size, dtype), dtype, name);\n}\nexports.eyeVariable = eyeVariable;\nfunction neg(x) {\n    return tfc.neg(x);\n}\nexports.neg = neg;\nfunction add(x, y) {\n    return tfc.add(x, y);\n}\nexports.add = add;\nfunction subtract(x, y) {\n    return tfc.sub(x, y);\n}\nexports.subtract = subtract;\nfunction multiply(x, y) {\n    return tfc.mul(x, y);\n}\nexports.multiply = multiply;\nfunction divide(x, y) {\n    return tfc.div(x, y);\n}\nexports.divide = divide;\nfunction scalarTimesArray(c, x) {\n    return tfc.mul(c, x);\n}\nexports.scalarTimesArray = scalarTimesArray;\nfunction scalarPlusArray(c, x) {\n    return tfc.add(c, x);\n}\nexports.scalarPlusArray = scalarPlusArray;\nfunction randomUniform(shape, minval, maxval, dtype, seed) {\n    return tfc.randomUniform(shape, minval, maxval);\n}\nexports.randomUniform = randomUniform;\nfunction randomUniformVariable(shape, minval, maxval, dtype, seed, name) {\n    if (name === void 0) { name = 'randomUniform'; }\n    return new types_1.LayerVariable(randomUniform(shape, minval, maxval, dtype, seed), dtype, name);\n}\nexports.randomUniformVariable = randomUniformVariable;\nfunction truncatedNormal(shape, mean, stddev, dtype, seed) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    return tfc.truncatedNormal(shape, mean, stddev);\n}\nexports.truncatedNormal = truncatedNormal;\nfunction truncatedNormalVariable(shape, mean, stddev, dtype, seed, name) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (name === void 0) { name = 'truncatedNormal'; }\n    return new types_1.LayerVariable(truncatedNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\nexports.truncatedNormalVariable = truncatedNormalVariable;\nfunction randomNormal(shape, mean, stddev, dtype, seed) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (dtype === types_1.DType.bool) {\n        throw new errors_1.NotImplementedError(\"randomNormal does not support dType bool.\");\n    }\n    var dtypeString = (dtype === types_1.DType.float32) ? 'float32' : 'int32';\n    return tfc.randomNormal(shape, mean, stddev, dtypeString, seed);\n}\nexports.randomNormal = randomNormal;\nfunction randomNormalVariable(shape, mean, stddev, dtype, seed, name) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (name === void 0) { name = 'randomNormal'; }\n    return new types_1.LayerVariable(randomNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\nexports.randomNormalVariable = randomNormalVariable;\nfunction update(x, xNew) {\n    return x.write(xNew);\n}\nexports.update = update;\nfunction updateAdd(x, increment) {\n    return x.write(tfc.add(x.read(), increment));\n}\nexports.updateAdd = updateAdd;\nfunction updateSub(x, decrement) {\n    return x.write(tfc.sub(x.read(), decrement));\n}\nexports.updateSub = updateSub;\nfunction dot(x, y) {\n    if (ndim(y) !== 2) {\n        throw new errors_1.NotImplementedError(\"dot support for y other than rank 2 is not yet implemented: \" +\n            (\"y shape = \" + shape));\n    }\n    else {\n        if (ndim(x) === 2) {\n            return tfc.matMul(x, y);\n        }\n        else if (ndim(x) === 3) {\n            var xShape0 = x.shape[0];\n            var xShape1 = x.shape[1];\n            var xShape2 = x.shape[2];\n            x = x.reshape([xShape0 * xShape1, xShape2]);\n            return tfc.matMul(x, y).reshape([\n                xShape0, xShape1, y.shape[1]\n            ]);\n        }\n        else {\n            throw new errors_1.NotImplementedError(\"dot support for x of rank \" + ndim(x) + \" is not yet implemented: \" +\n                (\"x shape = \" + shape));\n        }\n    }\n}\nexports.dot = dot;\nfunction sign(x) {\n    var zerosLikeX = tfjs_core_1.zerosLike(x);\n    var onesLikeX = tfjs_core_1.onesLike(x);\n    return tfjs_core_1.where(equal(x, zerosLikeX), zerosLikeX, tfjs_core_1.where(greater(x, tfjs_core_1.zerosLike(x)), onesLikeX, scalarTimesArray(getScalar(-1), onesLikeX)));\n}\nexports.sign = sign;\nfunction qr(x) {\n    if (x.shape.length !== 2) {\n        throw new errors_1.ValueError(\"qr() requires a 2D Tensor, but got a \" + x.shape.length + \"D Tensor.\");\n    }\n    if (x.shape[0] < x.shape[1]) {\n        throw new errors_1.ValueError(\"qr() requires x.shape[0] >= x.shape[1], but got shape: [\" + x.shape + \"]\");\n    }\n    var m = x.shape[0];\n    var n = x.shape[1];\n    var q = eye(m);\n    var r = x;\n    var one2D = tfjs_core_1.tensor2d([[1]], [1, 1]);\n    for (var j = 0; j < n; ++j) {\n        var rjEnd1 = r.slice([j, j], [m - j, 1]);\n        var normX = tfc.norm(rjEnd1);\n        var rjj = r.slice([j, j], [1, 1]);\n        var s = tfc.neg(sign(rjj));\n        var u1 = rjj.sub(multiply(s, normX));\n        var wPre = divide(rjEnd1, u1);\n        var w = void 0;\n        if (wPre.shape[0] === 1) {\n            w = one2D;\n        }\n        else {\n            w = one2D.concat(wPre.slice([1, 0], [wPre.shape[0] - 1, wPre.shape[1]]), 0);\n        }\n        var tau = tfc.neg(divide(tfc.matMul(s, u1), normX));\n        var rjEndAll = r.slice([j, 0], [m - j, n]);\n        var tauTimesW = tau.mul(w);\n        if (j === 0) {\n            r = rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll)));\n        }\n        else {\n            r = r.slice([0, 0], [j, n])\n                .concat(rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll))), 0);\n        }\n        var qAllJEnd = q.slice([0, j], [m, q.shape[1] - j]);\n        if (j === 0) {\n            q = qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose()));\n        }\n        else {\n            q = q.slice([0, 0], [m, j])\n                .concat(qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose())), 1);\n        }\n    }\n    return [q, r];\n}\nexports.qr = qr;\nfunction oneHot(indices, numClasses) {\n    if (ndim(indices) !== 1) {\n        throw new Error('Only 1D one-hot tensors are supported in the ' +\n            'deeplearn backend, at present.');\n    }\n    indices = indices.toInt();\n    return tfc.oneHot(indices, numClasses).toFloat();\n}\nexports.oneHot = oneHot;\nfunction mean(x, axis, keepDims) {\n    axis = normalizeAxis(x, axis);\n    return tfc.mean(x, axis, keepDims);\n}\nexports.mean = mean;\nfunction argmax(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    return tfc.argMax(x, axis);\n}\nexports.argmax = argmax;\nfunction gather(reference, indices, axis) {\n    if (Array.isArray(indices)) {\n        indices = tfjs_core_1.tensor1d(indices, 'int32');\n    }\n    else {\n        indices = indices.toInt();\n    }\n    return tfc.gather(reference, indices, axis);\n}\nexports.gather = gather;\nfunction max(x, axis, keepDims) {\n    return tfc.max(x, axis, keepDims);\n}\nexports.max = max;\nfunction min(x, axis, keepDims) {\n    return tfc.min(x, axis, keepDims);\n}\nexports.min = min;\nfunction minimum(x, y) {\n    return tfc.minimum(x, y);\n}\nexports.minimum = minimum;\nfunction sum(x, axis, keepDims) {\n    return tfc.sum(x, axis, keepDims);\n}\nexports.sum = sum;\nfunction abs(x) {\n    return tfc.abs(x);\n}\nexports.abs = abs;\nfunction square(x) {\n    return tfc.mulStrict(x, x);\n}\nexports.square = square;\nfunction sqrt(x) {\n    return tfc.sqrt(x);\n}\nexports.sqrt = sqrt;\nfunction exp(x) {\n    return tfc.exp(x);\n}\nexports.exp = exp;\nfunction log(x) {\n    return tfc.log(x);\n}\nexports.log = log;\nfunction pow(x, a) {\n    if (typeof (a) === 'number') {\n        a = tfjs_core_1.scalar(Math.round(a), 'int32');\n    }\n    if (a.dtype !== 'int32') {\n        throw new errors_1.NotImplementedError(\"Non-int32 dtype (\" + a.dtype + \") is not supported by pow() yet\");\n    }\n    return tfc.pow(x, a);\n}\nexports.pow = pow;\nfunction clip(x, minValue, maxValue) {\n    return tfc.clipByValue(x, minValue, maxValue);\n}\nexports.clip = clip;\nfunction equal(x, y) {\n    return tfc.equal(x, y);\n}\nexports.equal = equal;\nfunction greater(x, y) {\n    return tfc.greater(x, y);\n}\nexports.greater = greater;\nfunction greaterEqual(x, y) {\n    return tfc.greaterEqual(x, y);\n}\nexports.greaterEqual = greaterEqual;\nfunction maximum(x, y) {\n    return tfc.maximum(x, y);\n}\nexports.maximum = maximum;\nfunction sin(x) {\n    return tfc.sin(x.value());\n}\nexports.sin = sin;\nfunction cos(x) {\n    return tfc.cos(x.value());\n}\nexports.cos = cos;\nfunction batchNormalization(x, mean, variance, beta, gamma, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    var out;\n    if (ndim(x) === 2) {\n        out = tfc.batchNormalization2d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else if (ndim(x) === 3) {\n        out = tfc.batchNormalization3d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else if (ndim(x) === 4) {\n        out = tfc.batchNormalization4d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else {\n        throw new errors_1.NotImplementedError(\"batchNormalization is not implememnted for array of rank \" + ndim(x) + \" \" +\n            \"yet\");\n    }\n    return out;\n}\nexports.batchNormalization = batchNormalization;\nfunction biasAdd(x, bias, dataFormat) {\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (ndim(bias) !== 1 && ndim(bias) !== ndim(x)) {\n        throw new errors_1.ValueError('Unexpected bias dimensions: ' + ndim(bias) +\n            '; expected it to be 1 or ' + ndim(x));\n    }\n    var biasShape = bias.shape;\n    var y;\n    if (ndim(x) === 5) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1, 1, 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[3], biasShape[0], biasShape[1], biasShape[2]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, 1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) === 4) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1, 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[2], biasShape[0], biasShape[1]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) === 3) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[1], biasShape[0]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) < 3) {\n        y = x.add(bias);\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupported input rank by biasAdd: \" + ndim(x));\n    }\n    return y;\n}\nexports.biasAdd = biasAdd;\nfunction elu(x, alpha) {\n    if (alpha === void 0) { alpha = 1; }\n    if (alpha !== 1) {\n        throw new errors_1.NotImplementedError(\"Support for alpha values other than 1 (\" + alpha + \") is not implemented \" +\n            \"yet.\");\n    }\n    return tfc.elu(x);\n}\nexports.elu = elu;\nfunction selu(x) {\n    return tfc.selu(x);\n}\nexports.selu = selu;\nfunction relu(x) {\n    return tfc.relu(x);\n}\nexports.relu = relu;\nfunction softplus(x) {\n    return tfc.log(tfc.add(getScalar(1), tfc.exp(x)));\n}\nexports.softplus = softplus;\nfunction softsign(x) {\n    return tfc.div(x, tfc.add(getScalar(1), tfc.abs(x)));\n}\nexports.softsign = softsign;\nfunction tanh(x) {\n    return tfc.tanh(x);\n}\nexports.tanh = tanh;\nfunction dropout(x, level, noiseShape, seed) {\n    if (noiseShape != null && !tfjs_core_1.util.arraysEqual(x.shape, noiseShape)) {\n        throw new errors_1.NotImplementedError('Non-default noise shape is not implemented yet: ' +\n            JSON.stringify(noiseShape));\n    }\n    if (seed != null) {\n        throw new errors_1.NotImplementedError('seed is not implemented for dropout yet.');\n    }\n    var multiplier = tfc.step(tfc.add(neg(level), randomUniform(x.shape, 0, 1, types_1.DType.float32)));\n    multiplier = tfc.mul(divide(getScalar(1), subtract(getScalar(1), level)), multiplier);\n    return tfc.mul(x, multiplier);\n}\nexports.dropout = dropout;\nfunction l2Normalize(x, axis) {\n    var squareSum = sum(square(x), axis, true);\n    var epsilonTensor = scalarTimesArray(tfjs_core_1.scalar(exports.epsilon()), tfc.onesLike(x));\n    var norm = sqrt(maximum(squareSum, epsilonTensor));\n    return divide(x, norm);\n}\nexports.l2Normalize = l2Normalize;\nfunction preprocessConv2DInput(x, dataFormat) {\n    common_1.checkDataFormat(dataFormat);\n    if (dataFormat === 'channelsFirst') {\n        return tfc.transpose(x, [0, 2, 3, 1]);\n    }\n    else {\n        return x;\n    }\n}\nfunction conv1dWithBias(x, kernel, bias, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = 1; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dilationRate === void 0) { dilationRate = 1; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (x.shape.length !== 3) {\n        throw new errors_1.ValueError(\"The input of a conv1dWithBias operation should be 3, but is \" +\n            (x.shape.length + \" instead.\"));\n    }\n    if (kernel.shape.length !== 3) {\n        throw new errors_1.ValueError(\"The kernel for a conv1dWithBias operation should be 3, but is \" +\n            (kernel.shape.length + \" instead\"));\n    }\n    if (bias != null && bias.shape.length !== 1) {\n        throw new errors_1.ValueError(\"The bias for a conv1dWithBias operation should be 1, but is \" +\n            (kernel.shape.length + \" instead\"));\n    }\n    if (dataFormat === 'channelsFirst') {\n        x = transpose(x, [0, 2, 1]);\n    }\n    if (padding === 'casual') {\n        throw new errors_1.NotImplementedError('The support for CASUAL padding mode in conv1dWithBias is not ' +\n            'implemented yet.');\n    }\n    var y = tfc.conv1d(x, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NWC', dilationRate);\n    if (bias != null) {\n        y = biasAdd(y, bias);\n    }\n    return y;\n}\nexports.conv1dWithBias = conv1dWithBias;\nfunction conv1d(x, kernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = 1; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dilationRate === void 0) { dilationRate = 1; }\n    common_1.checkDataFormat(dataFormat);\n    return conv1dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n}\nexports.conv1d = conv1d;\nfunction conv2d(x, kernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    common_1.checkDataFormat(dataFormat);\n    return conv2dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n}\nexports.conv2d = conv2d;\nfunction conv2dWithBias(x, kernel, bias, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (ndim(x) !== 3 && ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"conv2dWithBias expects input to be of rank 3 or 4, but received \" +\n            (ndim(x) + \".\"));\n    }\n    if (ndim(kernel) !== 3 && ndim(kernel) !== 4) {\n        throw new errors_1.ValueError(\"conv2dWithBias expects kernel to be of rank 3 or 4, but received \" +\n            (ndim(x) + \".\"));\n    }\n    var y = preprocessConv2DInput(x, dataFormat);\n    if (padding === 'casual') {\n        throw new errors_1.NotImplementedError('The support for CASUAL padding mode in conv1dWithBias is not ' +\n            'implemented yet.');\n    }\n    y = tfc.conv2d(y, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n    if (bias != null) {\n        y = biasAdd(y, bias);\n    }\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.conv2dWithBias = conv2dWithBias;\nfunction depthwiseConv2d(x, depthwiseKernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    var y = preprocessConv2DInput(x, dataFormat);\n    if (ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"Input for depthwiseConv2d is required to be 4-D, but is instead \" +\n            (ndim(x) + \"-D\"));\n    }\n    if (ndim(depthwiseKernel) !== 4) {\n        throw new errors_1.ValueError(\"depthwiseKernel is required to be 4-D, but is instead \" +\n            (ndim(depthwiseKernel) + \"-D\"));\n    }\n    y = tfc.depthwiseConv2d(y, depthwiseKernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.depthwiseConv2d = depthwiseConv2d;\nfunction pool2d(x, poolSize, strides, padding, dataFormat, poolMode) {\n    common_1.checkDataFormat(dataFormat);\n    common_1.checkPoolMode(poolMode);\n    common_1.checkPaddingMode(padding);\n    if (strides == null) {\n        strides = [1, 1];\n    }\n    if (padding == null) {\n        padding = 'valid';\n    }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    if (poolMode == null) {\n        poolMode = 'max';\n    }\n    x = preprocessConv2DInput(x, dataFormat);\n    var y;\n    var paddingString = (padding === 'same') ? 'same' : 'valid';\n    if (poolMode === 'max') {\n        y = tfc.maxPool(x, poolSize, strides, paddingString);\n    }\n    else {\n        y = tfc.avgPool(x, poolSize, strides, paddingString);\n    }\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.pool2d = pool2d;\nfunction nameScope(name, fn) {\n    return common_1.nameScope(name, fn);\n}\nexports.nameScope = nameScope;\nfunction floatx() {\n    return types_1.DType.float32;\n}\nexports.floatx = floatx;\nvar _uidPrefixes = {};\nfunction getUid(prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    if (!(prefix in _uidPrefixes)) {\n        _uidPrefixes[prefix] = 0;\n    }\n    _uidPrefixes[prefix] += 1;\n    return prefix + _uidPrefixes[prefix].toString();\n}\nexports.getUid = getUid;\nfunction softmax(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    return tfc.softmax(x, axis);\n}\nexports.softmax = softmax;\nfunction categoricalCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    if (fromLogits) {\n        output = softmax(output);\n    }\n    else {\n        var outputSum = sum(output, shape(output).length - 1, true);\n        output = divide(output, outputSum);\n    }\n    output = clip(output, exports.epsilon(), 1 - exports.epsilon());\n    return tfc.neg(tfc.sum(tfc.mul(target.toFloat(), tfc.log(output)), shape(output).length - 1));\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    var flatTarget = tfc.floor(flatten(target)).toInt();\n    var outputShape = shape(output);\n    var oneHotTarget = reshape(tfc.oneHot(flatTarget, outputShape[outputShape.length - 1]), outputShape);\n    return categoricalCrossentropy(oneHotTarget, output, fromLogits);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    var y;\n    if (!fromLogits) {\n        y = clip(output, exports.epsilon(), 1 - exports.epsilon());\n        y = log(divide(y, subtract(tfc.onesLike(y), y)));\n    }\n    else {\n        y = output;\n    }\n    return sigmoidCrossEntropyWithLogits(target, y);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction sigmoidCrossEntropyWithLogits(target, output) {\n    var maxOutput = tfc.maximum(output, tfc.zerosLike(output));\n    var outputXTarget = tfc.mul(output, target);\n    var sigmoidOutput = tfc.log(tfc.add(getScalar(1), tfc.exp(tfc.neg(tfc.abs(output)))));\n    var result = tfc.add(tfc.sub(maxOutput, outputXTarget), sigmoidOutput);\n    return result;\n}\nexports.sigmoidCrossEntropyWithLogits = sigmoidCrossEntropyWithLogits;\nfunction sigmoid(x) {\n    return tfc.sigmoid(x);\n}\nexports.sigmoid = sigmoid;\nfunction hardSigmoid(x) {\n    var y = scalarPlusArray(tfjs_core_1.scalar(0.5), scalarTimesArray(tfjs_core_1.scalar(0.2), x));\n    return clip(y, 0, 1);\n}\nexports.hardSigmoid = hardSigmoid;\nfunction inTrainPhase(x, alt, training) {\n    if (training === void 0) { training = false; }\n    return training ? x() : alt();\n}\nexports.inTrainPhase = inTrainPhase;\nfunction rnn(stepFunction, inputs, initialStates, goBackwards, mask, constants, unroll, inputLength) {\n    if (goBackwards === void 0) { goBackwards = false; }\n    if (unroll === void 0) { unroll = false; }\n    var ndim = inputs.shape.length;\n    if (ndim < 3) {\n        throw new errors_1.ValueError(\"Input should be at least 3D, but is \" + ndim + \"D.\");\n    }\n    var axes = [1, 0].concat(math_utils.range(2, ndim));\n    inputs = transpose(inputs, axes);\n    if (mask != null) {\n        throw new errors_1.NotImplementedError('The rnn() function of the deeplearn.js backend does not support ' +\n            'masking yet.');\n    }\n    if (constants != null) {\n        throw new errors_1.NotImplementedError('The rnn() functoin of the deeplearn.js backend does not support ' +\n            'constants yet.');\n    }\n    if (unroll) {\n        console.warn('Backend rnn(): the unroll = true option is not applicable to the ' +\n            'imperative deeplearn.js backend.');\n    }\n    if (goBackwards) {\n        inputs = reverse(inputs, 0);\n    }\n    var outputs;\n    var lastOutput;\n    var states = initialStates;\n    var timeSteps = inputs.shape[0];\n    for (var t = 0; t < timeSteps; ++t) {\n        var currentInput = sliceAlongFirstAxis(inputs, t, 1);\n        currentInput = reshape(currentInput, currentInput.shape.slice(1));\n        var stepOutputs = stepFunction(currentInput, states);\n        lastOutput = stepOutputs[0];\n        if (t === 0) {\n            outputs = lastOutput.reshape([1].concat(lastOutput.shape));\n        }\n        else {\n            outputs = concatAlongFirstAxis(outputs, lastOutput.reshape([1].concat(lastOutput.shape)));\n        }\n        states = stepOutputs[1];\n    }\n    return [\n        lastOutput,\n        transpose(outputs, [1, 0].concat(math_utils.range(2, outputs.shape.length))),\n        states\n    ];\n}\nexports.rnn = rnn;\nfunction gradients(lossFn, variables) {\n    var variableList = variables.map(function (variable) { return variable.read(); });\n    var valudAndGrads = tfjs_core_1.variableGrads(lossFn, variableList);\n    return variables.map(function (variable) { return valudAndGrads.grads[variable.name]; });\n}\nexports.gradients = gradients;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar array_ops_1 = __webpack_require__(28);\nvar batchnorm_1 = __webpack_require__(105);\nvar binary_ops_1 = __webpack_require__(52);\nvar compare_1 = __webpack_require__(106);\nvar concat_1 = __webpack_require__(53);\nvar conv_1 = __webpack_require__(107);\nvar image_ops_1 = __webpack_require__(108);\nvar logical_ops_1 = __webpack_require__(109);\nvar loss_ops_1 = __webpack_require__(56);\nvar lrn_1 = __webpack_require__(110);\nvar lstm_1 = __webpack_require__(111);\nvar matmul_1 = __webpack_require__(112);\nvar moving_average_1 = __webpack_require__(113);\nvar norm_1 = __webpack_require__(114);\nvar pool_1 = __webpack_require__(115);\nvar reduction_ops_1 = __webpack_require__(118);\nvar reverse_1 = __webpack_require__(119);\nvar slice_1 = __webpack_require__(120);\nvar softmax_1 = __webpack_require__(122);\nvar transpose_1 = __webpack_require__(123);\nvar unary_ops_1 = __webpack_require__(124);\nexports.batchNormalization = batchnorm_1.BatchNormOps.batchNormalization;\nexports.batchNormalization2d = batchnorm_1.BatchNormOps.batchNormalization2d;\nexports.batchNormalization3d = batchnorm_1.BatchNormOps.batchNormalization3d;\nexports.batchNormalization4d = batchnorm_1.BatchNormOps.batchNormalization4d;\nexports.concat = concat_1.ConcatOps.concat;\nexports.concat1d = concat_1.ConcatOps.concat1d;\nexports.concat2d = concat_1.ConcatOps.concat2d;\nexports.concat3d = concat_1.ConcatOps.concat3d;\nexports.concat4d = concat_1.ConcatOps.concat4d;\nexports.conv1d = conv_1.ConvOps.conv1d;\nexports.conv2d = conv_1.ConvOps.conv2d;\nexports.conv2dTranspose = conv_1.ConvOps.conv2dTranspose;\nexports.depthwiseConv2d = conv_1.ConvOps.depthwiseConv2d;\nexports.separableConv2d = conv_1.ConvOps.separableConv2d;\nexports.matMul = matmul_1.MatmulOps.matMul;\nexports.matrixTimesVector = matmul_1.MatmulOps.matrixTimesVector;\nexports.outerProduct = matmul_1.MatmulOps.outerProduct;\nexports.vectorTimesMatrix = matmul_1.MatmulOps.vectorTimesMatrix;\nexports.avgPool = pool_1.PoolOps.avgPool;\nexports.maxPool = pool_1.PoolOps.maxPool;\nexports.transpose = transpose_1.TransposeOps.transpose;\nexports.reverse = reverse_1.ReverseOps.reverse;\nexports.reverse1d = reverse_1.ReverseOps.reverse1d;\nexports.reverse2d = reverse_1.ReverseOps.reverse2d;\nexports.reverse3d = reverse_1.ReverseOps.reverse3d;\nexports.reverse4d = reverse_1.ReverseOps.reverse4d;\nexports.slice = slice_1.SliceOps.slice;\nexports.slice1d = slice_1.SliceOps.slice1d;\nexports.slice2d = slice_1.SliceOps.slice2d;\nexports.slice3d = slice_1.SliceOps.slice3d;\nexports.slice4d = slice_1.SliceOps.slice4d;\nexports.argMax = reduction_ops_1.ReductionOps.argMax;\nexports.argMin = reduction_ops_1.ReductionOps.argMin;\nexports.logSumExp = reduction_ops_1.ReductionOps.logSumExp;\nexports.max = reduction_ops_1.ReductionOps.max;\nexports.mean = reduction_ops_1.ReductionOps.mean;\nexports.min = reduction_ops_1.ReductionOps.min;\nexports.moments = reduction_ops_1.ReductionOps.moments;\nexports.sum = reduction_ops_1.ReductionOps.sum;\nexports.equal = compare_1.CompareOps.equal;\nexports.equalStrict = compare_1.CompareOps.equalStrict;\nexports.greater = compare_1.CompareOps.greater;\nexports.greaterStrict = compare_1.CompareOps.greaterStrict;\nexports.greaterEqual = compare_1.CompareOps.greaterEqual;\nexports.greaterEqualStrict = compare_1.CompareOps.greaterEqualStrict;\nexports.less = compare_1.CompareOps.less;\nexports.lessStrict = compare_1.CompareOps.lessStrict;\nexports.lessEqual = compare_1.CompareOps.lessEqual;\nexports.lessEqualStrict = compare_1.CompareOps.lessEqualStrict;\nexports.notEqual = compare_1.CompareOps.notEqual;\nexports.notEqualStrict = compare_1.CompareOps.notEqualStrict;\nexports.logicalNot = logical_ops_1.LogicalOps.logicalNot;\nexports.logicalAnd = logical_ops_1.LogicalOps.logicalAnd;\nexports.logicalOr = logical_ops_1.LogicalOps.logicalOr;\nexports.logicalXor = logical_ops_1.LogicalOps.logicalXor;\nexports.where = logical_ops_1.LogicalOps.where;\nexports.abs = unary_ops_1.UnaryOps.abs;\nexports.acos = unary_ops_1.UnaryOps.acos;\nexports.acosh = unary_ops_1.UnaryOps.acosh;\nexports.asin = unary_ops_1.UnaryOps.asin;\nexports.asinh = unary_ops_1.UnaryOps.asinh;\nexports.atan = unary_ops_1.UnaryOps.atan;\nexports.atanh = unary_ops_1.UnaryOps.atanh;\nexports.ceil = unary_ops_1.UnaryOps.ceil;\nexports.clipByValue = unary_ops_1.UnaryOps.clipByValue;\nexports.cos = unary_ops_1.UnaryOps.cos;\nexports.cosh = unary_ops_1.UnaryOps.cosh;\nexports.elu = unary_ops_1.UnaryOps.elu;\nexports.exp = unary_ops_1.UnaryOps.exp;\nexports.expm1 = unary_ops_1.UnaryOps.expm1;\nexports.floor = unary_ops_1.UnaryOps.floor;\nexports.sign = unary_ops_1.UnaryOps.sign;\nexports.leakyRelu = unary_ops_1.UnaryOps.leakyRelu;\nexports.log = unary_ops_1.UnaryOps.log;\nexports.log1p = unary_ops_1.UnaryOps.log1p;\nexports.logSigmoid = unary_ops_1.UnaryOps.logSigmoid;\nexports.neg = unary_ops_1.UnaryOps.neg;\nexports.prelu = unary_ops_1.UnaryOps.prelu;\nexports.relu = unary_ops_1.UnaryOps.relu;\nexports.reciprocal = unary_ops_1.UnaryOps.reciprocal;\nexports.round = unary_ops_1.UnaryOps.round;\nexports.selu = unary_ops_1.UnaryOps.selu;\nexports.sigmoid = unary_ops_1.UnaryOps.sigmoid;\nexports.sin = unary_ops_1.UnaryOps.sin;\nexports.sinh = unary_ops_1.UnaryOps.sinh;\nexports.softplus = unary_ops_1.UnaryOps.softplus;\nexports.sqrt = unary_ops_1.UnaryOps.sqrt;\nexports.rsqrt = unary_ops_1.UnaryOps.rsqrt;\nexports.square = unary_ops_1.UnaryOps.square;\nexports.step = unary_ops_1.UnaryOps.step;\nexports.tan = unary_ops_1.UnaryOps.tan;\nexports.tanh = unary_ops_1.UnaryOps.tanh;\nexports.erf = unary_ops_1.UnaryOps.erf;\nexports.add = binary_ops_1.BinaryOps.add;\nexports.addStrict = binary_ops_1.BinaryOps.addStrict;\nexports.atan2 = binary_ops_1.BinaryOps.atan2;\nexports.div = binary_ops_1.BinaryOps.div;\nexports.divStrict = binary_ops_1.BinaryOps.divStrict;\nexports.maximum = binary_ops_1.BinaryOps.maximum;\nexports.maximumStrict = binary_ops_1.BinaryOps.maximumStrict;\nexports.minimum = binary_ops_1.BinaryOps.minimum;\nexports.minimumStrict = binary_ops_1.BinaryOps.minimumStrict;\nexports.mod = binary_ops_1.BinaryOps.mod;\nexports.modStrict = binary_ops_1.BinaryOps.modStrict;\nexports.mul = binary_ops_1.BinaryOps.mul;\nexports.mulStrict = binary_ops_1.BinaryOps.mulStrict;\nexports.pow = binary_ops_1.BinaryOps.pow;\nexports.powStrict = binary_ops_1.BinaryOps.powStrict;\nexports.sub = binary_ops_1.BinaryOps.sub;\nexports.subStrict = binary_ops_1.BinaryOps.subStrict;\nexports.squaredDifference = binary_ops_1.BinaryOps.squaredDifference;\nexports.squaredDifferenceStrict = binary_ops_1.BinaryOps.squaredDifferenceStrict;\nexports.norm = norm_1.NormOps.norm;\nexports.cast = array_ops_1.ArrayOps.cast;\nexports.clone = array_ops_1.ArrayOps.clone;\nexports.fromPixels = array_ops_1.ArrayOps.fromPixels;\nexports.toPixels = array_ops_1.ArrayOps.toPixels;\nexports.ones = array_ops_1.ArrayOps.ones;\nexports.onesLike = array_ops_1.ArrayOps.onesLike;\nexports.zeros = array_ops_1.ArrayOps.zeros;\nexports.zerosLike = array_ops_1.ArrayOps.zerosLike;\nexports.rand = array_ops_1.ArrayOps.rand;\nexports.randomNormal = array_ops_1.ArrayOps.randomNormal;\nexports.truncatedNormal = array_ops_1.ArrayOps.truncatedNormal;\nexports.randomUniform = array_ops_1.ArrayOps.randomUniform;\nexports.multinomial = array_ops_1.ArrayOps.multinomial;\nexports.reshape = array_ops_1.ArrayOps.reshape;\nexports.squeeze = array_ops_1.ArrayOps.squeeze;\nexports.tile = array_ops_1.ArrayOps.tile;\nexports.gather = array_ops_1.ArrayOps.gather;\nexports.oneHot = array_ops_1.ArrayOps.oneHot;\nexports.linspace = array_ops_1.ArrayOps.linspace;\nexports.range = array_ops_1.ArrayOps.range;\nexports.buffer = array_ops_1.ArrayOps.buffer;\nexports.fill = array_ops_1.ArrayOps.fill;\nexports.tensor = array_ops_1.ArrayOps.tensor;\nexports.scalar = array_ops_1.ArrayOps.scalar;\nexports.tensor1d = array_ops_1.ArrayOps.tensor1d;\nexports.tensor2d = array_ops_1.ArrayOps.tensor2d;\nexports.tensor3d = array_ops_1.ArrayOps.tensor3d;\nexports.tensor4d = array_ops_1.ArrayOps.tensor4d;\nexports.print = array_ops_1.ArrayOps.print;\nexports.expandDims = array_ops_1.ArrayOps.expandDims;\nexports.stack = array_ops_1.ArrayOps.stack;\nexports.split = array_ops_1.ArrayOps.split;\nexports.pad = array_ops_1.ArrayOps.pad;\nexports.pad1d = array_ops_1.ArrayOps.pad1d;\nexports.pad2d = array_ops_1.ArrayOps.pad2d;\nexports.pad3d = array_ops_1.ArrayOps.pad3d;\nexports.pad4d = array_ops_1.ArrayOps.pad4d;\nexports.movingAverage = moving_average_1.MovingAverageOps.movingAverage;\nexports.basicLSTMCell = lstm_1.LSTMOps.basicLSTMCell;\nexports.multiRNNCell = lstm_1.LSTMOps.multiRNNCell;\nexports.softmax = softmax_1.SoftmaxOps.softmax;\nexports.localResponseNormalization = lrn_1.LRNOps.localResponseNormalization;\nvar tensor_1 = __webpack_require__(14);\nvar types_1 = __webpack_require__(22);\n[tensor_1.Tensor, types_1.Rank];\n[loss_ops_1.Reduction];\nexports.losses = {\n    softmaxCrossEntropy: softmax_1.SoftmaxOps.softmaxCrossEntropy,\n    absoluteDifference: loss_ops_1.LossOps.absoluteDifference,\n    computeWeightedLoss: loss_ops_1.LossOps.computeWeightedLoss\n};\nexports.image = {\n    resizeBilinear: image_ops_1.ImageOps.resizeBilinear,\n    resizeNearestNeighbor: image_ops_1.ImageOps.resizeNearestNeighbor,\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globals_1 = __webpack_require__(10);\nfunction operation(target, name, descriptor) {\n    var fn = descriptor.value;\n    descriptor.value = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return globals_1.tidy(name, function () { return fn.apply(void 0, args); });\n    };\n    return descriptor;\n}\nexports.operation = operation;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar errors_1 = __webpack_require__(4);\nvar serialization_1 = __webpack_require__(31);\nvar types_1 = __webpack_require__(12);\nvar generic_utils = __webpack_require__(5);\nvar serialization_utils_1 = __webpack_require__(64);\nvar InputSpec = (function () {\n    function InputSpec(config) {\n        this.dtype = config.dtype;\n        this.shape = config.shape;\n        if (config.shape != null) {\n            this.ndim = config.shape.length;\n        }\n        else {\n            this.ndim = config.ndim;\n        }\n        this.maxNDim = config.maxNDim;\n        this.minNDim = config.minNDim;\n        this.axes = config.axes || {};\n    }\n    return InputSpec;\n}());\nexports.InputSpec = InputSpec;\nvar _nextNodeID = 0;\nvar Node = (function () {\n    function Node(config, callArgs) {\n        this.callArgs = callArgs;\n        this.id = _nextNodeID++;\n        this.outboundLayer = config.outboundLayer;\n        this.inboundLayers = config.inboundLayers;\n        this.nodeIndices = config.nodeIndices;\n        this.tensorIndices = config.tensorIndices;\n        this.inputTensors = config.inputTensors;\n        this.outputTensors = config.outputTensors;\n        this.inputMasks = config.inputMasks;\n        this.outputMasks = config.outputMasks;\n        this.inputShapes = config.inputShapes;\n        this.outputShapes = config.outputShapes;\n        for (var _i = 0, _a = config.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                layer.outboundNodes.push(this);\n            }\n        }\n        config.outboundLayer.inboundNodes.push(this);\n    }\n    Node.prototype.getConfig = function () {\n        var inboundNames = [];\n        for (var _i = 0, _a = this.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                inboundNames.push(layer.name);\n            }\n            else {\n                inboundNames.push(null);\n            }\n        }\n        return {\n            outboundLayer: this.outboundLayer ? this.outboundLayer.name : null,\n            inboundLayers: inboundNames,\n            nodeIndices: this.nodeIndices,\n            tensorIndices: this.tensorIndices\n        };\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar _nextLayerID = 0;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer(config) {\n        var _this = _super.call(this) || this;\n        _this._callHook = null;\n        _this._addedWeightNames = [];\n        _this._stateful = false;\n        _this.id = _nextLayerID++;\n        _this.activityRegularizer = null;\n        _this.inputSpec = null;\n        _this.supportsMasking = false;\n        _this._trainableWeights = [];\n        _this._nonTrainableWeights = [];\n        _this._losses = [];\n        _this._updates = [];\n        _this._built = false;\n        _this.inboundNodes = [];\n        _this.outboundNodes = [];\n        var name = config.name;\n        if (!name) {\n            var prefix = _this.getClassName();\n            name = generic_utils.toSnakeCase(prefix) + '_' + K.getUid(prefix);\n        }\n        _this.name = name;\n        _this.trainable = generic_utils.pyGetAttr(config, 'trainable', true);\n        _this.updatable = generic_utils.pyGetAttr(config, 'updatable', true);\n        if (config.inputShape != null || config.batchInputShape != null) {\n            var batchInputShape = void 0;\n            if (config.batchInputShape != null) {\n                batchInputShape = config.batchInputShape;\n            }\n            else if (config.inputShape != null) {\n                var batchSize = null;\n                if (config.batchSize != null) {\n                    batchSize = config.batchSize;\n                }\n                batchInputShape = [batchSize].concat(config.inputShape);\n            }\n            _this.batchInputShape = batchInputShape;\n            var dtype = config.dtype;\n            if (dtype == null) {\n                dtype = config.inputDType;\n            }\n            if (dtype == null) {\n                dtype = K.floatx();\n            }\n            _this.dtype = dtype;\n        }\n        if (config.weights != null) {\n            _this.initialWeights = config.weights;\n        }\n        else {\n            _this.initialWeights = null;\n        }\n        return _this;\n    }\n    Layer.nodeKey = function (layer, nodeIndex) {\n        return layer.name + '_ib-' + nodeIndex.toString();\n    };\n    Layer.prototype.getNodeAtIndex = function (nodeIndex, attrName) {\n        if (this.inboundNodes.length === 0) {\n            throw new errors_1.RuntimeError('The layer has never been called ' +\n                (\"and thus has no defined \" + attrName + \".\"));\n        }\n        if (this.inboundNodes.length <= nodeIndex) {\n            throw new errors_1.ValueError(\"Asked to get \" + attrName + \" at node \" + nodeIndex + \", \" +\n                (\"but the layer has only \" + this.inboundNodes.length + \" inbound nodes.\"));\n        }\n        return this.inboundNodes[nodeIndex];\n    };\n    Layer.prototype.getInputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'input').inputTensors);\n    };\n    Layer.prototype.getOutputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'output').outputTensors);\n    };\n    Object.defineProperty(Layer.prototype, \"input\", {\n        get: function () {\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer input\" ' +\n                    'is ill-defined. ' +\n                    'Use `getInputAt(nodeIndex)` instead.');\n            }\n            else if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' is not connected, no input to return.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'input').inputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"output\", {\n        get: function () {\n            if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has no inbound nodes.');\n            }\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer output\" ' +\n                    'is ill-defined. ' +\n                    'Use `getOutputAt(nodeIndex)` instead.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'output').outputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"losses\", {\n        get: function () {\n            return this._losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.calculateLosses = function () {\n        return this.losses.map(function (lossFn) { return lossFn(); });\n    };\n    Object.defineProperty(Layer.prototype, \"updates\", {\n        get: function () {\n            return this._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"built\", {\n        get: function () {\n            return this._built;\n        },\n        set: function (built) {\n            this._built = built;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"trainableWeights\", {\n        get: function () {\n            if (this.trainable) {\n                return this._trainableWeights;\n            }\n            else {\n                return [];\n            }\n        },\n        set: function (weights) {\n            this._trainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return this._trainableWeights.concat(this._nonTrainableWeights);\n            }\n            else {\n                return this._nonTrainableWeights;\n            }\n        },\n        set: function (weights) {\n            this._nonTrainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"weights\", {\n        get: function () {\n            return this.trainableWeights.concat(this.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"stateful\", {\n        get: function () {\n            return this._stateful;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.assertInputCompatibility = function (inputs) {\n        inputs = generic_utils.toList(inputs);\n        if (this.inputSpec == null || this.inputSpec.length === 0) {\n            return;\n        }\n        var inputSpec = generic_utils.toList(this.inputSpec);\n        if (inputs.length !== inputSpec.length) {\n            throw new errors_1.ValueError(\"Layer \" + this.name + \" expects \" + inputSpec.length + \" inputs, \" +\n                (\"but it received \" + inputs.length + \" input tensors. \") +\n                (\"Input received: \" + inputs));\n        }\n        for (var inputIndex = 0; inputIndex < inputs.length; inputIndex++) {\n            var x = inputs[inputIndex];\n            var spec = inputSpec[inputIndex];\n            if (spec == null) {\n                continue;\n            }\n            var ndim = K.ndim(x);\n            if (spec.ndim != null) {\n                if (ndim !== spec.ndim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \": \" +\n                        (\"expected ndim=\" + spec.ndim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.maxNDim != null) {\n                if (ndim > spec.maxNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected max_ndim=\" + spec.maxNDim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.minNDim != null) {\n                if (ndim < spec.minNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected min_ndim=\" + spec.minNDim + \", found ndim=\" + ndim + \".\"));\n                }\n            }\n            if (spec.dtype != null) {\n                if (K.dtype(x) !== spec.dtype) {\n                    var xDType = K.dtype(x);\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \" \" +\n                        (\": expected dtype=\" + spec.dtype + \", found dtype=\" + xDType + \".\"));\n                }\n            }\n            if (spec.axes) {\n                var xShape = K.intShape(x);\n                for (var key in spec.axes) {\n                    var axis = Number(key);\n                    var value = spec.axes[key];\n                    var xShapeAtAxis = axis >= 0 ? xShape[axis] : xShape[xShape.length + axis];\n                    if (value != null && [value, null].indexOf(xShapeAtAxis) === -1) {\n                        throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                            (this.name + \": expected axis \" + axis + \" of input shape to \") +\n                            (\"have value \" + value + \" but got shape \" + xShape + \".\"));\n                    }\n                }\n            }\n            if (spec.shape != null) {\n                var xShape = K.intShape(x);\n                for (var i = 0; i < spec.shape.length; ++i) {\n                    var specDim = spec.shape[i];\n                    var dim = xShape[i];\n                    if (specDim != null && dim != null) {\n                        if (specDim !== dim) {\n                            throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                                (this.name + \": expected shape=\" + spec.shape + \", \") +\n                                'found shape=${xShape}.');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layer.prototype.call = function (inputs, kwargs) {\n        return inputs;\n    };\n    Layer.prototype.invokeCallHook = function (inputs, kwargs) {\n        if (this._callHook != null) {\n            this._callHook(inputs, kwargs);\n        }\n    };\n    Layer.prototype.setCallHook = function (callHook) {\n        this._callHook = callHook;\n    };\n    Layer.prototype.clearCallHook = function () {\n        this._callHook = null;\n    };\n    Layer.prototype.apply = function (inputs, kwargs) {\n        var _this = this;\n        kwargs = kwargs || {};\n        var inputsList = generic_utils.toList(inputs);\n        var allAreSymbolic = true;\n        for (var _i = 0, inputsList_1 = inputsList; _i < inputsList_1.length; _i++) {\n            var input = inputsList_1[_i];\n            if (!(input instanceof types_1.SymbolicTensor)) {\n                allAreSymbolic = false;\n                break;\n            }\n        }\n        var noneAreSymbolic = true;\n        for (var _a = 0, inputsList_2 = inputsList; _a < inputsList_2.length; _a++) {\n            var input = inputsList_2[_a];\n            if (input instanceof types_1.SymbolicTensor) {\n                noneAreSymbolic = false;\n                break;\n            }\n        }\n        if (allAreSymbolic === noneAreSymbolic) {\n            throw new errors_1.ValueError('Arguments to apply() must be all ' +\n                'SymbolicTensors or all Tensors');\n        }\n        return K.nameScope(this.name, function () {\n            if (!_this.built) {\n                _this.assertInputCompatibility(inputs);\n                var inputShapes = [];\n                for (var _i = 0, _a = generic_utils.toList(inputs); _i < _a.length; _i++) {\n                    var xElem = _a[_i];\n                    inputShapes.push(K.intShape(xElem));\n                }\n                _this.build(generic_utils.singletonOrArray(inputShapes));\n                _this.built = true;\n                if (_this.initialWeights) {\n                    _this.setWeights(_this.initialWeights);\n                }\n            }\n            _this.assertInputCompatibility(inputs);\n            if (noneAreSymbolic) {\n                var output = _this.call(inputs, kwargs);\n                var outputList = generic_utils.toList(output);\n                var outputListCopy = [];\n                for (var _b = 0, outputList_1 = outputList; _b < outputList_1.length; _b++) {\n                    var x = outputList_1[_b];\n                    if (inputsList.indexOf(x) !== -1) {\n                        x = K.identity(x);\n                    }\n                    outputListCopy.push(x);\n                }\n                output = generic_utils.singletonOrArray(outputListCopy);\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n            else {\n                var inputShape = collectInputShape(inputs);\n                var outputShape = _this.computeOutputShape(inputShape);\n                var output = void 0;\n                var outputDType_1 = guessOutputDType(inputs);\n                if (outputShape != null && outputShape.length > 0 &&\n                    Array.isArray(outputShape[0])) {\n                    output = outputShape\n                        .map(function (shape, index) { return new types_1.SymbolicTensor(outputDType_1, shape, _this, generic_utils.toList(inputs), kwargs, _this.name, index); });\n                }\n                else {\n                    output = new types_1.SymbolicTensor(outputDType_1, outputShape, _this, generic_utils.toList(inputs), kwargs, _this.name);\n                }\n                _this.addInboundNode(inputs, output, null, null, inputShape, outputShape, kwargs);\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n        });\n    };\n    Layer.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Layer.prototype.getWeights = function () {\n        return K.batchGetValue(this.weights);\n    };\n    Layer.prototype.setWeights = function (weights) {\n        var params = this.weights;\n        if (params.length !== weights.length) {\n            throw new errors_1.ValueError(\"You called setWeights(weights) on layer \\\"\" + this.name + \"\\\" \" +\n                (\"with a weight list of length \" + weights.length + \", \") +\n                (\"but the layer was expecting \" + params.length + \" weights. \") +\n                (\"Provided weights: \" + weights + \"...\"));\n        }\n        if (params.length === 0) {\n            return;\n        }\n        var weightValueTuples = [];\n        var paramValues = K.batchGetValue(params);\n        for (var i = 0; i < paramValues.length; ++i) {\n            var pv = paramValues[i];\n            var p = params[i];\n            var w = weights[i];\n            if (!tfjs_core_1.util.arraysEqual(pv.shape, w.shape)) {\n                throw new errors_1.ValueError(\"Layer weight shape \" + pv.shape + \" \" +\n                    (\"not compatible with provided weight shape \" + w.shape));\n            }\n            weightValueTuples.push([p, w]);\n        }\n        K.batchSetValue(weightValueTuples);\n    };\n    Layer.prototype.addWeight = function (name, shape, dtype, initializer, regularizer, trainable, constraint) {\n        if (this._addedWeightNames.indexOf(name) !== -1) {\n            throw new errors_1.ValueError(\"Duplicate weight name \" + name + \" for layer \" + this.name);\n        }\n        this._addedWeightNames.push(name);\n        if (dtype == null) {\n            dtype = K.floatx();\n        }\n        var weight = new types_1.LayerVariable(initializer.apply(shape, dtype), dtype, name, trainable, constraint);\n        if (regularizer != null) {\n            this.addLoss(function () { return regularizer.apply(weight.read()); });\n        }\n        if (trainable == null) {\n            trainable = true;\n        }\n        if (trainable) {\n            this._trainableWeights.push(weight);\n        }\n        else {\n            this._nonTrainableWeights.push(weight);\n        }\n        return weight;\n    };\n    Layer.prototype.addLoss = function (losses) {\n        if (losses == null || Array.isArray(losses) && losses.length === 0) {\n            return;\n        }\n        losses = generic_utils.toList(losses);\n        if (this._losses !== undefined && this._losses !== null) {\n            (_a = this.losses).push.apply(_a, losses);\n        }\n        var _a;\n    };\n    Layer.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    Layer.prototype.computeMask = function (inputs, mask) {\n        var _this = this;\n        if (!this.supportsMasking) {\n            if (mask != null) {\n                if (Array.isArray(mask)) {\n                    mask.forEach(function (maskElement) {\n                        if (maskElement != null) {\n                            throw new TypeError(\"Layer \" + _this.name + \" does not support masking,\" +\n                                'but was passed an inputMask.');\n                        }\n                    });\n                }\n                else {\n                    throw new TypeError(\"Layer \" + this.name + \" does not support masking,\" +\n                        'but was passed an inputMask.');\n                }\n            }\n            return null;\n        }\n        return mask;\n    };\n    Layer.prototype.addInboundNode = function (inputTensors, outputTensors, inputMasks, outputMasks, inputShapes, outputShapes, kwargs) {\n        if (kwargs === void 0) { kwargs = null; }\n        var inputTensorList = generic_utils.toList(inputTensors);\n        outputTensors = generic_utils.toList(outputTensors);\n        inputMasks = generic_utils.toList(inputMasks);\n        outputMasks = generic_utils.toList(outputMasks);\n        inputShapes = generic_utils.normalizeShapeList(inputShapes);\n        outputShapes = generic_utils.normalizeShapeList(outputShapes);\n        var inboundLayers = [];\n        var nodeIndices = [];\n        var tensorIndices = [];\n        for (var _i = 0, inputTensorList_1 = inputTensorList; _i < inputTensorList_1.length; _i++) {\n            var x = inputTensorList_1[_i];\n            inboundLayers.push(x.sourceLayer);\n            nodeIndices.push(x.nodeIndex);\n            tensorIndices.push(x.tensorIndex);\n        }\n        new Node({\n            outboundLayer: this,\n            inboundLayers: inboundLayers,\n            nodeIndices: nodeIndices,\n            tensorIndices: tensorIndices,\n            inputTensors: inputTensorList,\n            outputTensors: outputTensors,\n            inputMasks: inputMasks,\n            outputMasks: outputMasks,\n            inputShapes: inputShapes,\n            outputShapes: outputShapes\n        }, kwargs);\n        for (var i = 0; i < outputTensors.length; i++) {\n            outputTensors[i].sourceLayer = this;\n            outputTensors[i].nodeIndex = this.inboundNodes.length - 1;\n            outputTensors[i].tensorIndex = i;\n        }\n    };\n    Layer.prototype.getConfig = function () {\n        var config = { name: this.name, trainable: this.trainable };\n        if (this.batchInputShape != null) {\n            config['batchInputShape'] = this.batchInputShape;\n        }\n        if (this.dtype != null) {\n            config['dtype'] = this.dtype;\n        }\n        return config;\n    };\n    Layer.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', 'subheading': 'Classes' })\n    ], Layer.prototype, \"apply\", null);\n    Layer = __decorate([\n        tfjs_core_1.doc({ heading: 'Layers', subheading: 'Classes', namespace: 'layers' })\n    ], Layer);\n    return Layer;\n}(types_1.Serializable));\nexports.Layer = Layer;\nfunction collectInputShape(inputTensors) {\n    inputTensors =\n        generic_utils.toList(inputTensors);\n    var shapes = [];\n    for (var _i = 0, inputTensors_1 = inputTensors; _i < inputTensors_1.length; _i++) {\n        var x = inputTensors_1[_i];\n        shapes.push(K.intShape(x));\n    }\n    return generic_utils.singletonOrArray(shapes);\n}\nfunction guessOutputDType(inputTensors) {\n    return types_1.DType.float32;\n}\nvar InputLayer = (function (_super) {\n    __extends(InputLayer, _super);\n    function InputLayer(config) {\n        var _this = _super.call(this, {\n            dtype: config.dtype,\n            name: config.name != null ? config.name : K.getUid('input').toString()\n        }) || this;\n        if (config.batchSize == null) {\n            config.batchSize = null;\n        }\n        if (config.sparse == null) {\n            config.sparse = false;\n        }\n        _this.trainable = false;\n        _this.built = true;\n        _this.sparse = config.sparse;\n        if (config.inputShape != null && config.batchInputShape != null) {\n            throw new errors_1.ValueError('Only provide the inputShape OR ' +\n                'batchInputShape argument to inputLayer, not both at the same time.');\n        }\n        var batchInputShape = config.batchInputShape;\n        if (batchInputShape == null) {\n            if (config.inputShape == null) {\n                throw new errors_1.ValueError('An InputLayer should be passed either a ' +\n                    '`batchInputShape` or an `inputShape`.');\n            }\n            else {\n                batchInputShape = [config.batchSize].concat(config.inputShape);\n            }\n        }\n        else {\n            if (config.batchSize != null) {\n                throw new errors_1.ValueError('Cannot specify batchSize if batchInputShape is' +\n                    'specified when creating an InputLayer.');\n            }\n        }\n        var dtype = config.dtype || K.floatx();\n        _this.batchInputShape = batchInputShape;\n        _this.dtype = dtype;\n        _this.inputSpec = [{ shape: batchInputShape }];\n        var inputTensor = new types_1.SymbolicTensor(_this.dtype, _this.batchInputShape, _this, [], {}, _this.name);\n        inputTensor.nodeIndex = 0;\n        inputTensor.tensorIndex = 0;\n        new Node({\n            outboundLayer: _this,\n            inboundLayers: [],\n            nodeIndices: [],\n            tensorIndices: [],\n            inputTensors: [inputTensor],\n            outputTensors: [inputTensor],\n            inputMasks: [null],\n            outputMasks: [null],\n            inputShapes: [batchInputShape],\n            outputShapes: [batchInputShape]\n        });\n        return _this;\n    }\n    InputLayer.prototype.apply = function (inputs, kwargs) {\n        throw new errors_1.ValueError('Cannot pass any input to an ' +\n            (\"InputLayer's apply() method. InputLayer name: \" + this.name));\n    };\n    InputLayer.prototype.getClassName = function () {\n        return 'InputLayer';\n    };\n    InputLayer.prototype.getConfig = function () {\n        return {\n            batchInputShape: this.batchInputShape,\n            dtype: this.dtype,\n            sparse: this.sparse,\n            name: this.name\n        };\n    };\n    return InputLayer;\n}(Layer));\nexports.InputLayer = InputLayer;\ngeneric_utils.ClassNameMap.register('InputLayer', InputLayer);\nfunction Input(config) {\n    if (config.batchShape == null && config.shape == null) {\n        throw new Error('Please provide to Input either a `shape`' +\n            ' or a `batchShape` argument. Note that ' +\n            '`shape` does not include the batch ' +\n            'dimension.');\n    }\n    if (config.batchShape != null && config.shape != null) {\n        throw new errors_1.ValueError('Please provide either a `shape` or `batchShape` ' +\n            'argument to Input, but not both.');\n    }\n    var batchShape = config.batchShape;\n    if (config.shape != null && batchShape == null) {\n        batchShape = [null].concat(config.shape);\n    }\n    var dtype = config.dtype;\n    if (dtype == null) {\n        dtype = K.floatx();\n    }\n    var inputLayer = new InputLayer({\n        batchInputShape: batchShape,\n        name: config.name,\n        dtype: dtype,\n        sparse: config.sparse\n    });\n    var outputs = inputLayer.inboundNodes[0].outputTensors;\n    return outputs[0];\n}\nexports.Input = Input;\nvar Container = (function (_super) {\n    __extends(Container, _super);\n    function Container(config) {\n        var _this = _super.call(this, {}) || this;\n        _this.containerNodes = new Set();\n        _this.name = config.name;\n        if (_this.name == null) {\n            var prefix = _this.getClassName().toLowerCase();\n            _this.name = K.getUid(prefix);\n        }\n        _this.supportsMasking = false;\n        _this.trainable = true;\n        _this.updatable = true;\n        if (Array.isArray(config.inputs)) {\n            _this.inputs = config.inputs.slice();\n        }\n        else {\n            _this.inputs = [config.inputs];\n        }\n        if (Array.isArray(config.outputs)) {\n            _this.outputs = config.outputs.slice();\n        }\n        else {\n            _this.outputs = [config.outputs];\n        }\n        if (generic_utils.unique(_this.inputs).length !== _this.inputs.length) {\n            throw new errors_1.ValueError('The list of inputs passed to the model is ' +\n                'redundant. All inputs should only appear once. Found: ' +\n                _this.inputs.map(function (x) { return x.name; }));\n        }\n        if (generic_utils.unique(_this.outputs).length !== _this.outputs.length) {\n            console.warn('The list of outputs passed to the model is redundant. ' +\n                'All outputs should only appear once. Found: ' +\n                _this.outputs.map(function (x) { return x.name; }));\n        }\n        _this.inputLayers = [];\n        _this.inputLayersNodeIndices = [];\n        _this.inputLayersTensorIndices = [];\n        _this.outputLayers = [];\n        _this.outputLayersNodeIndices = [];\n        _this.outputLayersTensorIndices = [];\n        _this.layers = [];\n        for (var _i = 0, _a = _this.outputs; _i < _a.length; _i++) {\n            var x = _a[_i];\n            var layer = x.sourceLayer;\n            var nodeIndex = x.nodeIndex;\n            var tensorIndex = x.tensorIndex;\n            _this.outputLayers.push(layer);\n            _this.outputLayersNodeIndices.push(nodeIndex);\n            _this.outputLayersTensorIndices.push(tensorIndex);\n        }\n        for (var _b = 0, _c = _this.inputs; _b < _c.length; _b++) {\n            var x = _c[_b];\n            var layer = x.sourceLayer;\n            var nodeIndex = x.nodeIndex;\n            var tensorIndex = x.tensorIndex;\n            generic_utils.assert(nodeIndex === 0, 'input layer has >1 nodes');\n            generic_utils.assert(tensorIndex === 0, 'input layer has >1 tensors');\n            _this.inputLayers.push(layer);\n            _this.inputLayersNodeIndices.push(nodeIndex);\n            _this.inputLayersTensorIndices.push(tensorIndex);\n        }\n        _this.inputNames = [];\n        _this.outputNames = [];\n        _this.feedInputShapes = [];\n        _this.feedInputNames = [];\n        _this.feedOutputNames = [];\n        for (var i = 0; i < _this.inputLayers.length; i++) {\n            var layer = _this.inputLayers[i];\n            if (!(layer instanceof InputLayer)) {\n                throw new TypeError('Input layers to a Model must be InputLayer objects. ' +\n                    (\"Received inputs: \" + config.inputs + \". \") +\n                    (\"Input \" + i + \" (0-based) originates \") +\n                    (\"from layer type \" + layer.getClassName() + \".\"));\n            }\n            _this.inputNames.push(layer.name);\n            _this.feedInputShapes.push(layer.batchInputShape);\n            _this.feedInputNames.push(layer.name);\n        }\n        for (var _d = 0, _e = _this.outputLayers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            _this.outputNames.push(layer.name);\n        }\n        _this.internalInputShapes = _this.inputs.map(function (x) { return x.shape; });\n        _this.internalOutputShapes = _this.outputs.map(function (x) { return x.shape; });\n        var nodesDepths = {};\n        var nodeIDToNode = {};\n        var layersDepths = {};\n        var layerIDToLayer = {};\n        var layerIndices = {};\n        var nodesInDecreasingDepth = [];\n        var buildMapOfGraph = function (tensor, finishedNodes, nodesInProgress, layer, nodeIndex, tensorIndex) {\n            if (layer == null || nodeIndex == null || tensorIndex == null) {\n                layer = tensor.sourceLayer;\n                nodeIndex = tensor.nodeIndex;\n                tensorIndex = tensor.tensorIndex;\n            }\n            var node = layer.inboundNodes[nodeIndex];\n            if (nodesInProgress.indexOf(node) !== -1) {\n                throw new errors_1.RuntimeError(\"The tensor \" + tensor.name + \" at layer \\\"\" + layer.name + \"\\\" \" +\n                    'is part of a cycle.');\n            }\n            if (finishedNodes.indexOf(node) !== -1) {\n                return;\n            }\n            _this.containerNodes.add(Container.nodeKey(layer, nodeIndex));\n            if (!(layer.id in layerIndices)) {\n                layerIndices[layer.id] = Object.keys(layerIndices).length;\n            }\n            if (nodesInProgress.indexOf(node) === -1) {\n                nodesInProgress.push(node);\n            }\n            var numInboundLayers = node.inboundLayers.length;\n            for (var i = 0; i < numInboundLayers; i++) {\n                var x = node.inputTensors[i];\n                var layer_1 = node.inboundLayers[i];\n                var nodeIndex_1 = node.nodeIndices[i];\n                var tensorIndex_1 = node.tensorIndices[i];\n                buildMapOfGraph(x, finishedNodes, nodesInProgress, layer_1, nodeIndex_1, tensorIndex_1);\n            }\n            finishedNodes.push(node);\n            while (nodesInProgress.indexOf(node) >= 0) {\n                nodesInProgress.splice(nodesInProgress.indexOf(node), 1);\n            }\n            nodesInDecreasingDepth.push(node);\n        };\n        var finishedNodes = [];\n        var nodesInProgress = [];\n        for (var _f = 0, _g = _this.outputs; _f < _g.length; _f++) {\n            var x = _g[_f];\n            buildMapOfGraph(x, finishedNodes, nodesInProgress);\n        }\n        var reversedNodesInDecreasingDepth = nodesInDecreasingDepth.slice().reverse();\n        for (var _h = 0, reversedNodesInDecreasingDepth_1 = reversedNodesInDecreasingDepth; _h < reversedNodesInDecreasingDepth_1.length; _h++) {\n            var node = reversedNodesInDecreasingDepth_1[_h];\n            nodeIDToNode[node.id] = node;\n            if (!(node.id in nodesDepths)) {\n                nodesDepths[node.id] = 0;\n            }\n            var depth = nodesDepths[node.id];\n            var previousDepth = (layersDepths[node.outboundLayer.id] == null ?\n                0 :\n                layersDepths[node.outboundLayer.id]);\n            depth = Math.max(depth, previousDepth);\n            layersDepths[node.outboundLayer.id] = depth;\n            layerIDToLayer[node.outboundLayer.id] = node.outboundLayer;\n            nodesDepths[node.id] = depth;\n            for (var i = 0; i < node.inboundLayers.length; i++) {\n                var inboundLayer = node.inboundLayers[i];\n                var nodeIndex = node.nodeIndices[i];\n                var inboundNode = inboundLayer.inboundNodes[nodeIndex];\n                var previousDepth_1 = (nodesDepths[inboundNode.id] == null ? 0 :\n                    nodesDepths[inboundNode.id]);\n                nodesDepths[inboundNode.id] = Math.max(depth + 1, previousDepth_1);\n                nodeIDToNode[inboundNode.id] = inboundNode;\n            }\n        }\n        var nodesByDepth = {};\n        for (var nodeID in nodesDepths) {\n            var depth = nodesDepths[nodeID];\n            if (!(depth in nodesByDepth)) {\n                nodesByDepth[depth] = [];\n            }\n            nodesByDepth[depth].push(nodeIDToNode[nodeID]);\n        }\n        var layersByDepth = {};\n        for (var layerID in layersDepths) {\n            var depth = layersDepths[layerID];\n            if (!(depth in layersByDepth)) {\n                layersByDepth[depth] = [];\n            }\n            layersByDepth[depth].push(layerIDToLayer[layerID]);\n        }\n        var depthKeys = Object.keys(layersByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        _this.layers = [];\n        for (var _j = 0, depthKeys_1 = depthKeys; _j < depthKeys_1.length; _j++) {\n            var depth = depthKeys_1[_j];\n            var layersForDepth = layersByDepth[depth];\n            layersForDepth.sort(function (a, b) {\n                var aIndex = layerIndices[a.id];\n                var bIndex = layerIndices[b.id];\n                if (aIndex < bIndex) {\n                    return -1;\n                }\n                if (aIndex > bIndex) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (var _k = 0, layersForDepth_1 = layersForDepth; _k < layersForDepth_1.length; _k++) {\n                var layer = layersForDepth_1[_k];\n                _this.layers.push(layer);\n            }\n        }\n        _this.layersByDepth = layersByDepth;\n        depthKeys = Object.keys(nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        var computableTensors = _this.inputs.slice();\n        var layersWithCompleteInput = [];\n        for (var _l = 0, depthKeys_2 = depthKeys; _l < depthKeys_2.length; _l++) {\n            var depth = depthKeys_2[_l];\n            for (var _m = 0, _o = nodesByDepth[depth]; _m < _o.length; _m++) {\n                var node = _o[_m];\n                var layer = node.outboundLayer;\n                if (layer != null) {\n                    for (var _p = 0, _q = node.inputTensors; _p < _q.length; _p++) {\n                        var x = _q[_p];\n                        if (computableTensors.indexOf(x) === -1) {\n                            throw new errors_1.RuntimeError(\"Graph disconnected: cannot obtain value for tensor \" + x +\n                                (\" at layer \\\"\" + layer.name + \"\\\". \") +\n                                'The following previous layers were accessed without ' +\n                                (\"issue: \" + layersWithCompleteInput));\n                        }\n                    }\n                    for (var _r = 0, _s = node.outputTensors; _r < _s.length; _r++) {\n                        var x = _s[_r];\n                        computableTensors.push(x);\n                    }\n                    layersWithCompleteInput.push(layer.name);\n                }\n            }\n        }\n        _this.nodesByDepth = nodesByDepth;\n        var allNames = _this.layers.map(function (x) { return x.name; });\n        var _loop_1 = function (name_1) {\n            var numOccurrences = allNames.filter(function (x) { return x === name_1; }).length;\n            if (numOccurrences !== 1) {\n                throw new errors_1.RuntimeError(\"The name \\\"\" + name_1 + \"\\\" is used \" + numOccurrences + \" times \" +\n                    'in the model. All layer names should be unique. Layer names: ' +\n                    JSON.stringify(allNames));\n            }\n        };\n        for (var _t = 0, allNames_1 = allNames; _t < allNames_1.length; _t++) {\n            var name_1 = allNames_1[_t];\n            _loop_1(name_1);\n        }\n        _this.outboundNodes = [];\n        _this.inboundNodes = [];\n        new Node({\n            outboundLayer: _this,\n            inboundLayers: [],\n            nodeIndices: [],\n            tensorIndices: [],\n            inputTensors: _this.inputs,\n            outputTensors: _this.outputs,\n            inputMasks: _this.inputs.map(function (x) { return null; }),\n            outputMasks: _this.outputs.map(function (x) { return null; }),\n            inputShapes: _this.inputs.map(function (x) { return x.shape; }),\n            outputShapes: _this.outputs.map(function (x) { return x.shape; })\n        });\n        _this.built = true;\n        return _this;\n    }\n    Object.defineProperty(Container.prototype, \"trainableWeights\", {\n        get: function () {\n            if (this._trainableWeights.length > 0) {\n                throw new errors_1.ValueError('Container instance unexpectedly contains _trainableWeights.' +\n                    'The trainable weights of a Container are a union of the ' +\n                    'trainable weights of its consituent Layers. Its own ' +\n                    '_trainableWeights must remain an empty Array.');\n            }\n            if (!this.trainable) {\n                return [];\n            }\n            var weights = [];\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                weights = weights.concat(layer.trainableWeights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            var weights = [];\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                weights.push.apply(weights, layer.nonTrainableWeights);\n            }\n            if (!this.trainable) {\n                var trainableWeights = [];\n                for (var _b = 0, _c = this.layers; _b < _c.length; _b++) {\n                    var layer = _c[_b];\n                    trainableWeights.push.apply(trainableWeights, layer.trainableWeights);\n                }\n                return trainableWeights.concat(weights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"weights\", {\n        get: function () {\n            return this.trainableWeights.concat(this.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Container.prototype.loadWeights = function (weightsJSON, skipMismatch, isNamedTensorMap) {\n        if (skipMismatch === void 0) { skipMismatch = false; }\n        if (isNamedTensorMap === void 0) { isNamedTensorMap = false; }\n        if (isNamedTensorMap) {\n            loadWeightsFromNamedTensorMap(weightsJSON, this.layers);\n        }\n        else {\n            loadWeightsFromJson(weightsJSON, this.layers, skipMismatch);\n        }\n    };\n    Container.prototype.updatedConfig = function () {\n        var theConfig = this.getConfig();\n        var modelConfig = {\n            className: this.getClassName(),\n            config: theConfig,\n            kerasVersion: 'tfjs-layers pre-release',\n            backend: 'TensorFlow.js'\n        };\n        return modelConfig;\n    };\n    Container.prototype.toJSON = function (unused) {\n        var modelConfig = this.updatedConfig();\n        return JSON.stringify(serialization_utils_1.convertTsToPythonic(modelConfig));\n    };\n    Container.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.toList(inputs);\n        var masks;\n        if ('mask' in kwargs) {\n            masks = generic_utils.toList(kwargs['mask']);\n        }\n        else {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        return this.runInternalGraph(inputs, masks)[0];\n    };\n    Container.prototype.computeMask = function (inputs, mask) {\n        inputs = generic_utils.toList(inputs);\n        var masks;\n        if (mask == null) {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        else {\n            masks = generic_utils.toList(mask);\n        }\n        return this.runInternalGraph(inputs, masks)[1];\n    };\n    Container.prototype.computeOutputShape = function (inputShape) {\n        var inputShapes = generic_utils.normalizeShapeList(inputShape);\n        if (inputShapes.length !== this.inputLayers.length) {\n            throw new errors_1.ValueError(\"Invalid inputShape argument \" + inputShape + \": \" +\n                (\"model has \" + this.inputLayers.length + \" tensor inputs.\"));\n        }\n        var layersToOutputShapes = {};\n        for (var i = 0; i < inputShapes.length; i++) {\n            var layer = this.inputLayers[i];\n            var inputShape_1 = inputShapes[i];\n            var shapeKey = layer.name + '_0_0';\n            layersToOutputShapes[shapeKey] = inputShape_1;\n        }\n        var depthKeys = Object.keys(this.nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        if (depthKeys.length > 1) {\n            for (var _i = 0, depthKeys_3 = depthKeys; _i < depthKeys_3.length; _i++) {\n                var depth = depthKeys_3[_i];\n                var nodes = this.nodesByDepth[depth];\n                for (var _a = 0, nodes_1 = nodes; _a < nodes_1.length; _a++) {\n                    var node = nodes_1[_a];\n                    var layer = node.outboundLayer;\n                    if (this.inputLayers.map(function (x) { return x.id; }).indexOf(layer.id) !== -1) {\n                        continue;\n                    }\n                    var inputShapes_1 = [];\n                    for (var j = 0; j < node.inboundLayers.length; j++) {\n                        var inboundLayer = node.inboundLayers[j];\n                        var nodeIndex_2 = node.nodeIndices[j];\n                        var tensorIndex = node.tensorIndices[j];\n                        var shapeKey = inboundLayer.name + \"_\" + nodeIndex_2 + \"_\" + tensorIndex;\n                        var inputShape_2 = layersToOutputShapes[shapeKey];\n                        inputShapes_1.push(inputShape_2);\n                    }\n                    var outputShape = layer.computeOutputShape(generic_utils.singletonOrArray(inputShapes_1));\n                    var outputShapes_1 = generic_utils.normalizeShapeList(outputShape);\n                    var nodeIndex = layer.inboundNodes.indexOf(node);\n                    for (var j = 0; j < outputShapes_1.length; j++) {\n                        var shapeKey = layer.name + \"_\" + nodeIndex + \"_\" + j;\n                        layersToOutputShapes[shapeKey] = outputShapes_1[j];\n                    }\n                }\n            }\n        }\n        var outputShapes = [];\n        var outputShapeKeys = [];\n        for (var i = 0; i < this.outputLayers.length; i++) {\n            var layer = this.outputLayers[i];\n            var nodeIndex = this.outputLayersNodeIndices[i];\n            var tensorIndex = this.outputLayersTensorIndices[i];\n            var shapeKey = layer.name + \"_\" + nodeIndex + \"_\" + tensorIndex;\n            outputShapeKeys.push(shapeKey);\n        }\n        for (var i = 0; i < outputShapeKeys.length; i++) {\n            var key = outputShapeKeys[i];\n            generic_utils.assert(key in layersToOutputShapes);\n            outputShapes.push(layersToOutputShapes[key]);\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Container.prototype.runInternalGraph = function (inputs, masks) {\n        if (masks == null) {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        var tensorMap = {};\n        for (var i = 0; i < this.inputs.length; ++i) {\n            var x = this.inputs[i];\n            var y = inputs[i];\n            var mask = masks[i];\n            tensorMap[x.id] = [y, mask];\n        }\n        var depthKeys = Object.keys(this.nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        for (var _i = 0, depthKeys_4 = depthKeys; _i < depthKeys_4.length; _i++) {\n            var depth = depthKeys_4[_i];\n            var nodes = this.nodesByDepth[depth];\n            for (var _a = 0, nodes_2 = nodes; _a < nodes_2.length; _a++) {\n                var node = nodes_2[_a];\n                var layer = node.outboundLayer;\n                var referenceInputTensors = node.inputTensors;\n                var referenceOutputTensors = node.outputTensors;\n                var computedData = new Array();\n                for (var _b = 0, referenceInputTensors_1 = referenceInputTensors; _b < referenceInputTensors_1.length; _b++) {\n                    var x = referenceInputTensors_1[_b];\n                    if (x.id in tensorMap) {\n                        computedData.push(tensorMap[x.id]);\n                    }\n                }\n                if (computedData.length === referenceInputTensors.length) {\n                    var kwargs = {};\n                    var computedTensors = void 0;\n                    var computedMasks = void 0;\n                    var outputTensors_1 = void 0;\n                    var outputMasks_1 = void 0;\n                    if (node.callArgs != null) {\n                        kwargs = node.callArgs;\n                    }\n                    if (computedData.length === 1) {\n                        var _c = computedData[0], computedTensor = _c[0], computedMask = _c[1];\n                        if (kwargs.mask == null) {\n                            kwargs['mask'] = computedMask;\n                        }\n                        outputTensors_1 =\n                            generic_utils.toList(layer.call(computedTensor, kwargs));\n                        outputMasks_1 = generic_utils.toList(layer.computeMask(computedTensor, computedMask));\n                        computedTensors = [computedTensor];\n                        computedMasks = [computedMask];\n                    }\n                    else {\n                        computedTensors = computedData.map(function (x) { return x[0]; });\n                        computedMasks = computedData.map(function (x) { return x[1]; });\n                        if (kwargs.mask == null) {\n                            kwargs['mask'] = computedMasks;\n                        }\n                        outputTensors_1 =\n                            generic_utils.toList(layer.call(computedTensors, kwargs));\n                        outputMasks_1 = generic_utils.toList(layer.computeMask(computedTensors, computedMasks));\n                    }\n                    if (layer.activityRegularizer) {\n                        throw new errors_1.NotImplementedError('Model invocation with concrete Tensor value(s) in the ' +\n                            'presence of activity regularizer(s) is not supported yet.');\n                    }\n                    for (var i = 0; i < referenceOutputTensors.length; ++i) {\n                        var x = referenceOutputTensors[i];\n                        var y = outputTensors_1[i];\n                        var mask = outputMasks_1[i];\n                        tensorMap[x.id] = [y, mask];\n                    }\n                }\n            }\n        }\n        var outputTensors = [];\n        var outputMasks = [];\n        var outputShapes = [];\n        for (var _d = 0, _e = this.outputs; _d < _e.length; _d++) {\n            var x = _e[_d];\n            generic_utils.assert(x.id in tensorMap, \"Could not compute output \" + x.name + \" : \" + x.id);\n            var _f = tensorMap[x.id], tensor = _f[0], mask = _f[1];\n            outputShapes.push(tensor.shape);\n            outputTensors.push(tensor);\n            outputMasks.push(mask);\n        }\n        return [outputTensors, outputMasks, outputShapes];\n    };\n    Container.prototype.buildNodeConversionMap = function (layers) {\n        var nodeConversionMap = {};\n        var keptNodes;\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            keptNodes = layer instanceof Container ? 1 : 0;\n            for (var originalNodeIndex = 0; originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n                var nodeKey = Container.nodeKey(layer, originalNodeIndex);\n                if (nodeKey in this.containerNodes) {\n                    nodeConversionMap[nodeKey] = keptNodes;\n                    keptNodes += 1;\n                }\n            }\n        }\n        return nodeConversionMap;\n    };\n    Container.prototype.getLayer = function (name, index) {\n        if (index != null) {\n            if (this.layers.length <= index) {\n                throw new errors_1.ValueError(\"Was asked to retrieve layer at index \" + index + \", but model only \" +\n                    (\"has \" + this.layers.length + \" layer(s).\"));\n            }\n            else {\n                return this.layers[index];\n            }\n        }\n        else {\n            if (name == null) {\n                throw new errors_1.ValueError('Provide either a layer name or layer index');\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer.name === name) {\n                return layer;\n            }\n        }\n        throw new errors_1.ValueError(\"No such layer: \" + name);\n    };\n    Container.prototype.calculateLosses = function () {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var losses = [];\n            for (var _i = 0, _a = _this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                for (var nodeIndex = 0; nodeIndex < layer.inboundNodes.length; ++nodeIndex) {\n                    var nodeKey = Container.nodeKey(layer, nodeIndex);\n                    if (_this.containerNodes.has(nodeKey)) {\n                        losses.push.apply(losses, layer.calculateLosses());\n                    }\n                }\n            }\n            return losses;\n        });\n    };\n    Container.prototype.getConfig = function () {\n        var config = { name: this.name };\n        var nodeConversionMap = this.buildNodeConversionMap(this.layers);\n        var layerConfigs = [];\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            var layerClassName = layer.getClassName();\n            var layerConfig = layer.getConfig();\n            var filteredInboundNodes = [];\n            for (var originalNodeIndex = 0; originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n                var node = layer.inboundNodes[originalNodeIndex];\n                var nodeKey = Container.nodeKey(layer, originalNodeIndex);\n                var kwargs = {};\n                if (this.containerNodes.has(nodeKey)) {\n                    if (node.callArgs) {\n                        var testString = JSON.stringify(node.callArgs);\n                        if (testString.indexOf('undefined') === -1) {\n                            kwargs = node.callArgs;\n                        }\n                        else {\n                            console.warn(\"Layer \" + layer.name + \" was passed \" +\n                                \"non-serializable keyword arguments: \" +\n                                (node.callArgs + \". They will not be included \") +\n                                \"in the serialized model (and thus will be \" +\n                                \"missing at deserialization time).\");\n                            kwargs = {};\n                        }\n                    }\n                    if (node.inboundLayers.length > 0) {\n                        var nodeData = [];\n                        for (var i = 0; i < node.inboundLayers.length; i++) {\n                            var inboundLayer = node.inboundLayers[i];\n                            var nodeIndex = node.nodeIndices[i];\n                            var tensorIndex = node.tensorIndices[i];\n                            var nodeKey_1 = Container.nodeKey(inboundLayer, nodeIndex);\n                            var newNodeIndex = nodeConversionMap[nodeKey_1];\n                            if (newNodeIndex === null || newNodeIndex === undefined) {\n                                newNodeIndex = 0;\n                            }\n                            nodeData.push([inboundLayer.name, newNodeIndex, tensorIndex, kwargs]);\n                        }\n                        filteredInboundNodes.push(nodeData);\n                    }\n                }\n            }\n            layerConfigs.push({\n                name: layer.name,\n                className: layerClassName,\n                config: layerConfig,\n                inboundNodes: filteredInboundNodes\n            });\n        }\n        config['layers'] = layerConfigs;\n        var modelInputs = [];\n        for (var i = 0; i < this.inputLayers.length; i++) {\n            var layer = this.inputLayers[i];\n            var nodeIndex = this.inputLayersNodeIndices[i];\n            var nodeKey = Container.nodeKey(layer, nodeIndex);\n            if (!this.containerNodes.has(nodeKey)) {\n                continue;\n            }\n            var newNodeIndex = nodeConversionMap[nodeKey];\n            if (newNodeIndex === null || newNodeIndex === undefined) {\n                newNodeIndex = 0;\n            }\n            var tensorIndex = this.inputLayersTensorIndices[i];\n            modelInputs.push([layer.name, newNodeIndex, tensorIndex]);\n        }\n        config['inputLayers'] = modelInputs;\n        var modelOutputs = [];\n        for (var i = 0; i < this.outputLayers.length; i++) {\n            var layer = this.outputLayers[i];\n            var nodeIndex = this.outputLayersNodeIndices[i];\n            var nodeKey = Container.nodeKey(layer, nodeIndex);\n            if (!this.containerNodes.has(nodeKey)) {\n                continue;\n            }\n            var newNodeIndex = nodeConversionMap[nodeKey];\n            if (newNodeIndex === null || newNodeIndex === undefined) {\n                newNodeIndex = 0;\n            }\n            var tensorIndex = this.outputLayersTensorIndices[i];\n            modelOutputs.push([layer.name, newNodeIndex, tensorIndex]);\n        }\n        config['outputLayers'] = modelOutputs;\n        return config;\n    };\n    Container.fromConfig = function (cls, config) {\n        var createdLayers = {};\n        var unprocessedNodes = {};\n        function addUnprocessedNode(layer, nodeData) {\n            if (!(layer.name in unprocessedNodes)) {\n                unprocessedNodes[layer.name] = [nodeData];\n            }\n            else {\n                unprocessedNodes[layer.name].push(nodeData);\n            }\n        }\n        function processNode(layer, nodeData) {\n            var inputTensors = [];\n            var kwargs;\n            for (var _i = 0, nodeData_1 = nodeData; _i < nodeData_1.length; _i++) {\n                var inputData = nodeData_1[_i];\n                var inboundLayerName = inputData[0];\n                var inboundNodeIndex = inputData[1];\n                var inboundTensorIndex = inputData[2];\n                if (inputData.length === 3) {\n                    kwargs = {};\n                }\n                else if (inputData.length === 4) {\n                    kwargs = inputData[3];\n                }\n                else {\n                    throw new errors_1.ValueError(\"Improperly formatted model config for layer \" + JSON.stringify(layer) + \": \" + JSON.stringify(inputData));\n                }\n                if (!(inboundLayerName in createdLayers)) {\n                    addUnprocessedNode(layer, nodeData);\n                    return;\n                }\n                var inboundLayer = createdLayers[inboundLayerName];\n                if (inboundLayer.inboundNodes.length <= inboundNodeIndex) {\n                    addUnprocessedNode(layer, nodeData);\n                    return;\n                }\n                var inboundNode = inboundLayer.inboundNodes[inboundNodeIndex];\n                inputTensors.push(inboundNode.outputTensors[inboundTensorIndex]);\n            }\n            if (inputTensors.length > 0) {\n                layer.apply(generic_utils.singletonOrArray(inputTensors), kwargs);\n            }\n        }\n        function processLayer(layerData) {\n            var layerName = layerData.name;\n            var layer = serialization_1.deserialize(layerData, config.customObjects != null ?\n                config.customObjects :\n                {});\n            createdLayers[layerName] = layer;\n            var inboundNodesData = layerData.inboundNodes;\n            for (var _i = 0, inboundNodesData_1 = inboundNodesData; _i < inboundNodesData_1.length; _i++) {\n                var nodeData = inboundNodesData_1[_i];\n                if (!(nodeData instanceof Array)) {\n                    throw new errors_1.ValueError(\"Corrupted configuration, expected array for nodeData: \" + nodeData);\n                }\n                addUnprocessedNode(layer, nodeData);\n            }\n        }\n        var name = config.name;\n        var layersFromConfig = config.layers;\n        for (var _i = 0, layersFromConfig_1 = layersFromConfig; _i < layersFromConfig_1.length; _i++) {\n            var layerData = layersFromConfig_1[_i];\n            processLayer(layerData);\n        }\n        while (!generic_utils.isObjectEmpty(unprocessedNodes)) {\n            for (var _a = 0, layersFromConfig_2 = layersFromConfig; _a < layersFromConfig_2.length; _a++) {\n                var layerData = layersFromConfig_2[_a];\n                var layer = createdLayers[layerData.name];\n                if (layer.name in unprocessedNodes) {\n                    for (var _b = 0, _c = unprocessedNodes[layer.name]; _b < _c.length; _b++) {\n                        var nodeData = _c[_b];\n                        processNode(layer, nodeData);\n                    }\n                    delete unprocessedNodes[layer.name];\n                }\n            }\n        }\n        var inputTensors = [];\n        var outputTensors = [];\n        var inputLayersFromConfig = config.inputLayers;\n        for (var _d = 0, inputLayersFromConfig_1 = inputLayersFromConfig; _d < inputLayersFromConfig_1.length; _d++) {\n            var layerData = inputLayersFromConfig_1[_d];\n            var layerName = layerData[0];\n            var nodeIndex = layerData[1];\n            var tensorIndex = layerData[2];\n            generic_utils.assert(layerName in createdLayers);\n            var layer = createdLayers[layerName];\n            var layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n            inputTensors.push(layerOutputTensors[tensorIndex]);\n        }\n        var outputLayersFromConfig = config.outputLayers;\n        for (var _e = 0, outputLayersFromConfig_1 = outputLayersFromConfig; _e < outputLayersFromConfig_1.length; _e++) {\n            var layerData = outputLayersFromConfig_1[_e];\n            var layerName = layerData[0];\n            var nodeIndex = layerData[1];\n            var tensorIndex = layerData[2];\n            generic_utils.assert(layerName in createdLayers);\n            var layer = createdLayers[layerName];\n            var layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n            outputTensors.push(layerOutputTensors[tensorIndex]);\n        }\n        return new cls({ inputs: inputTensors, outputs: outputTensors, name: name });\n    };\n    Object.defineProperty(Container.prototype, \"stateful\", {\n        get: function () {\n            if (this._stateful) {\n                throw new errors_1.ValueError('Container instance unexpectedly has _stateful = true. The ' +\n                    'statefulness of a Container is determined by the Layers it ' +\n                    'contains. Its _stateful property must remain the default false.');\n            }\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                if (layer.stateful) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Classes',\n            namespace: 'layers',\n            subclasses: ['Model']\n        })\n    ], Container.prototype, \"getLayer\", null);\n    return Container;\n}(Layer));\nexports.Container = Container;\nfunction getSourceInputs(tensor, layer, nodeIndex) {\n    if (layer == null || (nodeIndex != null && nodeIndex > 0)) {\n        layer = tensor.sourceLayer;\n        nodeIndex = tensor.nodeIndex;\n    }\n    if (layer.inboundNodes.length === 0) {\n        return [tensor];\n    }\n    else {\n        var node = layer.inboundNodes[nodeIndex];\n        if (node.inboundLayers.length === 0) {\n            return node.inputTensors;\n        }\n        else {\n            var sourceTensors = [];\n            for (var i = 0; i < node.inboundLayers.length; i++) {\n                var x = node.inputTensors[i];\n                var layer_2 = node.inboundLayers[i];\n                var nodeIndex_3 = node.nodeIndices[i];\n                var previousSources = getSourceInputs(x, layer_2, nodeIndex_3);\n                for (var _i = 0, previousSources_1 = previousSources; _i < previousSources_1.length; _i++) {\n                    var x_1 = previousSources_1[_i];\n                    if (sourceTensors.indexOf(x_1) === -1) {\n                        sourceTensors.push(x_1);\n                    }\n                }\n            }\n            return sourceTensors;\n        }\n    }\n}\nexports.getSourceInputs = getSourceInputs;\nfunction loadTensor(dtype, shape, value) {\n    var dataType = generic_utils.stringToDType(dtype);\n    return tfjs_core_1.Tensor.make(shape, { values: shape.length === 0 ? value : tfjs_core_1.util.flatten(value) }, dataType);\n}\nfunction preprocessWeightsForLoading(layer, weights, originalKerasVersion, originalBackend) {\n    if (!originalKerasVersion.startsWith('2.')) {\n        throw new errors_1.ValueError('Unsupported Keras version in weights being loaded: ' +\n            originalKerasVersion);\n    }\n    return weights;\n}\nfunction loadWeightsFromNamedTensorMap(weights, layers) {\n    var nameToWeight = {};\n    var totalWeightsCount = 0;\n    for (var _i = 0, layers_1 = layers; _i < layers_1.length; _i++) {\n        var layer = layers_1[_i];\n        for (var _a = 0, _b = layer.weights; _a < _b.length; _a++) {\n            var weight = _b[_a];\n            if (nameToWeight[weight.name] != null) {\n                throw new errors_1.ValueError(\"Duplicate weight name: \" + weight.name);\n            }\n            nameToWeight[weight.name] = weight;\n            totalWeightsCount++;\n        }\n    }\n    var weightValueTuples = [];\n    for (var name_2 in weights) {\n        weightValueTuples.push([nameToWeight[name_2], weights[name_2]]);\n        delete nameToWeight[name_2];\n    }\n    var unsetNames = [];\n    for (var name_3 in nameToWeight) {\n        unsetNames.push(name_3);\n    }\n    if (unsetNames.length > 0) {\n        throw new errors_1.ValueError(unsetNames.length + \" of \" + totalWeightsCount + \" weights are not set: \" +\n            (\"\" + unsetNames));\n    }\n    K.batchSetValue(weightValueTuples);\n}\nexports.loadWeightsFromNamedTensorMap = loadWeightsFromNamedTensorMap;\nfunction loadWeightsFromJson(weightsJSON, layers, skipMismatch) {\n    if (skipMismatch === void 0) { skipMismatch = false; }\n    var originalKerasVersion = weightsJSON['keras_version'];\n    var originalBackend = weightsJSON['backend'];\n    var layerNames = layers.map(function (layer) { return layer.name; });\n    var index = {};\n    for (var _i = 0, layers_2 = layers; _i < layers_2.length; _i++) {\n        var layer = layers_2[_i];\n        if (layer.name != null) {\n            if (index[layer.name] == null) {\n                index[layer.name] = [];\n            }\n            index[layer.name].push(layer);\n        }\n    }\n    var nameToWeights = weightsJSON['weights'];\n    var weightValueTuples = [];\n    for (var k = 0; k < layerNames.length; ++k) {\n        var name_4 = layerNames[k];\n        var layerWeights = nameToWeights[name_4];\n        if (layerWeights == null) {\n            layerWeights = [];\n        }\n        var weightValues = [];\n        for (var n = 0; n < layerWeights.length; ++n) {\n            var weightEntry = layerWeights[n];\n            weightValues.push(new types_1.LayerVariable(loadTensor(weightEntry['dtype'], weightEntry['shape'], weightEntry['value'])));\n        }\n        for (var _a = 0, _b = index[name_4]; _a < _b.length; _a++) {\n            var layer = _b[_a];\n            var symbolicWeights = layer.weights;\n            weightValues = preprocessWeightsForLoading(layer, weightValues, originalKerasVersion, originalBackend);\n            if (weightValues.length !== symbolicWeights.length) {\n                if (skipMismatch) {\n                    console.warn(\"Skipping loading of weights of layer \" + layer.name + \" \" +\n                        (\"due to mismatch in number of weights: (\" + weightValues.length + \" \") +\n                        (\"vs \" + symbolicWeights.length + \").\"));\n                }\n                else {\n                    throw new errors_1.ValueError(\"Layer #\" + k + \" (named \\\"\" + layer.name + \"\\\") expects \" +\n                        (symbolicWeights.length + \" weight(s), but the saved weights \") +\n                        (\"have \" + weightValues.length + \" element(s).\"));\n                }\n            }\n            for (var i = 0; i < weightValues.length; ++i) {\n                if (skipMismatch) {\n                    if (!tfjs_core_1.util.arraysEqual(symbolicWeights[i].shape, weightValues[i].shape)) {\n                        console.warn(\"Skipping loading of weights for layer \" + layer.name + \" due \" +\n                            (\"to mismatch in shape (\" + symbolicWeights[i].shape + \" vs \") +\n                            (weightValues[i].shape + \")\"));\n                        continue;\n                    }\n                }\n                weightValueTuples.push([symbolicWeights[i], weightValues[i].read()]);\n            }\n        }\n    }\n    K.batchSetValue(weightValueTuples);\n}\nexports.loadWeightsFromJson = loadWeightsFromJson;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gradients_1 = __webpack_require__(74);\nvar tracking_1 = __webpack_require__(129);\nexports.tidy = tracking_1.Tracking.tidy;\nexports.keep = tracking_1.Tracking.keep;\nexports.dispose = tracking_1.Tracking.dispose;\nexports.time = tracking_1.Tracking.time;\nexports.grad = gradients_1.Gradients.grad;\nexports.valueAndGrad = gradients_1.Gradients.valueAndGrad;\nexports.grads = gradients_1.Gradients.grads;\nexports.valueAndGrads = gradients_1.Gradients.valueAndGrads;\nexports.variableGrads = gradients_1.Gradients.variableGrads;\nexports.customGrad = gradients_1.Gradients.customGrad;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar common_1 = __webpack_require__(26);\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar _nextUniqueTensorId = 0;\nvar SymbolicTensor = (function () {\n    function SymbolicTensor(dtype, shape, sourceLayer, inputs, callArgs, name, outputTensorIndex) {\n        this.dtype = dtype;\n        this.shape = shape;\n        this.sourceLayer = sourceLayer;\n        this.inputs = inputs;\n        this.callArgs = callArgs;\n        this.outputTensorIndex = outputTensorIndex;\n        this.id = _nextUniqueTensorId++;\n        if (name != null) {\n            this.originalName = common_1.getScopedTensorName(name);\n            this.name = common_1.getUniqueTensorName(this.originalName);\n        }\n    }\n    SymbolicTensor = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', 'subheading': 'Classes' })\n    ], SymbolicTensor);\n    return SymbolicTensor;\n}());\nexports.SymbolicTensor = SymbolicTensor;\nvar ConcreteTensor = (function () {\n    function ConcreteTensor(val, name) {\n        this.dtype = DType.float32;\n        this.shape = val.shape;\n        this.val = val;\n        this.id = _nextUniqueTensorId++;\n        if (name != null) {\n            this.originalName = common_1.getScopedTensorName(name);\n            this.name = common_1.getUniqueTensorName(this.originalName);\n        }\n    }\n    ConcreteTensor.prototype.value = function () {\n        return this.val;\n    };\n    return ConcreteTensor;\n}());\nexports.ConcreteTensor = ConcreteTensor;\nfunction checkShapesMatch(x, y) {\n    if (x.shape.toString() !== y.shape.toString()) {\n        throw new Error('Shape mismatch: ' + JSON.stringify(x.shape) + ' vs. ' +\n            JSON.stringify(y.shape));\n    }\n}\nfunction getValueTensor(val) {\n    return val instanceof ConcreteTensor ? val.value() : val;\n}\nvar DEFAULT_VARIABLE_NAME_PREFIX = 'Variable';\nvar LayerVariable = (function () {\n    function LayerVariable(val, dtype, name, trainable, constraint) {\n        if (dtype === void 0) { dtype = DType.float32; }\n        if (name === void 0) { name = DEFAULT_VARIABLE_NAME_PREFIX; }\n        if (trainable === void 0) { trainable = true; }\n        if (constraint === void 0) { constraint = null; }\n        this.dtype = dtype == null ? DType.float32 : dtype;\n        this.shape = val.shape;\n        this.id = _nextUniqueTensorId++;\n        name = name == null ? DEFAULT_VARIABLE_NAME_PREFIX : name;\n        this.originalName = common_1.getScopedTensorName(name);\n        this.name = common_1.getUniqueTensorName(this.originalName);\n        this.trainable = trainable;\n        this.constraint = constraint;\n        this.val =\n            tfjs_core_1.variable(getValueTensor(val), this.trainable, this.name, this.dtype);\n    }\n    LayerVariable.prototype.read = function () {\n        return this.val;\n    };\n    LayerVariable.prototype.write = function (newVal) {\n        checkShapesMatch(this.val, newVal);\n        this.val.assign(getValueTensor(newVal));\n        if (this.constraint != null) {\n            this.val.assign(this.constraint.apply(this.val));\n        }\n        return this;\n    };\n    return LayerVariable;\n}());\nexports.LayerVariable = LayerVariable;\nvar Serializable = (function () {\n    function Serializable() {\n    }\n    return Serializable;\n}());\nexports.Serializable = Serializable;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nfunction axesAreInnerMostDims(axes, rank) {\n    for (var i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.axesAreInnerMostDims = axesAreInnerMostDims;\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    var rank = outputLoc.length + reduceLoc.length;\n    var loc = [];\n    var outIdx = 0;\n    var reduceIdx = 0;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexports.combineLocations = combineLocations;\nfunction computeOutAndReduceShapes(aShape, axes) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    var reduceShape = axes.map(function (dim) { return aShape[dim]; });\n    return [outShape, reduceShape];\n}\nexports.computeOutAndReduceShapes = computeOutAndReduceShapes;\nfunction expandShapeToKeepDim(shape, axes) {\n    var reduceSubShape = axes.map(function (x) { return 1; });\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexports.expandShapeToKeepDim = expandShapeToKeepDim;\nfunction parseAxisParam(axis, shape) {\n    var rank = shape.length;\n    axis = axis == null ? shape.map(function (s, i) { return i; }) : [].concat(axis);\n    util.assert(axis.every(function (ax) { return ax >= -rank && ax < rank; }), \"All values in axis param must be in range [-\" + rank + \", \" + rank + \") but \" +\n        (\"got axis \" + axis));\n    util.assert(axis.every(function (ax) { return util.isInt(ax); }), \"All values in axis param must be integers but \" +\n        (\"got axis \" + axis));\n    return axis.map(function (a) { return a < 0 ? rank + a : a; });\n}\nexports.parseAxisParam = parseAxisParam;\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    util.assert(axesAreInnerMostDims(axes, rank), msg + \" supports only inner-most axes for now. \" +\n        (\"Got axes \" + axes + \" and rank-\" + rank + \" input.\"));\n}\nexports.assertAxesAreInnerMostDims = assertAxesAreInnerMostDims;\nfunction getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    var result = [];\n    for (var i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(function (axis) { return result.push(axis); });\n    return result;\n}\nexports.getAxesPermutation = getAxesPermutation;\nfunction getUndoAxesPermutation(axes) {\n    return axes.map(function (axis, i) { return [i, axis]; })\n        .sort(function (a, b) { return a[1] - b[1]; })\n        .map(function (x) { return x[0]; });\n}\nexports.getUndoAxesPermutation = getUndoAxesPermutation;\nfunction getInnerMostAxes(numAxes, rank) {\n    var res = [];\n    for (var i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\nexports.getInnerMostAxes = getInnerMostAxes;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar ops = __webpack_require__(7);\nvar tensor_util = __webpack_require__(57);\nvar util = __webpack_require__(0);\nvar TensorBuffer = (function () {\n    function TensorBuffer(shape, dtype, values) {\n        this.dtype = dtype;\n        if (values != null) {\n            var n = values.length;\n            var size = util.sizeFromShape(shape);\n            util.assert(n === size, \"Length of values '\" + n + \"' does not match the size \" +\n                (\"inferred by the shape '\" + size + \"'\"));\n        }\n        this.shape = shape.slice();\n        this.values =\n            values || util.getTypedArrayFromDType(dtype, util.sizeFromShape(shape));\n        this.strides = computeStrides(shape);\n        this.size = util.sizeFromShape(shape);\n    }\n    TensorBuffer.prototype.set = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, \"The number of provided coordinates (\" + locs.length + \") must \" +\n            (\"match the rank (\" + this.rank + \")\"));\n        var index = this.locToIndex(locs);\n        this.values[index] = value;\n    };\n    TensorBuffer.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    };\n    TensorBuffer.prototype.locToIndex = function (locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    };\n    TensorBuffer.prototype.indexToLoc = function (index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        var locs = new Array(this.shape.length);\n        for (var i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    };\n    Object.defineProperty(TensorBuffer.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TensorBuffer.prototype.toTensor = function () {\n        return Tensor.make(this.shape, { values: this.values }, this.dtype);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"set\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"get\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"toTensor\", null);\n    TensorBuffer = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], TensorBuffer);\n    return TensorBuffer;\n}());\nexports.TensorBuffer = TensorBuffer;\nvar Tensor = (function () {\n    function Tensor(shape, dtype, values, dataId) {\n        this.isDisposed = false;\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            util.assert(this.size === values.length, \"Constructing tensor of shape (\" + this.size + \") should match the \" +\n                (\"length of values (\" + values.length + \")\"));\n        }\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.strides = computeStrides(shape);\n        this.dataId = dataId != null ? dataId : {};\n        this.id = Tensor_1.nextId++;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n        environment_1.ENV.engine.registerTensor(this);\n        if (values != null) {\n            environment_1.ENV.engine.write(this.dataId, values);\n        }\n    }\n    Tensor_1 = Tensor;\n    Tensor.make = function (shape, data, dtype) {\n        return new Tensor_1(shape, dtype, data.values, data.dataId);\n    };\n    Tensor.prototype.flatten = function () {\n        this.throwIfDisposed();\n        return this.as1D();\n    };\n    Tensor.prototype.asScalar = function () {\n        this.throwIfDisposed();\n        util.assert(this.size === 1, 'The array must have only 1 element.');\n        return this.reshape([]);\n    };\n    Tensor.prototype.as1D = function () {\n        this.throwIfDisposed();\n        return this.reshape([this.size]);\n    };\n    Tensor.prototype.as2D = function (rows, columns) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns]);\n    };\n    Tensor.prototype.as3D = function (rows, columns, depth) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth]);\n    };\n    Tensor.prototype.as4D = function (rows, columns, depth, depth2) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2]);\n    };\n    Tensor.prototype.asType = function (dtype) {\n        this.throwIfDisposed();\n        return ops.cast(this, dtype);\n    };\n    Object.defineProperty(Tensor.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tensor.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        util.assert(locs.length === this.rank, 'Number of coordinates in get() must match the rank of the tensor');\n        this.throwIfDisposed();\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.dataSync()[index];\n    };\n    Tensor.prototype.buffer = function () {\n        return ops.buffer(this.shape, this.dtype, this.dataSync());\n    };\n    Tensor.prototype.data = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.throwIfDisposed();\n                return [2, environment_1.ENV.engine.read(this.dataId)];\n            });\n        });\n    };\n    Tensor.prototype.dataSync = function () {\n        this.throwIfDisposed();\n        return environment_1.ENV.engine.readSync(this.dataId);\n    };\n    Tensor.prototype.dispose = function () {\n        if (this.isDisposed) {\n            return;\n        }\n        this.isDisposed = true;\n        environment_1.ENV.engine.disposeTensor(this);\n    };\n    Tensor.prototype.throwIfDisposed = function () {\n        if (this.isDisposed) {\n            throw new Error(\"Tensor is disposed.\");\n        }\n    };\n    Tensor.prototype.toFloat = function () {\n        return this.asType('float32');\n    };\n    Tensor.prototype.toInt = function () {\n        return this.asType('int32');\n    };\n    Tensor.prototype.toBool = function () {\n        return this.asType('bool');\n    };\n    Tensor.prototype.print = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        return ops.print(this, verbose);\n    };\n    Tensor.prototype.reshape = function (newShape) {\n        this.throwIfDisposed();\n        return ops.reshape(this, newShape);\n    };\n    Tensor.prototype.reshapeAs = function (x) {\n        this.throwIfDisposed();\n        return this.reshape(x.shape);\n    };\n    Tensor.prototype.expandDims = function (axis) {\n        if (axis === void 0) { axis = 0; }\n        return ops.expandDims(this, axis);\n    };\n    Tensor.prototype.squeeze = function (axis) {\n        this.throwIfDisposed();\n        return ops.squeeze(this, axis);\n    };\n    Tensor.prototype.clone = function () {\n        this.throwIfDisposed();\n        return ops.clone(this);\n    };\n    Tensor.prototype.toString = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        return tensor_util.tensorToString(this, verbose);\n    };\n    Tensor.prototype.tile = function (reps) {\n        this.throwIfDisposed();\n        return ops.tile(this, reps);\n    };\n    Tensor.prototype.gather = function (indices, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return ops.gather(this, indices, axis);\n    };\n    Tensor.prototype.matMul = function (b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        this.throwIfDisposed();\n        return ops.matMul(this, b, transposeA, transposeB);\n    };\n    Tensor.prototype.norm = function (ord, axis, keepDims) {\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.norm(this, ord, axis, keepDims);\n    };\n    Tensor.prototype.slice = function (begin, size) {\n        this.throwIfDisposed();\n        return ops.slice(this, begin, size);\n    };\n    Tensor.prototype.reverse = function (axis) {\n        this.throwIfDisposed();\n        return ops.reverse(this, axis);\n    };\n    Tensor.prototype.concat = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return ops.concat([this, x], axis);\n    };\n    Tensor.prototype.stack = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        return ops.stack([this, x], axis);\n    };\n    Tensor.prototype.pad = function (paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        return ops.pad(this, paddings, constantValue);\n    };\n    Tensor.prototype.batchNormalization = function (mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        this.throwIfDisposed();\n        return ops.batchNormalization(this, mean, variance, varianceEpsilon, scale, offset);\n    };\n    Tensor.prototype.logSumExp = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.logSumExp(this, axis, keepDims);\n    };\n    Tensor.prototype.sum = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.sum(this, axis, keepDims);\n    };\n    Tensor.prototype.mean = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.mean(this, axis, keepDims);\n    };\n    Tensor.prototype.min = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.min(this, axis, keepDims);\n    };\n    Tensor.prototype.max = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.max(this, axis, keepDims);\n    };\n    Tensor.prototype.argMin = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return ops.argMin(this, axis);\n    };\n    Tensor.prototype.argMax = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return ops.argMax(this, axis);\n    };\n    Tensor.prototype.cast = function (dtype) {\n        this.throwIfDisposed();\n        return ops.cast(this, dtype);\n    };\n    Tensor.prototype.add = function (x) {\n        this.throwIfDisposed();\n        return ops.add(this, x);\n    };\n    Tensor.prototype.addStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.addStrict(this, x);\n    };\n    Tensor.prototype.sub = function (x) {\n        this.throwIfDisposed();\n        return ops.sub(this, x);\n    };\n    Tensor.prototype.subStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.subStrict(this, x);\n    };\n    Tensor.prototype.pow = function (exp) {\n        this.throwIfDisposed();\n        return ops.pow(this, exp);\n    };\n    Tensor.prototype.powStrict = function (exp) {\n        this.throwIfDisposed();\n        return ops.powStrict(this, exp);\n    };\n    Tensor.prototype.mul = function (x) {\n        this.throwIfDisposed();\n        return ops.mul(this, x);\n    };\n    Tensor.prototype.mulStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.mulStrict(this, x);\n    };\n    Tensor.prototype.div = function (x) {\n        this.throwIfDisposed();\n        return ops.div(this, x);\n    };\n    Tensor.prototype.divStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.divStrict(this, x);\n    };\n    Tensor.prototype.minimum = function (x) {\n        this.throwIfDisposed();\n        return ops.minimum(this, x);\n    };\n    Tensor.prototype.minimumStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.minimumStrict(this, x);\n    };\n    Tensor.prototype.maximum = function (x) {\n        this.throwIfDisposed();\n        return ops.maximum(this, x);\n    };\n    Tensor.prototype.maximumStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.maximumStrict(this, x);\n    };\n    Tensor.prototype.mod = function (x) {\n        this.throwIfDisposed();\n        return ops.mod(this, x);\n    };\n    Tensor.prototype.modStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.modStrict(this, x);\n    };\n    Tensor.prototype.squaredDifference = function (x) {\n        this.throwIfDisposed();\n        return ops.squaredDifference(this, x);\n    };\n    Tensor.prototype.squaredDifferenceStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.squaredDifferenceStrict(this, x);\n    };\n    Tensor.prototype.transpose = function (perm) {\n        this.throwIfDisposed();\n        return ops.transpose(this, perm);\n    };\n    Tensor.prototype.notEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.notEqual(this, x);\n    };\n    Tensor.prototype.notEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.notEqualStrict(this, x);\n    };\n    Tensor.prototype.less = function (x) {\n        this.throwIfDisposed();\n        return ops.less(this, x);\n    };\n    Tensor.prototype.lessStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.lessStrict(this, x);\n    };\n    Tensor.prototype.equal = function (x) {\n        this.throwIfDisposed();\n        return ops.equal(this, x);\n    };\n    Tensor.prototype.equalStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.equalStrict(this, x);\n    };\n    Tensor.prototype.lessEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.lessEqual(this, x);\n    };\n    Tensor.prototype.lessEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.lessEqualStrict(this, x);\n    };\n    Tensor.prototype.greater = function (x) {\n        this.throwIfDisposed();\n        return ops.greater(this, x);\n    };\n    Tensor.prototype.greaterStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterStrict(this, x);\n    };\n    Tensor.prototype.greaterEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterEqual(this, x);\n    };\n    Tensor.prototype.greaterEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterEqualStrict(this, x);\n    };\n    Tensor.prototype.logicalAnd = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalAnd(this, x);\n    };\n    Tensor.prototype.logicalOr = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalOr(this, x);\n    };\n    Tensor.prototype.logicalNot = function () {\n        this.throwIfDisposed();\n        return ops.logicalNot(this);\n    };\n    Tensor.prototype.logicalXor = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalXor(this, x);\n    };\n    Tensor.prototype.where = function (condition, x) {\n        this.throwIfDisposed();\n        return ops.where(condition, this, x);\n    };\n    Tensor.prototype.neg = function () {\n        this.throwIfDisposed();\n        return ops.neg(this);\n    };\n    Tensor.prototype.ceil = function () {\n        this.throwIfDisposed();\n        return ops.ceil(this);\n    };\n    Tensor.prototype.floor = function () {\n        this.throwIfDisposed();\n        return ops.floor(this);\n    };\n    Tensor.prototype.sign = function () {\n        this.throwIfDisposed();\n        return ops.sign(this);\n    };\n    Tensor.prototype.exp = function () {\n        this.throwIfDisposed();\n        return ops.exp(this);\n    };\n    Tensor.prototype.expm1 = function () {\n        this.throwIfDisposed();\n        return ops.expm1(this);\n    };\n    Tensor.prototype.log = function () {\n        this.throwIfDisposed();\n        return ops.log(this);\n    };\n    Tensor.prototype.log1p = function () {\n        this.throwIfDisposed();\n        return ops.log1p(this);\n    };\n    Tensor.prototype.sqrt = function () {\n        this.throwIfDisposed();\n        return ops.sqrt(this);\n    };\n    Tensor.prototype.rsqrt = function () {\n        this.throwIfDisposed();\n        return ops.rsqrt(this);\n    };\n    Tensor.prototype.square = function () {\n        this.throwIfDisposed();\n        return ops.square(this);\n    };\n    Tensor.prototype.reciprocal = function () {\n        this.throwIfDisposed();\n        return ops.reciprocal(this);\n    };\n    Tensor.prototype.abs = function () {\n        this.throwIfDisposed();\n        return ops.abs(this);\n    };\n    Tensor.prototype.clipByValue = function (min, max) {\n        this.throwIfDisposed();\n        return ops.clipByValue(this, min, max);\n    };\n    Tensor.prototype.relu = function () {\n        this.throwIfDisposed();\n        return ops.relu(this);\n    };\n    Tensor.prototype.elu = function () {\n        this.throwIfDisposed();\n        return ops.elu(this);\n    };\n    Tensor.prototype.selu = function () {\n        this.throwIfDisposed();\n        return ops.selu(this);\n    };\n    Tensor.prototype.leakyRelu = function (alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        this.throwIfDisposed();\n        return ops.leakyRelu(this, alpha);\n    };\n    Tensor.prototype.prelu = function (alpha) {\n        this.throwIfDisposed();\n        return ops.prelu(this, alpha);\n    };\n    Tensor.prototype.sigmoid = function () {\n        this.throwIfDisposed();\n        return ops.sigmoid(this);\n    };\n    Tensor.prototype.logSigmoid = function () {\n        this.throwIfDisposed();\n        return ops.logSigmoid(this);\n    };\n    Tensor.prototype.softplus = function () {\n        this.throwIfDisposed();\n        return ops.softplus(this);\n    };\n    Tensor.prototype.sin = function () {\n        this.throwIfDisposed();\n        return ops.sin(this);\n    };\n    Tensor.prototype.cos = function () {\n        this.throwIfDisposed();\n        return ops.cos(this);\n    };\n    Tensor.prototype.tan = function () {\n        this.throwIfDisposed();\n        return ops.tan(this);\n    };\n    Tensor.prototype.asin = function () {\n        this.throwIfDisposed();\n        return ops.asin(this);\n    };\n    Tensor.prototype.acos = function () {\n        this.throwIfDisposed();\n        return ops.acos(this);\n    };\n    Tensor.prototype.atan = function () {\n        this.throwIfDisposed();\n        return ops.atan(this);\n    };\n    Tensor.prototype.sinh = function () {\n        this.throwIfDisposed();\n        return ops.sinh(this);\n    };\n    Tensor.prototype.cosh = function () {\n        this.throwIfDisposed();\n        return ops.cosh(this);\n    };\n    Tensor.prototype.tanh = function () {\n        this.throwIfDisposed();\n        return ops.tanh(this);\n    };\n    Tensor.prototype.asinh = function () {\n        this.throwIfDisposed();\n        return ops.asinh(this);\n    };\n    Tensor.prototype.acosh = function () {\n        this.throwIfDisposed();\n        return ops.acosh(this);\n    };\n    Tensor.prototype.atanh = function () {\n        this.throwIfDisposed();\n        return ops.atanh(this);\n    };\n    Tensor.prototype.erf = function () {\n        this.throwIfDisposed();\n        return ops.erf(this);\n    };\n    Tensor.prototype.step = function (alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        this.throwIfDisposed();\n        return ops.step(this, alpha);\n    };\n    Tensor.prototype.softmax = function (dim) {\n        if (dim === void 0) { dim = -1; }\n        this.throwIfDisposed();\n        return ops.softmax(this, dim);\n    };\n    Tensor.prototype.resizeBilinear = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return ops.image.resizeBilinear(this, newShape2D, alignCorners);\n    };\n    Tensor.prototype.resizeNearestNeighbor = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return ops.image.resizeNearestNeighbor(this, newShape2D, alignCorners);\n    };\n    Tensor.prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\n        if (dilation === void 0) { dilation = 1; }\n        this.throwIfDisposed();\n        return ops.conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n    };\n    Tensor.prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return ops.conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.conv2dTranspose = function (filter, outputShape, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.depthwiseConv2D = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return ops.depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.avgPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.maxPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.maxPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.localResponseNormalization = function (radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        return ops.localResponseNormalization(this, radius, bias, alpha, beta);\n    };\n    Tensor.prototype.variable = function (trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        this.throwIfDisposed();\n        return Variable.variable(this, trainable, name, dtype);\n    };\n    Tensor.nextId = 0;\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"flatten\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"asScalar\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as1D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as2D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as3D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as4D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"asType\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"buffer\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"data\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"dataSync\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"dispose\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toFloat\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toInt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toBool\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"print\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"reshape\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"reshapeAs\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"expandDims\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"squeeze\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"clone\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toString\", null);\n    Tensor = Tensor_1 = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor);\n    return Tensor;\n    var Tensor_1;\n}());\nexports.Tensor = Tensor;\nvar Variable = (function (_super) {\n    __extends(Variable, _super);\n    function Variable(initialValue, trainable, name) {\n        if (trainable === void 0) { trainable = true; }\n        var _this = _super.call(this, initialValue.shape, initialValue.dtype, null, initialValue.dataId) || this;\n        _this.trainable = trainable;\n        _this.name = name;\n        if (_this.name == null) {\n            _this.name = Variable_1.nextVarId.toString();\n            Variable_1.nextVarId++;\n        }\n        environment_1.ENV.engine.registerVariable(_this);\n        return _this;\n    }\n    Variable_1 = Variable;\n    Variable.variable = function (initialValue, trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.asType(dtype);\n        }\n        return new Variable_1(initialValue, trainable, name);\n    };\n    Variable.prototype.assign = function (newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(\"dtype of the new value (\" + newValue.dtype + \") and \" +\n                (\"previous value (\" + this.dtype + \") must match\"));\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(\"shape of the new value (\" + newValue.shape + \") and \" +\n                (\"previous value (\" + this.shape + \") must match\"));\n        }\n        environment_1.ENV.engine.disposeTensor(this);\n        this.dataId = newValue.dataId;\n        environment_1.ENV.engine.registerTensor(this);\n    };\n    Variable.nextVarId = 0;\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Variable.prototype, \"assign\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], Variable, \"variable\", null);\n    Variable = Variable_1 = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Variable);\n    return Variable;\n    var Variable_1;\n}(Tensor));\nexports.Variable = Variable;\nvar variable = Variable.variable;\nexports.variable = variable;\nfunction computeStrides(shape) {\n    var rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    var strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (var i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar broadcast_util = __webpack_require__(16);\nvar tex_util = __webpack_require__(25);\nfunction makeShader(inputsInfo, outputShape, userCode, broadcast) {\n    var sampleSnippet = getSampleSnippet();\n    var setOutputSnippet = getSetOutputSnippet();\n    var inputPrefixSnippet = inputsInfo.map(function (x) { return \"uniform sampler2D \" + x.name + \";\"; }).join('\\n');\n    var inputSamplingSnippet = inputsInfo.map(function (x) { return getInputSamplingSnippet(x, outputShape, broadcast); })\n        .join('\\n');\n    var outTexShape = outputShape.texShape;\n    var outputSamplingSnippet = getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    var source = [\n        SHADER_PREFIX, sampleSnippet, setOutputSnippet, inputPrefixSnippet,\n        outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nexports.makeShader = makeShader;\nfunction getSampleSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SAMPLE_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET;\n}\nfunction getSetOutputSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SETOUTPUT_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        default:\n            throw new Error(shape.length + \"-D input sampling\" +\n                \" is not yet supported\");\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, broadcast) {\n    var res = getSamplerFlat(inInfo);\n    res += getSamplerFromInInfo(inInfo);\n    if (broadcast ||\n        util.arraysEqual(inInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape)) {\n        res += getSamplerAtOutputCoords(inInfo, outShapeInfo, broadcast);\n    }\n    return res;\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        default:\n            throw new Error(outShape.length + \"-D output sampling is not yet supported\");\n    }\n}\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 UVfrom1D(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 UVfrom2D(int texNumR, int texNumC, int numC, int row, int col) {\\n  int index = row * numC + col;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 UVfrom3D(int texNumR, int texNumC, int stride0,\\n    int stride1, int row, int col, int depth) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_4D_SNIPPET = \"\\nvec2 UVfrom4D(int texNumR, int texNumC, int stride0,\\n    int stride1, int stride2, int row, int col, int depth,\\n    int depth2) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET = \"\\n  uniform float NaN;\\n\\n  const vec4 floatDeltas = vec4(\\n      1.0,\\n      1.0 / 255.0,\\n      1.0 / (255.0 * 255.0),\\n      1.0 / (255.0 * 255.0 * 255.0)\\n  );\\n  const float minValue = \" + tex_util.FLOAT_MIN + \".0;\\n  const float maxValue = \" + tex_util.FLOAT_MAX + \".0;\\n  const float range = (maxValue - minValue) / 255.0;\\n  const vec2 dotRange = vec2(1.0, range);\\n\\n  float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n    vec4 sampleValue = texture2D(textureSampler, uv);\\n    if (all(equal(sampleValue, vec4(\" + tex_util.BYTE_NAN_VALUE + \")))) {\\n      return NaN;\\n    }\\n\\n    vec4 encValue = floor(sampleValue * 255.0 + 0.5);\\n    float decodedValue = dot(encValue, floatDeltas);\\n    return dot(vec2(minValue, decodedValue), dotRange);\\n  }\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  const vec4 floatPowers = vec4(\\n    1.0,\\n    255.0,\\n    255.0 * 255.0,\\n    255.0 * 255.0 * 255.0\\n  );\\n  const vec2 recipRange = vec2(1.0/range);\\n  const vec2 recipRange255 = vec2(1.0/(maxValue - minValue));\\n\\n  void setOutput(float decodedValue) {\\n    if (isNaN(decodedValue)) {\\n      gl_FragColor = vec4(\" + tex_util.BYTE_NAN_VALUE + \");\\n      return;\\n    }\\n\\n    float a = dot(vec2(decodedValue, -minValue), recipRange);\\n    float b = fract(a) * 255.0;\\n    float c = fract(b) * 255.0;\\n    float d = fract(c) * 255.0;\\n    gl_FragColor = floor(vec4(a, b, c, d)) / 255.0;\\n\\n    // TODO(dsmilkov): Version above gets better accuracy but probably slower\\n    // than the version below. Benchmark to determine if the accuracy is worth\\n    // the cost.\\n\\n    // float normValue = dot(vec2(decodedValue, -minValue), recipRange255);\\n    // vec4 f = normValue * floatPowers;\\n    // gl_FragColor = floor(fract(f) * 255.0) / 255.0;\\n  }\\n\";\nvar FLOAT_TEXTURE_SAMPLE_SNIPPET = \"\\n  float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n    return texture2D(textureSampler, uv).r;\\n  }\\n\";\nvar FLOAT_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  void setOutput(float val) {\\n    gl_FragColor = vec4(val, 0, 0, 0);\\n  }\\n\";\nvar SHADER_PREFIX = \"\\n  precision highp float;\\n  precision highp int;\\n  varying vec2 resultUV;\\n  const vec2 halfCR = vec2(0.5, 0.5);\\n\\n  bool isNaN(float val) {\\n    float v1 = val * val;\\n    float v2 = val * val;\\n    return v1 == v2 ? false : true;\\n  }\\n\\n  bool hasNaN(vec4 values) {\\n    vec4 v1 = values * values;\\n    vec4 v2 = values * values;\\n    return any(notEqual(v1, v2));\\n  }\\n\\n  float getNaN(vec4 values) {\\n    return dot(vec4(1), values);\\n  }\\n\\n  int round(float value) {\\n    return int(floor(value + 0.5));\\n  }\\n\\n  int imod(int x, int y) {\\n    return x - y * (x / y);\\n  }\\n\\n  const vec2 randomConst = vec2(\\n    23.14069263277926, // e^pi (Gelfond's constant)\\n     2.665144142690225 // 2^sqrt(2) (Gelfond\\u2013Schneider constant)\\n  );\\n\\n  float random(float seed) {\\n      return fract(cos(dot(resultUV * seed, randomConst)) * 12345.6789);\\n  }\\n\\n  \" + SAMPLE_1D_SNIPPET + \"\\n  \" + SAMPLE_2D_SNIPPET + \"\\n  \" + SAMPLE_3D_SNIPPET + \"\\n  \" + SAMPLE_4D_SNIPPET + \"\\n\";\nfunction getOutputScalarCoords() {\n    return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + texShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (texShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + texShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      return resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n    }\\n  \";\n}\nfunction getOutput3DCoords(shape, texShape) {\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n      int c = index / \" + stride1 + \";\\n      int d = index - c * \" + stride1 + \";\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\nfunction getOutput4DCoords(shape, texShape) {\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n\\n      int c = index / \" + stride1 + \";\\n      index -= c * \" + stride1 + \";\\n\\n      int d = index / \" + stride2 + \";\\n      int d2 = index - d * \" + stride2 + \";\\n\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      }\\n    \";\n    }\n    if (shape[1] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n    }\n    if (shape[0] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n    }\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + shape[1] + \";\\n      int c = index - r * \" + shape[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"() {\\n      return sampleTexture(\" + texName + \", halfCR);\\n    }\\n  \";\n}\nfunction getSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"(int index) {\\n      return \" + funcName + \"Flat(index);\\n    }\\n  \";\n}\nfunction getSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texNumR === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2((float(index) + 0.5) / \" + texNumC + \".0, 0.5);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n  float \" + funcName + \"(int row, int col) {\\n    vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n    return sampleTexture(\" + texName + \", uv);\\n  }\\n\";\n}\nfunction getSampler3D(inputInfo) {\n    var texShape = inputInfo.shapeInfo.texShape;\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col', 'depth'];\n        return \"\\n        \" + getSamplerFromInInfo(newInputInfo) + \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          int texR = row;\\n          int texC = col * \" + stride1 + \" + depth;\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sampleTexture(\" + texName + \", uv);\\n        }\\n      \";\n    }\n    if (texNumC === stride1) {\n        return \"\\n    float \" + funcName + \"(int row, int col, int depth) {\\n      int texR = row * \" + shape[1] + \" + col;\\n      int texC = depth;\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom3D(\\n            \" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \", row, col, depth);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n  \";\n}\nfunction getSampler4D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row;\\n        int texC = col * \" + stride1 + \" + depth * \" + stride2 + \" + depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride2) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row * \" + shape[1] * shape[2] + \" + col * \" + shape[2] + \" + depth;\\n        int texC = depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n      vec2 uv = UVfrom4D(\" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \",\\n          \" + stride2 + \", row, col, depth, depth2);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSamplerFlat(inputInfo) {\n    var texName = inputInfo.name;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1) + 'Flat';\n    var tNumR = texShape[0];\n    var tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        return sampleTexture(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    if (tNumC === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + tNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2((float(index) + 0.5) / \" + tNumC + \".0, 0.5);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int index) {\\n      vec2 uv = UVfrom1D(\" + tNumR + \", \" + tNumC + \", index);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName) {\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var type = 'int';\n    if (outRank === 2) {\n        type = 'ivec2';\n    }\n    else if (outRank === 3) {\n        type = 'ivec3';\n    }\n    else if (outRank === 4) {\n        type = 'ivec4';\n    }\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords[\" + (d + rankDiff) + \"] = 0;\"; }).join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords[\" + (i + rankDiff) + \"]\"; })\n            .join(', ');\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      return get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n    }\\n  \";\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo, supportsBroadcasting) {\n    var inTexShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var doBroadcast = supportsBroadcasting && ((outRank > inRank) || broadcastDims.length > 0);\n    var broadcastOverOuter = broadcast_util.broadcastDimsAreOuter(broadcastDims);\n    if (doBroadcast && !broadcastOverOuter) {\n        return getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName);\n    }\n    var outTexShape = outShapeInfo.texShape;\n    if (util.arraysEqual(inTexShape, outTexShape)) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sampleTexture(\" + texName + \", resultUV);\\n      }\\n    \";\n    }\n    var inSize = util.sizeFromShape(inTexShape);\n    var broadcastSnippet = '';\n    if (doBroadcast && broadcastOverOuter) {\n        broadcastSnippet = \"\\n        int mainPart = index / \" + inSize + \";\\n        index -= mainPart * \" + inSize + \";\\n      \";\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + outTexShape[0] + \", \" + outTexShape[1] + \"));\\n      int index = resTexRC.x * \" + outTexShape[1] + \" + resTexRC.y;\\n      \" + broadcastSnippet + \"\\n      int texR = index / \" + inTexShape[1] + \";\\n      int texC = index - texR * \" + inTexShape[1] + \";\\n      vec2 uv = (vec2(texC, texR) + halfCR) /\\n                 vec2(\" + inTexShape[1] + \".0, \" + inTexShape[0] + \".0);\\n\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else {\n        throw Error(\"GPU for rank \" + rank + \" is not yet supported\");\n    }\n}\nexports.getCoordsDataType = getCoordsDataType;\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(function (d) { return params[d]; }).join(', ');\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getBroadcastDims(inShape, outShape) {\n    var inRank = inShape.length;\n    var dims = [];\n    for (var i = 0; i < inRank; i++) {\n        var dim = inRank - 1 - i;\n        var a = inShape[dim] || 1;\n        var b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\nexports.getBroadcastDims = getBroadcastDims;\nfunction getReductionAxes(inShape, outShape) {\n    var result = [];\n    for (var i = 0; i < outShape.length; i++) {\n        var inDim = inShape[inShape.length - i - 1];\n        var outAxis = outShape.length - i - 1;\n        var outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nexports.getReductionAxes = getReductionAxes;\nfunction broadcastDimsAreOuter(dims) {\n    for (var i = 0; i < dims.length; i++) {\n        if (dims[i] !== i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.broadcastDimsAreOuter = broadcastDimsAreOuter;\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    var result = [];\n    var errMsg = \"Operands could not be broadcast together with shapes \" +\n        (shapeA + \" and \" + shapeB + \".\");\n    var l = Math.max(shapeA.length, shapeB.length);\n    for (var i = 0; i < l; i++) {\n        var a = shapeA[shapeA.length - i - 1] || 1;\n        var b = shapeB[shapeB.length - i - 1] || 1;\n        if (a > 1 && b > 1 && a !== b) {\n            throw Error(errMsg);\n        }\n        result.unshift(Math.max(a, b));\n    }\n    return result;\n}\nexports.assertAndGetBroadcastShape = assertAndGetBroadcastShape;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = __webpack_require__(3);\nvar tfjs_core_1 = __webpack_require__(3);\nvar errors_1 = __webpack_require__(4);\nfunction isInteger(x) {\n    return x === parseInt(x.toString(), 10);\n}\nexports.isInteger = isInteger;\nfunction arrayProd(array, begin, end) {\n    if (begin == null) {\n        begin = 0;\n    }\n    if (end == null) {\n        end = array.length;\n    }\n    var prod = 1;\n    for (var i = begin; i < end; ++i) {\n        prod *= array[i];\n    }\n    return prod;\n}\nexports.arrayProd = arrayProd;\nfunction toArray1D(array) {\n    array = Array.isArray(array) ? new Float32Array(array) : array;\n    return tfjs_core_1.tensor1d(array);\n}\nfunction min(array) {\n    return tfc.min(toArray1D(array)).dataSync()[0];\n}\nexports.min = min;\nfunction max(array) {\n    return tfc.max(toArray1D(array)).dataSync()[0];\n}\nexports.max = max;\nfunction sum(array) {\n    return tfc.sum(toArray1D(array)).dataSync()[0];\n}\nexports.sum = sum;\nfunction mean(array) {\n    return sum(array) / array.length;\n}\nexports.mean = mean;\nfunction variance(array) {\n    var demeaned = tfc.sub(toArray1D(array), tfjs_core_1.scalar(mean(array)));\n    var sumSquare = tfc.sum(tfc.mulStrict(demeaned, demeaned)).dataSync()[0];\n    return sumSquare / array.length;\n}\nexports.variance = variance;\nfunction range(begin, end) {\n    if (end < begin) {\n        throw new errors_1.ValueError(\"end (\" + end + \") < begin (\" + begin + \") is forbidden.\");\n    }\n    var out = [];\n    for (var i = begin; i < end; ++i) {\n        out.push(i);\n    }\n    return out;\n}\nexports.range = range;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar globals_1 = __webpack_require__(10);\nvar Optimizer = (function () {\n    function Optimizer() {\n    }\n    Optimizer.prototype.minimize = function (f, returnCost, varList) {\n        if (returnCost === void 0) { returnCost = false; }\n        var _a = this.computeGradients(f, varList), value = _a.value, grads = _a.grads;\n        this.applyGradients(grads);\n        var varNames = Object.keys(grads);\n        varNames.forEach(function (varName) { return grads[varName].dispose(); });\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    };\n    Optimizer.prototype.computeGradients = function (f, varList) {\n        return globals_1.variableGrads(f, varList);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers' })\n    ], Optimizer.prototype, \"minimize\", null);\n    Optimizer = __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Classes', namespace: 'train' })\n    ], Optimizer);\n    return Optimizer;\n}());\nexports.Optimizer = Optimizer;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar types_1 = __webpack_require__(12);\nvar generic_utils_1 = __webpack_require__(5);\nfunction calcL2Norms(w, axis) {\n    return K.sqrt(K.sum(K.square(w), axis, true));\n}\nvar Constraint = (function (_super) {\n    __extends(Constraint, _super);\n    function Constraint() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Constraint.prototype.getConfig = function () {\n        return {};\n    };\n    Constraint = __decorate([\n        tfjs_core_1.doc({ heading: 'Constraints', subheading: 'Classes', namespace: 'constraints' })\n    ], Constraint);\n    return Constraint;\n}(types_1.Serializable));\nexports.Constraint = Constraint;\nvar MaxNorm = (function (_super) {\n    __extends(MaxNorm, _super);\n    function MaxNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultMaxValue = 2;\n        _this.defaultAxis = 0;\n        _this.maxValue =\n            config.maxValue != null ? config.maxValue : _this.defaultMaxValue;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    MaxNorm.prototype.apply = function (w) {\n        var norms = calcL2Norms(w, this.axis);\n        var desired = K.clip(norms, 0, this.maxValue);\n        return K.multiply(w, K.divide(desired, K.scalarPlusArray(K.getScalar(K.epsilon()), norms)));\n    };\n    MaxNorm.prototype.getClassName = function () {\n        return 'MaxNorm';\n    };\n    MaxNorm.prototype.getConfig = function () {\n        return { maxValue: this.maxValue, axis: this.axis };\n    };\n    return MaxNorm;\n}(Constraint));\nexports.MaxNorm = MaxNorm;\ngeneric_utils_1.ClassNameMap.register('MaxNorm', MaxNorm);\nvar UnitNorm = (function (_super) {\n    __extends(UnitNorm, _super);\n    function UnitNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultAxis = 0;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    UnitNorm.prototype.apply = function (w) {\n        return K.divide(w, K.scalarPlusArray(K.getScalar(K.epsilon()), calcL2Norms(w, this.axis)));\n    };\n    UnitNorm.prototype.getClassName = function () {\n        return 'UnitNorm';\n    };\n    UnitNorm.prototype.getConfig = function () {\n        return { axis: this.axis };\n    };\n    return UnitNorm;\n}(Constraint));\nexports.UnitNorm = UnitNorm;\ngeneric_utils_1.ClassNameMap.register('UnitNorm', UnitNorm);\nvar NonNeg = (function (_super) {\n    __extends(NonNeg, _super);\n    function NonNeg() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonNeg.prototype.apply = function (w) {\n        return K.relu(w);\n    };\n    NonNeg.prototype.getClassName = function () {\n        return 'NonNeg';\n    };\n    return NonNeg;\n}(Constraint));\nexports.NonNeg = NonNeg;\ngeneric_utils_1.ClassNameMap.register('NonNeg', NonNeg);\nvar MinMaxNorm = (function (_super) {\n    __extends(MinMaxNorm, _super);\n    function MinMaxNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultMinValue = 0.0;\n        _this.defaultMaxValue = 1.0;\n        _this.defaultRate = 1.0;\n        _this.defaultAxis = 0;\n        _this.minValue =\n            config.minValue != null ? config.minValue : _this.defaultMinValue;\n        _this.maxValue =\n            config.maxValue != null ? config.maxValue : _this.defaultMaxValue;\n        _this.rate = config.rate != null ? config.rate : _this.defaultRate;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    MinMaxNorm.prototype.apply = function (w) {\n        var norms = calcL2Norms(w, this.axis);\n        var desired = K.add(K.scalarTimesArray(K.getScalar(this.rate), K.clip(norms, this.minValue, this.maxValue)), K.scalarTimesArray(K.getScalar(1.0 - this.rate), norms));\n        return K.multiply(w, K.divide(desired, K.scalarPlusArray(K.getScalar(K.epsilon()), norms)));\n    };\n    MinMaxNorm.prototype.getClassName = function () {\n        return 'MinMaxNorm';\n    };\n    MinMaxNorm.prototype.getConfig = function () {\n        return {\n            minValue: this.minValue,\n            maxValue: this.maxValue,\n            rate: this.rate,\n            axis: this.axis\n        };\n    };\n    return MinMaxNorm;\n}(Constraint));\nexports.MinMaxNorm = MinMaxNorm;\ngeneric_utils_1.ClassNameMap.register('MinMaxNorm', MinMaxNorm);\nexports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'maxNorm': 'MaxNorm',\n    'minMaxNorm': 'MinMaxNorm',\n    'nonNeg': 'NonNeg',\n    'unitNorm': 'UnitNorm'\n};\nfunction serializeConstraint(constraint) {\n    return generic_utils_1.serializeKerasObject(constraint);\n}\nexports.serializeConstraint = serializeConstraint;\nfunction deserializeConstraint(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'constraint');\n}\nexports.deserializeConstraint = deserializeConstraint;\nfunction getConstraint(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeConstraint(config);\n    }\n    else if (identifier instanceof Constraint) {\n        return identifier;\n    }\n    else {\n        return deserializeConstraint(identifier);\n    }\n}\nexports.getConstraint = getConstraint;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar common_1 = __webpack_require__(26);\nvar errors_1 = __webpack_require__(4);\nvar types_1 = __webpack_require__(12);\nvar generic_utils_1 = __webpack_require__(5);\nvar math_utils_1 = __webpack_require__(17);\ngeneric_utils_1.SerializableEnumRegistry.register('mode', { 'fan_in': 'fanIn', 'fan_out': 'fanOut', 'fan_avg': 'fanAvg' });\nexports.VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg', undefined, null];\nfunction checkFanMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_FAN_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid FanMode.  Valid values as \" + exports.VALID_FAN_MODE_VALUES);\n    }\n}\nexports.checkFanMode = checkFanMode;\ngeneric_utils_1.SerializableEnumRegistry.register('distribution', { 'normal': 'normal', 'uniform': 'uniform' });\nexports.VALID_DISTRIBUTION_VALUES = ['normal', 'uniform', undefined, null];\nfunction checkDistribution(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_DISTRIBUTION_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid Distribution.  Valid values as \" + exports.VALID_DISTRIBUTION_VALUES);\n    }\n}\nexports.checkDistribution = checkDistribution;\nvar Initializer = (function (_super) {\n    __extends(Initializer, _super);\n    function Initializer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Initializer.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    Initializer.prototype.fromConfigUsesCustomObjects = function () {\n        return false;\n    };\n    Initializer.prototype.getConfig = function () {\n        return {};\n    };\n    Initializer = __decorate([\n        tfjs_core_1.doc({ heading: 'Initializers', subheading: 'Classes', namespace: 'initializers' })\n    ], Initializer);\n    return Initializer;\n}(types_1.Serializable));\nexports.Initializer = Initializer;\nvar Zeros = (function (_super) {\n    __extends(Zeros, _super);\n    function Zeros() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Zeros.prototype.getClassName = function () {\n        return 'Zeros';\n    };\n    Zeros.prototype.apply = function (shape, dtype) {\n        return K.zeros(shape, dtype);\n    };\n    return Zeros;\n}(Initializer));\nexports.Zeros = Zeros;\ngeneric_utils_1.ClassNameMap.register('Zeros', Zeros);\nvar Ones = (function (_super) {\n    __extends(Ones, _super);\n    function Ones() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Ones.prototype.getClassName = function () {\n        return 'Ones';\n    };\n    Ones.prototype.apply = function (shape, dtype) {\n        return K.ones(shape, dtype);\n    };\n    return Ones;\n}(Initializer));\nexports.Ones = Ones;\ngeneric_utils_1.ClassNameMap.register('Ones', Ones);\nvar Constant = (function (_super) {\n    __extends(Constant, _super);\n    function Constant(config) {\n        var _this = _super.call(this) || this;\n        _this.value = config.value;\n        return _this;\n    }\n    Constant.prototype.apply = function (shape, dtype) {\n        return K.scalarTimesArray(tfjs_core_1.scalar(this.value), K.ones(shape, dtype));\n    };\n    Constant.prototype.getClassName = function () {\n        return 'Constant';\n    };\n    Constant.prototype.getConfig = function () {\n        return {\n            value: this.value,\n        };\n    };\n    return Constant;\n}(Initializer));\nexports.Constant = Constant;\ngeneric_utils_1.ClassNameMap.register('Constant', Constant);\nvar RandomUniform = (function (_super) {\n    __extends(RandomUniform, _super);\n    function RandomUniform(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MINVAL = -0.05;\n        _this.DEFAULT_MAXVAL = 0.05;\n        _this.minval = config.minval || _this.DEFAULT_MINVAL;\n        _this.maxval = config.maxval || _this.DEFAULT_MAXVAL;\n        _this.seed = config.seed;\n        return _this;\n    }\n    RandomUniform.prototype.apply = function (shape, dtype) {\n        return K.randomUniform(shape, this.minval, this.maxval, dtype, this.seed);\n    };\n    RandomUniform.prototype.getClassName = function () {\n        return 'RandomUniform';\n    };\n    RandomUniform.prototype.getConfig = function () {\n        return { minval: this.minval, maxval: this.maxval, seed: this.seed };\n    };\n    return RandomUniform;\n}(Initializer));\nexports.RandomUniform = RandomUniform;\ngeneric_utils_1.ClassNameMap.register('RandomUniform', RandomUniform);\nvar RandomNormal = (function (_super) {\n    __extends(RandomNormal, _super);\n    function RandomNormal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MEAN = 0.;\n        _this.DEFAULT_STDDEV = 0.05;\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\n        _this.seed = config.seed;\n        return _this;\n    }\n    RandomNormal.prototype.apply = function (shape, dtype) {\n        return K.randomNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    };\n    RandomNormal.prototype.getClassName = function () {\n        return 'RandomNormal';\n    };\n    RandomNormal.prototype.getConfig = function () {\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\n    };\n    return RandomNormal;\n}(Initializer));\nexports.RandomNormal = RandomNormal;\ngeneric_utils_1.ClassNameMap.register('RandomNormal', RandomNormal);\nvar TruncatedNormal = (function (_super) {\n    __extends(TruncatedNormal, _super);\n    function TruncatedNormal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MEAN = 0.;\n        _this.DEFAULT_STDDEV = 0.05;\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\n        _this.seed = config.seed;\n        return _this;\n    }\n    TruncatedNormal.prototype.apply = function (shape, dtype) {\n        return K.truncatedNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    };\n    TruncatedNormal.prototype.getClassName = function () {\n        return 'TruncatedNormal';\n    };\n    TruncatedNormal.prototype.getConfig = function () {\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\n    };\n    return TruncatedNormal;\n}(Initializer));\nexports.TruncatedNormal = TruncatedNormal;\ngeneric_utils_1.ClassNameMap.register('TruncatedNormal', TruncatedNormal);\nvar Identity = (function (_super) {\n    __extends(Identity, _super);\n    function Identity(config) {\n        var _this = _super.call(this) || this;\n        _this.gain = config.gain != null ? tfjs_core_1.scalar(config.gain) : K.getScalar(1.0);\n        return _this;\n    }\n    Identity.prototype.apply = function (shape, dtype) {\n        if (shape.length !== 2 || shape[0] !== shape[1]) {\n            throw new errors_1.ValueError('Identity matrix initializer can only be used for' +\n                ' 2D square matrices.');\n        }\n        else {\n            return K.scalarTimesArray(this.gain, K.eye(shape[0]));\n        }\n    };\n    Identity.prototype.getClassName = function () {\n        return 'Identity';\n    };\n    Identity.prototype.getConfig = function () {\n        return { gain: this.gain.get() };\n    };\n    return Identity;\n}(Initializer));\nexports.Identity = Identity;\ngeneric_utils_1.ClassNameMap.register('Identity', Identity);\nfunction computeFans(shape, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var fanIn;\n    var fanOut;\n    common_1.checkDataFormat(dataFormat);\n    if (shape.length === 2) {\n        fanIn = shape[0];\n        fanOut = shape[1];\n    }\n    else if ([3, 4, 5].indexOf(shape.length) !== -1) {\n        if (dataFormat === 'channelsFirst') {\n            var receptiveFieldSize = math_utils_1.arrayProd(shape, 2);\n            fanIn = shape[1] * receptiveFieldSize;\n            fanOut = shape[0] * receptiveFieldSize;\n        }\n        else if (dataFormat === 'channelsLast') {\n            var receptiveFieldSize = math_utils_1.arrayProd(shape, 0, shape.length - 2);\n            fanIn = shape[shape.length - 2] * receptiveFieldSize;\n            fanOut = shape[shape.length - 1] * receptiveFieldSize;\n        }\n    }\n    else {\n        var shapeProd = math_utils_1.arrayProd(shape);\n        fanIn = Math.sqrt(shapeProd);\n        fanOut = Math.sqrt(shapeProd);\n    }\n    return [fanIn, fanOut];\n}\nvar VarianceScaling = (function (_super) {\n    __extends(VarianceScaling, _super);\n    function VarianceScaling(config) {\n        var _this = _super.call(this) || this;\n        if (config.scale < 0.0) {\n            throw new errors_1.ValueError(\"scale must be a positive float. Got: \" + config.scale);\n        }\n        _this.scale = config.scale == null ? 1.0 : config.scale;\n        _this.mode = config.mode;\n        checkFanMode(_this.mode);\n        _this.distribution = config.distribution;\n        checkDistribution(_this.distribution);\n        _this.seed = config.seed;\n        return _this;\n    }\n    VarianceScaling.prototype.apply = function (shape, dtype) {\n        var fans = computeFans(shape);\n        var fanIn = fans[0];\n        var fanOut = fans[1];\n        var scale = this.scale;\n        if (this.mode === 'fanIn') {\n            scale /= Math.max(1, fanIn);\n        }\n        else if (this.mode === 'fanOut') {\n            scale /= Math.max(1, fanOut);\n        }\n        else {\n            scale /= Math.max(1, (fanIn + fanOut) / 2);\n        }\n        if (this.distribution === 'normal') {\n            var stddev = Math.sqrt(scale);\n            return K.truncatedNormal(shape, 0, stddev, dtype, this.seed);\n        }\n        else {\n            var limit = Math.sqrt(3 * scale);\n            return K.randomUniform(shape, -limit, limit, dtype, this.seed);\n        }\n    };\n    VarianceScaling.prototype.getClassName = function () {\n        return 'VarianceScaling';\n    };\n    VarianceScaling.prototype.getConfig = function () {\n        return {\n            scale: this.scale,\n            mode: this.mode,\n            distribution: this.distribution,\n            seed: this.seed\n        };\n    };\n    return VarianceScaling;\n}(Initializer));\nexports.VarianceScaling = VarianceScaling;\ngeneric_utils_1.ClassNameMap.register('VarianceScaling', VarianceScaling);\nvar GlorotUniform = (function (_super) {\n    __extends(GlorotUniform, _super);\n    function GlorotUniform(config) {\n        return _super.call(this, {\n            scale: 1.0,\n            mode: 'fanAvg',\n            distribution: 'uniform',\n            seed: config.seed\n        }) || this;\n    }\n    return GlorotUniform;\n}(VarianceScaling));\nexports.GlorotUniform = GlorotUniform;\ngeneric_utils_1.ClassNameMap.register('GlorotUniform', GlorotUniform);\nvar GlorotNormal = (function (_super) {\n    __extends(GlorotNormal, _super);\n    function GlorotNormal(config) {\n        return _super.call(this, {\n            scale: 1.0,\n            mode: 'fanAvg',\n            distribution: 'normal',\n            seed: config.seed\n        }) || this;\n    }\n    return GlorotNormal;\n}(VarianceScaling));\nexports.GlorotNormal = GlorotNormal;\ngeneric_utils_1.ClassNameMap.register('GlorotNormal', GlorotNormal);\nvar HeNormal = (function (_super) {\n    __extends(HeNormal, _super);\n    function HeNormal(config) {\n        return _super.call(this, { scale: 2.0, mode: 'fanIn', distribution: 'normal', seed: config.seed }) || this;\n    }\n    return HeNormal;\n}(VarianceScaling));\nexports.HeNormal = HeNormal;\ngeneric_utils_1.ClassNameMap.register('HeNormal', HeNormal);\nvar LeCunNormal = (function (_super) {\n    __extends(LeCunNormal, _super);\n    function LeCunNormal(config) {\n        return _super.call(this, { scale: 1.0, mode: 'fanIn', distribution: 'normal', seed: config.seed }) || this;\n    }\n    return LeCunNormal;\n}(VarianceScaling));\nexports.LeCunNormal = LeCunNormal;\ngeneric_utils_1.ClassNameMap.register('LeCunNormal', LeCunNormal);\nvar Orthogonal = (function (_super) {\n    __extends(Orthogonal, _super);\n    function Orthogonal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_GAIN = 1;\n        _this.gain = config.gain == null ? _this.DEFAULT_GAIN : config.gain;\n        _this.seed = config.seed;\n        if (_this.seed != null) {\n            throw new errors_1.NotImplementedError('Random seed is not implemented for Orthogonal Initializer yet.');\n        }\n        return _this;\n    }\n    Orthogonal.prototype.apply = function (shape, dtype) {\n        if (shape.length !== 2) {\n            throw new errors_1.NotImplementedError('The Orthogonal Initializer does not support non-2D shapes yet.');\n        }\n        var normalizedShape = shape[0] >= shape[1] ? shape : [shape[1], shape[0]];\n        var a = K.randomNormal(normalizedShape, 0, 1, types_1.DType.float32);\n        var q = K.qr(a)[0];\n        if (q.shape[1] > normalizedShape[1]) {\n            q = q.slice([0, 0], normalizedShape);\n        }\n        if (shape[0] < shape[1]) {\n            q = q.transpose();\n        }\n        return K.scalarTimesArray(K.getScalar(this.gain), q);\n    };\n    Orthogonal.prototype.getClassName = function () {\n        return 'Orthogonal';\n    };\n    Orthogonal.prototype.getConfig = function () {\n        return {\n            gain: this.gain,\n            seed: this.seed,\n        };\n    };\n    return Orthogonal;\n}(Initializer));\nexports.Orthogonal = Orthogonal;\ngeneric_utils_1.ClassNameMap.register('Orthogonal', Orthogonal);\nexports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'constant': 'Constant',\n    'glorotNormal': 'GlorotNormal',\n    'glorotUniform': 'GlorotUniform',\n    'heNormal': 'HeNormal',\n    'identity': 'Identity',\n    'leCunNormal': 'LeCunNormal',\n    'ones': 'Ones',\n    'orthogonal': 'Orthogonal',\n    'randomNormal': 'RandomNormal',\n    'randomUniform': 'RandomUniform',\n    'truncatedNormal': 'TruncatedNormal',\n    'varianceScaling': 'VarianceScaling',\n    'zeros': 'Zeros'\n};\nfunction deserializeInitializer(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'initializer');\n}\nfunction serializeInitializer(initializer) {\n    return generic_utils_1.serializeKerasObject(initializer);\n}\nexports.serializeInitializer = serializeInitializer;\nfunction getInitializer(identifier) {\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeInitializer(config);\n    }\n    else if (identifier instanceof Initializer) {\n        return identifier;\n    }\n    else {\n        return deserializeInitializer(identifier);\n    }\n}\nexports.getInitializer = getInitializer;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar types_1 = __webpack_require__(12);\nvar generic_utils_1 = __webpack_require__(5);\nvar Regularizer = (function (_super) {\n    __extends(Regularizer, _super);\n    function Regularizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Regularizer;\n}(types_1.Serializable));\nexports.Regularizer = Regularizer;\nvar L1L2 = (function (_super) {\n    __extends(L1L2, _super);\n    function L1L2(config) {\n        var _this = _super.call(this) || this;\n        var l1 = config == null || config.l1 == null ? 0.01 : config.l1;\n        var l2 = config == null || config.l2 == null ? 0.01 : config.l2;\n        _this.hasL1 = l1 !== 0;\n        _this.hasL2 = l2 !== 0;\n        _this.l1 = K.getScalar(l1);\n        _this.l2 = K.getScalar(l2);\n        return _this;\n    }\n    L1L2_1 = L1L2;\n    L1L2.prototype.apply = function (x) {\n        var regularization = tfjs_core_1.zeros([1]);\n        if (this.hasL1) {\n            regularization =\n                K.add(regularization, K.sum(K.scalarTimesArray(this.l1, K.abs(x))));\n        }\n        if (this.hasL2) {\n            regularization = K.add(regularization, K.sum(K.scalarTimesArray(this.l2, K.square(x))));\n        }\n        return regularization.asScalar();\n    };\n    L1L2.prototype.getClassName = function () {\n        return 'L1L2';\n    };\n    L1L2.prototype.getConfig = function () {\n        return { 'l1': this.l1.dataSync()[0], 'l2': this.l2.dataSync()[0] };\n    };\n    L1L2.fromConfig = function (cls, config) {\n        return new L1L2_1({ l1: config.l1, l2: config.l2 });\n    };\n    L1L2 = L1L2_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers' })\n    ], L1L2);\n    return L1L2;\n    var L1L2_1;\n}(Regularizer));\nexports.L1L2 = L1L2;\ngeneric_utils_1.ClassNameMap.register('L1L2', L1L2);\nfunction l1(config) {\n    return new L1L2({ l1: config != null ? config.l1 : null, l2: 0 });\n}\nexports.l1 = l1;\nfunction l2(config) {\n    return new L1L2({ l2: config != null ? config.l2 : null, l1: 0 });\n}\nexports.l2 = l2;\nexports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'l1l2': 'L1L2'\n};\nfunction serializeRegularizer(constraint) {\n    return generic_utils_1.serializeKerasObject(constraint);\n}\nexports.serializeRegularizer = serializeRegularizer;\nfunction deserializeRegularizer(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'regularizer');\n}\nexports.deserializeRegularizer = deserializeRegularizer;\nfunction getRegularizer(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeRegularizer(config);\n    }\n    else if (identifier instanceof Regularizer) {\n        return identifier;\n    }\n    else {\n        return deserializeRegularizer(identifier);\n    }\n}\nexports.getRegularizer = getRegularizer;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n})(Rank = exports.Rank || (exports.Rank = {}));\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar upcastTypeMap = {\n    float32: UpcastFloat32AndMap,\n    int32: UpcastInt32AndMap,\n    bool: UpcastBoolAndMap\n};\nfunction upcastType(typeA, typeB) {\n    return upcastTypeMap[typeA][typeB];\n}\nexports.upcastType = upcastType;\nfunction sumOutType(type) {\n    return upcastType(type, 'int32');\n}\nexports.sumOutType = sumOutType;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"FLOAT\"] = 0] = \"FLOAT\";\n    TextureType[TextureType[\"UNSIGNED_BYTE\"] = 1] = \"UNSIGNED_BYTE\";\n})(TextureType = exports.TextureType || (exports.TextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexports.getUnpackedMatrixTextureShapeWidthHeight = getUnpackedMatrixTextureShapeWidthHeight;\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexports.getUnpackedArraySizeFromMatrixSize = getUnpackedArraySizeFromMatrixSize;\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\nexports.getColorMatrixTextureShapeWidthHeight = getColorMatrixTextureShapeWidthHeight;\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(\"unpackedSize (\" + unpackedSize + \") must be a multiple of \" +\n            (\"\" + channelsPerTexture));\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexports.getMatrixSizeFromUnpackedArraySize = getMatrixSizeFromUnpackedArraySize;\nfunction encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture) {\n    var requiredSize = getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture);\n    if (unpackedArray.length < requiredSize) {\n        throw new Error(\"unpackedArray length (\" + unpackedArray.length + \") must be >= \" +\n            (\"\" + requiredSize));\n    }\n    var dst = 0;\n    for (var src = 0; src < matrix.length; ++src) {\n        unpackedArray[dst] = matrix[src];\n        dst += channelsPerTexture;\n    }\n}\nexports.encodeMatrixToUnpackedArray = encodeMatrixToUnpackedArray;\nexports.FLOAT_MAX = 20000;\nexports.FLOAT_MIN = -exports.FLOAT_MAX;\nvar FLOAT_RANGE = (exports.FLOAT_MAX - exports.FLOAT_MIN) / 255;\nvar FLOAT_DELTAS = [1, 1 / 255, 1 / (255 * 255), 1 / (255 * 255 * 255)];\nvar FLOAT_POWERS = [1, 255, 255 * 255];\nexports.BYTE_NAN_VALUE = 0;\nfunction encodeFloatArray(floatArray) {\n    var uintArray = new Uint8Array(floatArray.length * 4);\n    var _loop_1 = function (i) {\n        var value = floatArray[i / 4];\n        if (isNaN(value)) {\n            uintArray[i] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 1] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 2] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 3] = exports.BYTE_NAN_VALUE;\n            return \"continue\";\n        }\n        var normalizedValue = (value - exports.FLOAT_MIN) / FLOAT_RANGE;\n        var enc = FLOAT_POWERS.map(function (pow) { return pow * normalizedValue; });\n        var buckets = enc.map(function (value) { return Math.floor((value % 1) * 255); });\n        uintArray[i] = Math.floor(normalizedValue);\n        uintArray[i + 1] = buckets[0];\n        uintArray[i + 2] = buckets[1];\n        uintArray[i + 3] = buckets[2];\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_1(i);\n    }\n    return uintArray;\n}\nexports.encodeFloatArray = encodeFloatArray;\nfunction decodeToFloatArray(uintArray) {\n    var floatArray = new Float32Array(uintArray.length / 4);\n    var _loop_2 = function (i) {\n        if (uintArray[i] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 1] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 2] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 3] === exports.BYTE_NAN_VALUE) {\n            floatArray[i / 4] = NaN;\n            return \"continue\";\n        }\n        var dot = 0;\n        FLOAT_DELTAS.forEach(function (delta, j) {\n            dot += delta * uintArray[i + j];\n        });\n        var value = dot * FLOAT_RANGE + exports.FLOAT_MIN;\n        floatArray[i / 4] = value;\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_2(i);\n    }\n    return floatArray;\n}\nexports.decodeToFloatArray = decodeToFloatArray;\nfunction decodeMatrixFromUnpackedArray(unpackedArray, matrix, channelsPerTexture) {\n    var requiredSize = getMatrixSizeFromUnpackedArraySize(unpackedArray.length, channelsPerTexture);\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += channelsPerTexture) {\n        matrix[dst++] = unpackedArray[src];\n    }\n}\nexports.decodeMatrixFromUnpackedArray = decodeMatrixFromUnpackedArray;\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    var requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += 4) {\n        for (var c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexports.decodeMatrixFromUnpackedColorRGBAArray = decodeMatrixFromUnpackedColorRGBAArray;\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [Math.ceil(columns / 2), Math.ceil(rows / 2)];\n}\nexports.getPackedMatrixTextureShapeWidthHeight = getPackedMatrixTextureShapeWidthHeight;\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    return w * h * 4;\n}\nexports.getPackedRGBAArraySizeFromMatrixShape = getPackedRGBAArraySizeFromMatrixShape;\nfunction encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA) {\n    var requiredSize = getPackedRGBAArraySizeFromMatrixShape(rows, columns);\n    if (packedRGBA.length < requiredSize) {\n        throw new Error(\"packedRGBA length (\" + packedRGBA.length + \") must be >= \" + requiredSize);\n    }\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    {\n        var dstStride = (oddWidth ? 4 : 0);\n        var oneRow = columns;\n        var dst = 0;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            var matrixSrcRow = (blockY * 2 * columns);\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                var matrixSrcCol = blockX * 2;\n                var src = matrixSrcRow + matrixSrcCol;\n                packedRGBA[dst] = matrix[src];\n                packedRGBA[dst + 1] = matrix[src + 1];\n                packedRGBA[dst + 2] = matrix[src + oneRow];\n                packedRGBA[dst + 3] = matrix[src + oneRow + 1];\n                dst += 4;\n            }\n            dst += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = columns - 1;\n        var dst = (textureWidth - 1) * 4;\n        var srcStride = 2 * columns;\n        var dstStride = textureWidth * 4;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            packedRGBA[dst] = matrix[src];\n            packedRGBA[dst + 2] = matrix[src + columns];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (rows - 1) * columns;\n        var dst = (textureHeight - 1) * textureWidth * 4;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            packedRGBA[dst++] = matrix[src++];\n            packedRGBA[dst++] = matrix[src++];\n            dst += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        packedRGBA[packedRGBA.length - 4] = matrix[matrix.length - 1];\n    }\n    return packedRGBA;\n}\nexports.encodeMatrixToPackedRGBA = encodeMatrixToPackedRGBA;\nfunction decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix) {\n    var requiredSize = rows * columns;\n    if (requiredSize < matrix.length) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    {\n        var srcStride = oddWidth ? 4 : 0;\n        var dstStride = columns + (oddWidth ? 1 : 0);\n        var src = 0;\n        var dstRow1 = 0;\n        var dstRow2 = columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n            }\n            src += srcStride;\n            dstRow1 += dstStride;\n            dstRow2 += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = (textureWidth - 1) * 4;\n        var dst = columns - 1;\n        var srcStride = textureWidth * 4;\n        var dstStride = 2 * columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            matrix[dst] = packedRGBA[src];\n            matrix[dst + columns] = packedRGBA[src + 2];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (textureHeight - 1) * textureWidth * 4;\n        var dst = (rows - 1) * columns;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            matrix[dst++] = packedRGBA[src++];\n            matrix[dst++] = packedRGBA[src++];\n            src += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        matrix[matrix.length - 1] = packedRGBA[packedRGBA.length - 4];\n    }\n    return matrix;\n}\nexports.decodeMatrixFromPackedRGBA = decodeMatrixFromPackedRGBA;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(4);\nvar generic_utils_1 = __webpack_require__(5);\nvar nameMap = new Map();\ngeneric_utils_1.SerializableEnumRegistry.register('data_format', { 'channels_first': 'channelsFirst', 'channels_last': 'channelsLast' });\nexports.VALID_DATA_FORMAT_VALUES = ['channelsFirst', 'channelsLast', undefined, null];\nfunction checkDataFormat(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_DATA_FORMAT_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid DataFormat.  Valid values as \" + exports.VALID_DATA_FORMAT_VALUES);\n    }\n}\nexports.checkDataFormat = checkDataFormat;\ngeneric_utils_1.SerializableEnumRegistry.register('padding', { 'valid': 'valid', 'same': 'same', 'casual': 'casual' });\nexports.VALID_PADDING_MODE_VALUES = ['valid', 'same', 'casual', undefined, null];\nfunction checkPaddingMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_PADDING_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid PaddingMode.  Valid values as \" + exports.VALID_PADDING_MODE_VALUES);\n    }\n}\nexports.checkPaddingMode = checkPaddingMode;\nexports.VALID_POOL_MODE_VALUES = ['max', 'avg', undefined, null];\nfunction checkPoolMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_POOL_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid PoolMode.  Valid values as \" + exports.VALID_POOL_MODE_VALUES);\n    }\n}\nexports.checkPoolMode = checkPoolMode;\nvar _nameScopeStack = [];\nvar _nameScopeDivider = '/';\nfunction nameScope(name, fn) {\n    _nameScopeStack.push(name);\n    try {\n        var val = fn();\n        _nameScopeStack.pop();\n        return val;\n    }\n    catch (e) {\n        _nameScopeStack.pop();\n        throw e;\n    }\n}\nexports.nameScope = nameScope;\nfunction currentNameScopePrefix() {\n    if (_nameScopeStack.length === 0) {\n        return '';\n    }\n    else {\n        return _nameScopeStack.join(_nameScopeDivider) + _nameScopeDivider;\n    }\n}\nfunction getScopedTensorName(tensorName) {\n    if (!isValidTensorName(tensorName)) {\n        throw new Error('Not a valid tensor name: \\'' + tensorName + '\\'');\n    }\n    return currentNameScopePrefix() + tensorName;\n}\nexports.getScopedTensorName = getScopedTensorName;\nfunction getUniqueTensorName(scopedName) {\n    if (!isValidTensorName(scopedName)) {\n        throw new Error('Not a valid tensor name: \\'' + scopedName + '\\'');\n    }\n    if (!nameMap.has(scopedName)) {\n        nameMap.set(scopedName, 0);\n    }\n    var index = nameMap.get(scopedName);\n    nameMap.set(scopedName, nameMap.get(scopedName) + 1);\n    if (index > 0) {\n        var result = scopedName + '_' + index;\n        nameMap.set(result, 1);\n        return result;\n    }\n    else {\n        return scopedName;\n    }\n}\nexports.getUniqueTensorName = getUniqueTensorName;\nvar tensorNameRegex = new RegExp(/^[A-Za-z][A-Za-z0-9\\._\\/]*$/);\nfunction isValidTensorName(name) {\n    return name.match(tensorNameRegex) ? true : false;\n}\nexports.isValidTensorName = isValidTensorName;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = __webpack_require__(0);\nvar environment_1 = __webpack_require__(1);\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    var loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        return false;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n    return true;\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexports.getProgramUniformLocation = getProgramUniformLocation;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar tensor_1 = __webpack_require__(14);\nvar tensor_util = __webpack_require__(57);\nvar util = __webpack_require__(0);\nvar axis_util_1 = __webpack_require__(13);\nvar concat_1 = __webpack_require__(53);\nvar operation_1 = __webpack_require__(8);\nvar rand_1 = __webpack_require__(116);\nvar ArrayOps = (function () {\n    function ArrayOps() {\n    }\n    ArrayOps.tensor = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (shape != null && inferredShape.length !== 1) {\n            util.assertShapesMatch(shape, inferredShape, \"Error creating a new Tensor. \" +\n                (\"Inferred shape (\" + inferredShape + \") does not match the \") +\n                (\"provided shape (\" + shape + \"). \"));\n        }\n        if (!util.isTypedArray(values) && !Array.isArray(values)) {\n            values = [values];\n        }\n        shape = shape || inferredShape;\n        return tensor_1.Tensor.make(shape, { values: toTypedArray(values, dtype) }, dtype);\n    };\n    ArrayOps.scalar = function (value, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        if (util.isTypedArray(value) || Array.isArray(value)) {\n            throw new Error('Error creating a new Scalar: value must be a primitive ' +\n                '(number|boolean)');\n        }\n        return ArrayOps.tensor(value, [], dtype);\n    };\n    ArrayOps.tensor1d = function (values, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 1) {\n            throw new Error('tensor1d() requires values to be a flat/TypedArray');\n        }\n        return ArrayOps.tensor(values, inferredShape, dtype);\n    };\n    ArrayOps.tensor2d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n            throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor2d() requires shape to be provided when `values` ' +\n                'are a flat/TypedArray');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.tensor3d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n            throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor3d() requires shape to be provided when `values` ' +\n                'are a flat array');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.tensor4d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n            throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor4d() requires shape to be provided when `values` ' +\n                'are a flat array');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.ones = function (shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = makeOnesTypedArray(util.sizeFromShape(shape), dtype);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.zeros = function (shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.fill = function (shape, value, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = util.getTypedArrayFromDType(dtype, util.sizeFromShape(shape));\n        values.fill(value);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.onesLike = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'onesLike');\n        return ArrayOps.ones(x.shape, x.dtype);\n    };\n    ArrayOps.zerosLike = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'zerosLike');\n        return ArrayOps.zeros(x.shape, x.dtype);\n    };\n    ArrayOps.clone = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'clone');\n        var der = function (dy) {\n            return { x: function () { return dy.toFloat(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) {\n            return tensor_1.Tensor.make(x.shape, { dataId: x.dataId }, x.dtype);\n        }, { x: x }, der);\n    };\n    ArrayOps.randomNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = randGauss.nextValue();\n        }\n        return res.toTensor();\n    };\n    ArrayOps.truncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = randGauss.nextValue();\n        }\n        return res.toTensor();\n    };\n    ArrayOps.randomUniform = function (shape, minval, maxval, dtype) {\n        if (minval === void 0) { minval = 0; }\n        if (maxval === void 0) { maxval = 1; }\n        if (dtype === void 0) { dtype = 'float32'; }\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = util.randUniform(minval, maxval);\n        }\n        return res.toTensor();\n    };\n    ArrayOps.rand = function (shape, randFunction, dtype) {\n        var size = util.sizeFromShape(shape);\n        var values = null;\n        if (dtype == null || dtype === 'float32') {\n            values = new Float32Array(size);\n        }\n        else if (dtype === 'int32') {\n            values = new Int32Array(size);\n        }\n        else if (dtype === 'bool') {\n            values = new Uint8Array(size);\n        }\n        else {\n            throw new Error(\"Unknown data type \" + dtype);\n        }\n        for (var i = 0; i < size; i++) {\n            values[i] = randFunction();\n        }\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.multinomial = function (logits, numSamples, seed, normalized) {\n        if (normalized === void 0) { normalized = false; }\n        util.assertArgumentsAreTensors({ logits: logits }, 'multinomial');\n        var numOutcomes = logits.size;\n        var origRank = logits.rank;\n        if (numOutcomes < 2) {\n            throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" +\n                (numOutcomes + \".\"));\n        }\n        if (origRank > 2) {\n            throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + origRank);\n        }\n        seed = seed || Math.random();\n        var logits2D = origRank === 1 ? logits.as2D(1, -1) : logits;\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.multinomial(logits2D, normalized, numSamples, seed); }, { logits2D: logits2D });\n        return origRank === 1 ? res.as1D() : res;\n    };\n    ArrayOps.oneHot = function (indices, depth, onValue, offValue) {\n        if (onValue === void 0) { onValue = 1; }\n        if (offValue === void 0) { offValue = 0; }\n        util.assert(indices.dtype === 'int32', 'Indices must be of dtype `int32`');\n        if (depth < 2) {\n            throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + depth);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.oneHot(indices, depth, onValue, offValue); }, { indices: indices });\n    };\n    ArrayOps.fromPixels = function (pixels, numChannels) {\n        if (numChannels === void 0) { numChannels = 3; }\n        if (numChannels > 4) {\n            throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n        }\n        return environment_1.ENV.engine.fromPixels(pixels, numChannels);\n    };\n    ArrayOps.toPixels = function (img, canvas) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, height, width, depth, min, max, data, multiplier, bytes, i, r, g, b, a, j, ctx, imageData;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        util.assertArgumentsAreTensors({ img: img }, 'toPixels');\n                        if (img.rank !== 2 && img.rank !== 3) {\n                            throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \" + img.rank + \".\");\n                        }\n                        _a = img.shape.slice(0, 2), height = _a[0], width = _a[1];\n                        depth = img.rank === 2 ? 1 : img.shape[2];\n                        if (depth > 4 || depth === 2) {\n                            throw new Error(\"toPixels only supports depth of size \" +\n                                (\"1, 3 or 4 but got \" + depth));\n                        }\n                        return [4, img.min().data()];\n                    case 1:\n                        min = (_b.sent())[0];\n                        return [4, img.max().data()];\n                    case 2:\n                        max = (_b.sent())[0];\n                        if (img.dtype === 'float32') {\n                            if (min < 0 || max > 1) {\n                                throw new Error(\"Tensor values for a float32 Tensor must be in the \" +\n                                    (\"range [0 - 1] but got range [\" + min + \" - \" + max + \"].\"));\n                            }\n                        }\n                        else if (img.dtype === 'int32') {\n                            if (min < 0 || max > 255) {\n                                throw new Error(\"Tensor values for a int32 Tensor must be in the \" +\n                                    (\"range [0 - 255] but got range [\" + min + \" - \" + max + \"].\"));\n                            }\n                        }\n                        else {\n                            throw new Error(\"Unsupported type for toPixels: \" + img.dtype + \".\" +\n                                \" Please use float32 or int32 tensors.\");\n                        }\n                        return [4, img.data()];\n                    case 3:\n                        data = _b.sent();\n                        multiplier = img.dtype === 'float32' ? 255 : 1;\n                        bytes = new Uint8ClampedArray(width * height * 4);\n                        for (i = 0; i < height * width; ++i) {\n                            r = void 0, g = void 0, b = void 0, a = void 0;\n                            if (depth === 1) {\n                                r = data[i] * multiplier;\n                                g = data[i] * multiplier;\n                                b = data[i] * multiplier;\n                                a = 255;\n                            }\n                            else if (depth === 3) {\n                                r = data[i * 3] * multiplier;\n                                g = data[i * 3 + 1] * multiplier;\n                                b = data[i * 3 + 2] * multiplier;\n                                a = 255;\n                            }\n                            else if (depth === 4) {\n                                r = data[i * 4] * multiplier;\n                                g = data[i * 4 + 1] * multiplier;\n                                b = data[i * 4 + 2] * multiplier;\n                                a = data[i * 4 + 3] * multiplier;\n                            }\n                            j = i * 4;\n                            bytes[j + 0] = Math.round(r);\n                            bytes[j + 1] = Math.round(g);\n                            bytes[j + 2] = Math.round(b);\n                            bytes[j + 3] = Math.round(a);\n                        }\n                        if (canvas != null) {\n                            canvas.width = width;\n                            canvas.height = height;\n                            ctx = canvas.getContext('2d');\n                            imageData = new ImageData(bytes, width, height);\n                            ctx.putImageData(imageData, 0, 0);\n                        }\n                        return [2, bytes];\n                }\n            });\n        });\n    };\n    ArrayOps.reshape = function (x, shape) {\n        util.assertArgumentsAreTensors({ x: x }, 'reshape');\n        shape = util.inferFromImplicitShape(shape, x.size);\n        util.assert(x.size === util.sizeFromShape(shape), 'new shape and old shape must have the same number of elements.');\n        var grad = function (dy) {\n            return { x: function () { return dy.reshape(x.shape); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.reshape(x, shape); }, { x: x }, grad);\n    };\n    ArrayOps.squeeze = function (x, axis) {\n        util.assertArgumentsAreTensors({ x: x }, 'squeeze');\n        return ArrayOps.reshape(x, util.squeezeShape(x.shape, axis).newShape);\n    };\n    ArrayOps.cast = function (x, dtype) {\n        util.assertArgumentsAreTensors({ x: x }, 'cast');\n        var grad = function (dy) {\n            return { x: function () { return dy.clone(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cast(x, dtype); }, { x: x }, grad);\n    };\n    ArrayOps.tile = function (x, reps) {\n        util.assertArgumentsAreTensors({ x: x }, 'tile');\n        util.assert(x.rank === reps.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of reps \" + reps + \".\"));\n        var grad = function (dy) {\n            var derX = function () {\n                var xGrad = ArrayOps.zerosLike(x);\n                if (x.rank === 1) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        xGrad = xGrad.add(dy.slice([i * x.shape[0]], [x.shape[0]]));\n                    }\n                }\n                else if (x.rank === 2) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            xGrad = xGrad.add(dy.slice([i * x.shape[0], j * x.shape[1]], [x.shape[0], x.shape[1]]));\n                        }\n                    }\n                }\n                else if (x.rank === 3) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            for (var k = 0; k < reps[2]; ++k) {\n                                xGrad = xGrad.add(dy.slice([i * x.shape[0], j * x.shape[1], k * x.shape[2]], [x.shape[0], x.shape[1], x.shape[2]]));\n                            }\n                        }\n                    }\n                }\n                else if (x.rank === 4) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            for (var k = 0; k < reps[2]; ++k) {\n                                for (var l = 0; l < reps[3]; ++l) {\n                                    xGrad = xGrad.add(dy.slice([\n                                        i * x.shape[0], j * x.shape[1], k * x.shape[2],\n                                        l * x.shape[3]\n                                    ], [x.shape[0], x.shape[1], x.shape[2], x.shape[3]]));\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    throw new Error(\"Gradient for tile operation is not implemented for rank-\" +\n                        (x.rank + \" tensors yet.\"));\n                }\n                return xGrad;\n            };\n            return { x: derX };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.tile(x, reps); }, { x: x }, grad);\n    };\n    ArrayOps.gather = function (x, indices, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x, indices: indices }, 'gather');\n        util.assert(indices.dtype === 'int32', 'Indices must be of dtype `int32`');\n        var axes = axis_util_1.parseAxisParam(axis, x.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.gather(x, indices, axes[0]); }, { x: x, indices: indices });\n    };\n    ArrayOps.pad1d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 2, 'Invalid number of paddings. Must be length of 2.');\n        return ArrayOps.pad(x, [paddings], constantValue);\n    };\n    ArrayOps.pad2d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 2 && paddings[0].length === 2 &&\n            paddings[1].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad3d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 3 && paddings[0].length === 2 &&\n            paddings[1].length === 2 && paddings[2].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad4d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 4 && paddings[0].length === 2 &&\n            paddings[1].length === 2 && paddings[2].length === 2 &&\n            paddings[3].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'pad');\n        if (x.rank === 0) {\n            throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n        }\n        var begin = paddings.map(function (p) { return p[0]; });\n        var grad = function (dy) {\n            return { x: function () { return dy.slice(begin, x.shape); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.pad(x, paddings, constantValue); }, { x: x }, grad);\n    };\n    ArrayOps.stack = function (tensors, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ tensors: tensors }, 'stack');\n        util.assert(tensors.length >= 1, 'Pass at least one tensor to tf.stack');\n        if (tensors.length === 1) {\n            return tensors[0].expandDims(axis);\n        }\n        var rank = tensors[0].rank;\n        var shape = tensors[0].shape;\n        var dtype = tensors[0].dtype;\n        util.assert(axis <= rank, 'Axis must be <= rank of the tensor');\n        tensors.forEach(function (t) {\n            util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        });\n        tensors.forEach(function (t) {\n            util.assert(dtype === t.dtype, 'All tensors passed to stack must have matching dtypes');\n        });\n        var expandedTensors = tensors.map(function (t) { return t.expandDims(axis); });\n        return concat_1.ConcatOps.concat(expandedTensors, axis);\n    };\n    ArrayOps.split = function (x, numOrSizeSplits, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'split');\n        axis = axis_util_1.parseAxisParam(axis, x.shape)[0];\n        var splitSizes;\n        if (typeof (numOrSizeSplits) === 'number') {\n            util.assert(x.shape[axis] % numOrSizeSplits === 0, 'Number of splits must evenly divide the axis.');\n            splitSizes = Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n        }\n        else {\n            util.assert(x.shape[axis] === numOrSizeSplits.reduce(function (a, b) { return a + b; }), 'The sum of sizes must match the size of the axis dimension.');\n            splitSizes = numOrSizeSplits;\n        }\n        var begin = Array(x.rank).fill(0);\n        var size = x.shape.slice();\n        return splitSizes.map(function (s) {\n            size[axis] = s;\n            var slice = x.slice(begin, size);\n            begin[axis] += s;\n            return slice;\n        });\n    };\n    ArrayOps.expandDims = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'expandDims');\n        util.assert(axis <= x.rank, 'Axis must be <= rank of the tensor');\n        var newShape = x.shape.slice();\n        newShape.splice(axis, 0, 1);\n        return ArrayOps.reshape(x, newShape);\n    };\n    ArrayOps.linspace = function (start, stop, num) {\n        if (num === 0) {\n            throw new Error('Cannot request zero samples');\n        }\n        var step = (stop - start) / (num - 1);\n        var values = makeZerosTypedArray(num, 'float32');\n        values[0] = start;\n        for (var i = 1; i < values.length; i++) {\n            values[i] = values[i - 1] + step;\n        }\n        return ArrayOps.tensor1d(values, 'float32');\n    };\n    ArrayOps.range = function (start, stop, step, dtype) {\n        if (step === void 0) { step = 1; }\n        if (dtype === void 0) { dtype = 'float32'; }\n        if (step === 0) {\n            throw new Error('Cannot have a step of zero');\n        }\n        var sameStartStop = start === stop;\n        var increasingRangeNegativeStep = start < stop && step < 0;\n        var decreasingRangePositiveStep = stop < start && step > 1;\n        if (sameStartStop || increasingRangeNegativeStep ||\n            decreasingRangePositiveStep) {\n            return ArrayOps.zeros([0], dtype);\n        }\n        var numElements = Math.abs(Math.ceil((stop - start) / step));\n        var values = makeZerosTypedArray(numElements, dtype);\n        if (stop < start && step === 1) {\n            step = -1;\n        }\n        values[0] = start;\n        for (var i = 1; i < values.length; i++) {\n            values[i] = values[i - 1] + step;\n        }\n        return ArrayOps.tensor1d(values, dtype);\n    };\n    ArrayOps.buffer = function (shape, dtype, values) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        return new tensor_1.TensorBuffer(shape, dtype, values);\n    };\n    ArrayOps.print = function (x, verbose) {\n        if (verbose === void 0) { verbose = false; }\n        console.log(tensor_util.tensorToString(x, verbose));\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"scalar\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor1d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor2d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor3d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor4d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"ones\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"zeros\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"fill\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"onesLike\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"zerosLike\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"clone\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"randomNormal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"truncatedNormal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"randomUniform\", null);\n    __decorate([\n        operation_1.operation\n    ], ArrayOps, \"rand\", null);\n    __decorate([\n        operation_1.operation\n    ], ArrayOps, \"multinomial\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"oneHot\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"fromPixels\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Visualization' })\n    ], ArrayOps, \"toPixels\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"reshape\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' })\n    ], ArrayOps, \"squeeze\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"cast\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"tile\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"gather\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"pad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"stack\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"split\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"expandDims\", null);\n    __decorate([\n        operation_1.operation,\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"linspace\", null);\n    __decorate([\n        operation_1.operation,\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"range\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"buffer\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"print\", null);\n    return ArrayOps;\n}());\nexports.ArrayOps = ArrayOps;\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type $ {dtype}\");\n    }\n}\nfunction makeOnesTypedArray(size, dtype) {\n    var array = makeZerosTypedArray(size, dtype);\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nfunction toTypedArray(a, dtype) {\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        a = util.flatten(a);\n    }\n    return util.copyTypedArray(a, dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar SGDOptimizer = (function (_super) {\n    __extends(SGDOptimizer, _super);\n    function SGDOptimizer(learningRate) {\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.setLearningRate(learningRate);\n        return _this;\n    }\n    SGDOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var varNames = Object.keys(variableGradients);\n        varNames.forEach(function (varName) {\n            var gradient = variableGradients[varName];\n            var value = environment_1.ENV.engine.registeredVariables[varName];\n            globals_1.tidy(function () {\n                var newValue = _this.c.mul(gradient).add(value);\n                value.assign(newValue);\n            });\n        });\n    };\n    SGDOptimizer.prototype.setLearningRate = function (learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = globals_1.keep(ops_1.scalar(-learningRate));\n    };\n    SGDOptimizer.prototype.dispose = function () {\n        this.c.dispose();\n    };\n    return SGDOptimizer;\n}(optimizer_1.Optimizer));\nexports.SGDOptimizer = SGDOptimizer;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar errors_1 = __webpack_require__(4);\nfunction getActivation(activationType) {\n    if (activationType == null) {\n        return linear;\n    }\n    else if (activationType.toLowerCase() === 'elu') {\n        return elu;\n    }\n    else if (activationType.toLowerCase() === 'hardsigmoid') {\n        return hardSigmoid;\n    }\n    else if (activationType.toLowerCase() === 'linear') {\n        return linear;\n    }\n    else if (activationType.toLowerCase() === 'relu') {\n        return relu;\n    }\n    else if (activationType.toLowerCase() === 'relu6') {\n        return relu6;\n    }\n    else if (activationType.toLowerCase() === 'selu') {\n        return selu;\n    }\n    else if (activationType.toLowerCase() === 'sigmoid') {\n        return sigmoid;\n    }\n    else if (activationType.toLowerCase() === 'softmax') {\n        return softmax;\n    }\n    else if (activationType.toLowerCase() === 'softplus') {\n        return softplus;\n    }\n    else if (activationType.toLowerCase() === 'softsign') {\n        return softsign;\n    }\n    else if (activationType.toLowerCase() === 'tanh') {\n        return tanh;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupported activation function \" + activationType);\n    }\n}\nexports.getActivation = getActivation;\nfunction elu(x, alpha) {\n    if (alpha === void 0) { alpha = 1; }\n    return K.elu(x, alpha);\n}\nexports.elu = elu;\nfunction selu(x) {\n    return K.selu(x);\n}\nexports.selu = selu;\nfunction relu(x) {\n    return K.relu(x);\n}\nexports.relu = relu;\nfunction relu6(x) {\n    return K.minimum(tfjs_core_1.scalar(6.0), K.relu(x));\n}\nexports.relu6 = relu6;\nfunction linear(x) {\n    return x;\n}\nexports.linear = linear;\nfunction sigmoid(x) {\n    return K.sigmoid(x);\n}\nexports.sigmoid = sigmoid;\nfunction hardSigmoid(x) {\n    return K.hardSigmoid(x);\n}\nexports.hardSigmoid = hardSigmoid;\nfunction softplus(x) {\n    return K.softplus(x);\n}\nexports.softplus = softplus;\nfunction softsign(x) {\n    return K.softsign(x);\n}\nexports.softsign = softsign;\nfunction tanh(x) {\n    return K.tanh(x);\n}\nexports.tanh = tanh;\nfunction softmax(x, axis) {\n    if (axis === void 0) { axis = (-1); }\n    return K.softmax(x, axis);\n}\nexports.softmax = softmax;\nfunction serializeActivation(activation) {\n    return activation.name;\n}\nexports.serializeActivation = serializeActivation;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generic_utils_1 = __webpack_require__(5);\nfunction deserialize(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'layer');\n}\nexports.deserialize = deserialize;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nfunction assertParams(aShape, bShape, axis) {\n    var aRank = aShape.length;\n    var bRank = bShape.length;\n    util.assert(aShape.length === bShape.length, \"Error in concat\" + aRank + \"D: rank of x1 (\" + aRank + \") and x2 (\" + bRank + \") \" +\n        \"must be the same.\");\n    util.assert(axis >= 0 && axis < aRank, \"Error in concat\" + aRank + \"D: axis must be \" +\n        (\"between 0 and \" + (aRank - 1) + \".\"));\n    for (var i = 0; i < aRank; i++) {\n        util.assert((i === axis) || (aShape[i] === bShape[i]), \"Error in concat\" + aRank + \"D: Shape (\" + aShape + \") does not match \" +\n            (\"(\" + bShape + \") along the non-concatenated axis \" + i + \".\"));\n    }\n}\nexports.assertParams = assertParams;\nfunction computeOutShape1D(x1Shape, x2Shape) {\n    util.assert(x1Shape.length === 1 && x2Shape.length === 1, 'x1 and x2 should be 1d array.');\n    var outputShape = x1Shape.slice();\n    outputShape[0] += x2Shape[0];\n    return outputShape;\n}\nexports.computeOutShape1D = computeOutShape1D;\nfunction computeOutShape(x1Shape, x2Shape, axis) {\n    util.assert(x1Shape.length === x2Shape.length, 'x1 and x2 should have the same rank.');\n    var outputShape = x1Shape.slice();\n    outputShape[axis] += x2Shape[axis];\n    return outputShape;\n}\nexports.computeOutShape = computeOutShape;\nfunction computeGradientSliceShapes(aShape, bShape) {\n    return {\n        aBegin: [0, 0],\n        aSize: aShape,\n        bBegin: [0, aShape[1]],\n        bSize: bShape\n    };\n}\nexports.computeGradientSliceShapes = computeGradientSliceShapes;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexports.SELU_SCALE = 1.0507009873554804934193349852946;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar AdadeltaOptimizer = (function (_super) {\n    __extends(AdadeltaOptimizer, _super);\n    function AdadeltaOptimizer(learningRate, rho, epsilon) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.accumulatedGrads = {};\n        _this.accumulatedUpdates = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.rho = globals_1.keep(ops_1.scalar(rho));\n        _this.oneMinusRho = globals_1.keep(ops_1.scalar(1 - rho));\n        return _this;\n    }\n    AdadeltaOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedGrads[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedGrads[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedUpdates[variableName] == null) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedUpdates[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            var gradient = variableGradients[variableName];\n            var accumulatedGrad = this_1.accumulatedGrads[variableName];\n            var accumulatedUpdate = this_1.accumulatedUpdates[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = _this.rho.mul(accumulatedGrad)\n                    .add(_this.oneMinusRho.mul(gradient.square()));\n                var updates = accumulatedUpdate.add(_this.epsilon)\n                    .sqrt()\n                    .div(accumulatedGrad.add(_this.epsilon).sqrt())\n                    .mul(gradient);\n                var newAccumulatedUpdate = _this.rho.mul(accumulatedUpdate)\n                    .add(_this.oneMinusRho.mul(updates.square()));\n                _this.accumulatedGrads[variableName].assign(newAccumulatedGrad);\n                _this.accumulatedUpdates[variableName].assign(newAccumulatedUpdate);\n                var newValue = _this.c.mul(updates).add(value);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    AdadeltaOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.rho.dispose();\n        this.oneMinusRho.dispose();\n        if (this.accumulatedUpdates != null) {\n            Object.keys(this.accumulatedUpdates)\n                .forEach(function (name) { return _this.accumulatedUpdates[name].dispose(); });\n            Object.keys(this.accumulatedGrads)\n                .forEach(function (name) { return _this.accumulatedGrads[name].dispose(); });\n        }\n    };\n    return AdadeltaOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdadeltaOptimizer = AdadeltaOptimizer;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar AdagradOptimizer = (function (_super) {\n    __extends(AdagradOptimizer, _super);\n    function AdagradOptimizer(learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.initialAccumulatorValue = initialAccumulatorValue;\n        _this.accumulatedGrads = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(1e-8));\n        return _this;\n    }\n    AdagradOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedGrads[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedGrads[variableName] =\n                        ops_1.fill(value.shape, _this.initialAccumulatorValue)\n                            .variable(trainable_1);\n                });\n            }\n            var gradient = variableGradients[variableName];\n            var accumulatedGrad = this_1.accumulatedGrads[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = accumulatedGrad.add(gradient.square());\n                _this.accumulatedGrads[variableName].assign(newAccumulatedGrad);\n                var newValue = _this.c\n                    .mul(gradient.div(newAccumulatedGrad.add(_this.epsilon).sqrt()))\n                    .add(value);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    AdagradOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.epsilon.dispose();\n        this.c.dispose();\n        if (this.accumulatedGrads != null) {\n            Object.keys(this.accumulatedGrads)\n                .forEach(function (name) { return _this.accumulatedGrads[name].dispose(); });\n        }\n    };\n    return AdagradOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdagradOptimizer = AdagradOptimizer;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar AdamOptimizer = (function (_super) {\n    __extends(AdamOptimizer, _super);\n    function AdamOptimizer(learningRate, beta1, beta2, epsilon) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedFirstMoment = {};\n        _this.accumulatedSecondMoment = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.eps = globals_1.keep(ops_1.scalar(epsilon));\n        _this.beta1 = globals_1.keep(ops_1.scalar(beta1));\n        _this.beta2 = globals_1.keep(ops_1.scalar(beta2));\n        globals_1.tidy(function () {\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n            _this.accBeta2 = ops_1.scalar(beta2).variable();\n        });\n        _this.oneMinusBeta1 = globals_1.keep(ops_1.scalar(1 - beta1));\n        _this.oneMinusBeta2 = globals_1.keep(ops_1.scalar(1 - beta2));\n        _this.one = globals_1.keep(ops_1.scalar(1));\n        return _this;\n    }\n    AdamOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = _this.one.sub(_this.accBeta1);\n            var oneMinusAccBeta2 = _this.one.sub(_this.accBeta2);\n            for (var variableName in variableGradients) {\n                var value = environment_1.ENV.engine.registeredVariables[variableName];\n                if (_this.accumulatedFirstMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedFirstMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                if (_this.accumulatedSecondMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedSecondMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                var gradient = variableGradients[variableName];\n                var firstMoment = _this.accumulatedFirstMoment[variableName];\n                var secondMoment = _this.accumulatedSecondMoment[variableName];\n                var newFirstMoment = _this.beta1.mul(firstMoment).add(_this.oneMinusBeta1.mul(gradient));\n                var newSecondMoment = _this.beta2.mul(secondMoment)\n                    .add(_this.oneMinusBeta2.mul(gradient.square()));\n                var biasCorrectedFirstMoment = newFirstMoment.div(oneMinusAccBeta1);\n                var biasCorrectedSecondMoment = newSecondMoment.div(oneMinusAccBeta2);\n                _this.accumulatedFirstMoment[variableName].assign(newFirstMoment);\n                _this.accumulatedSecondMoment[variableName].assign(newSecondMoment);\n                var newValue = _this.c\n                    .mul(biasCorrectedFirstMoment.div(_this.eps.add(biasCorrectedSecondMoment.sqrt())))\n                    .add(value);\n                value.assign(newValue);\n            }\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n            _this.accBeta2.assign(_this.accBeta2.mul(_this.beta2));\n        });\n    };\n    AdamOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.eps.dispose();\n        this.beta1.dispose();\n        this.beta2.dispose();\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        this.oneMinusBeta1.dispose();\n        this.oneMinusBeta2.dispose();\n        this.one.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            Object.keys(this.accumulatedFirstMoment)\n                .forEach(function (name) { return _this.accumulatedFirstMoment[name].dispose(); });\n        }\n        if (this.accumulatedSecondMoment != null) {\n            Object.keys(this.accumulatedSecondMoment)\n                .forEach(function (name) { return _this.accumulatedSecondMoment[name].dispose(); });\n        }\n    };\n    return AdamOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamOptimizer = AdamOptimizer;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar AdamaxOptimizer = (function (_super) {\n    __extends(AdamaxOptimizer, _super);\n    function AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (decay === void 0) { decay = 0.0; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedFirstMoment = {};\n        _this.accumulatedWeightedInfNorm = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.eps = globals_1.keep(ops_1.scalar(epsilon));\n        _this.beta1 = globals_1.keep(ops_1.scalar(beta1));\n        _this.beta2 = globals_1.keep(ops_1.scalar(beta2));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        globals_1.tidy(function () {\n            _this.iteration = ops_1.scalar(0).variable();\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n        });\n        _this.oneMinusBeta1 = globals_1.keep(ops_1.scalar(1 - beta1));\n        _this.one = globals_1.keep(ops_1.scalar(1));\n        return _this;\n    }\n    AdamaxOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = _this.one.sub(_this.accBeta1);\n            var lr = _this.c.div(_this.one.add(_this.decay.mul(_this.iteration)));\n            for (var variableName in variableGradients) {\n                var value = environment_1.ENV.engine.registeredVariables[variableName];\n                if (_this.accumulatedFirstMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedFirstMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                if (_this.accumulatedWeightedInfNorm[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedWeightedInfNorm[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                var gradient = variableGradients[variableName];\n                var firstMoment = _this.accumulatedFirstMoment[variableName];\n                var weightedInfNorm = _this.accumulatedWeightedInfNorm[variableName];\n                var newFirstMoment = _this.beta1.mul(firstMoment).add(_this.oneMinusBeta1.mul(gradient));\n                var ut0 = _this.beta2.mul(weightedInfNorm);\n                var ut1 = gradient.abs();\n                var newWeightedInfNorm = ut0.maximum(ut1);\n                _this.accumulatedFirstMoment[variableName].assign(newFirstMoment);\n                _this.accumulatedWeightedInfNorm[variableName].assign(newWeightedInfNorm);\n                var newValue = lr.div(oneMinusAccBeta1)\n                    .mul(newFirstMoment.div(_this.eps.add(newWeightedInfNorm)))\n                    .add(value);\n                value.assign(newValue);\n            }\n            _this.iteration.assign(_this.iteration.add(_this.one));\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n        });\n    };\n    AdamaxOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.eps.dispose();\n        this.accBeta1.dispose();\n        this.beta1.dispose();\n        this.beta2.dispose();\n        this.oneMinusBeta1.dispose();\n        this.decay.dispose();\n        this.iteration.dispose();\n        this.one.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            Object.keys(this.accumulatedFirstMoment)\n                .forEach(function (name) { return _this.accumulatedFirstMoment[name].dispose(); });\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            Object.keys(this.accumulatedWeightedInfNorm)\n                .forEach(function (name) { return _this.accumulatedWeightedInfNorm[name].dispose(); });\n        }\n    };\n    return AdamaxOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamaxOptimizer = AdamaxOptimizer;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar sgd_optimizer_1 = __webpack_require__(29);\nvar MomentumOptimizer = (function (_super) {\n    __extends(MomentumOptimizer, _super);\n    function MomentumOptimizer(learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        var _this = _super.call(this, learningRate) || this;\n        _this.learningRate = learningRate;\n        _this.momentum = momentum;\n        _this.useNesterov = useNesterov;\n        _this.m = ops_1.scalar(_this.momentum);\n        _this.accumulations = {};\n        return _this;\n    }\n    MomentumOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulations[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulations[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            var accumulation = this_1.accumulations[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newValue;\n                var newAccumulation = _this.m.mul(accumulation).add(gradient);\n                if (_this.useNesterov) {\n                    newValue =\n                        _this.c.mul(gradient.add(newAccumulation.mul(_this.m))).add(value);\n                }\n                else {\n                    newValue = _this.c.mul(newAccumulation).add(value);\n                }\n                _this.accumulations[variableName].assign(newAccumulation);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    MomentumOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.m.dispose();\n        if (this.accumulations != null) {\n            for (var variableName in this.accumulations) {\n                this.accumulations[variableName].dispose();\n            }\n        }\n    };\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\n        this.momentum = momentum;\n    };\n    return MomentumOptimizer;\n}(sgd_optimizer_1.SGDOptimizer));\nexports.MomentumOptimizer = MomentumOptimizer;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops_1 = __webpack_require__(7);\nvar optimizer_1 = __webpack_require__(18);\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (centered === void 0) { centered = false; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedMeanSquares = {};\n        _this.accumulatedMeanGrads = {};\n        _this.accumulatedMoments = {};\n        _this.c = globals_1.keep(ops_1.scalar(learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        _this.momentum = globals_1.keep(ops_1.scalar(momentum));\n        _this.oneMinusDecay = globals_1.keep(ops_1.scalar(1 - decay));\n        _this.centered = centered;\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedMeanSquares[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanSquares[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedMeanGrads[variableName] == null && this_1.centered) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanGrads[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            if (this_1.accumulatedMoments[variableName] == null) {\n                var trainable_3 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMoments[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_3);\n                });\n            }\n            var accumulatedMeanSquare = this_1.accumulatedMeanSquares[variableName];\n            var accumulatedMeanGrad = this_1.accumulatedMeanGrads[variableName];\n            var accumulatedMoments = this_1.accumulatedMoments[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = _this.decay.mul(accumulatedMeanSquare)\n                    .add(_this.oneMinusDecay.mul(gradient.square()));\n                if (_this.centered) {\n                    var newAccumulatedMeanGrad = _this.decay.mul(accumulatedMeanGrad)\n                        .add(_this.oneMinusDecay.mul(gradient));\n                    var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare.sub(newAccumulatedMeanGrad.square().add(_this.epsilon)).sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare);\n                    _this.accumulatedMeanGrads[variableName].assign(newAccumulatedMeanGrad);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    var newAccumulatedMeanSquare_1 = _this.decay.mul(accumulatedMeanSquare)\n                        .add(_this.oneMinusDecay.mul(gradient.square()));\n                    var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare_1.add(_this.epsilon).sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare_1);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.decay.dispose();\n        this.momentum.dispose();\n        this.oneMinusDecay.dispose();\n        if (this.accumulatedMeanSquares != null) {\n            Object.keys(this.accumulatedMeanSquares)\n                .forEach(function (name) { return _this.accumulatedMeanSquares[name].dispose(); });\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            Object.keys(this.accumulatedMeanGrads)\n                .forEach(function (name) { return _this.accumulatedMeanGrads[name].dispose(); });\n        }\n        if (this.accumulatedMoments != null) {\n            Object.keys(this.accumulatedMoments)\n                .forEach(function (name) { return _this.accumulatedMoments[name].dispose(); });\n        }\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _epsilon = 1e-7;\nfunction epsilon() {\n    return _epsilon;\n}\nexports.epsilon = epsilon;\nfunction setEpsilon(e) {\n    _epsilon = e;\n}\nexports.setEpsilon = setEpsilon;\nfunction imageDataFormat() {\n    return 'channelsLast';\n}\nexports.imageDataFormat = imageDataFormat;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = __webpack_require__(3);\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar callbacks_1 = __webpack_require__(58);\nvar errors_1 = __webpack_require__(4);\nvar losses = __webpack_require__(43);\nvar Metrics = __webpack_require__(62);\nvar optimizers = __webpack_require__(144);\nvar generic_utils_1 = __webpack_require__(5);\nvar math_utils_1 = __webpack_require__(17);\nvar executor_1 = __webpack_require__(133);\nvar topology_1 = __webpack_require__(9);\nfunction isDataTensor(x) {\n    return x instanceof tfjs_core_1.Tensor;\n}\nexports.isDataTensor = isDataTensor;\nfunction isDataArray(x) {\n    return Array.isArray(x);\n}\nexports.isDataArray = isDataArray;\nfunction isDataDict(x) {\n    return !isDataTensor(x) && !isDataArray(x);\n}\nexports.isDataDict = isDataDict;\nfunction standardizeInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    if (names == null || names.length === 0) {\n        if (data != null) {\n            var gotUnexpectedData = false;\n            if (isDataArray(data) && data.length > 0) {\n                gotUnexpectedData = true;\n            }\n            else if (isDataDict(data)) {\n                for (var key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        gotUnexpectedData = true;\n                        break;\n                    }\n                }\n            }\n            else {\n                gotUnexpectedData = true;\n            }\n            if (gotUnexpectedData) {\n                throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \" expected no data, \" +\n                    (\"but got \" + data));\n            }\n        }\n        return [];\n    }\n    if (data == null) {\n        return names.map(function (name) { return null; });\n    }\n    var arrays;\n    if (isDataDict(data)) {\n        data = data;\n        arrays = [];\n        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n            var name_1 = names_1[_i];\n            if (data[name_1] == null) {\n                throw new errors_1.ValueError(\"No data provided for \\\"\" + name_1 + \"\\\". Need data for each key in: \" +\n                    (\"\" + names));\n            }\n            arrays.push(data[name_1]);\n        }\n    }\n    else if (isDataArray(data)) {\n        data = data;\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"model expected. Expected to see \" + names.length + \" Tensor(s), but \") +\n                (\"instead got the following list of Tensor(s): \" + data));\n        }\n        arrays = data;\n    }\n    else {\n        data = data;\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model \" + exceptionPrefix + \" expects \" + names.length + \" Tensor(s), \" +\n                (\"but only received one Tensor. Found: Tensor with shape \" + data.shape));\n        }\n        arrays = [data];\n    }\n    for (var i = 0; i < names.length; ++i) {\n        var array = arrays[i];\n        if (array.shape.length === 1) {\n            arrays[i] = K.expandDims(array, 1);\n        }\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s). but got array with \") +\n                    (\"shape \" + array.shape));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null && refDim >= 0 && dim !== refDim) {\n                    throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                        (\"to have shape [\" + shapes[i] + \"], but got array with shape \") +\n                        (\"[\" + array.shape + \"].\"));\n                }\n            }\n        }\n    }\n    return arrays;\n}\nexports.standardizeInputData = standardizeInputData;\nfunction checkArrayLengths(inputs, targets, weights) {\n    var setX = generic_utils_1.unique(inputs.map(function (input) { return input.shape[0]; }));\n    setX.sort();\n    var setY = generic_utils_1.unique(targets.map(function (target) { return target.shape[0]; }));\n    setY.sort();\n    if (setX.length > 1) {\n        throw new errors_1.ValueError(\"All input Tensors (x) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(inputs.map(function (input) { return input.shape; }))));\n    }\n    if (setY.length > 1) {\n        throw new errors_1.ValueError(\"All target Tensors (y) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(targets.map(function (target) { return target.shape; }))));\n    }\n    if (setX.length > 0 && setY.length > 0 && !tfjs_core_1.util.arraysEqual(setX, setY)) {\n        throw new errors_1.ValueError(\"Input Tensors should have the same number of samples as target \" +\n            (\"Tensors. Found \" + setX[0] + \" input sample(s) and \" + setY[0] + \" target \") +\n            \"sample(s).\");\n    }\n}\nexports.checkArrayLengths = checkArrayLengths;\nfunction checkLossAndTargetCompatibility(targets, lossFns, outputShapes) {\n    var keyLosses = [\n        losses.meanSquaredError, losses.binaryCrossentropy,\n        losses.categoricalCrossentropy\n    ];\n    for (var i = 0; i < targets.length; ++i) {\n        var y = targets[i];\n        var loss = lossFns[i];\n        var shape = outputShapes[i];\n        if (loss == null) {\n            continue;\n        }\n        if (loss === losses.categoricalCrossentropy) {\n            if (y.shape[y.shape.length - 1] === 1) {\n                throw new errors_1.ValueError(\"You are passing a target array of shape \" + y.shape + \" while using \" +\n                    \"a loss 'categorical_crossentropy'. 'categorical_crossentropy'\" +\n                    \"expects targets to be binary matrices (1s and 0s) of shape \" +\n                    \"[samples, classes].\");\n            }\n        }\n        if (keyLosses.indexOf(loss) !== -1) {\n            var slicedYShape = y.shape.slice(1);\n            var slicedShape = shape.slice(1);\n            for (var j = 0; j < slicedYShape.length; ++j) {\n                var targetDim = slicedYShape[j];\n                var outDim = slicedShape[j];\n                if (outDim != null && targetDim !== outDim) {\n                    throw new errors_1.ValueError(\"A target Tensor with shape \" + y.shape + \" was passed for an \" +\n                        (\"output of shape \" + shape + \", while using a loss function that \") +\n                        \"expects targets to have the same shape as the output.\");\n                }\n            }\n        }\n    }\n}\nfunction makeBatches(size, batchSize) {\n    var output = [];\n    var batchStart = 0;\n    var batchEnd = null;\n    while (batchStart < size) {\n        batchEnd = batchStart + batchSize;\n        if (batchEnd >= size) {\n            batchEnd = size;\n        }\n        output.push([batchStart, batchEnd]);\n        batchStart = batchEnd;\n    }\n    return output;\n}\nexports.makeBatches = makeBatches;\nfunction sliceArrays(arrays, start, stop) {\n    if (arrays == null) {\n        return [null];\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return K.sliceAlongFirstAxis(array, start, stop - start); });\n    }\n    else {\n        return K.sliceAlongFirstAxis(arrays, start, stop - start);\n    }\n}\nfunction sliceArraysByIndices(arrays, indices) {\n    if (arrays == null) {\n        return null;\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return sliceArraysByIndices(array, indices); });\n    }\n    else {\n        return K.gather(arrays, indices.dtype === 'int32' ? indices : indices.toInt());\n    }\n}\nexports.sliceArraysByIndices = sliceArraysByIndices;\nfunction checkInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    var arrays;\n    if (Array.isArray(data)) {\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"the model expected. Expected to see \" + names.length + \" Tensor(s),\") +\n                (\" but instead got \" + data.length + \" Tensors(s).\"));\n        }\n        arrays = data;\n    }\n    else {\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model expects \" + names.length + \" \" + exceptionPrefix + \" Tensors, \" +\n                \"but only received one Tensor. Found: array with shape \" +\n                (JSON.stringify(data.shape) + \".\"));\n        }\n        arrays = [data];\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s), but got array with \") +\n                    (\"shape \" + JSON.stringify(array.shape)));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null) {\n                    if (refDim !== dim) {\n                        throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" +\n                            (names[i] + \" to have shape \" + JSON.stringify(shapes[i]) + \" but \") +\n                            (\"got array with shape \" + JSON.stringify(array.shape) + \".\"));\n                    }\n                }\n            }\n        }\n    }\n}\nfunction collectMetrics(metrics, outputNames) {\n    if (metrics == null || Array.isArray(metrics) && metrics.length === 0) {\n        return outputNames.map(function (name) { return []; });\n    }\n    if (Array.isArray(metrics)) {\n        return outputNames.map(function (name) { return metrics; });\n    }\n    else if (metrics != null) {\n        var nestedMetrics = [];\n        for (var _i = 0, outputNames_1 = outputNames; _i < outputNames_1.length; _i++) {\n            var name_2 = outputNames_1[_i];\n            var outputMetrics = metrics.hasOwnProperty(name_2) ? metrics[name_2] : [];\n            if (!Array.isArray(outputMetrics)) {\n                outputMetrics = [outputMetrics];\n            }\n            nestedMetrics.push(outputMetrics);\n        }\n        return nestedMetrics;\n    }\n    else {\n        throw new TypeError('Type of metrics argument not understood. Expected an Array or ' +\n            'Object, found: ' + metrics);\n    }\n}\nvar ModelLoggingVerbosity;\n(function (ModelLoggingVerbosity) {\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"SILENT\"] = 0] = \"SILENT\";\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"VERBOSE\"] = 1] = \"VERBOSE\";\n})(ModelLoggingVerbosity = exports.ModelLoggingVerbosity || (exports.ModelLoggingVerbosity = {}));\nvar Model = (function (_super) {\n    __extends(Model, _super);\n    function Model(config) {\n        return _super.call(this, config) || this;\n    }\n    Model.prototype.getClassName = function () {\n        return 'Model';\n    };\n    Model.prototype.compile = function (config) {\n        var _this = this;\n        if (config.loss == null) {\n            config.loss = [];\n        }\n        this.loss = config.loss;\n        if (typeof config.optimizer === 'string') {\n            this.optimizer = optimizers.getOptimizer(config.optimizer);\n        }\n        else {\n            if (!(config.optimizer instanceof tfjs_core_1.Optimizer)) {\n                throw new errors_1.ValueError(\"User-defined optimizer must be an instance of tf.Optimizer.\");\n            }\n            this.optimizer = config.optimizer;\n        }\n        var lossFunctions = [];\n        if (!Array.isArray(config.loss) && typeof config.loss !== 'string' &&\n            typeof config.loss !== 'function') {\n            config.loss = config.loss;\n            for (var name_3 in config.loss) {\n                if (this.outputNames.indexOf(name_3) === -1) {\n                    throw new errors_1.ValueError(\"Unknown entry in loss dictionary: \\\"\" + name_3 + \"\\\". Only expect the \" +\n                        (\"following keys: \" + this.outputNames));\n                }\n            }\n            for (var name_4 in this.outputNames) {\n                if (config.loss[name_4] == null) {\n                    console.warn(\"Output \\\"\" + name_4 + \"\\\" is missing from loss dictionary. We assume \" +\n                        \"this was done on purpose, and we will not be expecting data \" +\n                        (\"to be passed to \" + name_4 + \" during training\"));\n                }\n                lossFunctions.push(losses.get(config.loss[name_4]));\n            }\n        }\n        else if (Array.isArray(config.loss)) {\n            if (config.loss.length !== this.outputs.length) {\n                throw new errors_1.ValueError(\"When passing an Array as loss, it should have one entry per \" +\n                    (\"model output. The model has \" + this.outputs.length + \" output(s), \") +\n                    (\"but you passed loss=\" + config.loss + \".\"));\n            }\n            var theLosses = config.loss;\n            lossFunctions = theLosses.map(function (l) { return losses.get(l); });\n        }\n        else {\n            var lossFunction_1 = losses.get(config.loss);\n            this.outputs.map(function (layer) {\n                lossFunctions.push(lossFunction_1);\n            });\n        }\n        this.lossFunctions = lossFunctions;\n        this.feedOutputNames = [];\n        this.feedOutputShapes = [];\n        this.feedLossFns = [];\n        for (var i = 0; i < this.outputs.length; ++i) {\n            var shape = this.internalOutputShapes[i];\n            var name_5 = this.outputNames[i];\n            this.feedOutputNames.push(name_5);\n            this.feedOutputShapes.push(shape);\n            this.feedLossFns.push(this.lossFunctions[i]);\n        }\n        var skipTargetIndices = [];\n        this.metrics = config.metrics;\n        this.metricsNames = ['loss'];\n        this.metricsTensors = [];\n        K.nameScope('loss', function () {\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    continue;\n                }\n                var weightedLoss = _this.lossFunctions[i];\n                if (_this.outputs.length > 1) {\n                    _this.metricsTensors.push([weightedLoss, i]);\n                    _this.metricsNames.push(_this.outputNames[i] + '_loss');\n                }\n            }\n        });\n        var nestedMetrics = collectMetrics(config.metrics, this.outputNames);\n        var appendMetric = function (outputIndex, metricName, metricTensor) {\n            if (_this.outputNames.length > 1) {\n                metricName = _this.outputNames[outputIndex] + '_' + metricName;\n            }\n            _this.metricsNames.push(metricName);\n            _this.metricsTensors.push([metricTensor, outputIndex]);\n        };\n        K.nameScope('metric', function () {\n            var _loop_1 = function (i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    return \"continue\";\n                }\n                var outputMetrics = nestedMetrics[i];\n                var handleMetrics = function (metrics) {\n                    var metricNamePrefix = '';\n                    var metricName;\n                    var accFn;\n                    var weightedMetricFn;\n                    var _loop_2 = function (metric) {\n                        if (['accuracy', 'acc', 'crossentropy', 'ce'].indexOf(metric) !==\n                            -1) {\n                            var outputShape = _this.internalOutputShapes[i];\n                            if (outputShape[outputShape.length - 1] === 1 ||\n                                _this.lossFunctions[i] === losses.binaryCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryCrossentropy;\n                                }\n                            }\n                            else if (_this.lossFunctions[i] ===\n                                losses.sparseCategoricalCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalCrossentropy;\n                                }\n                            }\n                            else {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalCrossentropy;\n                                }\n                            }\n                            var suffix = void 0;\n                            if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                suffix = 'acc';\n                            }\n                            else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                suffix = 'ce';\n                            }\n                            weightedMetricFn = accFn;\n                            metricName = metricNamePrefix + suffix;\n                        }\n                        else {\n                            var metricFn = Metrics.get(metric);\n                            weightedMetricFn = metricFn;\n                            metricName = metricNamePrefix + metric;\n                        }\n                        var metricResult;\n                        K.nameScope(metricName, function () {\n                            metricResult = weightedMetricFn;\n                        });\n                        appendMetric(i, metricName, metricResult);\n                    };\n                    for (var _i = 0, metrics_1 = metrics; _i < metrics_1.length; _i++) {\n                        var metric = metrics_1[_i];\n                        _loop_2(metric);\n                    }\n                };\n                handleMetrics(outputMetrics);\n            };\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                _loop_1(i);\n            }\n        });\n        this.collectedTrainableWeights = this.trainableWeights;\n    };\n    Model.prototype.checkTrainableWeightsConsistency = function () {\n        if (this.collectedTrainableWeights == null) {\n            return;\n        }\n        if (this.trainableWeights.length !==\n            this.collectedTrainableWeights.length) {\n            console.warn('Discrepancy between trainableweights and collected trainable ' +\n                'weights. Did you set `model.trainable` without calling ' +\n                '`model.compile()` afterwards?');\n        }\n    };\n    Model.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        var standardizedOuts = this.standardizeUserData(x, y, true, batchSize);\n        var ins = standardizedOuts[0].concat(standardizedOuts[1]);\n        this.makeTestFunction();\n        var f = this.testFunction;\n        var testOuts = this.testLoop(f, ins, batchSize, config.verbose, config.steps);\n        return generic_utils_1.singletonOrArray(testOuts);\n    };\n    Model.prototype.checkNumSamples = function (ins, batchSize, steps, stepsName) {\n        if (stepsName === void 0) { stepsName = 'steps'; }\n        var numSamples;\n        if (steps != null) {\n            numSamples = null;\n            if (batchSize != null) {\n                throw new errors_1.ValueError(\"If \" + stepsName + \" is set, batchSize must be null or undefined.\" +\n                    (\"Got batchSize = \" + batchSize));\n            }\n        }\n        else if (ins != null) {\n            if (Array.isArray(ins)) {\n                numSamples = ins[0].shape[0];\n            }\n            else {\n                numSamples = ins.shape[0];\n            }\n        }\n        else {\n            throw new errors_1.ValueError(\"Either the input data should have a defined shape, or \" +\n                (stepsName + \" shoud be specified.\"));\n        }\n        return numSamples;\n    };\n    Model.prototype.predictLoop = function (ins, batchSize, verbose) {\n        var _this = this;\n        if (batchSize === void 0) { batchSize = 32; }\n        if (verbose === void 0) { verbose = false; }\n        var numSamples = this.checkNumSamples(ins);\n        if (verbose) {\n            throw new errors_1.NotImplementedError('Verbose predictLoop() is not implemented yet.');\n        }\n        var batches = makeBatches(numSamples, batchSize);\n        var outs = [];\n        var _loop_3 = function (batchIndex) {\n            var batchOuts = tfc.tidy(function () {\n                var batchStart = batches[batchIndex][0];\n                var batchEnd = batches[batchIndex][1];\n                var insBatch = sliceArrays(ins, batchStart, batchEnd);\n                var feeds = [];\n                if (Array.isArray(insBatch)) {\n                    for (var i = 0; i < insBatch.length; ++i) {\n                        feeds.push({ key: _this.inputs[i], value: insBatch[i] });\n                    }\n                }\n                else {\n                    feeds.push({ key: _this.inputs[0], value: insBatch });\n                }\n                var feedDict = new executor_1.FeedDict(feeds);\n                return executor_1.execute(_this.outputs, feedDict);\n            });\n            if (batchIndex === 0) {\n                for (var _i = 0, batchOuts_1 = batchOuts; _i < batchOuts_1.length; _i++) {\n                    var batchOut = batchOuts_1[_i];\n                    outs.push(batchOut);\n                }\n            }\n            else {\n                for (var i = 0; i < batchOuts.length; ++i) {\n                    outs[i] = K.concatAlongFirstAxis(outs[i], batchOuts[i]);\n                }\n            }\n        };\n        for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n            _loop_3(batchIndex);\n        }\n        return generic_utils_1.singletonOrArray(outs);\n    };\n    Model.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        checkInputData(x, this.inputNames, this.feedInputShapes, false);\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        return this.predictLoop(x, batchSize);\n    };\n    Model.prototype.predictOnBatch = function (x) {\n        checkInputData(x, this.inputNames, this.feedInputShapes, true);\n        return this.predictLoop(x, x.shape[0]);\n    };\n    Model.prototype.standardizeUserData = function (x, y, checkBatchAxis, batchSize) {\n        if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n        if (this.optimizer == null) {\n            throw new errors_1.RuntimeError('You must compile a model before training/testing. Use ' +\n                'Model.compile(modelCompileConfig).');\n        }\n        var outputShapes = [];\n        for (var i = 0; i < this.feedOutputShapes.length; ++i) {\n            var outputShape = this.feedOutputShapes[i];\n            var lossFn = this.feedLossFns[i];\n            if (lossFn === losses.sparseCategoricalCrossentropy) {\n                outputShapes.push(outputShape.slice(0, outputShape.length - 1).concat([1]));\n            }\n            else {\n                outputShapes.push(outputShape);\n            }\n        }\n        x = standardizeInputData(x, this.feedInputNames, this.feedInputShapes, false, 'input');\n        y = standardizeInputData(y, this.feedOutputNames, outputShapes, false, 'target');\n        checkArrayLengths(x, y, null);\n        checkLossAndTargetCompatibility(y, this.feedLossFns, this.feedOutputShapes);\n        if (this.stateful && batchSize != null && batchSize > 0) {\n            if (x[0].shape[0] % batchSize !== 0) {\n                throw new errors_1.ValueError(\"In a stateful network, you should only pass inputs with a \" +\n                    \"number of samples that is divisible by the batch size \" +\n                    (batchSize + \". Found: \" + x[0].shape[0] + \" sample(s).\"));\n            }\n        }\n        return [x, y, null];\n    };\n    Model.prototype.fitLoop = function (f, ins, outLabels, batchSize, epochs, verbose, callbacks, valF, valIns, shuffle, callbackMetrics, initialEpoch, stepsPerEpoch, validationSteps) {\n        if (initialEpoch === void 0) { initialEpoch = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var doValidation, numTrainSamples, indexArray, callbackList, _loop_4, epoch;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (batchSize == null) {\n                            batchSize = 32;\n                        }\n                        if (epochs == null) {\n                            epochs = 100;\n                        }\n                        if (shuffle == null) {\n                            shuffle = true;\n                        }\n                        if (initialEpoch == null) {\n                            initialEpoch = 0;\n                        }\n                        doValidation = false;\n                        if (valF != null && valIns != null) {\n                            doValidation = true;\n                        }\n                        if (validationSteps != null) {\n                            doValidation = true;\n                            if (stepsPerEpoch == null) {\n                                throw new errors_1.ValueError('Can only use `validationSteps` when doing step-wise training, ' +\n                                    'i.e., `stepsPerEpoch` must be set.');\n                            }\n                        }\n                        numTrainSamples = this.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n                        if (numTrainSamples != null) {\n                            indexArray = math_utils_1.range(0, numTrainSamples);\n                        }\n                        this.history = new callbacks_1.History();\n                        if (callbacks == null) {\n                            callbacks = [new callbacks_1.BaseLogger()];\n                        }\n                        else {\n                            callbacks = [new callbacks_1.BaseLogger()].concat(callbacks);\n                        }\n                        callbacks = callbacks.concat([this.history]);\n                        if (verbose > 0) {\n                            throw new errors_1.NotImplementedError('Verbose mode is not implemented yet.');\n                        }\n                        callbackList = new callbacks_1.CallbackList(callbacks);\n                        callbackList.setModel(this);\n                        callbackList.setParams({\n                            epochs: epochs,\n                            steps: stepsPerEpoch,\n                            verbose: verbose,\n                            doValidation: doValidation,\n                            metrics: callbackMetrics,\n                        });\n                        return [4, callbackList.onTrainBegin()];\n                    case 1:\n                        _a.sent();\n                        _loop_4 = function (epoch) {\n                            var epochLogs, epochIndexArray1D_1, batches_1, _loop_5, batchIndex;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4, callbackList.onEpochBegin(epoch)];\n                                    case 1:\n                                        _a.sent();\n                                        epochLogs = {};\n                                        if (!(stepsPerEpoch != null)) return [3, 2];\n                                        throw new errors_1.NotImplementedError('stepsPerEpoch mode is not implemented yet.');\n                                    case 2:\n                                        if (shuffle === 'batch') {\n                                            throw new errors_1.NotImplementedError('batch shuffling is not implemneted yet');\n                                        }\n                                        else if (shuffle) {\n                                            tfjs_core_1.util.shuffle(indexArray);\n                                        }\n                                        epochIndexArray1D_1 = tfjs_core_1.tensor1d(indexArray);\n                                        batches_1 = makeBatches(numTrainSamples, batchSize);\n                                        _loop_5 = function (batchIndex) {\n                                            var batchLogs;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        batchLogs = {};\n                                                        return [4, callbackList.onBatchBegin(batchIndex, batchLogs)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        tfc.tidy(function () {\n                                                            var batchStart = batches_1[batchIndex][0];\n                                                            var batchEnd = batches_1[batchIndex][1];\n                                                            var batchIds = K.sliceAlongFirstAxis(epochIndexArray1D_1, batchStart, batchEnd - batchStart);\n                                                            batchLogs['batch'] = batchIndex;\n                                                            batchLogs['size'] = batchEnd - batchStart;\n                                                            var insBatch = sliceArraysByIndices(ins, batchIds);\n                                                            var outs = f(insBatch);\n                                                            for (var i = 0; i < outLabels.length; ++i) {\n                                                                var label = outLabels[i];\n                                                                var out = outs[i];\n                                                                batchLogs[label] = out;\n                                                                K.keep(out);\n                                                            }\n                                                            if (batchIndex === batches_1.length - 1) {\n                                                                if (doValidation) {\n                                                                    var valOuts = _this.testLoop(valF, valIns, batchSize);\n                                                                    for (var i = 0; i < outLabels.length; ++i) {\n                                                                        var label = outLabels[i];\n                                                                        var out = valOuts[i];\n                                                                        K.keep(out);\n                                                                        epochLogs['val_' + label] = out;\n                                                                    }\n                                                                }\n                                                            }\n                                                        });\n                                                        return [4, callbackList.onBatchEnd(batchIndex, batchLogs)];\n                                                    case 2:\n                                                        _a.sent();\n                                                        callbacks_1.disposeTensorsInLogs(batchLogs);\n                                                        return [2];\n                                                }\n                                            });\n                                        };\n                                        batchIndex = 0;\n                                        _a.label = 3;\n                                    case 3:\n                                        if (!(batchIndex < batches_1.length)) return [3, 6];\n                                        return [5, _loop_5(batchIndex)];\n                                    case 4:\n                                        _a.sent();\n                                        _a.label = 5;\n                                    case 5:\n                                        ++batchIndex;\n                                        return [3, 3];\n                                    case 6:\n                                        epochIndexArray1D_1.dispose();\n                                        _a.label = 7;\n                                    case 7: return [4, callbackList.onEpochEnd(epoch, epochLogs)];\n                                    case 8:\n                                        _a.sent();\n                                        return [2];\n                                }\n                            });\n                        };\n                        epoch = initialEpoch;\n                        _a.label = 2;\n                    case 2:\n                        if (!(epoch < epochs)) return [3, 5];\n                        return [5, _loop_4(epoch)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        ++epoch;\n                        return [3, 2];\n                    case 5: return [4, callbackList.onTrainEnd()];\n                    case 6:\n                        _a.sent();\n                        return [4, this.history.syncData()];\n                    case 7:\n                        _a.sent();\n                        return [2, this.history];\n                }\n            });\n        });\n    };\n    Model.prototype.testLoop = function (f, ins, batchSize, verbose, steps) {\n        if (verbose === void 0) { verbose = 0; }\n        var numSamples = this.checkNumSamples(ins, batchSize, steps, 'steps');\n        var outs = [];\n        if (verbose === 1) {\n            throw new errors_1.NotImplementedError('Verbose mode is not implemented yet.');\n        }\n        if (steps != null) {\n            throw new errors_1.NotImplementedError('steps mode in testLoop() is not implemented yet');\n        }\n        else {\n            var batches = makeBatches(numSamples, batchSize);\n            var indexArray = tfjs_core_1.tensor1d(math_utils_1.range(0, numSamples));\n            for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n                var batchStart = batches[batchIndex][0];\n                var batchEnd = batches[batchIndex][1];\n                var batchIds = K.sliceAlongFirstAxis(indexArray, batchStart, batchEnd - batchStart);\n                var insBatch = sliceArraysByIndices(ins, batchIds);\n                var batchOuts = f(insBatch);\n                if (batchIndex === 0) {\n                    for (var i = 0; i < batchOuts.length; ++i) {\n                        outs.push(K.getScalar(0));\n                    }\n                }\n                for (var i = 0; i < batchOuts.length; ++i) {\n                    var batchOut = batchOuts[i];\n                    outs[i] =\n                        K.add(outs[i], K.scalarTimesArray(K.getScalar(batchEnd - batchStart), batchOut));\n                }\n            }\n            for (var i = 0; i < outs.length; ++i) {\n                outs[i] = K.divide(outs[i], K.getScalar(numSamples));\n            }\n        }\n        return outs;\n    };\n    Model.prototype.getDedupedMetricsNames = function () {\n        var outLabels = this.metricsNames;\n        var dedupedOutLabels = [];\n        for (var i = 0; i < outLabels.length; ++i) {\n            var label = outLabels[i];\n            var newLabel = label;\n            if (generic_utils_1.count(outLabels, label) > 1) {\n                var dupIndex = generic_utils_1.count(outLabels.slice(0, i), label);\n                newLabel += \"_\" + dupIndex;\n            }\n            dedupedOutLabels.push(newLabel);\n        }\n        return dedupedOutLabels;\n    };\n    Model.prototype.makeTestFunction = function () {\n        var _this = this;\n        this.testFunction = function (data) {\n            return tfc.tidy(function () {\n                var valOutputs = [];\n                var totalLoss;\n                var inputs = data.slice(0, _this.inputs.length);\n                var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                var feeds = [];\n                for (var i = 0; i < _this.inputs.length; ++i) {\n                    feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                }\n                var feedDict = new executor_1.FeedDict(feeds);\n                var outputs = executor_1.execute(_this.outputs, feedDict);\n                for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                    var lossFunction = _this.lossFunctions[i];\n                    var loss = K.mean(lossFunction(targets[i], outputs[i]));\n                    if (i === 0) {\n                        totalLoss = loss;\n                    }\n                    else {\n                        totalLoss = K.add(totalLoss, loss);\n                    }\n                    valOutputs.push(totalLoss);\n                }\n                for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                    var metric = _this.metricsTensors[i][0];\n                    var outputIndex = _this.metricsTensors[i][1];\n                    var meanMetric = K.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                    valOutputs.push(meanMetric);\n                }\n                return valOutputs;\n            });\n        };\n    };\n    Model.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var batchSize, standardizedOuts, inputs, targets, doValidation, valX, valY, valIns, valStandardized, splitAt, originalBatchSize, ins, trainFunction, outLabels, valFunction, callbackMetrics, callbacks;\n            return __generator(this, function (_a) {\n                batchSize = config.batchSize == null ? 32 : config.batchSize;\n                standardizedOuts = this.standardizeUserData(x, y, false, batchSize);\n                inputs = standardizedOuts[0];\n                targets = standardizedOuts[1];\n                doValidation = false;\n                if (config.validationData != null && config.validationData.length > 0) {\n                    doValidation = true;\n                    if (config.validationData.length === 2) {\n                        valX = config.validationData[0];\n                        valY = config.validationData[1];\n                    }\n                    else if (config.validationData.length === 3) {\n                        throw new errors_1.NotImplementedError('validationData including sample weights is not supported yet.');\n                    }\n                    else {\n                        throw new errors_1.ValueError(\"When passing validation data, it must contain 2 (valX, valY) \" +\n                            \"or 3 (valX, valY, valSampleWeight) items; \" +\n                            (config.validationData + \" is invalid.\"));\n                    }\n                    valStandardized = this.standardizeUserData(valX, valY, true, batchSize);\n                    valX = valStandardized[0];\n                    valY = valStandardized[1];\n                    valIns = valX.concat(valY);\n                }\n                else if (config.validationSplit != null && config.validationSplit > 0 &&\n                    config.validationSplit < 1) {\n                    doValidation = true;\n                    splitAt = Math.floor(inputs[0].shape[0] * (1 - config.validationSplit));\n                    originalBatchSize = inputs[0].shape[0];\n                    valX = sliceArrays(inputs, splitAt, originalBatchSize);\n                    inputs = sliceArrays(inputs, 0, splitAt);\n                    valY = sliceArrays(targets, splitAt, originalBatchSize);\n                    targets = sliceArrays(targets, 0, splitAt);\n                    valIns = valX.concat(valY);\n                }\n                else if (config.validationSteps != null) {\n                    doValidation = true;\n                }\n                ins = inputs.concat(targets);\n                this.checkTrainableWeightsConsistency();\n                trainFunction = function (data) {\n                    var losses = [];\n                    var lossValues = [];\n                    var inputs = data.slice(0, _this.inputs.length);\n                    var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                    var metricsValues = [];\n                    var totalLossFunction = function () {\n                        var feeds = [];\n                        for (var i = 0; i < _this.inputs.length; ++i) {\n                            feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                        }\n                        var feedDict = new executor_1.FeedDict(feeds);\n                        var outputs = executor_1.execute(_this.outputs, feedDict, { 'training': true });\n                        var totalLoss;\n                        for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                            var lossFunction = _this.lossFunctions[i];\n                            var loss = lossFunction(targets[i], outputs[i]);\n                            losses.push(loss);\n                            var meanLoss = K.mean(loss);\n                            lossValues.push(meanLoss);\n                            if (i === 0) {\n                                totalLoss = loss;\n                            }\n                            else {\n                                totalLoss = K.add(totalLoss, loss);\n                            }\n                        }\n                        for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                            var metric = _this.metricsTensors[i][0];\n                            var outputIndex = _this.metricsTensors[i][1];\n                            var meanMetric = K.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                            K.keep(meanMetric);\n                            metricsValues.push(meanMetric);\n                        }\n                        totalLoss = K.mean(totalLoss);\n                        _this.calculateLosses().forEach(function (regularizerLoss) {\n                            totalLoss = K.add(totalLoss, regularizerLoss);\n                        });\n                        return totalLoss;\n                    };\n                    var variables = _this.collectedTrainableWeights.map(function (param) { return param.read(); });\n                    var returnCost = true;\n                    var totalLossValue = _this.optimizer.minimize(totalLossFunction, returnCost, variables);\n                    return [totalLossValue].concat(metricsValues);\n                };\n                outLabels = this.getDedupedMetricsNames();\n                if (doValidation) {\n                    this.makeTestFunction();\n                    valFunction = this.testFunction;\n                    callbackMetrics =\n                        outLabels.slice().concat(outLabels.map(function (n) { return 'val_' + n; }));\n                }\n                else {\n                    valFunction = null;\n                    valIns = [];\n                    callbackMetrics = outLabels.slice();\n                }\n                callbacks = callbacks_1.standardizeCallbacks(config.callbacks);\n                return [2, this.fitLoop(trainFunction, ins, outLabels, batchSize, config.epochs, config.verbose, callbacks, valFunction, valIns, config.shuffle, callbackMetrics, null, null, null)];\n            });\n        });\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [0] })\n    ], Model.prototype, \"compile\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Model.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Model.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Model.prototype, \"predictOnBatch\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Model.prototype, \"fit\", null);\n    Model = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Model);\n    return Model;\n}(topology_1.Container));\nexports.Model = Model;\ngeneric_utils_1.ClassNameMap.register('Model', Model);\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = __webpack_require__(6);\nvar errors_1 = __webpack_require__(4);\nfunction meanSquaredError(yTrue, yPred) {\n    return K.mean(K.square(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanSquaredError = meanSquaredError;\nfunction meanAbsoluteError(yTrue, yPred) {\n    return K.mean(K.abs(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanAbsoluteError = meanAbsoluteError;\nfunction meanAbsolutePercentageError(yTrue, yPred) {\n    var diff = K.subtract(yTrue, yPred);\n    var clippedTrue = K.clip(K.abs(yTrue), K.epsilon(), Number.MAX_VALUE);\n    var absResult = K.abs(K.divide(diff, clippedTrue));\n    return K.scalarTimesArray(K.getScalar(100.0), K.mean(absResult, -1));\n}\nexports.meanAbsolutePercentageError = meanAbsolutePercentageError;\nfunction meanSquaredLogarithmicError(yTrue, yPred) {\n    var one = K.getScalar(1.0);\n    var clippedPred = K.clip(yPred, K.epsilon(), Number.MAX_VALUE);\n    var firstLog = K.log(K.scalarPlusArray(one, clippedPred));\n    var clippedTrue = K.clip(yTrue, K.epsilon(), Number.MAX_VALUE);\n    var secondLog = K.log(K.scalarPlusArray(one, clippedTrue));\n    return K.mean(K.square(K.subtract(firstLog, secondLog)), -1);\n}\nexports.meanSquaredLogarithmicError = meanSquaredLogarithmicError;\nfunction squaredHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(K.square(maxResult), -1);\n}\nexports.squaredHinge = squaredHinge;\nfunction hinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(maxResult, -1);\n}\nexports.hinge = hinge;\nfunction categoricalHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var pos = K.sum(K.multiply(yTrue, yPred), -1);\n    var neg = K.max(K.multiply(K.subtract(one, yTrue), yPred), -1);\n    return K.maximum(zeroTensor, K.scalarPlusArray(one, K.subtract(neg, pos)));\n}\nexports.categoricalHinge = categoricalHinge;\nfunction logcosh(yTrue, yPred) {\n    var log2 = K.getScalar(Math.log(2.0));\n    var predictionDiff = K.subtract(yPred, yTrue);\n    var logcoshResult = K.subtract(K.add(predictionDiff, K.softplus(K.scalarTimesArray(K.getScalar(-2.0), predictionDiff))), log2);\n    return K.mean(logcoshResult, -1);\n}\nexports.logcosh = logcosh;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    return K.categoricalCrossentropy(yTrue, yPred);\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    return K.sparseCategoricalCrossentropy(yTrue, yPred);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction kullbackLeiblerDivergence(yTrue, yPred) {\n    var clippedTrue = K.clip(yTrue, K.epsilon(), 1);\n    var clippedPred = K.clip(yPred, K.epsilon(), 1);\n    return K.sum(K.multiply(yTrue, K.log(K.divide(clippedTrue, clippedPred))), -1);\n}\nexports.kullbackLeiblerDivergence = kullbackLeiblerDivergence;\nfunction poisson(yTrue, yPred) {\n    var logPred = K.log(K.scalarPlusArray(K.getScalar(K.epsilon()), yPred));\n    return K.mean(K.subtract(yPred, K.multiply(yTrue, logPred)), -1);\n}\nexports.poisson = poisson;\nfunction cosineProximity(yTrue, yPred) {\n    var trueNormalized = K.l2Normalize(yTrue, -1);\n    var predNormalized = K.l2Normalize(yPred, -1);\n    var trueXPred = K.multiply(trueNormalized, predNormalized);\n    return K.neg(K.sum(trueXPred, -1));\n}\nexports.cosineProximity = cosineProximity;\nexports.mse = meanSquaredError;\nexports.MSE = meanSquaredError;\nexports.mae = meanAbsoluteError;\nexports.MAE = meanAbsoluteError;\nexports.mape = meanAbsolutePercentageError;\nexports.MAPE = meanAbsolutePercentageError;\nexports.msle = meanSquaredLogarithmicError;\nexports.MSLE = meanSquaredLogarithmicError;\nexports.kld = kullbackLeiblerDivergence;\nexports.KLD = kullbackLeiblerDivergence;\nexports.cosine = cosineProximity;\nfunction get(identifierOrFn) {\n    var lossesMap = {\n        meanSquaredError: meanSquaredError,\n        meanAbsoluteError: meanAbsoluteError,\n        meanAbsolutePercentageError: meanAbsolutePercentageError,\n        meanSquaredLogarithmicError: meanSquaredLogarithmicError,\n        squaredHinge: squaredHinge,\n        hinge: hinge,\n        categoricalHinge: categoricalHinge,\n        logcosh: logcosh,\n        categoricalCrossentropy: categoricalCrossentropy,\n        sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n        binaryCrossentropy: binaryCrossentropy,\n        kullbackLeiblerDivergence: kullbackLeiblerDivergence,\n        poisson: poisson,\n        cosineProximity: cosineProximity\n    };\n    if (typeof identifierOrFn === 'string') {\n        if (identifierOrFn in lossesMap) {\n            return lossesMap[identifierOrFn];\n        }\n        throw new errors_1.ValueError(\"Unknown loss \" + identifierOrFn);\n    }\n    else {\n        return identifierOrFn;\n    }\n}\nexports.get = get;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(4);\nvar generic_utils_1 = __webpack_require__(5);\nvar math_utils_1 = __webpack_require__(17);\nfunction normalizeArray(value, n, name) {\n    if (typeof value === 'number') {\n        return generic_utils_1.pyListRepeat(value, n);\n    }\n    else {\n        if (value.length !== n) {\n            throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                (value.length + \" elements.\"));\n        }\n        for (var i = 0; i < n; ++i) {\n            var singleValue = value[i];\n            if (!math_utils_1.isInteger(singleValue)) {\n                throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                    (JSON.stringify(value) + \" including a non-integer number \") +\n                    (\"\" + singleValue));\n            }\n        }\n        return value;\n    }\n}\nexports.normalizeArray = normalizeArray;\nfunction convOutputLength(inputLength, fliterSize, padding, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    if (inputLength == null) {\n        return inputLength;\n    }\n    var dilatedFilterSize = fliterSize + (fliterSize - 1) * (dilation - 1);\n    var outputLength;\n    if (padding === 'same') {\n        outputLength = inputLength;\n    }\n    else {\n        outputLength = inputLength - dilatedFilterSize + 1;\n    }\n    return Math.floor((outputLength + stride - 1) / stride);\n}\nexports.convOutputLength = convOutputLength;\nfunction deconvLength(dimSize, strideSize, kernelSize, padding) {\n    if (dimSize == null) {\n        return null;\n    }\n    if (padding === 'valid') {\n        dimSize = dimSize * strideSize + math_utils_1.max([kernelSize - strideSize, 0]);\n    }\n    else if (padding === 'same') {\n        dimSize = dimSize * strideSize;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupport padding mode: \" + padding + \".\");\n    }\n    return dimSize;\n}\nexports.deconvLength = deconvLength;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(163);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __1 = __webpack_require__(3);\nvar array_ops_1 = __webpack_require__(28);\nfunction castTensor(x, dtype, backend) {\n    if (!__1.util.hasEncodingLoss(x.dtype, dtype)) {\n        return __1.Tensor.make(x.shape, { dataId: x.dataId }, dtype);\n    }\n    if (dtype === 'int32') {\n        return backend.int(x);\n    }\n    else if (dtype === 'bool') {\n        return backend.notEqual(x, array_ops_1.ArrayOps.scalar(0, x.dtype));\n    }\n    else {\n        throw new Error(\"Error in Cast: unknown dtype argument (\" + dtype + \")\");\n    }\n}\nexports.castTensor = castTensor;\nfunction reshapeTensor(x, shape) {\n    return __1.Tensor.make(shape, { dataId: x.dataId }, x.dtype);\n}\nexports.reshapeTensor = reshapeTensor;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = __webpack_require__(16);\nvar CHECK_NAN_SNIPPET = \"\\n  if (isNaN(a)) return a;\\n  if (isNaN(b)) return b;\\n\";\nexports.ADD = 'return a + b;';\nexports.SUB = 'return a - b;';\nexports.MUL = 'return a * b;';\nexports.DIV = 'return a / b;';\nexports.INT_DIV = \"\\n  float resultSign = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  int result = ia / ib;\\n  int amodb = ia - ib * result;\\n\\n  if (resultSign < 0.0 && amodb != 0) {\\n    result -= 1;\\n  }\\n  return float(result);\\n\";\nexports.POW = \"\\n  return (round(mod(b, 2.0)) == 0 || round(mod(b, 2.0)) == 2) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nexports.SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexports.EQUAL = \"return float(a == b);\";\nexports.NOT_EQUAL = \"return float(a != b);\";\nexports.LESS = \"return float(a < b);\";\nexports.LESS_EQUAL = \"return float(a <= b);\";\nexports.GREATER = \"return float(a > b);\";\nexports.GREATER_EQUAL = \"return float(a >= b);\";\nexports.LOGICAL_AND = \"return float(a >= 1.0 && b >= 1.0);\";\nexports.LOGICAL_OR = \"return float(a >= 1.0 || b >= 1.0);\";\nexports.MAX = CHECK_NAN_SNIPPET + \"\\n  return max(a, b);\\n\";\nexports.MIN = CHECK_NAN_SNIPPET + \"\\n  return min(a, b);\\n\";\nexports.MOD = \"return mod(a, b);\";\nexports.ATAN2 = CHECK_NAN_SNIPPET + \"\\n  return atan(a, b);\\n\";\nexports.ELU_DER = \"return (b >= 1.0) ? a : a * (b + 1.0);\";\nvar BinaryOpProgram = (function () {\n    function BinaryOpProgram(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n    }\n    return BinaryOpProgram;\n}());\nexports.BinaryOpProgram = BinaryOpProgram;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar tex_util = __webpack_require__(25);\nvar webgl_util = __webpack_require__(27);\nfunction getWebGLContextAttributes() {\n    return {\n        alpha: false,\n        antialias: false,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false,\n        depth: false,\n        stencil: false,\n        failIfMajorPerformanceCaveat: true\n    };\n}\nexports.getWebGLContextAttributes = getWebGLContextAttributes;\nfunction createWebGLContext(canvas) {\n    var attributes = getWebGLContextAttributes();\n    var gl;\n    if (canvas != null) {\n        gl = webgl_util.createWebGLRenderingContextFromCanvas(canvas, attributes);\n    }\n    else {\n        gl = webgl_util.createWebGLRenderingContext(attributes);\n    }\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DEPTH_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.STENCIL_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.BLEND); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DITHER); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.POLYGON_OFFSET_FILL); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.SAMPLE_COVERAGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.SCISSOR_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.CULL_FACE); });\n    webgl_util.callAndCheck(gl, function () { return gl.cullFace(gl.BACK); });\n    return gl;\n}\nexports.createWebGLContext = createWebGLContext;\nfunction createVertexShader(gl) {\n    var vertexShaderSource = \"\\n    precision highp float;\\n    attribute vec3 clipSpacePos;\\n    attribute vec2 uv;\\n    varying vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexports.createVertexShader = createVertexShader;\nfunction createVertexBuffer(gl) {\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexports.createVertexBuffer = createVertexBuffer;\nfunction createIndexBuffer(gl) {\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nexports.createIndexBuffer = createIndexBuffer;\nfunction getTextureInternalFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA32F;\n        }\n        return gl.R32F;\n    }\n    return gl.RGBA;\n}\nfunction getTextureFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA;\n        }\n        return gl.RED;\n    }\n    return gl.RGBA;\n}\nfunction getTextureType(gl) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.UNSIGNED_BYTE;\n    }\n    return gl.FLOAT;\n}\nfunction createAndConfigureTexture(gl, width, height, numChannels) {\n    webgl_util.validateTextureSize(gl, width, height);\n    var texture = webgl_util.createTexture(gl);\n    var tex2d = gl.TEXTURE_2D;\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\n    var format = getTextureFormat(gl, numChannels);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), null); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n    return texture;\n}\nfunction createMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 1;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createMatrixTexture = createMatrixTexture;\nfunction createColorMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getColorMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createColorMatrixTexture = createColorMatrixTexture;\nfunction createPackedMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createPackedMatrixTexture = createPackedMatrixTexture;\nfunction bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\n    var posOffset = 0;\n    var uvOffset = 3 * 4;\n    var stride = (3 * 4) + (2 * 4);\n    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\n    var success = webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n    return success &&\n        webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nexports.bindVertexProgramAttributeStreams = bindVertexProgramAttributeStreams;\nfunction uploadPixelDataToTexture(gl, texture, pixels) {\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadPixelDataToTexture = uploadPixelDataToTexture;\nfunction uploadDataToTexture(gl, texture, width, height, data, numChannels) {\n    var textureFormat = getTextureFormat(gl, numChannels);\n    webgl_util.validateTextureSize(gl, width, height);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, textureFormat, getTextureType(gl), data); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nfunction uploadMatrixToTexture(gl, texture, rows, columns, matrix, numChannels) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var unpackedArray;\n    if (environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        var channelsPerTexture = numChannels === 1 ? webgl_util.getChannelsPerTexture() : numChannels;\n        if (channelsPerTexture === 1) {\n            unpackedArray = matrix;\n        }\n        else {\n            unpackedArray =\n                new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture));\n            tex_util.encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture);\n        }\n    }\n    else {\n        unpackedArray = tex_util.encodeFloatArray(matrix);\n    }\n    uploadDataToTexture(gl, texture, w, h, unpackedArray, numChannels);\n}\nexports.uploadMatrixToTexture = uploadMatrixToTexture;\nfunction uploadMatrixToPackedTexture(gl, texture, rows, columns, matrix) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    tex_util.encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA);\n    var numChannels = 4;\n    uploadDataToTexture(gl, texture, w, h, packedRGBA, numChannels);\n}\nexports.uploadMatrixToPackedTexture = uploadMatrixToPackedTexture;\nfunction getDownloadTargetArrayBuffer(rows, columns, channelsPerTexture) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    var downloadTarget;\n    if (isFloatTexture) {\n        downloadTarget =\n            new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, channelsPerTexture));\n    }\n    else {\n        downloadTarget = new Uint8Array(rows * columns * channelsPerTexture);\n    }\n    return downloadTarget;\n}\nfunction decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    if (isFloatTexture) {\n        var matrix = new Float32Array(rows * columns);\n        tex_util.decodeMatrixFromUnpackedArray(downloadTarget, matrix, channelsPerPixel);\n        return matrix;\n    }\n    else {\n        return tex_util.decodeToFloatArray(downloadTarget);\n    }\n}\nfunction downloadMatrixFromOutputTextureAsync(gl, getBufferSubDataAsyncExtension, rows, columns) {\n    return __awaiter(this, void 0, void 0, function () {\n        var gl2, channelsPerPixel, downloadTarget, bufferSizeBytes, buffer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    gl2 = gl;\n                    channelsPerPixel = 4;\n                    downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n                    bufferSizeBytes = downloadTarget instanceof Float32Array ?\n                        downloadTarget.length * 4 :\n                        downloadTarget;\n                    buffer = gl.createBuffer();\n                    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\n                    webgl_util.callAndCheck(gl, function () { return gl.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl.STATIC_DRAW); });\n                    webgl_util.callAndCheck(gl, function () {\n                        return gl2.readPixels(0, 0, columns, rows, gl.RGBA, getTextureType(gl), 0);\n                    });\n                    return [4, getBufferSubDataAsyncExtension.getBufferSubDataAsync(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget)];\n                case 1:\n                    _a.sent();\n                    return [2, decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel)];\n            }\n        });\n    });\n}\nexports.downloadMatrixFromOutputTextureAsync = downloadMatrixFromOutputTextureAsync;\nfunction downloadMatrixFromOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var channelsPerPixel = 4;\n    var downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), downloadTarget); });\n    return decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel);\n}\nexports.downloadMatrixFromOutputTexture = downloadMatrixFromOutputTexture;\nfunction downloadMatrixFromRGBAColorTexture(gl, rows, columns, channels) {\n    var size = rows * columns * 4;\n    var downloadTarget = new Uint8Array(size);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, columns, rows, gl.RGBA, gl.UNSIGNED_BYTE, downloadTarget); });\n    var packedRGBA = new Float32Array(size);\n    for (var i = 0; i < downloadTarget.length; i++) {\n        packedRGBA[i] = downloadTarget[i];\n    }\n    var matrix = new Float32Array(rows * columns * channels);\n    tex_util.decodeMatrixFromUnpackedColorRGBAArray(packedRGBA, matrix, channels);\n    return matrix;\n}\nexports.downloadMatrixFromRGBAColorTexture = downloadMatrixFromRGBAColorTexture;\nfunction downloadMatrixFromPackedOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), packedRGBA); });\n    var matrix = new Float32Array(rows * columns);\n    return tex_util.decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix);\n}\nexports.downloadMatrixFromPackedOutputTexture = downloadMatrixFromPackedOutputTexture;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar selu_util = __webpack_require__(34);\nvar erf_util = __webpack_require__(55);\nvar UnaryOpProgram = (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nvar CHECK_NAN_SNIPPET = \"if (isNaN(x)) return x;\";\nexports.ABS = \"return abs(x);\";\nexports.RELU = \"return (x < 0.0) ? 0.0 : x;\";\nexports.ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \" + selu_util.SELU_SCALEALPHA + \";\\n  float scale = \" + selu_util.SELU_SCALE + \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return CHECK_NAN_SNIPPET + (\"\\n    return x > 0.0 ? 1.0 : float(\" + alpha + \");\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"return -x;\";\nexports.CEIL = \"return ceil(x);\";\nexports.FLOOR = \"return floor(x);\";\nexports.SIGN = \"return sign(x);\";\nexports.ROUND = \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\";\nexports.EXP = \"return exp(x);\";\nexports.EXPM1 = \"return exp(x) - 1.0;\";\nexports.LOG = \"return log(x);\";\nexports.LOG1P = \"return log(1.0 + x);\";\nexports.SQRT = \"return sqrt(x);\";\nexports.RSQRT = \"return inversesqrt(x);\";\nexports.SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";\nexports.SOFTPLUS = \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\";\nexports.SIN = \"return sin(x);\";\nexports.COS = \"return cos(x);\";\nexports.TAN = \"return tan(x);\";\nexports.ASIN = \"return asin(x);\";\nexports.ACOS = \"return acos(x);\";\nexports.ATAN = CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.ASINH = \"return log(x + sqrt(x * x + 1.0));\";\nexports.ACOSH = \"return log(x + sqrt(x * x - 1.0));\";\nexports.ATANH = \"return (log(1.0 + x) - log(1.0 - x)) / 2.0;\";\nexports.ERF = \"\\n  // Error function is calculated approximately with elementary function.\\n  // See \\\"Handbook of Mathematical Functions with Formulas, \\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\n  float p = \" + erf_util.ERF_P + \";\\n  float a1 = \" + erf_util.ERF_A1 + \";\\n  float a2 = \" + erf_util.ERF_A2 + \";\\n  float a3 = \" + erf_util.ERF_A3 + \";\\n  float a4 = \" + erf_util.ERF_A4 + \";\\n  float a5 = \" + erf_util.ERF_A5 + \";\\n  \\n  float t = 1.0 / (1.0 + p * x);\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\n\";\nexports.SQUARE = \"return x * x;\";\nexports.RECIPROCAL = \"return 1.0 / x;\";\nexports.LOGICAL_NOT = \"return float(!(x >= 1.0));\";\nexports.TO_INT = \"return float(int(x));\";\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar types_1 = __webpack_require__(22);\nvar util = __webpack_require__(0);\nvar broadcast_util = __webpack_require__(16);\nvar operation_1 = __webpack_require__(8);\nvar ops_1 = __webpack_require__(7);\nvar BinaryOps = (function () {\n    function BinaryOps() {\n    }\n    BinaryOps.add = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'add');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.add(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.addStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in addStrict: ');\n        return a.add(b);\n    };\n    BinaryOps.sub = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'sub');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.neg().reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.subtract(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.subStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in subStrict: ');\n        return a.sub(b);\n    };\n    BinaryOps.pow = function (base, exp) {\n        util.assertArgumentsAreTensors({ base: base, exp: exp }, 'pow');\n        var outShape = broadcast_util.assertAndGetBroadcastShape(base.shape, exp.shape);\n        base = base.cast(types_1.upcastType(base.dtype, exp.dtype));\n        exp = exp.cast(types_1.upcastType(base.dtype, exp.dtype));\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            var derBase = function () {\n                var res = dy.mul(exp.toFloat().mul(y.div(base)));\n                var reduceAxes = broadcast_util.getReductionAxes(base.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(base.shape);\n            };\n            var derExp = function () {\n                var res = dy.mul(y.mul(base.log()).toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(exp.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(exp.shape);\n            };\n            return { base: derBase, exp: derExp };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.pow(base, exp)); }, { base: base, exp: exp }, grad);\n    };\n    BinaryOps.powStrict = function (base, exp) {\n        util.assertShapesMatch(base.shape, exp.shape, 'Error in powStrict: ');\n        return base.pow(exp);\n    };\n    BinaryOps.mul = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'mul');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy.mul(b.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(a.shape);\n                }\n                return res;\n            };\n            var derB = function () {\n                var res = dy.mul(a.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(b.shape);\n                }\n                return res;\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.multiply(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.mulStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in multiplyStrict: ');\n        return a.mul(b);\n    };\n    BinaryOps.div = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'div');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy.div(b.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(a.shape);\n                }\n                return res;\n            };\n            var derB = function () {\n                var res = dy.mul(a.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes).reshape(b.shape);\n                }\n                var tmp = b.square();\n                return res.div(tmp.toFloat()).neg();\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.divide(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.divStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in divideStrict: ');\n        return a.div(b);\n    };\n    BinaryOps.mod = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'mod');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return dy.sum(reduceAxes).reshape(a.shape);\n                }\n                return dy;\n            };\n            var derB = function () {\n                var res = dy.mul(a.div(b).floor().neg());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(b.shape);\n                }\n                return res;\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.mod(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.modStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in modStrict: ');\n        return a.mod(b);\n    };\n    BinaryOps.minimum = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'minimum');\n        util.assertTypesMatch(a, b);\n        if (a.dtype === 'bool') {\n            a = a.toInt();\n        }\n        if (b.dtype === 'bool') {\n            b = b.toInt();\n        }\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () { return dy.mul(a.lessEqual(b).toFloat()); };\n            var derB = function () { return dy.mul(a.greater(b).toFloat()); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.minimum(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.minimumStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in minimumStrict: ');\n        return a.minimum(b);\n    };\n    BinaryOps.maximum = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'maximum');\n        util.assertTypesMatch(a, b);\n        if (a.dtype === 'bool') {\n            a = a.toInt();\n        }\n        if (b.dtype === 'bool') {\n            b = b.toInt();\n        }\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () { return dy.mul(a.greaterEqual(b).toFloat()); };\n            var derB = function () { return dy.mul(a.less(b).toFloat()); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.maximum(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.maximumStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in minimumStrict: ');\n        return a.maximum(b);\n    };\n    BinaryOps.squaredDifference = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'squaredDifference');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var two = ops_1.scalar(2);\n            var derA = function () { return dy.mul(a.sub(b).mul(two)); };\n            var derB = function () { return dy.mul(b.sub(a).mul(two)); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.squaredDifference(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.squaredDifferenceStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in squaredDifferenceStrict: ');\n        return a.squaredDifference(b);\n    };\n    BinaryOps.atan2 = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'atan2');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var d = BinaryOps.add(ops_1.square(a), ops_1.square(b));\n                var res = dy.mul(b.div(d));\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var d = BinaryOps.add(ops_1.square(a), ops_1.square(b));\n                var res = ops_1.neg(dy.mul(a.div(d)));\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atan2(a, b); }, { a: a, b: b }, der);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"add\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"addStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"sub\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"subStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"pow\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"powStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"mul\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"mulStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"div\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"divStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"mod\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"modStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"minimum\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"minimumStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"maximum\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"maximumStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"squaredDifference\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"squaredDifferenceStrict\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"atan2\", null);\n    return BinaryOps;\n}());\nexports.BinaryOps = BinaryOps;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar axis_util_1 = __webpack_require__(13);\nvar concat_util = __webpack_require__(33);\nvar operation_1 = __webpack_require__(8);\nvar ConcatOps = (function () {\n    function ConcatOps() {\n    }\n    ConcatOps.concat1d = function (tensors) {\n        return ConcatOps.concat(tensors, 0);\n    };\n    ConcatOps.concat2d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat3d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat4d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat = function (tensors, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assert(tensors.length >= 1, 'Pass at least one tensor to concat');\n        util.assertArgumentsAreTensors({ tensors: tensors }, 'concat');\n        var result = tensors[0];\n        if (tensors.length === 1) {\n            return result;\n        }\n        var axes = axis_util_1.parseAxisParam(axis, result.shape);\n        for (var i = 1; i < tensors.length; ++i) {\n            result = concat2Tensors(result, tensors[i], axes[0]);\n        }\n        return result;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ConcatOps, \"concat\", null);\n    return ConcatOps;\n}());\nexports.ConcatOps = ConcatOps;\nfunction concat2Tensors(a, b, axis) {\n    concat_util.assertParams(a.shape, b.shape, axis);\n    var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n    var a2D = a.as2D(-1, util.sizeFromShape(a.shape.slice(axis)));\n    var b2D = b.as2D(-1, util.sizeFromShape(b.shape.slice(axis)));\n    var _a = concat_util.computeGradientSliceShapes(a2D.shape, b2D.shape), aBegin = _a.aBegin, aSize = _a.aSize, bBegin = _a.bBegin, bSize = _a.bSize;\n    var der = function (dy) {\n        return { a: function () { return dy.slice(aBegin, aSize); }, b: function () { return dy.slice(bBegin, bSize); } };\n    };\n    var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.concat(a2D, b2D); }, { a: a2D, b: b2D }, der);\n    return res.reshape(outShape);\n}\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nfunction computePool2DInfo(inShape, filterSize, strides, pad, roundingMode, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = parseTupleParam(filterSize), filterHeight = _a[0], filterWidth = _a[1];\n    var filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var dilations = 1;\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\nexports.computePool2DInfo = computePool2DInfo;\nfunction computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise, dataFormat) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1], batchSize = _a[0], inHeight = _a[1], inWidth = _a[2], inChannels = _a[3];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inHeight = inShape[1], inWidth = inShape[2], inChannels = inShape[3];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inHeight = inShape[2], inWidth = inShape[3];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterHeight = filterShape[0], filterWidth = filterShape[1], filterChannels = filterShape[3];\n    var _b = parseTupleParam(strides), strideHeight = _b[0], strideWidth = _b[1];\n    var _c = parseTupleParam(dilations), dilationHeight = _c[0], dilationWidth = _c[1];\n    var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    var _d = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode), padInfo = _d.padInfo, outHeight = _d.outHeight, outWidth = _d.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        dilationHeight: dilationHeight,\n        dilationWidth: dilationWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv2DInfo = computeConv2DInfo;\nfunction computeOutputShape3D(inShape, fieldSize, outDepth, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputRows = inShape[0];\n    var inputCols = inShape[1];\n    var outputRows = conditionalRound((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputRows), \"The output # of rows (\" + outputRows + \") must be an integer. Change the \" +\n        \"stride and/or zero pad parameters\");\n    var outputCols = conditionalRound((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputCols), \"The output # of columns (\" + outputCols + \") must be an integer. Change \" +\n        \"the stride and/or zero pad parameters\");\n    return [outputRows, outputCols, outDepth];\n}\nfunction computeDefaultPad(inputShape, fieldSize, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    var effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nexports.computeDefaultPad = computeDefaultPad;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode) {\n    var padInfo;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        var padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        var outShape = computeOutputShape3D([inHeight, inWidth, 1], filterHeight, 1, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        var top_1 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_1;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_1, bottom: bottom, left: left, right: right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outHeight: outHeight, outWidth: outWidth };\n}\nfunction conditionalRound(value, roundingMode) {\n    if (!roundingMode) {\n        return value;\n    }\n    switch (roundingMode) {\n        case 'round':\n            return Math.round(value);\n        case 'ceil':\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(\"Unknown roundingMode \" + roundingMode);\n    }\n}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERF_P = 0.3275911;\nexports.ERF_A1 = 0.254829592;\nexports.ERF_A2 = -0.284496736;\nexports.ERF_A3 = 1.421413741;\nexports.ERF_A4 = -1.453152027;\nexports.ERF_A5 = 1.061405429;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar ops = __webpack_require__(7);\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction = exports.Reduction || (exports.Reduction = {}));\nvar LossOps = (function () {\n    function LossOps() {\n    }\n    LossOps.computeWeightedLoss = function (losses, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ losses: losses }, 'computeWeightedLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'computeWeightedLoss');\n        }\n        var weightedLoss = (weights == null) ? losses : losses.mul(weights);\n        if (reduction === Reduction.NONE) {\n            return weightedLoss;\n        }\n        if (reduction === Reduction.SUM) {\n            return weightedLoss.sum();\n        }\n        if (reduction === Reduction.MEAN) {\n            return (weights == null) ? weightedLoss.mean() :\n                weightedLoss.sum().div(weights.sum());\n        }\n        if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n            if (weights == null) {\n                return weightedLoss.sum().div(ops.scalar(losses.size));\n            }\n            else {\n                var numNonZeros = weights.notEqual(ops.scalar(0)).sum().toFloat();\n                return weightedLoss.sum().div(numNonZeros);\n            }\n        }\n        throw Error(\"Unknown reduction: \" + reduction);\n    };\n    LossOps.absoluteDifference = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'absoluteDifference');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'absoluteDifference');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in absoluteDifference: ');\n        var losses = labels.sub(predictions).abs();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"computeWeightedLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"absoluteDifference\", null);\n    return LossOps;\n}());\nexports.LossOps = LossOps;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nvar FORMAT_LIMIT_NUM_VALS = 20;\nvar FORMAT_NUM_FIRST_LAST_VALS = 3;\nvar FORMAT_NUM_SIG_DIGITS = 7;\nfunction tensorToString(t, verbose) {\n    var vals = t.dataSync();\n    var padPerCol = computeMaxSizePerColumn(t);\n    var valsLines = subTensorToString(vals, t.shape, t.strides, padPerCol);\n    var lines = ['Tensor'];\n    if (verbose) {\n        lines.push(\"  dtype: \" + t.dtype);\n        lines.push(\"  rank: \" + t.rank);\n        lines.push(\"  shape: [\" + t.shape + \"]\");\n        lines.push(\"  values:\");\n    }\n    lines.push(valsLines.map(function (l) { return '    ' + l; }).join('\\n'));\n    return lines.join('\\n');\n}\nexports.tensorToString = tensorToString;\nfunction computeMaxSizePerColumn(t) {\n    var vals = t.dataSync();\n    var n = t.size;\n    var numCols = t.strides[t.strides.length - 1];\n    var padPerCol = new Array(numCols).fill(0);\n    if (t.rank > 1) {\n        for (var row = 0; row < n / numCols; row++) {\n            var offset = row * numCols;\n            for (var j = 0; j < numCols; j++) {\n                padPerCol[j] =\n                    Math.max(padPerCol[j], valToString(vals[offset + j], 0).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad) {\n    return util.rightPad(parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(), pad);\n}\nfunction subTensorToString(vals, shape, strides, padPerCol, isLast) {\n    if (isLast === void 0) { isLast = true; }\n    var size = shape[0];\n    var rank = shape.length;\n    if (rank === 0) {\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            var firstVals = Array.from(vals.subarray(0, FORMAT_NUM_FIRST_LAST_VALS));\n            var lastVals = Array.from(vals.subarray(size - FORMAT_NUM_FIRST_LAST_VALS, size));\n            return [\n                '[' + firstVals.map(function (x, i) { return valToString(x, padPerCol[i]); }).join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map(function (x, i) { return valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i]); })\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        return [\n            '[' +\n                Array.from(vals).map(function (x, i) { return valToString(x, padPerCol[i]); }).join(', ') +\n                ']'\n        ];\n    }\n    var subshape = shape.slice(1);\n    var substrides = strides.slice(1);\n    var stride = strides[0];\n    var lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (var i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, false));\n        }\n        lines.push('...');\n        for (var i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, i === size - 1));\n        }\n    }\n    else {\n        for (var i = 0; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, i === size - 1));\n        }\n    }\n    var sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (var i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    var newLineSep = ',\\n';\n    for (var i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar generic_utils = __webpack_require__(5);\nvar Callback = (function () {\n    function Callback() {\n        this.validationData = null;\n        this.model = null;\n    }\n    Callback.prototype.setParams = function (params) {\n        this.params = params;\n    };\n    Callback.prototype.setModel = function (model) {\n        this.model = model;\n    };\n    Callback.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    return Callback;\n}());\nexports.Callback = Callback;\nvar CallbackList = (function () {\n    function CallbackList(callbacks, queueLength) {\n        if (queueLength === void 0) { queueLength = 10; }\n        if (callbacks == null) {\n            callbacks = [];\n        }\n        this.callbacks = callbacks;\n        this.queueLength = queueLength;\n    }\n    CallbackList.prototype.append = function (callback) {\n        this.callbacks.push(callback);\n    };\n    CallbackList.prototype.setParams = function (params) {\n        for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n            var callback = _a[_i];\n            callback.setParams(params);\n        }\n    };\n    CallbackList.prototype.setModel = function (model) {\n        for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n            var callback = _a[_i];\n            callback.setModel(model);\n        }\n    };\n    CallbackList.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onEpochBegin(epoch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onEpochEnd(epoch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onBatchBegin(batch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onBatchEnd(batch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onTrainBegin(logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onTrainEnd(logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    return CallbackList;\n}());\nexports.CallbackList = CallbackList;\nvar BaseLogger = (function (_super) {\n    __extends(BaseLogger, _super);\n    function BaseLogger() {\n        return _super.call(this) || this;\n    }\n    BaseLogger.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.seen = 0;\n                this.totals = {};\n                return [2];\n            });\n        });\n    };\n    BaseLogger.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var batchSize, _loop_1, this_1, key;\n            return __generator(this, function (_a) {\n                if (logs == null) {\n                    logs = {};\n                }\n                batchSize = logs['size'] == null ? 0 : logs['size'];\n                this.seen += batchSize;\n                _loop_1 = function (key) {\n                    var value = logs[key];\n                    if (typeof value === 'number') {\n                        if (!this_1.totals.hasOwnProperty(key)) {\n                            this_1.totals[key] = 0;\n                        }\n                        this_1.totals[key] = this_1.totals[key] + value * batchSize;\n                    }\n                    else {\n                        if (!this_1.totals.hasOwnProperty(key)) {\n                            this_1.totals[key] = K.getScalar(0);\n                        }\n                        tfjs_core_1.tidy(function () {\n                            _this.totals[key] =\n                                K.scalarPlusArray(_this.totals[key], K.multiply(value, K.getScalar(batchSize)));\n                            K.keep(_this.totals[key]);\n                        });\n                    }\n                };\n                this_1 = this;\n                for (key in logs) {\n                    _loop_1(key);\n                }\n                return [2];\n            });\n        });\n    };\n    BaseLogger.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _loop_2, this_2, _i, _a, key;\n            return __generator(this, function (_b) {\n                if (logs != null) {\n                    _loop_2 = function (key) {\n                        if (this_2.totals[key] == null) {\n                            return \"continue\";\n                        }\n                        if (typeof this_2.totals[key] === 'number') {\n                            logs[key] = this_2.totals[key] / this_2.seen;\n                        }\n                        else {\n                            tfjs_core_1.tidy(function () {\n                                logs[key] =\n                                    K.scalarTimesArray(K.divide(K.getScalar(1), K.getScalar(_this.seen)), _this.totals[key]);\n                                K.keep(logs[key]);\n                            });\n                        }\n                    };\n                    this_2 = this;\n                    for (_i = 0, _a = this.params['metrics']; _i < _a.length; _i++) {\n                        key = _a[_i];\n                        _loop_2(key);\n                    }\n                }\n                return [2];\n            });\n        });\n    };\n    return BaseLogger;\n}(Callback));\nexports.BaseLogger = BaseLogger;\nfunction resolveScalarsInLogs(logs) {\n    return __awaiter(this, void 0, void 0, function () {\n        var promises, keys, key, value, valueScalar, values, i;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (logs == null) {\n                        return [2];\n                    }\n                    promises = [];\n                    keys = [];\n                    for (key in logs) {\n                        value = logs[key];\n                        if (typeof value !== 'number') {\n                            valueScalar = value;\n                            promises.push(valueScalar.data());\n                            keys.push(key);\n                        }\n                    }\n                    return [4, Promise.all(promises)];\n                case 1:\n                    values = _a.sent();\n                    for (i = 0; i < values.length; ++i) {\n                        logs[keys[i]] = values[i][0];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.resolveScalarsInLogs = resolveScalarsInLogs;\nfunction disposeTensorsInLogs(logs) {\n    if (logs == null) {\n        return;\n    }\n    for (var key in logs) {\n        var value = logs[key];\n        if (typeof value !== 'number') {\n            value.dispose();\n        }\n    }\n}\nexports.disposeTensorsInLogs = disposeTensorsInLogs;\nvar History = (function (_super) {\n    __extends(History, _super);\n    function History() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    History.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.epoch = [];\n                this.history = {};\n                return [2];\n            });\n        });\n    };\n    History.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key;\n            return __generator(this, function (_a) {\n                if (logs == null) {\n                    logs = {};\n                }\n                this.epoch.push(epoch);\n                for (key in logs) {\n                    if (this.history[key] == null) {\n                        this.history[key] = [];\n                    }\n                    this.history[key].push(logs[key]);\n                }\n                return [2];\n            });\n        });\n    };\n    History.prototype.syncData = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises, keys, indices, key, valueArray, i, valueScalar, values, n;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = [];\n                        keys = [];\n                        indices = [];\n                        for (key in this.history) {\n                            valueArray = this.history[key];\n                            for (i = 0; i < valueArray.length; ++i) {\n                                if (typeof valueArray[i] !== 'number') {\n                                    valueScalar = valueArray[i];\n                                    promises.push(valueScalar.data());\n                                    keys.push(key);\n                                    indices.push(i);\n                                }\n                            }\n                        }\n                        return [4, Promise.all(promises)];\n                    case 1:\n                        values = _a.sent();\n                        for (n = 0; n < values.length; ++n) {\n                            this.history[keys[n]][indices[n]].dispose();\n                            this.history[keys[n]][indices[n]] = values[n][0];\n                        }\n                        return [2];\n                }\n            });\n        });\n    };\n    return History;\n}(Callback));\nexports.History = History;\nvar CustomCallback = (function (_super) {\n    __extends(CustomCallback, _super);\n    function CustomCallback(config) {\n        var _this = _super.call(this) || this;\n        _this.trainBegin = config.onTrainBegin;\n        _this.trainEnd = config.onTrainEnd;\n        _this.epochBegin = config.onEpochBegin;\n        _this.epochEnd = config.onEpochEnd;\n        _this.batchBegin = config.onBatchBegin;\n        _this.batchEnd = config.onBatchEnd;\n        return _this;\n    }\n    CustomCallback.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.epochBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.epochBegin(epoch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.epochEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.epochEnd(epoch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.batchBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.batchBegin(batch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.batchEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.batchEnd(batch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.trainBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.trainBegin(logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.trainEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.trainEnd(logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    return CustomCallback;\n}(Callback));\nexports.CustomCallback = CustomCallback;\nfunction standardizeCallbacks(callbacks) {\n    if (callbacks == null) {\n        return null;\n    }\n    if (callbacks instanceof Callback) {\n        return [callbacks];\n    }\n    if (Array.isArray(callbacks) && callbacks[0] instanceof Callback) {\n        return callbacks;\n    }\n    var callbackConfigs = generic_utils.toList(callbacks);\n    return callbackConfigs.map(function (callbackConfig) { return new CustomCallback(callbackConfig); });\n}\nexports.standardizeCallbacks = standardizeCallbacks;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar backend = __webpack_require__(6);\nexports.backend = backend;\nvar exports_1 = __webpack_require__(134);\nvar callbacks_1 = __webpack_require__(58);\nexports.Callback = callbacks_1.Callback;\nexports.CallbackList = callbacks_1.CallbackList;\nexports.CustomCallback = callbacks_1.CustomCallback;\nvar training_1 = __webpack_require__(42);\nexports.Model = training_1.Model;\nvar recurrent_1 = __webpack_require__(61);\nexports.RNN = recurrent_1.RNN;\nvar models_1 = __webpack_require__(63);\nexports.Sequential = models_1.Sequential;\nvar types_1 = __webpack_require__(12);\nexports.SymbolicTensor = types_1.SymbolicTensor;\nvar version_1 = __webpack_require__(145);\nexports.version_layers = version_1.version;\nexports.model = exports_1.ModelExports.model;\nexports.sequential = exports_1.ModelExports.sequential;\nexports.loadModel = exports_1.ModelExports.loadModel;\nexports.input = exports_1.ModelExports.input;\nexports.layers = exports_1.LayerExports;\nexports.constraints = exports_1.ConstraintExports;\nexports.initializers = exports_1.InitializerExports;\nexports.metrics = exports_1.MetricExports;\nexports.regularizers = exports_1.RegularizerExports;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar activations_1 = __webpack_require__(30);\nvar K = __webpack_require__(6);\nvar common_1 = __webpack_require__(26);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar types_1 = __webpack_require__(12);\nvar conv_utils_1 = __webpack_require__(44);\nvar generic_utils = __webpack_require__(5);\nvar Conv = (function (_super) {\n    __extends(Conv, _super);\n    function Conv(rank, config) {\n        var _this = _super.call(this, config) || this;\n        _this.kernel = null;\n        _this.bias = null;\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.rank = rank;\n        if (_this.rank !== 1 && _this.rank !== 2) {\n            throw new errors_1.NotImplementedError(\"Convolution layer for rank other than 1 or 2 (\" + _this.rank + \") is \" +\n                \"not implemented yet.\");\n        }\n        _this.filters = config.filters;\n        _this.kernelSize = conv_utils_1.normalizeArray(config.kernelSize, rank, 'kernelSize');\n        _this.strides = conv_utils_1.normalizeArray(config.strides == null ? 1 : config.strides, rank, 'strides');\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        common_1.checkPaddingMode(_this.padding);\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        _this.dilationRate = config.dilationRate == null ? 1 : config.dilationRate;\n        if (_this.rank === 1 &&\n            (Array.isArray(_this.dilationRate) &&\n                _this.dilationRate.length !== 1)) {\n            throw new errors_1.ValueError(\"dilationRate must be a number or an array of a single number \" +\n                \"for 1D convolution, but received \" +\n                (\"\" + JSON.stringify(_this.dilationRate)));\n        }\n        if (_this.rank === 2) {\n            if (typeof _this.dilationRate === 'number') {\n                _this.dilationRate = [_this.dilationRate, _this.dilationRate];\n            }\n            else if (_this.dilationRate.length !== 2) {\n                throw new errors_1.ValueError(\"dilationRate must be a number or array of two numbers for 2D \" +\n                    (\"convolution, but received \" + JSON.stringify(_this.dilationRate)));\n            }\n        }\n        _this.activation = activations_1.getActivation(config.activation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        return _this;\n    }\n    Conv.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null) {\n            throw new errors_1.ValueError(\"The channel dimension of the input should be defined. \" +\n                (\"Found \" + inputShape[channelAxis]));\n        }\n        var inputDim = inputShape[channelAxis];\n        var kernelShape = this.kernelSize.concat([inputDim, this.filters]);\n        this.kernel = this.addWeight('kernel', kernelShape, null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        this.inputSpec = [{ ndim: this.rank + 2, axes: (_a = {}, _a[channelAxis] = inputDim, _a) }];\n        this.built = true;\n        var _a;\n    };\n    Conv.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var outputs;\n        var biasValue = this.bias == null ? null : this.bias.read();\n        if (this.rank === 1) {\n            outputs = K.conv1dWithBias(inputs, this.kernel.read(), biasValue, this.strides[0], this.padding, this.dataFormat, this.dilationRate);\n        }\n        else if (this.rank === 2) {\n            outputs = K.conv2dWithBias(inputs, this.kernel.read(), biasValue, this.strides, this.padding, this.dataFormat, this.dilationRate);\n        }\n        else if (this.rank === 3) {\n            throw new errors_1.NotImplementedError('3D convolution is not implemented yet.');\n        }\n        if (this.activation != null) {\n            outputs = this.activation(outputs);\n        }\n        return outputs;\n    };\n    Conv.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var newSpace = [];\n        var space = (this.dataFormat === 'channelsLast') ?\n            inputShape.slice(1, inputShape.length - 1) :\n            inputShape.slice(2);\n        for (var i = 0; i < space.length; ++i) {\n            var newDim = conv_utils_1.convOutputLength(space[i], this.kernelSize[i], this.padding, this.strides[i], typeof this.dilationRate === 'number' ? this.dilationRate :\n                this.dilationRate[i]);\n            newSpace.push(newDim);\n        }\n        var outputShape = [inputShape[0]];\n        if (this.dataFormat === 'channelsLast') {\n            outputShape = outputShape.concat(newSpace);\n            outputShape.push(this.filters);\n        }\n        else {\n            outputShape.push(this.filters);\n            outputShape = outputShape.concat(newSpace);\n        }\n        return outputShape;\n    };\n    Conv.prototype.getConfig = function () {\n        var config = {\n            rank: this.rank,\n            filters: this.filters,\n            kernelSize: this.kernelSize,\n            strides: this.strides,\n            padding: this.padding,\n            dataFormat: this.dataFormat,\n            dilationRate: this.dilationRate,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Conv;\n}(topology_1.Layer));\nexports.Conv = Conv;\nvar Conv2D = (function (_super) {\n    __extends(Conv2D, _super);\n    function Conv2D(config) {\n        return _super.call(this, 2, config) || this;\n    }\n    Conv2D.prototype.getClassName = function () {\n        return 'Conv2D';\n    };\n    Conv2D.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        return config;\n    };\n    return Conv2D;\n}(Conv));\nexports.Conv2D = Conv2D;\ngeneric_utils.ClassNameMap.register('Conv2D', Conv2D);\nvar Conv2DTranspose = (function (_super) {\n    __extends(Conv2DTranspose, _super);\n    function Conv2DTranspose(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        if (_this.padding !== 'same' && _this.padding !== 'valid') {\n            throw new errors_1.ValueError(\"Conv2DTranspose currently supports only padding modes 'same' \" +\n                (\"and 'valid', but received padding mode \" + _this.padding));\n        }\n        return _this;\n    }\n    Conv2DTranspose.prototype.getClassName = function () {\n        return 'Conv2DTranspose';\n    };\n    Conv2DTranspose.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length !== 4) {\n            throw new errors_1.ValueError('Input should have rank 4; Received input shape: ' +\n                JSON.stringify(inputShape));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null) {\n            throw new errors_1.ValueError('The channel dimension of the inputs should be defined. ' +\n                'Found `None`.');\n        }\n        var inputDim = inputShape[channelAxis];\n        var kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n        this.kernel = this.addWeight('kernel', kernelShape, types_1.DType.float32, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], types_1.DType.float32, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: 4, axes: (_a = {}, _a[channelAxis] = inputDim, _a) })];\n        this.built = true;\n        var _a;\n    };\n    Conv2DTranspose.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            if (input.shape.length !== 4) {\n                throw new errors_1.ValueError(\"Conv2DTranspose.call() expects input tensor to be rank-4, but \" +\n                    (\"received a tensor of rank-\" + input.shape.length));\n            }\n            var inputShape = input.shape;\n            var batchSize = inputShape[0];\n            var hAxis;\n            var wAxis;\n            if (_this.dataFormat === 'channelsFirst') {\n                hAxis = 2;\n                wAxis = 3;\n            }\n            else {\n                hAxis = 1;\n                wAxis = 2;\n            }\n            var height = inputShape[hAxis];\n            var width = inputShape[wAxis];\n            var kernelH = _this.kernelSize[0];\n            var kernelW = _this.kernelSize[1];\n            var strideH = _this.strides[0];\n            var strideW = _this.strides[1];\n            var outHeight = conv_utils_1.deconvLength(height, strideH, kernelH, _this.padding);\n            var outWidth = conv_utils_1.deconvLength(width, strideW, kernelW, _this.padding);\n            var outputShape = [batchSize, outHeight, outWidth, _this.filters];\n            if (_this.dataFormat !== 'channelsLast') {\n                input = K.transpose(input, [0, 2, 3, 1]);\n            }\n            var outputs = tfjs_core_1.conv2dTranspose(input, _this.kernel.read(), outputShape, _this.strides, _this.padding);\n            if (_this.dataFormat !== 'channelsLast') {\n                outputs = K.transpose(outputs, [0, 3, 1, 2]);\n            }\n            if (_this.bias != null) {\n                outputs =\n                    K.biasAdd(outputs, _this.bias.read(), _this.dataFormat);\n            }\n            if (_this.activation != null) {\n                outputs = _this.activation(outputs);\n            }\n            return outputs;\n        });\n    };\n    Conv2DTranspose.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var outputShape = inputShape.slice();\n        var channelAxis;\n        var heightAxis;\n        var widthAxis;\n        if (this.dataFormat === 'channelsFirst') {\n            channelAxis = 1;\n            heightAxis = 2;\n            widthAxis = 3;\n        }\n        else {\n            channelAxis = 3;\n            heightAxis = 1;\n            widthAxis = 2;\n        }\n        var kernelH = this.kernelSize[0];\n        var kernelW = this.kernelSize[1];\n        var strideH = this.strides[0];\n        var strideW = this.strides[1];\n        outputShape[channelAxis] = this.filters;\n        outputShape[heightAxis] =\n            conv_utils_1.deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n        outputShape[widthAxis] =\n            conv_utils_1.deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n        return outputShape;\n    };\n    Conv2DTranspose.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['dilationRate'];\n        return config;\n    };\n    return Conv2DTranspose;\n}(Conv2D));\nexports.Conv2DTranspose = Conv2DTranspose;\ngeneric_utils.ClassNameMap.register('Conv2DTranspose', Conv2DTranspose);\nvar SeparableConv = (function (_super) {\n    __extends(SeparableConv, _super);\n    function SeparableConv(rank, config) {\n        var _this = _super.call(this, rank, config) || this;\n        _this.DEFAULT_DEPTHWISE_INITIALIZER = 'glorotUniform';\n        _this.DEFAULT_POINTWISE_INITIALIZER = 'glorotUniform';\n        _this.depthwiseKernel = null;\n        _this.pointwiseKernel = null;\n        if (config.filters == null) {\n            throw new errors_1.ValueError('The `filters` configuration field is required by SeparableConv, ' +\n                'but is unspecified.');\n        }\n        if (config.kernelInitializer != null || config.kernelRegularizer != null ||\n            config.kernelConstraint != null) {\n            throw new errors_1.ValueError('Fields kernelInitializer, kernelRegularizer and kernelConstraint ' +\n                'are invalid for SeparableConv2D. Use depthwiseInitializer, ' +\n                'depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, ' +\n                'pointwiseRegularizer and pointwiseConstraint instead.');\n        }\n        if (config.padding != null && config.padding !== 'same' &&\n            config.padding !== 'valid') {\n            throw new errors_1.ValueError(\"SeparableConv\" + _this.rank + \"D supports only padding modes: \" +\n                (\"'same' and 'valid', but received \" + JSON.stringify(config.padding)));\n        }\n        _this.depthMultiplier =\n            config.depthMultiplier == null ? 1 : config.depthMultiplier;\n        _this.depthwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_DEPTHWISE_INITIALIZER);\n        _this.depthwiseRegularizer = regularizers_1.getRegularizer(config.depthwiseRegularizer);\n        _this.depthwiseConstraint = constraints_1.getConstraint(config.depthwiseConstraint);\n        _this.pointwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_POINTWISE_INITIALIZER);\n        _this.pointwiseRegularizer = regularizers_1.getRegularizer(config.pointwiseRegularizer);\n        _this.pointwiseConstraint = constraints_1.getConstraint(config.pointwiseConstraint);\n        return _this;\n    }\n    SeparableConv.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < this.rank + 2) {\n            throw new errors_1.ValueError(\"Inputs to SeparableConv\" + this.rank + \"D should have rank \" +\n                (this.rank + 2 + \", but received input shape: \") +\n                (\"\" + JSON.stringify(inputShape)));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n            throw new errors_1.ValueError(\"The channel dimension of the inputs should be defined, \" +\n                (\"but found \" + JSON.stringify(inputShape[channelAxis])));\n        }\n        var inputDim = inputShape[channelAxis];\n        var depthwiseKernelShape = this.kernelSize.concat([inputDim, this.depthMultiplier]);\n        var pointwiseKernelShape = [];\n        for (var i = 0; i < this.rank; ++i) {\n            pointwiseKernelShape.push(1);\n        }\n        pointwiseKernelShape.push(inputDim * this.depthMultiplier, this.filters);\n        var trainable = true;\n        this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, types_1.DType.float32, this.depthwiseInitializer, this.depthwiseRegularizer, trainable, this.depthwiseConstraint);\n        this.pointwiseKernel = this.addWeight('pointwise_kernel', pointwiseKernelShape, types_1.DType.float32, this.pointwiseInitializer, this.pointwiseRegularizer, trainable, this.pointwiseConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], types_1.DType.float32, this.biasInitializer, this.biasRegularizer, trainable, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: this.rank + 2, axes: (_a = {}, _a[channelAxis] = inputDim, _a) })];\n        this.built = true;\n        var _a;\n    };\n    SeparableConv.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var output;\n        if (this.rank === 1) {\n            throw new errors_1.NotImplementedError('1D separable convolution is not implemented yet.');\n        }\n        else if (this.rank === 2) {\n            if (this.dataFormat === 'channelsFirst') {\n                inputs = K.transpose(inputs, [0, 2, 3, 1]);\n            }\n            output = tfjs_core_1.separableConv2d(inputs, this.depthwiseKernel.read(), this.pointwiseKernel.read(), this.strides, this.padding, this.dilationRate, 'NHWC');\n        }\n        if (this.useBias) {\n            output = K.biasAdd(output, this.bias.read(), this.dataFormat);\n        }\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        if (this.dataFormat === 'channelsFirst') {\n            output = K.transpose(output, [0, 3, 1, 2]);\n        }\n        return output;\n    };\n    SeparableConv.prototype.getClassName = function () {\n        return 'SeparableConv';\n    };\n    SeparableConv.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        delete config['kernelInitializer'];\n        delete config['kernelRegularizer'];\n        delete config['kernelConstraint'];\n        config['depthwiseInitializer'] =\n            initializers_1.serializeInitializer(this.depthwiseInitializer);\n        config['pointwiseInitializer'] =\n            initializers_1.serializeInitializer(this.pointwiseInitializer);\n        config['depthwiseRegularizer'] =\n            regularizers_1.serializeRegularizer(this.depthwiseRegularizer);\n        config['pointwiseRegularizer'] =\n            regularizers_1.serializeRegularizer(this.pointwiseRegularizer);\n        config['depthwiseConstraint'] =\n            constraints_1.serializeConstraint(this.depthwiseConstraint);\n        config['pointwiseConstraint'] =\n            constraints_1.serializeConstraint(this.pointwiseConstraint);\n        return config;\n    };\n    return SeparableConv;\n}(Conv));\nexports.SeparableConv = SeparableConv;\nvar SeparableConv2D = (function (_super) {\n    __extends(SeparableConv2D, _super);\n    function SeparableConv2D(config) {\n        return _super.call(this, 2, config) || this;\n    }\n    SeparableConv2D.prototype.getClassName = function () {\n        return 'SeparableConv2D';\n    };\n    return SeparableConv2D;\n}(SeparableConv));\nexports.SeparableConv2D = SeparableConv2D;\ngeneric_utils.ClassNameMap.register('SeparableConv2D', SeparableConv2D);\nvar Conv1D = (function (_super) {\n    __extends(Conv1D, _super);\n    function Conv1D(config) {\n        var _this = _super.call(this, 1, config) || this;\n        _this.inputSpec = [{ ndim: 3 }];\n        return _this;\n    }\n    Conv1D.prototype.getClassName = function () {\n        return 'Conv1D';\n    };\n    Conv1D.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        delete config['dataFormat'];\n        return config;\n    };\n    return Conv1D;\n}(Conv));\nexports.Conv1D = Conv1D;\ngeneric_utils.ClassNameMap.register('Conv1D', Conv1D);\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar activations_1 = __webpack_require__(30);\nvar K = __webpack_require__(6);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar topology_2 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar types_1 = __webpack_require__(12);\nvar generic_utils = __webpack_require__(5);\nvar math_utils = __webpack_require__(17);\nvar serialization_1 = __webpack_require__(31);\nvar RNN = (function (_super) {\n    __extends(RNN, _super);\n    function RNN(config) {\n        var _this = _super.call(this, config) || this;\n        var cell;\n        if (config.cell == null) {\n            throw new errors_1.ValueError('cell property is missing for the constructor of RNN.');\n        }\n        else if (Array.isArray(config.cell)) {\n            cell = new StackedRNNCells({ cells: config.cell });\n        }\n        else {\n            cell = config.cell;\n        }\n        if (cell.stateSize == null) {\n            throw new errors_1.ValueError('The RNN cell should have an attribute `stateSize` (tuple of ' +\n                'integers, one integer per RNN state).');\n        }\n        _this.cell = cell;\n        _this.returnSequences =\n            config.returnSequences == null ? false : config.returnSequences;\n        _this.returnState = config.returnState == null ? false : config.returnState;\n        _this.goBackwards = config.goBackwards == null ? false : config.goBackwards;\n        _this._stateful = config.stateful == null ? false : config.stateful;\n        _this.unroll = config.unroll == null ? false : config.unroll;\n        _this.supportsMasking = true;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        _this.stateSpec = null;\n        _this.states = null;\n        _this.numConstants = null;\n        return _this;\n    }\n    RNN.prototype.getStates = function () {\n        if (this.states == null) {\n            var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n            return math_utils.range(0, numStates).map(function (x) { return null; });\n        }\n        else {\n            return this.states;\n        }\n    };\n    RNN.prototype.setStates = function (states) {\n        this.states = states;\n    };\n    RNN.prototype.computeOutputShape = function (inputShape) {\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var stateSize = this.cell.stateSize;\n        if (!Array.isArray(stateSize)) {\n            stateSize = [stateSize];\n        }\n        var outputDim = stateSize[0];\n        var outputShape;\n        if (this.returnSequences) {\n            outputShape = [inputShape[0], inputShape[1], outputDim];\n        }\n        else {\n            outputShape = [inputShape[0], outputDim];\n        }\n        if (this.returnState) {\n            var stateShape = [];\n            for (var _i = 0, stateSize_1 = stateSize; _i < stateSize_1.length; _i++) {\n                var dim = stateSize_1[_i];\n                stateShape.push([inputShape[0], dim]);\n            }\n            return [outputShape].concat(stateShape);\n        }\n        else {\n            return outputShape;\n        }\n    };\n    RNN.prototype.computeMask = function (inputs, mask) {\n        throw new errors_1.NotImplementedError('computeMask has not been implemented for RNN yet');\n    };\n    RNN.prototype.build = function (inputShape) {\n        var constantShape = null;\n        if (this.numConstants != null) {\n            throw new errors_1.NotImplementedError('Constants support is not implemented in RNN yet.');\n        }\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var batchSize = this.stateful ? inputShape[0] : null;\n        var inputDim = inputShape[inputShape.length - 1];\n        this.inputSpec[0] = new topology_1.InputSpec({ shape: [batchSize, null, inputDim] });\n        var stepInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (constantShape != null) {\n            throw new errors_1.NotImplementedError('Constants support is not implemented in RNN yet.');\n        }\n        else {\n            this.cell.build(stepInputShape);\n        }\n        var stateSize;\n        if (Array.isArray(this.cell.stateSize)) {\n            stateSize = this.cell.stateSize;\n        }\n        else {\n            stateSize = [this.cell.stateSize];\n        }\n        if (this.stateSpec != null) {\n            if (!tfjs_core_1.util.arraysEqual(this.stateSpec.map(function (spec) { return spec.shape[spec.shape.length - 1]; }), stateSize)) {\n                throw new errors_1.ValueError(\"An initialState was passed that is not compatible with \" +\n                    (\"cell.stateSize. Received stateSpec=\" + this.stateSpec + \"; \") +\n                    (\"However cell.stateSize is \" + this.cell.stateSize));\n            }\n        }\n        else {\n            this.stateSpec =\n                stateSize.map(function (dim) { return new topology_1.InputSpec({ shape: [null, dim] }); });\n        }\n        if (this.stateful) {\n            throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet');\n        }\n    };\n    RNN.prototype.resetStates = function (states) {\n        if (!this.stateful) {\n            throw new errors_1.AttributeError('Cannot call resetState() on an RNN Layer that is not stateful.');\n        }\n        var batchSize = this.inputSpec[0].shape[0];\n        if (batchSize == null) {\n            throw new errors_1.ValueError('If an RNN is stateful, it needs to know its batch size. Specify ' +\n                'the batch size of your input tensors: \\n' +\n                '- If using a Sequential model, specify the batch size by passing ' +\n                'a `batchInputShape` option to your first layer.\\n' +\n                '- If using the functional API, specify the batch size by ' +\n                'passing a `batchShape` option to your Input layer.');\n        }\n        if (this.states == null) {\n            if (Array.isArray(this.cell.stateSize)) {\n                this.states = this.cell.stateSize.map(function (dim) { return K.zeros([batchSize, dim]); });\n            }\n            else {\n                this.states = [K.zeros([batchSize, this.cell.stateSize])];\n            }\n        }\n        else if (states == null) {\n            if (Array.isArray(this.cell.stateSize)) {\n                this.states = this.cell.stateSize.map(function (dim) { return K.zeros([batchSize, dim]); });\n            }\n            else {\n                this.states[0] = K.zeros([batchSize, this.cell.stateSize]);\n            }\n        }\n        else {\n            if (!Array.isArray(states)) {\n                states = [states];\n            }\n            if (states.length !== this.states.length) {\n                throw new errors_1.ValueError(\"Layer \" + this.name + \" expects \" + this.states.length + \" state(s), \" +\n                    (\"but it received \" + states.length + \" state value(s). Input \") +\n                    (\"received: \" + states));\n            }\n            for (var index = 0; index < this.states.length; ++index) {\n                var value = states[index];\n                var dim = Array.isArray(this.cell.stateSize) ?\n                    this.cell.stateSize[index] :\n                    this.cell.stateSize;\n                var expectedShape = [batchSize, dim];\n                if (!tfjs_core_1.util.arraysEqual(value.shape, expectedShape)) {\n                    throw new errors_1.ValueError(\"State \" + index + \" is incompatible with layer \" + this.name + \": \" +\n                        (\"expected shape=\" + expectedShape + \", received shape=\" + value.shape));\n                }\n                this.states[index] = value;\n            }\n        }\n    };\n    RNN.prototype.standardizeArgs = function (inputs, initialState, constants) {\n        if (Array.isArray(inputs)) {\n            if (initialState != null || constants != null) {\n                throw new errors_1.ValueError('When inputs is an array, neither initialState or constants ' +\n                    'should be provided');\n            }\n            if (this.numConstants != null) {\n                constants =\n                    inputs.slice(inputs.length - this.numConstants, inputs.length);\n                inputs = inputs.slice(0, inputs.length - this.numConstants);\n            }\n            if (inputs.length > 1) {\n                initialState = inputs.slice(1, inputs.length);\n            }\n            inputs = inputs[0];\n        }\n        function toListOrNull(x) {\n            if (x == null || Array.isArray(x)) {\n                return x;\n            }\n            else {\n                return [x];\n            }\n        }\n        initialState = toListOrNull(initialState);\n        constants = toListOrNull(constants);\n        return { inputs: inputs, initialState: initialState, constants: constants };\n    };\n    RNN.prototype.apply = function (inputs, kwargs) {\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        var constants = kwargs == null ? null : kwargs['constants'];\n        if (kwargs == null) {\n            kwargs = {};\n        }\n        var standardized = this.standardizeArgs(inputs, initialState, constants);\n        inputs = standardized.inputs;\n        initialState = standardized.initialState;\n        constants = standardized.constants;\n        var additionalInputs = [];\n        var additionalSpecs = [];\n        if (initialState != null) {\n            kwargs['initialState'] = initialState;\n            additionalInputs = additionalInputs.concat(initialState);\n            this.stateSpec = [];\n            for (var _i = 0, initialState_1 = initialState; _i < initialState_1.length; _i++) {\n                var state = initialState_1[_i];\n                this.stateSpec.push(new topology_1.InputSpec({ shape: state.shape }));\n            }\n            additionalSpecs = additionalSpecs.concat(this.stateSpec);\n        }\n        if (constants != null) {\n            kwargs['constants'] = constants;\n            additionalInputs = additionalInputs.concat(constants);\n            this.numConstants = constants.length;\n        }\n        var isTensor = additionalInputs[0] instanceof types_1.SymbolicTensor;\n        if (isTensor) {\n            var fullInput = [inputs].concat(additionalInputs);\n            var fullInputSpec = this.inputSpec.concat(additionalSpecs);\n            var originalInputSpec = this.inputSpec;\n            this.inputSpec = fullInputSpec;\n            var output = _super.prototype.apply.call(this, fullInput, kwargs);\n            this.inputSpec = originalInputSpec;\n            return output;\n        }\n        else {\n            return _super.prototype.apply.call(this, inputs, kwargs);\n        }\n    };\n    RNN.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        if (initialState == null) {\n            if (this.stateful) {\n                throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet.');\n            }\n            else {\n                initialState = this.getInitialState(inputs);\n            }\n        }\n        if (mask != null) {\n            throw new errors_1.NotImplementedError('Masking is not implemented for RNN yet');\n        }\n        var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n        if (initialState.length !== numStates) {\n            throw new errors_1.ValueError(\"RNN Layer has \" + numStates + \" state(s) but was passed \" +\n                (initialState.length + \" initial state(s).\"));\n        }\n        var inputShape = inputs.shape;\n        var timesteps = inputShape[1];\n        if (this.unroll) {\n            console.warn('Ignoring unroll = true for RNN layer, due to imperative backend.');\n        }\n        var cellCallKwargs = { training: training };\n        var step = function (inputs, states) {\n            var outputs = _this.cell.call([inputs].concat(states), cellCallKwargs);\n            return [outputs[0], outputs.slice(1)];\n        };\n        var rnnOutputs = K.rnn(step, inputs, initialState, this.goBackwards, null, null, this.unroll, timesteps);\n        var lastOutput = rnnOutputs[0];\n        var outputs = rnnOutputs[1];\n        var states = rnnOutputs[2];\n        if (this.stateful) {\n            throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet');\n        }\n        var output = this.returnSequences ? outputs : lastOutput;\n        if (this.returnState) {\n            return [output].concat(states);\n        }\n        else {\n            return output;\n        }\n    };\n    RNN.prototype.getInitialState = function (inputs) {\n        var initialState = K.zeros(inputs.shape);\n        initialState = K.sum(initialState, [1, 2]);\n        initialState = K.expandDims(initialState);\n        if (Array.isArray(this.cell.stateSize)) {\n            return this.cell.stateSize.map(function (dim) { return dim > 1 ? K.tile(initialState, [1, dim]) : initialState; });\n        }\n        else {\n            return this.cell.stateSize > 1 ?\n                [K.tile(initialState, [1, this.cell.stateSize])] :\n                [initialState];\n        }\n    };\n    Object.defineProperty(RNN.prototype, \"trainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return [];\n            }\n            return this.cell.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RNN.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return this.cell.weights;\n            }\n            return this.cell.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RNN.prototype.getClassName = function () {\n        return 'RNN';\n    };\n    RNN.prototype.getConfig = function () {\n        var config = {\n            returnSequences: this.returnSequences,\n            returnState: this.returnState,\n            goBackwards: this.goBackwards,\n            stateful: this.stateful,\n            unroll: this.unroll,\n        };\n        if (this.numConstants != null) {\n            config.numConstants = this.numConstants;\n        }\n        var cellConfig = this.cell.getConfig();\n        config.cell = {\n            className: this.cell.getClassName(),\n            config: cellConfig,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return RNN;\n}(topology_2.Layer));\nexports.RNN = RNN;\ngeneric_utils.ClassNameMap.register('RNN', RNN);\nvar RNNCell = (function (_super) {\n    __extends(RNNCell, _super);\n    function RNNCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RNNCell = __decorate([\n        tfjs_core_1.doc({ heading: 'Layers', subheading: 'Classes' })\n    ], RNNCell);\n    return RNNCell;\n}(topology_2.Layer));\nexports.RNNCell = RNNCell;\nvar SimpleRNNCell = (function (_super) {\n    __extends(SimpleRNNCell, _super);\n    function SimpleRNNCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation == null ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.stateSize = _this.units;\n        return _this;\n    }\n    SimpleRNNCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        this.kernel = this.addWeight('kernel', [inputShape[inputShape.length - 1], this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    SimpleRNNCell.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        if (inputs.length !== 2) {\n            throw new errors_1.ValueError(\"SimpleRNNCell expects 2 input Tensors, got \" + inputs.length + \".\");\n        }\n        var prevOutput = inputs[1];\n        inputs = inputs[0];\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for SimpleRNNCell yet');\n        }\n        var h = K.dot(inputs, this.kernel.read());\n        if (this.bias != null) {\n            h = K.biasAdd(h, this.bias.read());\n        }\n        var output = K.add(h, K.dot(prevOutput, this.recurrentKernel.read()));\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        return [output, output];\n    };\n    SimpleRNNCell.prototype.getClassName = function () {\n        return 'SimpleRNNCell';\n    };\n    SimpleRNNCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return SimpleRNNCell;\n}(RNNCell));\nexports.SimpleRNNCell = SimpleRNNCell;\ngeneric_utils.ClassNameMap.register('SimpleRNNCell', SimpleRNNCell);\nvar SimpleRNN = (function (_super) {\n    __extends(SimpleRNN, _super);\n    function SimpleRNN(config) {\n        var _this = this;\n        config.cell = new SimpleRNNCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    SimpleRNN.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(SimpleRNN.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SimpleRNN.prototype.getClassName = function () {\n        return 'SimpleRNN';\n    };\n    SimpleRNN.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return SimpleRNN;\n}(RNN));\nexports.SimpleRNN = SimpleRNN;\ngeneric_utils.ClassNameMap.register('SimpleRNN', SimpleRNN);\nvar GRUCell = (function (_super) {\n    __extends(GRUCell, _super);\n    function GRUCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.recurrentActivation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\n            config.recurrentActivation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.implementation = config.implementation;\n        _this.stateSize = _this.units;\n        return _this;\n    }\n    GRUCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputDim = inputShape[inputShape.length - 1];\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 3], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 3], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.units * 3], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    GRUCell.prototype.call = function (inputs, kwargs) {\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for GRUCell yet');\n        }\n        inputs = inputs;\n        if (inputs.length !== 2) {\n            throw new errors_1.ValueError(\"GRUCell expects 2 input Tensors (inputs, h, c), got \" +\n                (inputs.length + \".\"));\n        }\n        var hTMinus1 = inputs[1];\n        inputs = inputs[0];\n        var z;\n        var r;\n        var hh;\n        if (this.implementation === 1) {\n            var kernelZ = K.sliceAlongLastAxis(this.kernel.read(), 0, this.units);\n            var kernelR = K.sliceAlongLastAxis(this.kernel.read(), this.units, this.units);\n            var kernelH = K.sliceAlongLastAxis(this.kernel.read(), this.units * 2, this.units);\n            var recurrentKernelZ = K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, this.units);\n            var recurrentKernelR = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units, this.units);\n            var recurrentKernelH = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 2, this.units);\n            var inputsZ = inputs;\n            var inputsR = inputs;\n            var inputsH = inputs;\n            var xZ = K.dot(inputsZ, kernelZ);\n            var xR = K.dot(inputsR, kernelR);\n            var xH = K.dot(inputsH, kernelH);\n            if (this.useBias) {\n                var biasZ = K.sliceAlongFirstAxis(this.bias.read(), 0, this.units);\n                var biasR = K.sliceAlongFirstAxis(this.bias.read(), this.units, this.units);\n                var biasH = K.sliceAlongFirstAxis(this.bias.read(), this.units * 2, this.units);\n                xZ = K.biasAdd(xZ, biasZ);\n                xR = K.biasAdd(xR, biasR);\n                xH = K.biasAdd(xH, biasH);\n            }\n            var hTMinus1Z = hTMinus1;\n            var hTMinus1R = hTMinus1;\n            var hTMinus1H = hTMinus1;\n            z = this.recurrentActivation(K.add(xZ, K.dot(hTMinus1Z, recurrentKernelZ)));\n            r = this.recurrentActivation(K.add(xR, K.dot(hTMinus1R, recurrentKernelR)));\n            hh = this.activation(K.add(xH, K.dot(K.multiply(r, hTMinus1H), recurrentKernelH)));\n        }\n        else {\n            var matrixX = K.dot(inputs, this.kernel.read());\n            if (this.useBias) {\n                matrixX = K.biasAdd(matrixX, this.bias.read());\n            }\n            var matrixInner = K.dot(hTMinus1, K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, 2 * this.units));\n            var xZ = K.sliceAlongLastAxis(matrixX, 0, this.units);\n            var xR = K.sliceAlongLastAxis(matrixX, this.units, this.units);\n            var recurrentZ = K.sliceAlongLastAxis(matrixInner, 0, this.units);\n            var recurrentR = K.sliceAlongLastAxis(matrixInner, this.units, this.units);\n            z = this.recurrentActivation(K.add(xZ, recurrentZ));\n            r = this.recurrentActivation(K.add(xR, recurrentR));\n            var xH = K.sliceAlongLastAxis(matrixX, 2 * this.units, this.units);\n            var recurrentH = K.dot(K.multiply(r, hTMinus1), K.sliceAlongLastAxis(this.recurrentKernel.read(), 2 * this.units, this.units));\n            hh = this.activation(K.add(xH, recurrentH));\n        }\n        var h = K.add(K.multiply(z, hTMinus1), K.multiply(K.scalarPlusArray(K.getScalar(1), K.neg(z)), hh));\n        return [h, h];\n    };\n    GRUCell.prototype.getClassName = function () {\n        return 'GRUCell';\n    };\n    GRUCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GRUCell;\n}(RNNCell));\nexports.GRUCell = GRUCell;\ngeneric_utils.ClassNameMap.register('GRUCell', GRUCell);\nvar GRU = (function (_super) {\n    __extends(GRU, _super);\n    function GRU(config) {\n        var _this = this;\n        if (config.implementation === 0) {\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\n                '`implementation=1`. Please update your layer call.');\n        }\n        config.cell = new GRUCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    GRU.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(GRU.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"implementation\", {\n        get: function () {\n            return this.cell.implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GRU.prototype.getClassName = function () {\n        return 'GRU';\n    };\n    GRU.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    GRU.fromConfig = function (cls, config) {\n        if (config['implmentation'] === 0) {\n            config['implementation'] = 1;\n        }\n        return new cls(config);\n    };\n    return GRU;\n}(RNN));\nexports.GRU = GRU;\ngeneric_utils.ClassNameMap.register('GRU', GRU);\nvar LSTMCell = (function (_super) {\n    __extends(LSTMCell, _super);\n    function LSTMCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.recurrentActivation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\n            config.recurrentActivation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.unitForgetBias = config.unitForgetBias;\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.implementation = config.implementation;\n        _this.stateSize = [_this.units, _this.units];\n        return _this;\n    }\n    LSTMCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputDim = inputShape[inputShape.length - 1];\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 4], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 4], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        var biasInitializer;\n        if (this.useBias) {\n            if (this.unitForgetBias) {\n                var capturedBiasInit_1 = this.biasInitializer;\n                var capturedUnits_1 = this.units;\n                biasInitializer = new ((function (_super) {\n                    __extends(CustomInit, _super);\n                    function CustomInit() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    CustomInit.prototype.apply = function (shape, dtype) {\n                        var bI = capturedBiasInit_1.apply([capturedUnits_1]);\n                        var bF = (new initializers_1.Ones()).apply([capturedUnits_1]);\n                        var bCAndH = capturedBiasInit_1.apply([capturedUnits_1 * 2]);\n                        return K.concatAlongFirstAxis(K.concatAlongFirstAxis(bI, bF), bCAndH);\n                    };\n                    CustomInit.prototype.getClassName = function () {\n                        return 'CustomInit';\n                    };\n                    return CustomInit;\n                }(initializers_1.Initializer)))();\n            }\n            else {\n                biasInitializer = this.biasInitializer;\n            }\n            this.bias = this.addWeight('bias', [this.units * 4], null, biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    LSTMCell.prototype.call = function (inputs, kwargs) {\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for LSTMCell yet');\n        }\n        inputs = inputs;\n        if (inputs.length !== 3) {\n            throw new errors_1.ValueError(\"LSTMCell expects 3 input Tensors (inputs, h, c), got \" +\n                (inputs.length + \".\"));\n        }\n        var hTMinus1 = inputs[1];\n        var cTMinus1 = inputs[2];\n        inputs = inputs[0];\n        var i;\n        var f;\n        var c;\n        var o;\n        if (this.implementation === 1) {\n            var kernelI = K.sliceAlongLastAxis(this.kernel.read(), 0, this.units);\n            var kernelF = K.sliceAlongLastAxis(this.kernel.read(), this.units, this.units);\n            var kernelC = K.sliceAlongLastAxis(this.kernel.read(), this.units * 2, this.units);\n            var kernelO = K.sliceAlongLastAxis(this.kernel.read(), this.units * 3, this.units);\n            var recurrentKernelI = K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, this.units);\n            var recurrentKernelF = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units, this.units);\n            var recurrentKernelC = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 2, this.units);\n            var recurrentKernelO = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 3, this.units);\n            var inputsI = inputs;\n            var inputsF = inputs;\n            var inputsC = inputs;\n            var inputsO = inputs;\n            var xI = K.dot(inputsI, kernelI);\n            var xF = K.dot(inputsF, kernelF);\n            var xC = K.dot(inputsC, kernelC);\n            var xO = K.dot(inputsO, kernelO);\n            if (this.useBias) {\n                var biasI = K.sliceAlongFirstAxis(this.bias.read(), 0, this.units);\n                var biasF = K.sliceAlongFirstAxis(this.bias.read(), this.units, this.units);\n                var biasC = K.sliceAlongFirstAxis(this.bias.read(), this.units * 2, this.units);\n                var biasO = K.sliceAlongFirstAxis(this.bias.read(), this.units * 3, this.units);\n                xI = K.biasAdd(xI, biasI);\n                xF = K.biasAdd(xF, biasF);\n                xC = K.biasAdd(xC, biasC);\n                xO = K.biasAdd(xO, biasO);\n            }\n            var hTMinus1I = hTMinus1;\n            var hTMinus1F = hTMinus1;\n            var hTMinus1C = hTMinus1;\n            var hTMinus1O = hTMinus1;\n            i = this.recurrentActivation(K.add(xI, K.dot(hTMinus1I, recurrentKernelI)));\n            f = this.recurrentActivation(K.add(xF, K.dot(hTMinus1F, recurrentKernelF)));\n            c = K.add(K.multiply(f, cTMinus1), K.multiply(i, this.activation(K.add(xC, K.dot(hTMinus1C, recurrentKernelC)))));\n            o = this.recurrentActivation(K.add(xO, K.dot(hTMinus1O, recurrentKernelO)));\n        }\n        else {\n            var z = K.dot(inputs, this.kernel.read());\n            z = K.add(z, K.dot(hTMinus1, this.recurrentKernel.read()));\n            if (this.useBias) {\n                z = K.biasAdd(z, this.bias.read());\n            }\n            var z0 = K.sliceAlongLastAxis(z, 0, this.units);\n            var z1 = K.sliceAlongLastAxis(z, this.units, this.units);\n            var z2 = K.sliceAlongLastAxis(z, this.units * 2, this.units);\n            var z3 = K.sliceAlongLastAxis(z, this.units * 3, this.units);\n            i = this.recurrentActivation(z0);\n            f = this.recurrentActivation(z1);\n            c = K.add(K.multiply(f, cTMinus1), K.multiply(i, this.activation(z2)));\n            o = this.recurrentActivation(z3);\n        }\n        var h = K.multiply(o, this.activation(c));\n        return [h, h, c];\n    };\n    LSTMCell.prototype.getClassName = function () {\n        return 'LSTMCell';\n    };\n    LSTMCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            unitForgetBias: this.unitForgetBias,\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return LSTMCell;\n}(RNNCell));\nexports.LSTMCell = LSTMCell;\ngeneric_utils.ClassNameMap.register('LSTMCell', LSTMCell);\nvar LSTM = (function (_super) {\n    __extends(LSTM, _super);\n    function LSTM(config) {\n        var _this = this;\n        if (config.implementation === 0) {\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\n                '`implementation=1`. Please update your layer call.');\n        }\n        config.cell = new LSTMCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    LSTM.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(LSTM.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"unitForgetBias\", {\n        get: function () {\n            return this.cell.unitForgetBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"implementation\", {\n        get: function () {\n            return this.cell.implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LSTM.prototype.getClassName = function () {\n        return 'LSTM';\n    };\n    LSTM.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            unitForgetBias: this.unitForgetBias,\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    LSTM.fromConfig = function (cls, config) {\n        if (config['implmentation'] === 0) {\n            config['implementation'] = 1;\n        }\n        return new cls(config);\n    };\n    return LSTM;\n}(RNN));\nexports.LSTM = LSTM;\ngeneric_utils.ClassNameMap.register('LSTM', LSTM);\nvar StackedRNNCells = (function (_super) {\n    __extends(StackedRNNCells, _super);\n    function StackedRNNCells(config) {\n        var _this = _super.call(this, config) || this;\n        _this.cells = config.cells;\n        return _this;\n    }\n    Object.defineProperty(StackedRNNCells.prototype, \"stateSize\", {\n        get: function () {\n            var stateSize = [];\n            for (var _i = 0, _a = this.cells.slice().reverse(); _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (Array.isArray(cell.stateSize)) {\n                    stateSize.push.apply(stateSize, cell.stateSize);\n                }\n                else {\n                    stateSize.push(cell.stateSize);\n                }\n            }\n            return stateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackedRNNCells.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        var states = inputs.slice(1);\n        var nestedStates = [];\n        for (var _i = 0, _a = this.cells.slice().reverse(); _i < _a.length; _i++) {\n            var cell = _a[_i];\n            if (Array.isArray(cell.stateSize)) {\n                nestedStates.push(states.splice(0, cell.stateSize.length));\n            }\n            else {\n                nestedStates.push(states.splice(0, 1));\n            }\n        }\n        nestedStates.reverse();\n        var newNestedStates = [];\n        var callInputs;\n        for (var i = 0; i < this.cells.length; ++i) {\n            var cell = this.cells[i];\n            states = nestedStates[i];\n            if (i === 0) {\n                callInputs = [inputs[0]].concat(states);\n            }\n            else {\n                callInputs = [callInputs[0]].concat(states);\n            }\n            callInputs = cell.call(callInputs, kwargs);\n            newNestedStates.push(callInputs.slice(1));\n        }\n        states = [];\n        for (var _b = 0, _c = newNestedStates.slice().reverse(); _b < _c.length; _b++) {\n            var cellStates = _c[_b];\n            states.push.apply(states, cellStates);\n        }\n        return [callInputs[0]].concat(states);\n    };\n    StackedRNNCells.prototype.build = function (inputShape) {\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var outputDim;\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            cell.build(inputShape);\n            if (Array.isArray(cell.stateSize)) {\n                outputDim = cell.stateSize[0];\n            }\n            else {\n                outputDim = cell.stateSize;\n            }\n            inputShape = [inputShape[0], outputDim];\n        }\n        this.built = true;\n    };\n    StackedRNNCells.prototype.getClassName = function () {\n        return 'StackedRNNCells';\n    };\n    StackedRNNCells.prototype.getConfig = function () {\n        var cellConfigs = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            cellConfigs.push({\n                'className': this.getClassName(),\n                'config': cell.getConfig(),\n            });\n        }\n        var config = { 'cells': cellConfigs };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    StackedRNNCells.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var cells = [];\n        for (var _i = 0, _a = config['cells']; _i < _a.length; _i++) {\n            var cellConfig = _a[_i];\n            cells.push(serialization_1.deserialize(cellConfig, customObjects));\n        }\n        return new cls({ cells: cells });\n    };\n    Object.defineProperty(StackedRNNCells.prototype, \"trainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return [];\n            }\n            var weights = [];\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                weights.push.apply(weights, cell.trainableWeights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StackedRNNCells.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            var weights = [];\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                weights.push.apply(weights, cell.nonTrainableWeights);\n            }\n            if (!this.trainable) {\n                var trainableWeights = [];\n                for (var _b = 0, _c = this.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    trainableWeights.push.apply(trainableWeights, cell.trainableWeights);\n                }\n                return trainableWeights.concat(weights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackedRNNCells.prototype.getWeights = function () {\n        var weights = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            weights.push.apply(weights, cell.weights);\n        }\n        return K.batchGetValue(weights);\n    };\n    StackedRNNCells.prototype.setWeights = function (weights) {\n        var tuples = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            var numParams = cell.weights.length;\n            var inputWeights = weights.splice(numParams);\n            for (var i = 0; i < cell.weights.length; ++i) {\n                tuples.push([cell.weights[i], inputWeights[i]]);\n            }\n        }\n        K.batchSetValue(tuples);\n    };\n    return StackedRNNCells;\n}(RNNCell));\nexports.StackedRNNCells = StackedRNNCells;\ngeneric_utils.ClassNameMap.register('StackedRNNCells', StackedRNNCells);\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar errors_1 = __webpack_require__(4);\nvar losses_1 = __webpack_require__(43);\nfunction binaryAccuracy(yTrue, yPred) {\n    var threshold = K.scalarTimesArray(K.getScalar(0.5), tfjs_core_1.onesLike(yPred));\n    var yPredThresholded = K.cast(K.greater(yPred, threshold), yTrue.dtype);\n    return K.mean(K.equal(yTrue, yPredThresholded), -1);\n}\nexports.binaryAccuracy = binaryAccuracy;\nfunction categoricalAccuracy(yTrue, yPred) {\n    return K.cast(K.equal(K.argmax(yTrue, -1), K.argmax(yPred, -1)), 'float32');\n}\nexports.categoricalAccuracy = categoricalAccuracy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\nfunction topKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.topKCategoricalAccuracy = topKCategoricalAccuracy;\nfunction sparseTopKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseTopKCategoricalAccuracy = sparseTopKCategoricalAccuracy;\nexports.mse = losses_1.meanSquaredError;\nexports.MSE = losses_1.meanSquaredError;\nexports.mae = losses_1.meanAbsoluteError;\nexports.MAE = losses_1.meanAbsoluteError;\nexports.mape = losses_1.meanAbsolutePercentageError;\nexports.MAPE = losses_1.meanAbsolutePercentageError;\nexports.categoricalCrossentropy = losses_1.categoricalCrossentropy;\nexports.cosine = losses_1.cosineProximity;\nexports.sparseCategoricalCrossentropy = losses_1.sparseCategoricalCrossentropy;\nfunction get(identifier) {\n    var metricsMap = {\n        binaryAccuracy: binaryAccuracy,\n        categoricalAccuracy: categoricalAccuracy,\n        categoricalCrossentropy: exports.categoricalCrossentropy,\n        sparseCategoricalCrossentropy: exports.sparseCategoricalCrossentropy,\n        mse: exports.mse,\n        MSE: exports.MSE,\n        mae: exports.mae,\n        MAE: exports.MAE,\n        mape: exports.mape,\n        MAPE: exports.MAPE,\n        cosine: exports.cosine,\n    };\n    if (typeof identifier === 'string' && identifier in metricsMap) {\n        return metricsMap[identifier];\n    }\n    else if (typeof identifier !== 'string' && identifier != null) {\n        return identifier;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unknown metric \" + identifier);\n    }\n}\nexports.get = get;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar topology_1 = __webpack_require__(9);\nvar training_1 = __webpack_require__(42);\nvar errors_1 = __webpack_require__(4);\nvar serialization_1 = __webpack_require__(31);\nvar generic_utils = __webpack_require__(5);\nvar serialization_utils_1 = __webpack_require__(64);\nfunction modelFromJSON(modelAndWeightsConfig, customObjects) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelTopology, tsConfig, model, weightValues, uniqueWeightValues, _i, _a, weight, skipMismatches, isNamedTensorMap;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    modelTopology = modelAndWeightsConfig.modelTopology;\n                    if (modelTopology['model_config'] != null) {\n                        modelTopology = modelTopology['model_config'];\n                    }\n                    tsConfig = serialization_utils_1.convertPythonicToTs(modelTopology);\n                    model = serialization_1.deserialize(tsConfig, customObjects);\n                    if (!(modelAndWeightsConfig.weightsManifest != null)) return [3, 2];\n                    return [4, tfjs_core_1.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) { return weight.originalName; }))];\n                case 1:\n                    weightValues = _b.sent();\n                    uniqueWeightValues = {};\n                    for (_i = 0, _a = model.weights; _i < _a.length; _i++) {\n                        weight = _a[_i];\n                        uniqueWeightValues[weight.name] = weightValues[weight.originalName];\n                    }\n                    skipMismatches = null;\n                    isNamedTensorMap = true;\n                    model.loadWeights(uniqueWeightValues, skipMismatches, isNamedTensorMap);\n                    _b.label = 2;\n                case 2: return [2, model];\n            }\n        });\n    });\n}\nexports.modelFromJSON = modelFromJSON;\nfunction loadModelInternal(modelConfigPath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelConfigRequest, modelConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, fetch(modelConfigPath)];\n                case 1:\n                    modelConfigRequest = _a.sent();\n                    return [4, modelConfigRequest.json()];\n                case 2:\n                    modelConfig = _a.sent();\n                    if (modelConfig['modelTopology'] == null) {\n                        throw new errors_1.ValueError('Missing field \"modelTopology\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    if (modelConfig['weightsManifest'] == null) {\n                        throw new errors_1.ValueError('Missing field \"weightsManifest\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    modelConfig.pathPrefix =\n                        modelConfigPath.substring(0, modelConfigPath.lastIndexOf('/'));\n                    return [2, modelFromJSON(modelConfig)];\n            }\n        });\n    });\n}\nexports.loadModelInternal = loadModelInternal;\nvar Sequential = (function (_super) {\n    __extends(Sequential, _super);\n    function Sequential(config) {\n        var _this = _super.call(this, { inputs: [], outputs: [] }) || this;\n        config = config || {};\n        _this.trainable = true;\n        _this._updatable = true;\n        _this.built = false;\n        _this.name = (config.name != null) ? config.name : K.getUid('sequential_');\n        if (config.layers != null) {\n            for (var _i = 0, _a = config.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                _this.add(layer);\n            }\n        }\n        return _this;\n    }\n    Sequential_1 = Sequential;\n    Sequential.prototype.getClassName = function () {\n        return 'Sequential';\n    };\n    Sequential.prototype.add = function (layer) {\n        if (this.outputs.length === 0) {\n            if (layer.inboundNodes.length === 0) {\n                if (layer.batchInputShape == null) {\n                    throw new errors_1.ValueError('The first layer in a Sequential model must ' +\n                        'get an `inputShape` or `batchInputShape` argument.');\n                }\n                var x = topology_1.Input({\n                    batchShape: layer.batchInputShape,\n                    dtype: layer.dtype,\n                    name: layer.name + '_input'\n                });\n                layer.apply(x);\n            }\n            if (layer.inboundNodes.length !== 1) {\n                throw new errors_1.ValueError('A layer added to a Sequential model must not already be ' +\n                    (\"connected somewhere else. Model received layer \" + layer.name + \" \") +\n                    (\"which has \" + layer.inboundNodes.length + \" pre-existing inbound \") +\n                    'connections.');\n            }\n            if (layer.inboundNodes[0].outputTensors.length !== 1) {\n                throw new errors_1.ValueError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n            this.inputs = topology_1.getSourceInputs(this.outputs[0]);\n            new topology_1.Node({\n                outboundLayer: this,\n                inboundLayers: [],\n                nodeIndices: [],\n                tensorIndices: [],\n                inputTensors: this.inputs,\n                outputTensors: this.outputs,\n                inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n                outputMasks: [null],\n                inputShapes: this.inputs.map(function (x) { return x.shape; }),\n                outputShapes: this.outputs[0].shape\n            });\n        }\n        else {\n            var outputTensor = layer.apply(this.outputs[0]);\n            if (Array.isArray(outputTensor)) {\n                throw new TypeError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [outputTensor];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n        this.layers.push(layer);\n        this.built = false;\n    };\n    Sequential.prototype.pop = function () {\n        if (this.layers.length === 0) {\n            throw new TypeError('There are no layers in the model.');\n        }\n        this.layers.pop();\n        if (this.layers.length === 0) {\n            this.outputs = [];\n            this.inboundNodes = [];\n            this.outboundNodes = [];\n        }\n        else {\n            var lastLayerIndex = this.layers.length - 1;\n            this.layers[lastLayerIndex].outboundNodes = [];\n            this.outputs = [this.layers[lastLayerIndex].output];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n    };\n    Sequential.prototype.call = function (inputs, kwargs) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.call(inputs, kwargs);\n    };\n    Sequential.prototype.build = function (inputShape) {\n        if (this.inputs.length === 0 || this.outputs.length === 0) {\n            throw new TypeError('Sequential model cannot be built: model is empty.' +\n                ' Add some layers first.');\n        }\n        this.model = new training_1.Model({\n            inputs: this.inputs,\n            outputs: this.outputs[0],\n            name: this.name + '_model'\n        });\n        this.model.trainable = this.trainable;\n        this.model.updatable = this.updatable;\n        this.supportsMasking = this.model.supportsMasking;\n        this.inputLayers = this.model.inputLayers;\n        this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n        this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n        this.outputLayers = this.model.outputLayers;\n        this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n        this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n        this.nodesByDepth = this.model.nodesByDepth;\n        this.containerNodes = this.model.containerNodes;\n        this.outputNames = this.model.outputNames;\n        this.inputNames = this.model.inputNames;\n        this.built = true;\n    };\n    Sequential.prototype.setWeights = function (weights) {\n        if (this.model == null) {\n            this.build();\n        }\n        this.model.setWeights(weights);\n    };\n    Object.defineProperty(Sequential.prototype, \"updatable\", {\n        get: function () {\n            return this._updatable;\n        },\n        set: function (value) {\n            if (this.built) {\n                this.model.updatable = value;\n            }\n            this._updatable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sequential.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        if (!this.built) {\n            throw new errors_1.RuntimeError('The model needs to be compiled before being used.');\n        }\n        return this.model.evaluate(x, y, config);\n    };\n    Sequential.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predict(x, config);\n    };\n    Sequential.prototype.predictOnBatch = function (x) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predictOnBatch(x);\n    };\n    Sequential.prototype.compile = function (config) {\n        this.build();\n        this.model.compile(config);\n        this.optimizer = this.model.optimizer;\n        this.loss = this.model.loss;\n        this.metrics = this.model.metrics;\n        this.metricsTensors = this.model.metricsTensors;\n        this.metricsNames = this.model.metricsNames;\n    };\n    Sequential.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.built) {\n                    throw new errors_1.RuntimeError('The model needs to be compiled before ' +\n                        'being used.');\n                }\n                return [2, this.model.fit(x, y, config)];\n            });\n        });\n    };\n    Sequential.fromConfig = function (cls, config) {\n        var model = new cls({});\n        if (!(model instanceof Sequential_1)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called on non-Sequential input: \" + model);\n        }\n        if (!(config instanceof Array)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called without an array of configs\");\n        }\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\n            throw new errors_1.ValueError('Legacy serialization format not supported yet.');\n        }\n        for (var _i = 0, _a = config; _i < _a.length; _i++) {\n            var conf = _a[_i];\n            var layer = serialization_1.deserialize(conf);\n            model.add(layer);\n        }\n        return model;\n    };\n    Sequential.prototype.getConfig = function () {\n        var config = [];\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            config.push({\n                className: layer.getClassName(),\n                config: layer.getConfig(),\n            });\n        }\n        return config;\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential.prototype, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Sequential.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"fit\", null);\n    Sequential = Sequential_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential);\n    return Sequential;\n    var Sequential_1;\n}(training_1.Model));\nexports.Sequential = Sequential;\ngeneric_utils.ClassNameMap.register('Sequential', Sequential);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(4);\nvar generic_utils = __webpack_require__(5);\nfunction isArrayItemInputOrOutputName(key, index, value) {\n    return (key === 'inboundNodes' || key === 'outputLayers' ||\n        key === 'inputLayers') &&\n        index === 0 && typeof value === 'string';\n}\nfunction convertPythonicToTs(pythonicConfig, key) {\n    if (pythonicConfig === null) {\n        return null;\n    }\n    else if (typeof pythonicConfig === 'string') {\n        return generic_utils.toCamelCase(pythonicConfig);\n    }\n    else if ((typeof pythonicConfig === 'number') ||\n        (typeof pythonicConfig === 'boolean')) {\n        return pythonicConfig;\n    }\n    else if (pythonicConfig instanceof Array) {\n        var tsArray = [];\n        var arrayLength = pythonicConfig.length;\n        for (var i = 0; i < arrayLength; ++i) {\n            var item = pythonicConfig[i];\n            if (isArrayItemInputOrOutputName(key, i, item)) {\n                tsArray.push(item);\n            }\n            else {\n                tsArray.push(convertPythonicToTs(item, key));\n            }\n        }\n        return tsArray;\n    }\n    else {\n        var tsDict = {};\n        for (var _i = 0, _a = Object.keys(pythonicConfig); _i < _a.length; _i++) {\n            var pythonicKey = _a[_i];\n            var pythonicValue = pythonicConfig[pythonicKey];\n            if (pythonicKey === 'name' && typeof pythonicValue === 'string') {\n                tsDict[pythonicKey] = pythonicValue;\n            }\n            else {\n                var tsKey = generic_utils.toCamelCase(pythonicKey);\n                if (generic_utils.SerializableEnumRegistry.contains(pythonicKey) &&\n                    (typeof pythonicValue === 'string' || pythonicValue == null)) {\n                    var enumValue = generic_utils.SerializableEnumRegistry.lookup(pythonicKey, pythonicValue);\n                    if (enumValue != null) {\n                        tsDict[tsKey] = enumValue;\n                    }\n                    else {\n                        throw new errors_1.ValueError(\"Unkown value \" + pythonicValue + \" for \" + pythonicKey + \" Enum\");\n                    }\n                }\n                else {\n                    tsDict[tsKey] = convertPythonicToTs(pythonicValue, tsKey);\n                }\n            }\n        }\n        return tsDict;\n    }\n}\nexports.convertPythonicToTs = convertPythonicToTs;\nfunction convertTsToPythonic(tsConfig, key) {\n    if (tsConfig === null || tsConfig === undefined) {\n        return null;\n    }\n    else if (typeof tsConfig === 'string') {\n        return generic_utils.toSnakeCase(tsConfig);\n    }\n    else if ((typeof tsConfig === 'number') || (typeof tsConfig === 'boolean')) {\n        return tsConfig;\n    }\n    else if (tsConfig instanceof Array) {\n        var pyArray = [];\n        var arrayLength = tsConfig.length;\n        for (var i = 0; i < arrayLength; ++i) {\n            var item = tsConfig[i];\n            if (isArrayItemInputOrOutputName(key, i, item)) {\n                pyArray.push(item);\n            }\n            else {\n                pyArray.push(convertTsToPythonic(item, key));\n            }\n        }\n        return pyArray;\n    }\n    else {\n        var pyDict = {};\n        for (var _i = 0, _a = Object.keys(tsConfig); _i < _a.length; _i++) {\n            var tsKey = _a[_i];\n            var tsValue = tsConfig[tsKey];\n            var pyKey = generic_utils.toSnakeCase(tsKey);\n            if ((tsKey === 'name' || tsKey === 'className') &&\n                typeof tsValue === 'string') {\n                pyDict[pyKey] = tsValue;\n            }\n            else {\n                if (generic_utils.SerializableEnumRegistry.contains(pyKey) &&\n                    (typeof tsValue === 'string' || tsValue == null)) {\n                    var enumString = generic_utils.SerializableEnumRegistry.reverseLookup(pyKey, tsValue);\n                    pyDict[pyKey] = enumString;\n                }\n                else {\n                    pyDict[pyKey] = convertTsToPythonic(tsValue, tsKey);\n                }\n            }\n        }\n        return pyDict;\n    }\n}\nexports.convertTsToPythonic = convertTsToPythonic;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(148);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(162);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(166);\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(168);\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(171);\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(170);\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(169);\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(167);\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(172);\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__drawable_canvas__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__style_css__ = __webpack_require__(151);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__style_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var CANVAS_WIDTH=400;var CANVAS_HEIGHT=400;var App=function(_Component){_inherits(App,_Component);function App(props){_classCallCheck(this,App);var _this=_possibleConstructorReturn(this,(App.__proto__||Object.getPrototypeOf(App)).call(this,props));_this.state={};_this.predict=_this.predict.bind(_this);_this.clear=_this.clear.bind(_this);_this.loadModel();return _this;}_createClass(App,[{key:'loadModel',value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return __WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__[\"loadModel\"]('./assets/model.json');case 2:this.model=_context.sent;case 3:case'end':return _context.stop();}}},_callee,this);}));function loadModel(){return _ref.apply(this,arguments);}return loadModel;}()},{key:'predict',value:function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(imageData){var _this2=this;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(this.model){_context2.next=2;break;}return _context2.abrupt('return');case 2:_context2.next=4;return __WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__[\"tidy\"](function(){var maxProb=0;var number=void 0;var img=__WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__[\"fromPixels\"](imageData,1);img=img.reshape([1,28,28,1]);img=__WEBPACK_IMPORTED_MODULE_3__tensorflow_tfjs__[\"cast\"](img,'float32');var output=_this2.model.predict(img);var predictions=Array.from(output.dataSync());predictions.forEach(function(prob,num){if(prob>maxProb){maxProb=prob;number=num;}});_this2.setState({number:number,clear:false});});case 4:case'end':return _context2.stop();}}},_callee2,this);}));function predict(_x){return _ref2.apply(this,arguments);}return predict;}()},{key:'clear',value:function clear(){this.setState({clear:true});}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',{style:{textAlign:'center'}},__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('h4',null,'Using a trained MNIST Keras model, with Tensorflow.js and React.js'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('h5',null,'Draw a number (0-9) here:'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__drawable_canvas__[\"a\" /* default */],{clear:this.state.clear,width:CANVAS_WIDTH,height:CANVAS_HEIGHT,brushColor:'grey',lineWidth:25,onGetImage:this.predict})),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('button',{onClick:this.clear},'Clear'),__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('h1',null,this.state.number));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_react_dom__[\"render\"])(__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(App,null),document.getElementById('root'));\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(161).enable();\n  window.Promise = __webpack_require__(160);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(173);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(46);\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar BrowserUtil = (function () {\n    function BrowserUtil() {\n    }\n    BrowserUtil.nextFrame = function () {\n        return new Promise(function (resolve) { return requestAnimationFrame(function () { return resolve(); }); });\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Timing' })\n    ], BrowserUtil, \"nextFrame\", null);\n    return BrowserUtil;\n}());\nexports.BrowserUtil = BrowserUtil;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    var a = navigator.userAgent || navigator.vendor || window.opera;\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n        .test(a) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n}\nexports.isMobile = isMobile;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar ops = __webpack_require__(7);\nvar profiler_1 = __webpack_require__(126);\nvar tape_1 = __webpack_require__(127);\nvar tensor_1 = __webpack_require__(14);\nvar util = __webpack_require__(0);\nvar Engine = (function () {\n    function Engine(backend, safeMode) {\n        this.backend = backend;\n        this.safeMode = safeMode;\n        this.registeredVariables = {};\n        this.refCounter = new WeakMap();\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numDataBuffers = 0;\n        this.gradientScopeCount = 0;\n        this.customGradientDepth = 0;\n        this.activeScope = { keep: [], track: [] };\n        this.scopeStack = [this.activeScope];\n        this.profiler = new profiler_1.Profiler(backend);\n    }\n    Engine.prototype.runKernel = function (forwardFunc, inputs, backwardsFunc) {\n        var _this = this;\n        var result;\n        var saved = [];\n        var saveFunc = function (x) {\n            saved.push(x);\n            return x;\n        };\n        var scopeName = this.activeScope.name;\n        this.customGradientDepth++;\n        if (!environment_1.ENV.get('DEBUG')) {\n            result = forwardFunc(this.backend, saveFunc);\n        }\n        else {\n            result = this.profiler.profileKernel(scopeName, function () { return forwardFunc(_this.backend, saveFunc); });\n        }\n        this.customGradientDepth--;\n        if (this.shouldRecord()) {\n            var tapeNode = {\n                id: this.nextTapeNodeId++,\n                name: scopeName,\n                inputs: inputs,\n                output: result,\n            };\n            if (backwardsFunc != null) {\n                tapeNode.gradient = function (dy) { return backwardsFunc(dy, saved); };\n            }\n            this.activeTape.push(tapeNode);\n        }\n        return result;\n    };\n    Engine.prototype.registerTensor = function (a) {\n        var refCount = this.refCounter.has(a.dataId) ? this.refCounter.get(a.dataId) : 0;\n        this.numTensors++;\n        if (refCount === 0) {\n            this.numDataBuffers++;\n            this.numBytes +=\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\n            this.backend.register(a.dataId, a.shape, a.dtype);\n        }\n        this.refCounter.set(a.dataId, refCount + 1);\n        if (!(a instanceof tensor_1.Variable)) {\n            this.track(a);\n        }\n    };\n    Engine.prototype.registerVariable = function (v) {\n        if (this.registeredVariables[v.name] != null) {\n            throw new Error(\"Variable with name \" + v.name + \" was already registered\");\n        }\n        this.registeredVariables[v.name] = v;\n    };\n    Engine.prototype.disposeTensor = function (a) {\n        if (!this.refCounter.has(a.dataId)) {\n            return;\n        }\n        this.numTensors--;\n        var refCount = this.refCounter.get(a.dataId);\n        if (refCount <= 1) {\n            this.refCounter.delete(a.dataId);\n            this.backend.disposeData(a.dataId);\n            this.numDataBuffers--;\n            this.numBytes -=\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\n        }\n        else {\n            this.refCounter.set(a.dataId, refCount - 1);\n        }\n    };\n    Engine.prototype.memory = function () {\n        var info = this.backend.memory();\n        info.numTensors = this.numTensors;\n        info.numDataBuffers = this.numDataBuffers;\n        info.numBytes = this.numBytes;\n        return info;\n    };\n    Engine.prototype.shouldRecord = function () {\n        return this.activeTape != null && this.customGradientDepth === 0;\n    };\n    Engine.prototype.addTapeNode = function (inputs, result, gradientsFunc) {\n        var inputsMap = {};\n        inputs.forEach(function (input, idx) {\n            inputsMap[idx] = input;\n        });\n        var gradient = function (dy) {\n            var res = gradientsFunc(dy);\n            var resMap = {};\n            res.forEach(function (r, idx) {\n                resMap[idx] = function () { return r; };\n            });\n            return resMap;\n        };\n        var tapeNode = {\n            id: this.nextTapeNodeId++,\n            name: this.activeScope.name,\n            inputs: inputsMap,\n            output: result,\n            gradient: gradient\n        };\n        this.activeTape.push(tapeNode);\n    };\n    Engine.prototype.keep = function (result) {\n        if (this.scopeStack.length === 1 && environment_1.ENV.engine.safeMode) {\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\n                'tf.tidy(() => {...}) to avoid memory leaks.');\n        }\n        this.activeScope.keep.push(result);\n        return result;\n    };\n    Engine.prototype.startScope = function (name, gradientsMode) {\n        if (gradientsMode === void 0) { gradientsMode = false; }\n        if (gradientsMode && this.gradientScopeCount === 0) {\n            this.activeTape = [];\n        }\n        if (gradientsMode) {\n            this.gradientScopeCount++;\n        }\n        var scopeInfo = { keep: [], track: [] };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.scopeStack.push(scopeInfo);\n        this.activeScope = scopeInfo;\n    };\n    Engine.prototype.endScope = function (result, gradientsMode) {\n        var _this = this;\n        if (gradientsMode === void 0) { gradientsMode = false; }\n        if (gradientsMode) {\n            this.gradientScopeCount--;\n            if (this.gradientScopeCount === 0) {\n                this.activeTape = null;\n            }\n        }\n        var tensorsToKeep = this.activeScope.keep;\n        var tensorsToTrackInParent = util.extractTensorsFromContainer(result);\n        tensorsToKeep = tensorsToKeep.concat(tensorsToTrackInParent);\n        for (var i = 0; i < this.activeScope.track.length; i++) {\n            var tensor = this.activeScope.track[i];\n            if (util.isTensorInList(tensor, tensorsToKeep)) {\n                continue;\n            }\n            if (this.activeTape != null) {\n                tensorsToTrackInParent.push(tensor);\n            }\n            else {\n                tensor.dispose();\n            }\n        }\n        this.scopeStack.pop();\n        this.activeScope = this.scopeStack.length === 0 ?\n            { keep: [], track: [] } :\n            this.scopeStack[this.scopeStack.length - 1];\n        tensorsToTrackInParent.forEach(function (tensor) {\n            if (!util.isTensorInList(tensor, _this.activeScope.keep)) {\n                _this.track(tensor);\n            }\n        });\n    };\n    Engine.prototype.dispose = function () { };\n    Engine.prototype.gradients = function (f, xs, dy, allowNoGradients) {\n        var _this = this;\n        if (allowNoGradients === void 0) { allowNoGradients = false; }\n        util.assert(xs.length > 0, 'gradients() received an empty list of xs.');\n        return globals_1.tidy('gradients', function () {\n            var y = f();\n            util.assert(y instanceof tensor_1.Tensor, 'The result y returned by f() must be a tensor.');\n            var filteredTape = tape_1.getFilteredNodesXToY(_this.activeTape, xs, y);\n            if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n                throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                    'that the f you passed encloses all operations that lead from x ' +\n                    'to y.');\n            }\n            var accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ops.ones(y.shape) : dy;\n            tape_1.backpropagateGradients(accumulatedGradientMap, filteredTape);\n            var grads = xs.map(function (x) { return accumulatedGradientMap[x.id]; });\n            return { value: y, grads: grads };\n        }, true);\n    };\n    Engine.prototype.customGrad = function (f) {\n        var _this = this;\n        util.assert(util.isFunction(f), 'The f passed in customGrad(f) must be a function.');\n        return function () {\n            var inputs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                inputs[_i] = arguments[_i];\n            }\n            util.assert(inputs.every(function (t) { return t instanceof tensor_1.Tensor; }), 'The args passed in customGrad(f)(x1, x2,...) must all be tensors');\n            _this.customGradientDepth++;\n            var gradientsFunc;\n            var gradientsMode = true;\n            var result = globals_1.tidy(f.name, function () {\n                var _a = f.apply(void 0, inputs), value = _a.value, gradFunc = _a.gradFunc;\n                util.assert(value instanceof tensor_1.Tensor, 'The function f passed in customGrad(f) must return an object ' +\n                    'where `obj.value` is a tensor');\n                util.assert(util.isFunction(gradFunc), 'The function f passed in customGrad(f) must return an object ' +\n                    'where `obj.gradFunc` is a function.');\n                gradientsFunc = gradFunc;\n                return value;\n            }, gradientsMode);\n            _this.customGradientDepth--;\n            if (_this.shouldRecord()) {\n                var gradFunc = function (dy) {\n                    var res = gradientsFunc(dy);\n                    var grads = Array.isArray(res) ? res : [res];\n                    util.assert(grads.length === inputs.length, 'The function f passed in customGrad(f) must return an object ' +\n                        'where `obj.gradFunc` is a function that returns the same ' +\n                        'number of tensors as inputs passed to f(...).');\n                    util.assert(grads.every(function (t) { return t instanceof tensor_1.Tensor; }), 'The function f passed in customGrad(f) must return an object ' +\n                        'where `obj.gradFunc` is a function that returns a list of ' +\n                        'only tensors.');\n                    return grads;\n                };\n                _this.addTapeNode(inputs, result, gradFunc);\n            }\n            return result;\n        };\n    };\n    Engine.prototype.write = function (dataId, values) {\n        this.backend.write(dataId, values);\n    };\n    Engine.prototype.readSync = function (dataId) {\n        return this.backend.readSync(dataId);\n    };\n    Engine.prototype.read = function (dataId) {\n        return this.backend.read(dataId);\n    };\n    Engine.prototype.fromPixels = function (pixels, numChannels) {\n        return this.backend.fromPixels(pixels, numChannels);\n    };\n    Engine.prototype.time = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, timingInfo;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        start = performance.now();\n                        return [4, this.backend.time(query)];\n                    case 1:\n                        timingInfo = _a.sent();\n                        timingInfo.wallMs = performance.now() - start;\n                        return [2, timingInfo];\n                }\n            });\n        });\n    };\n    Engine.prototype.track = function (result) {\n        if (this.scopeStack.length === 1 && this.safeMode) {\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\n                'tf.tidy(() => {op();...}); to avoid memory leaks.');\n        }\n        this.activeScope.track.push(result);\n        return result;\n    };\n    return Engine;\n}());\nexports.Engine = Engine;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar tensor_1 = __webpack_require__(14);\nvar util = __webpack_require__(0);\nvar Gradients = (function () {\n    function Gradients() {\n    }\n    Gradients.gradScope = function (nameOrScopeFn, scopeFn) {\n        return globals_1.tidy(nameOrScopeFn, scopeFn, true);\n    };\n    Gradients.grad = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in grad(f) must be a function');\n        return function (x, dy) {\n            util.assert(x instanceof tensor_1.Tensor, 'The x passed in grad(f)(x) must be a tensor');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in grad(f)(x, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f(x); }, [x], dy), value = _a.value, grads = _a.grads;\n            if (dy != null) {\n                util.assertShapesMatch(value.shape, dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            value.dispose();\n            checkGrads(grads);\n            return grads[0];\n        };\n    };\n    Gradients.grads = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in grads(f) must be a function');\n        return function (args, dy) {\n            util.assert(Array.isArray(args) && args.every(function (arg) { return arg instanceof tensor_1.Tensor; }), 'The args passed in grads(f)(args) must be an array of tensors');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in grads(f)(args, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f.apply(void 0, args); }, args, dy), value = _a.value, grads = _a.grads;\n            if (dy != null) {\n                util.assertShapesMatch(value.shape, dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must match the ' +\n                    'shape returned by f([x1,...])');\n            }\n            value.dispose();\n            checkGrads(grads);\n            return grads;\n        };\n    };\n    Gradients.valueAndGrad = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in valueAndGrad(f) must be a function');\n        return function (x, dy) {\n            util.assert(x instanceof tensor_1.Tensor, 'The x passed in valueAndGrad(f)(x) must be a tensor');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f(x); }, [x], dy), grads = _a.grads, value = _a.value;\n            checkGrads(grads);\n            return { grad: grads[0], value: value };\n        };\n    };\n    Gradients.valueAndGrads = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in valueAndGrads(f) must be a function');\n        return function (args, dy) {\n            util.assert(Array.isArray(args) && args.every(function (arg) { return arg instanceof tensor_1.Tensor; }), 'The args passed in valueAndGrads(f)(args) must be array of tensors');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n            var res = environment_1.ENV.engine.gradients(function () { return f.apply(void 0, args); }, args, dy);\n            if (dy != null) {\n                util.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(res.grads);\n            return res;\n        };\n    };\n    Gradients.variableGrads = function (f, varList) {\n        util.assert(util.isFunction(f), 'The f passed in variableGrads(f) must be a function');\n        util.assert(varList == null ||\n            Array.isArray(varList) && varList.every(function (v) { return v instanceof tensor_1.Variable; }), 'The varList passed in variableGrads(f, varList) must be an array ' +\n            'of variables');\n        if (varList == null) {\n            varList = [];\n            for (var varName in environment_1.ENV.engine.registeredVariables) {\n                varList.push(environment_1.ENV.engine.registeredVariables[varName]);\n            }\n        }\n        var originalVarCount = varList.length;\n        varList = varList.filter(function (variable) { return variable.trainable; });\n        util.assert(varList.length > 0, \"variableGrads() expects at least one of the input variables to be \" +\n            (\"trainable, but none of the \" + originalVarCount + \" variables is \") +\n            \"trainable.\");\n        var allowNoGradients = true;\n        var _a = environment_1.ENV.engine.gradients(f, varList, null, allowNoGradients), value = _a.value, grads = _a.grads;\n        util.assert(grads.some(function (g) { return g != null; }), 'Cannot find a connection between any variable and the result of the ' +\n            'loss function y=f(x). Please make sure the operations that use ' +\n            'variables are inside the function f passed to minimize().');\n        util.assert(value.rank === 0, \"The f passed in variableGrads(f) must return a scalar, but it \" +\n            (\"returned a rank-\" + value.rank + \" tensor\"));\n        var namedGrads = {};\n        varList.forEach(function (v, i) {\n            if (grads[i] != null) {\n                namedGrads[v.name] = grads[i];\n            }\n        });\n        return { value: value, grads: namedGrads };\n    };\n    Gradients.customGrad = function (f) {\n        return environment_1.ENV.engine.customGrad(f);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"grad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"grads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"valueAndGrad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"valueAndGrads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"variableGrads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"customGrad\", null);\n    return Gradients;\n}());\nexports.Gradients = Gradients;\nfunction checkGrads(grads) {\n    var numNullGradients = grads.filter(function (g) { return g == null; }).length;\n    if (numNullGradients > 0) {\n        throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\");\n    }\n}\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = __webpack_require__(68);\nvar environment_1 = __webpack_require__(1);\nvar axis_util = __webpack_require__(13);\nvar broadcast_util = __webpack_require__(16);\nvar concat_util = __webpack_require__(33);\nvar ops = __webpack_require__(7);\nvar ops_1 = __webpack_require__(7);\nvar selu_util = __webpack_require__(34);\nvar erf_util = __webpack_require__(55);\nvar tensor_1 = __webpack_require__(14);\nvar types = __webpack_require__(22);\nvar util = __webpack_require__(0);\nvar backend_util = __webpack_require__(48);\nvar MathBackendCPU = (function () {\n    function MathBackendCPU() {\n        this.data = new WeakMap();\n        if (typeof document !== 'undefined') {\n            this.canvas = document.createElement('canvas');\n        }\n    }\n    MathBackendCPU.prototype.register = function (dataId, shape, dtype) {\n        if (this.data.has(dataId)) {\n            throw new Error(\"Data buffer is already registered\");\n        }\n        this.data.set(dataId, null);\n    };\n    MathBackendCPU.prototype.write = function (dataId, values) {\n        if (values == null) {\n            throw new Error('MathBackendCPU.write(): values can not be null');\n        }\n        this.throwIfNoData(dataId);\n        this.data.set(dataId, values);\n    };\n    MathBackendCPU.prototype.fromPixels = function (pixels, numChannels) {\n        if (pixels == null) {\n            throw new Error('MathBackendCPU.writePixels(): pixels can not be null');\n        }\n        var vals;\n        if (pixels instanceof ImageData) {\n            vals = pixels.data;\n        }\n        else if (pixels instanceof HTMLCanvasElement) {\n            vals = pixels.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else if (pixels instanceof HTMLImageElement ||\n            pixels instanceof HTMLVideoElement) {\n            if (this.canvas == null) {\n                throw new Error('Can\\'t read pixels from HTMLImageElement outside ' +\n                    'the browser.');\n            }\n            this.canvas.width = pixels.width;\n            this.canvas.height = pixels.height;\n            this.canvas.getContext('2d').drawImage(pixels, 0, 0, pixels.width, pixels.height);\n            vals = this.canvas.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else {\n            throw new Error(\"pixels is of unknown type: \" + pixels.constructor.name);\n        }\n        var values;\n        if (numChannels === 4) {\n            values = new Int32Array(vals);\n        }\n        else {\n            var numPixels = pixels.width * pixels.height;\n            values = new Int32Array(numPixels * numChannels);\n            for (var i = 0; i < numPixels; i++) {\n                for (var channel = 0; channel < numChannels; ++channel) {\n                    values[i * numChannels + channel] = vals[i * 4 + channel];\n                }\n            }\n        }\n        var outShape = [pixels.height, pixels.width, numChannels];\n        return ops_1.tensor3d(values, outShape, 'int32');\n    };\n    MathBackendCPU.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2, this.readSync(dataId)];\n            });\n        });\n    };\n    MathBackendCPU.prototype.readSync = function (dataId) {\n        this.throwIfNoData(dataId);\n        return this.data.get(dataId);\n    };\n    MathBackendCPU.prototype.disposeData = function (dataId) {\n        if (this.data.has(dataId)) {\n            this.data.delete(dataId);\n        }\n    };\n    MathBackendCPU.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, kernelMs;\n            return __generator(this, function (_a) {\n                start = performance.now();\n                f();\n                kernelMs = performance.now() - start;\n                return [2, { kernelMs: kernelMs }];\n            });\n        });\n    };\n    MathBackendCPU.prototype.memory = function () {\n        return {\n            unreliable: true\n        };\n    };\n    MathBackendCPU.prototype.throwIfNoData = function (dataId) {\n        if (!this.data.has(dataId)) {\n            throw new Error(\"CPU backend: No data found for this tensor. \" +\n                \"Did you change your backend in the middle of the program? \" +\n                \"New backends can't use Tensors created with previous backends\");\n        }\n    };\n    MathBackendCPU.prototype.slice = function (x, begin, size) {\n        var buffer = ops.buffer(size, x.dtype);\n        for (var i = 0; i < buffer.size; ++i) {\n            var loc = buffer.indexToLoc(i);\n            var xLoc = loc.map(function (idx, j) { return idx + begin[j]; });\n            buffer.set.apply(buffer, [x.get.apply(x, xLoc)].concat(loc));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.reverse = function (x, axis) {\n        var buffer = ops.buffer(x.shape, x.dtype);\n        var xBuffer = x.buffer();\n        var _loop_1 = function (i) {\n            var outLoc = buffer.indexToLoc(i);\n            var inLoc = outLoc.slice();\n            axis.forEach(function (ax) { return inLoc[ax] = x.shape[ax] - 1 - inLoc[ax]; });\n            buffer.set.apply(buffer, [xBuffer.get.apply(xBuffer, inLoc)].concat(outLoc));\n        };\n        for (var i = 0; i < buffer.size; i++) {\n            _loop_1(i);\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.concat = function (a, b) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, 1);\n        var buffer = ops.buffer(outShape, a.dtype);\n        if (a.shape[0] === 1 && b.shape[0] === 1) {\n            var aVals = a.dataSync();\n            var bVals = b.dataSync();\n            var vals = buffer.values;\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return buffer.toTensor();\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < a.shape[1]; ++j) {\n                buffer.set(a.get(i, j), i, j);\n            }\n            for (var j = 0; j < b.shape[1]; ++j) {\n                buffer.set(b.get(i, j), i, j + a.shape[1]);\n            }\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.neg = function (x) {\n        return this.multiply(ops.scalar(-1), x);\n    };\n    MathBackendCPU.prototype.add = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue + bValue; });\n    };\n    MathBackendCPU.prototype.subtract = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue - bValue; });\n    };\n    MathBackendCPU.prototype.pow = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.pow(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.matMul = function (a, b, transposeA, transposeB) {\n        var sharedDim = transposeA ? a.shape[0] : a.shape[1];\n        var leftDim = transposeA ? a.shape[1] : a.shape[0];\n        var rightDim = transposeB ? b.shape[0] : b.shape[1];\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var _a = transposeA ? [1, a.strides[0]] : [a.strides[0], 1], aOuterStep = _a[0], aInnerStep = _a[1];\n        var _b = transposeB ? [b.strides[0], 1] : [1, b.strides[0]], bOuterStep = _b[0], bInnerStep = _b[1];\n        var aOuterEnd = leftDim * aOuterStep;\n        var bOuterEnd = rightDim * bOuterStep;\n        var result = new Float32Array(leftDim * rightDim);\n        var resultIndex = 0;\n        for (var aOuter = 0; aOuter < aOuterEnd; aOuter += aOuterStep) {\n            for (var bOuter = 0; bOuter < bOuterEnd; bOuter += bOuterStep) {\n                var aInner = aOuter;\n                var bInner = bOuter;\n                var sum = 0;\n                for (var k = 0; k < sharedDim; ++k) {\n                    sum += aValues[aInner] * bValues[bInner];\n                    aInner += aInnerStep;\n                    bInner += bInnerStep;\n                }\n                result[resultIndex++] = sum;\n            }\n        }\n        return ops.tensor2d(result, [leftDim, rightDim]);\n    };\n    MathBackendCPU.prototype.multiply = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue * bValue; });\n    };\n    MathBackendCPU.prototype.divide = function (a, b) {\n        var op;\n        var outputDtype;\n        if (a.dtype === 'int32' && b.dtype === 'int32') {\n            outputDtype = 'int32';\n            op = function (a, b) { return Math.floor(a / b); };\n        }\n        else {\n            outputDtype = 'float32';\n            op = function (a, b) { return a / b; };\n        }\n        return this.broadcastedBinaryOp(a, b, outputDtype, op);\n    };\n    MathBackendCPU.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types.upcastType(x.dtype, 'int32');\n        var result = ops.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var sum = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                sum += aVals[offset + j];\n            }\n            vals[i] = sum;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMin = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            var minIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                    minIndex = j;\n                }\n            }\n            vals[i] = minIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMax = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            var maxIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                    maxIndex = j;\n                }\n            }\n            vals[i] = maxIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.equal = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal === bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.notEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal !== bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.less = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal < bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.lessEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal <= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greater = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal > bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greaterEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal >= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.logicalNot = function (x) {\n        var values = x.dataSync();\n        var newValues = new Int32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = values[i] ? 0 : 1;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues }, 'bool');\n    };\n    MathBackendCPU.prototype.logicalAnd = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal && bVal;\n        });\n    };\n    MathBackendCPU.prototype.logicalOr = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal || bVal;\n        });\n    };\n    MathBackendCPU.prototype.where = function (condition, a, b, dtype) {\n        var values = condition.dataSync();\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var result = ops.zeros(a.shape, dtype);\n        var newValues = result.dataSync();\n        var index = 0;\n        var offset = condition.rank === 0 || condition.rank > 1 || a.rank === 1 ?\n            1 :\n            a.shape[1];\n        for (var i = 0; i < values.length; i++) {\n            for (var j = 0; j < offset; j++) {\n                if (values[i] === 1) {\n                    newValues[index++] = aValues[i];\n                }\n                else {\n                    newValues[index++] = bValues[i];\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.topKValues = function (x, k) {\n        return this.topK(x, k).values;\n    };\n    MathBackendCPU.prototype.topKIndices = function (x, k) {\n        return this.topK(x, k).indices;\n    };\n    MathBackendCPU.prototype.topK = function (x, k) {\n        var values = x.dataSync();\n        var valuesAndIndices = [];\n        for (var i = 0; i < values.length; i++) {\n            valuesAndIndices.push({ value: values[i], index: i });\n        }\n        valuesAndIndices.sort(function (a, b) {\n            return b.value - a.value;\n        });\n        var topkValues = util.getTypedArrayFromDType(x.dtype, k);\n        var topkIndices = new Int32Array(k);\n        for (var i = 0; i < k; i++) {\n            topkValues[i] = valuesAndIndices[i].value;\n            topkIndices[i] = valuesAndIndices[i].index;\n        }\n        return {\n            values: ops.tensor1d(topkValues, x.dtype),\n            indices: ops.tensor1d(topkIndices, 'int32')\n        };\n    };\n    MathBackendCPU.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[0];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                }\n            }\n            vals[i] = min;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.minimum = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.min(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.mod = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var rem = aVal % bVal;\n            if ((aVal < 0 && bVal < 0) || (aVal >= 0 && bVal >= 0)) {\n                return rem;\n            }\n            else {\n                return (rem + bVal) % bVal;\n            }\n        });\n    };\n    MathBackendCPU.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                }\n            }\n            vals[i] = max;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.maximum = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.max(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.squaredDifference = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var diff = aVal - bVal;\n            return diff * diff;\n        });\n    };\n    MathBackendCPU.prototype.ceil = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.ceil(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.floor = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.floor(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sign = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] < 0) {\n                newValues[i] = -1;\n            }\n            else if (values[i] > 0) {\n                newValues[i] = 1;\n            }\n            else {\n                newValues[i] = 0;\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.round = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var base = Math.floor(values[i]);\n            if (values[i] - base < 0.5) {\n                newValues[i] = Math.floor(values[i]);\n            }\n            else if (values[i] - base > 0.5) {\n                newValues[i] = Math.ceil(values[i]);\n            }\n            else {\n                if (base % 2.0 === 0.0) {\n                    newValues[i] = base;\n                }\n                else {\n                    newValues[i] = base + 1.0;\n                }\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.exp = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.exp(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.expm1 = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.expm1(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log1p = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log1p(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sqrt = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.sqrt(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.rsqrt = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = 1 / Math.sqrt(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.square = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = value * value;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.reciprocal = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = 1 / values[i];\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.relu = function (x) {\n        var res = ops.zeros(x.shape, x.dtype);\n        var resVals = res.dataSync();\n        var inVals = x.dataSync();\n        for (var i = 0; i < inVals.length; ++i) {\n            resVals[i] = Math.max(0, inVals[i]);\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.elu = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = (Math.exp(v) - 1);\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.eluDer = function (dy, y) {\n        var resultValues = new Float32Array(y.size);\n        var values = y.dataSync();\n        var dyValues = dy.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 1) {\n                resultValues[i] = dyValues[i];\n            }\n            else {\n                resultValues[i] = dyValues[i] * (v + 1);\n            }\n        }\n        return tensor_1.Tensor.make(y.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.selu = function (x) {\n        var scaleAlpha = selu_util.SELU_SCALEALPHA;\n        var scale = selu_util.SELU_SCALE;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = scale * v;\n            }\n            else {\n                resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.clip = function (x, min, max) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.min(max, Math.max(min, values[i]));\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.abs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.abs(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.int = function (x) {\n        var resultValues = new Int32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = values[i];\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues }, 'int32');\n    };\n    MathBackendCPU.prototype.sigmoid = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.softplus = function (x) {\n        var epsilon = 1.1920928955078125e-7;\n        var threshold = Math.log(epsilon) + 2.0;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var tooLarge = values[i] > -threshold;\n            var tooSmall = values[i] < threshold;\n            var expX = Math.exp(values[i]);\n            var result = void 0;\n            if (tooSmall) {\n                result = expX;\n            }\n            else if (tooLarge) {\n                result = values[i];\n            }\n            else {\n                result = Math.log(1.0 + expX);\n            }\n            resultValues[i] = result;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sin(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cos(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.tan(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asin(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acos(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atan(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan2 = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.atan2(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.sinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sinh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cosh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = util.tanh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asinh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acosh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atanh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.erf = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        var p = erf_util.ERF_P;\n        var a1 = erf_util.ERF_A1;\n        var a2 = erf_util.ERF_A2;\n        var a3 = erf_util.ERF_A3;\n        var a4 = erf_util.ERF_A4;\n        var a5 = erf_util.ERF_A5;\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            var t = 1.0 / (1.0 + p * v);\n            resultValues[i]\n                = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-v * v);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0; }\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            if (isNaN(value)) {\n                resultValues[i] = NaN;\n            }\n            else {\n                resultValues[i] = value > 0 ? 1 : alpha;\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.conv2d = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; wR++) {\n                            var xR = xRCorner + wR * dilationHeight;\n                            if (xR < 0 || xR >= convInfo.inHeight) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; wC++) {\n                                var xC = xCCorner + wC * dilationWidth;\n                                if (xC < 0 || xC >= convInfo.inWidth) {\n                                    continue;\n                                }\n                                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        y.set(dotProd, b, yR, yC, d2);\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dx = ops.buffer(convInfo.inShape, 'float32');\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var xR = 0; xR < convInfo.inHeight; ++xR) {\n                    var xRCorner = xR - leftPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(convInfo.outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < convInfo.inWidth; ++xC) {\n                        var xCCorner = xC - topPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(convInfo.outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                    var pixel = dy.get(b, yR, yC, d2);\n                                    var weight = filter.get(filterHeight - 1 - wR, filterWidth - 1 - wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        dx.set(dotProd, b, xR, xC, d1);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dW = ops.buffer(convInfo.filterShape, 'float32');\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        var dotProd = 0;\n                        for (var b = 0; b < convInfo.batchSize; ++b) {\n                            for (var yR = yRMin; yR < yRMax; ++yR) {\n                                var xR = wR + yR * strideHeight - topPad;\n                                for (var yC = yCMin; yC < yCMax; ++yC) {\n                                    var xC = wC + yC * strideWidth - leftPad;\n                                    dotProd += x.get(b, xR, xC, d1) * dy.get(b, yR, yC, d2);\n                                }\n                            }\n                        }\n                        dW.set(dotProd, wR, wC, d1, d2);\n                    }\n                }\n            }\n        }\n        return dW.toTensor();\n    };\n    MathBackendCPU.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        for (var q = 0; q < chMul; ++q) {\n                            var dotProd = 0;\n                            for (var wR = 0; wR < filterHeight; ++wR) {\n                                var xR = xRCorner + wR * dilationHeight;\n                                if (xR < 0 || xR >= convInfo.inHeight) {\n                                    continue;\n                                }\n                                for (var wC = 0; wC < filterWidth; ++wC) {\n                                    var xC = xCCorner + wC * dilationWidth;\n                                    if (xC < 0 || xC >= convInfo.inWidth) {\n                                        continue;\n                                    }\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, q);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                            y.set(dotProd, b, yR, yC, d1 * chMul + q);\n                        }\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.tile = function (x, reps) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[i] * reps[i];\n        }\n        var result = ops.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < result.values.length; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = new Array(x.rank);\n            for (var i_1 = 0; i_1 < originalLoc.length; i_1++) {\n                originalLoc[i_1] = newLoc[i_1] % x.shape[i_1];\n            }\n            var originalIndex = xBuf.locToIndex(originalLoc);\n            result.values[i] = xBuf.values[originalIndex];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.pad = function (x, paddings, constantValue) {\n        var outShape = paddings.map(function (p, i) { return p[0] + x.shape[i] + p[1]; });\n        var start = paddings.map(function (p) { return p[0]; });\n        var xBuffer = x.buffer();\n        var buffer = ops.buffer(outShape, x.dtype);\n        if (constantValue !== 0) {\n            buffer.values.fill(constantValue);\n        }\n        for (var i = 0; i < x.size; i++) {\n            var coords = xBuffer.indexToLoc(i);\n            var outCoords = coords.map(function (c, i) { return c + start[i]; });\n            buffer.set.apply(buffer, [x.get.apply(x, coords)].concat(outCoords));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.transpose = function (x, perm) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[perm[i]];\n        }\n        var values = x.dataSync();\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < x.size; ++i) {\n            var loc = xBuf.indexToLoc(i);\n            var newLoc = new Array(loc.length);\n            for (var i_2 = 0; i_2 < newLoc.length; i_2++) {\n                newLoc[i_2] = loc[perm[i_2]];\n            }\n            var newIndex = result.locToIndex(newLoc);\n            result.values[newIndex] = values[i];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.gather = function (x, indices, axis) {\n        var newShape = x.shape.slice();\n        var indicesValues = indices.dataSync();\n        newShape[axis] = indicesValues.length;\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < result.size; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = newLoc.slice();\n            originalLoc[axis] = indicesValues[newLoc[axis]];\n            var originalIndex = xBuf.locToIndex(originalLoc);\n            result.values[i] = xBuf.values[originalIndex];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.pool = function (x, convInfo, poolType) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var y = ops.buffer(convInfo.outShape, 'float32');\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var minMaxValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n                        var avgValue = 0;\n                        var count = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var pixel = x.get(b, xR, xC, d);\n                                if ((poolType === 'max' && pixel > minMaxValue)) {\n                                    minMaxValue = pixel;\n                                }\n                                else if (poolType === 'avg') {\n                                    avgValue += pixel;\n                                    count++;\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        y.set(poolType === 'avg' ? avgValue / count : minMaxValue, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.maxPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'max');\n    };\n    MathBackendCPU.prototype.maxPoolPositions = function (x, convInfo) {\n        var maxPositions = ops.buffer(convInfo.outShape, 'int32');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var maxValue = Number.NEGATIVE_INFINITY;\n                        var maxPosition = -1;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                var pixel = x.get(b, xR, xC, d);\n                                if (pixel > maxValue) {\n                                    maxValue = pixel;\n                                    maxPosition = wR * filterWidth + wC;\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return maxPositions.toTensor();\n    };\n    MathBackendCPU.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        var maxPositions = this.maxPoolPositions(x, convInfo);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var maxPos = filterHeight * filterWidth - 1 -\n                                    maxPositions.get(b, dyR, dyC, d);\n                                var curPos = wR * filterWidth + wC;\n                                var mask = maxPos === curPos ? 1 : 0;\n                                if (mask === 0) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel * mask;\n                            }\n                        }\n                        dx.set(dotProd, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel;\n                            }\n                        }\n                        dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendCPU.prototype.reshape = function (x, shape) {\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendCPU.prototype.avgPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'avg').toFloat();\n    };\n    MathBackendCPU.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var output = ops.buffer([batch, newHeight, newWidth, numChannels], x.dtype);\n        var effectiveInputSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutputSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        for (var b = 0; b < batch; b++) {\n            for (var r = 0; r < newHeight; r++) {\n                for (var c = 0; c < newWidth; c++) {\n                    for (var d = 0; d < numChannels; d++) {\n                        var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                        var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                        var sourceRowFloor = Math.floor(sourceFracRow);\n                        var sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n                        var sourceColFloor = Math.floor(sourceFracCol);\n                        var sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n                        var topLeft = x.get(b, sourceRowFloor, sourceColFloor, d);\n                        var bottomLeft = x.get(b, sourceRowCeil, sourceColFloor, d);\n                        var topRight = x.get(b, sourceRowFloor, sourceColCeil, d);\n                        var bottomRight = x.get(b, sourceRowCeil, sourceColCeil, d);\n                        var rowFrac = sourceFracRow - sourceRowFloor;\n                        var colFrac = sourceFracCol - sourceColFloor;\n                        var top_1 = topLeft + (topRight - topLeft) * colFrac;\n                        var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                        var newValue = top_1 + (bottom - top_1) * rowFrac;\n                        output.set(newValue, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var output = ops.buffer([batch, newHeight, newWidth, numChannels], x.dtype);\n        var effectiveInputSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutputSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        for (var b = 0; b < batch; b++) {\n            for (var r = 0; r < newHeight; r++) {\n                for (var c = 0; c < newWidth; c++) {\n                    for (var d = 0; d < numChannels; d++) {\n                        var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                        var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                        var sourceNearestRow = Math.min(oldHeight - 1, Math.round(sourceFracRow));\n                        var sourceNearestCol = Math.min(oldWidth - 1, Math.round(sourceFracCol));\n                        var newValue = x.get(b, sourceNearestRow, sourceNearestCol, d);\n                        output.set(newValue, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.dataSync();\n        var meanValues = mean.dataSync();\n        var varianceValues = variance.dataSync();\n        var scaleValues = scale ? scale.dataSync() : new Float32Array([1]);\n        var offsetValues = offset ? offset.dataSync() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ops_1.tensor4d(outValues, x.shape);\n    };\n    MathBackendCPU.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        var output = ops.buffer(x.shape, 'float32');\n        var rad = radius;\n        var maxD = output.shape[3] - 1;\n        function sumAcrossChannels(b, r, c, d) {\n            var sum = 0.0;\n            for (var j = Math.max(0, d - rad); j <= Math.min(d + rad, maxD); j++) {\n                var z = x.get(b, r, c, j);\n                sum += z * z;\n            }\n            return sum;\n        }\n        for (var b = 0; b < output.shape[0]; b++) {\n            for (var r = 0; r <= output.shape[1]; r++) {\n                for (var c = 0; c < output.shape[2]; c++) {\n                    for (var d = 0; d < output.shape[3]; d++) {\n                        var sum = sumAcrossChannels(b, r, c, d);\n                        var val = x.get(b, r, c, d) * Math.pow(bias + alpha * sum, -beta);\n                        output.set(val, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        var probabilities = normalized ? logits : ops.softmax(logits);\n        var batchSize = probabilities.shape[0];\n        var numEvents = probabilities.shape[1];\n        var res = ops.zeros([batchSize, numSamples], 'int32');\n        var resVals = res.dataSync();\n        var probVals = probabilities.dataSync();\n        for (var b = 0; b < batchSize; ++b) {\n            var offset = b * numEvents;\n            var cdf = new Float32Array(numEvents - 1);\n            cdf[0] = probVals[offset];\n            for (var event_1 = 1; event_1 < cdf.length; ++event_1) {\n                cdf[event_1] = cdf[event_1 - 1] + probVals[offset + event_1];\n            }\n            var random = seedrandom.alea(seed.toString());\n            var outOffset = b * numSamples;\n            for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n                var r = random();\n                resVals[outOffset + sampleId] = cdf.length;\n                for (var event_2 = 0; event_2 < cdf.length; event_2++) {\n                    if (r < cdf[event_2]) {\n                        resVals[outOffset + sampleId] = event_2;\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var res = new Float32Array(indices.size * depth);\n        res.fill(offValue);\n        for (var event_3 = 0; event_3 < indices.size; ++event_3) {\n            res[event_3 * depth + indices.get(event_3)] = onValue;\n        }\n        return ops.tensor2d(res, [indices.size, depth]);\n    };\n    MathBackendCPU.prototype.broadcastedBinaryOp = function (a, b, dtype, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var result = ops.buffer(newShape, dtype);\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var aBuf = a.buffer();\n        var bBuf = b.buffer();\n        var _loop_2 = function (i) {\n            var loc = result.indexToLoc(i);\n            var aLoc = loc.slice(-a.rank);\n            aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n            var aIndex = aBuf.locToIndex(aLoc);\n            var bLoc = loc.slice(-b.rank);\n            bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n            var bIndex = bBuf.locToIndex(bLoc);\n            result.values[i] = op(aValues[aIndex], bValues[bIndex]);\n        };\n        for (var i = 0; i < result.values.length; ++i) {\n            _loop_2(i);\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.dispose = function () { };\n    return MathBackendCPU;\n}());\nexports.MathBackendCPU = MathBackendCPU;\nenvironment_1.ENV.registerBackend('cpu', function () { return new MathBackendCPU(); }, 1);\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar axis_util = __webpack_require__(13);\nvar ops = __webpack_require__(7);\nvar reduce_util = __webpack_require__(117);\nvar tensor_1 = __webpack_require__(14);\nvar types = __webpack_require__(22);\nvar util = __webpack_require__(0);\nvar backend_util = __webpack_require__(48);\nvar argminmax_gpu_1 = __webpack_require__(77);\nvar avg_pool_backprop_gpu_1 = __webpack_require__(78);\nvar batchnorm_gpu_1 = __webpack_require__(79);\nvar binaryop_gpu = __webpack_require__(49);\nvar binaryop_gpu_1 = __webpack_require__(49);\nvar clip_gpu_1 = __webpack_require__(80);\nvar concat_gpu_1 = __webpack_require__(81);\nvar conv_backprop_gpu_1 = __webpack_require__(82);\nvar conv_gpu_1 = __webpack_require__(83);\nvar conv_gpu_depthwise_1 = __webpack_require__(84);\nvar from_pixels_gpu_1 = __webpack_require__(85);\nvar gather_gpu_1 = __webpack_require__(86);\nvar gpgpu_context_1 = __webpack_require__(87);\nvar gpgpu_math = __webpack_require__(88);\nvar logical_gpu_1 = __webpack_require__(89);\nvar lrn_gpu_1 = __webpack_require__(90);\nvar max_pool_backprop_gpu_1 = __webpack_require__(91);\nvar mulmat_gpu_1 = __webpack_require__(92);\nvar multinomial_gpu_1 = __webpack_require__(93);\nvar onehot_gpu_1 = __webpack_require__(94);\nvar pad_gpu_1 = __webpack_require__(95);\nvar pool_gpu_1 = __webpack_require__(96);\nvar reduce_gpu_1 = __webpack_require__(97);\nvar resize_bilinear_gpu_1 = __webpack_require__(98);\nvar resize_nearest_neighbor_gpu_1 = __webpack_require__(99);\nvar reverse_gpu_1 = __webpack_require__(100);\nvar slice_gpu_1 = __webpack_require__(101);\nvar tex_util_1 = __webpack_require__(25);\nvar texture_manager_1 = __webpack_require__(102);\nvar tile_gpu_1 = __webpack_require__(103);\nvar transpose_gpu_1 = __webpack_require__(104);\nvar unary_op = __webpack_require__(51);\nvar unaryop_gpu_1 = __webpack_require__(51);\nvar webgl_util = __webpack_require__(27);\nvar MathBackendWebGL = (function () {\n    function MathBackendWebGL(gpgpu, delayedStorage) {\n        if (delayedStorage === void 0) { delayedStorage = true; }\n        this.gpgpu = gpgpu;\n        this.delayedStorage = delayedStorage;\n        this.texData = new WeakMap();\n        this.uploadWaitMs = 0;\n        this.downloadWaitMs = 0;\n        this.binaryCache = {};\n        this.disposed = false;\n        if (environment_1.ENV.get('WEBGL_VERSION') < 1) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            this.gpgpu = new gpgpu_context_1.GPGPUContext();\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpuCreatedLocally = false;\n        }\n        if (typeof document !== 'undefined') {\n            this.canvas = document.createElement('canvas');\n        }\n        this.textureManager = new texture_manager_1.TextureManager(this.gpgpu);\n    }\n    MathBackendWebGL.prototype.register = function (dataId, shape, dtype) {\n        if (this.texData.has(dataId)) {\n            throw new Error('Data buffer is already registered');\n        }\n        this.texData.set(dataId, {\n            shape: shape,\n            dtype: dtype,\n            values: null,\n            texture: null,\n            texShape: null,\n            texType: tex_util_1.TextureType.FLOAT\n        });\n    };\n    MathBackendWebGL.prototype.fromPixels = function (pixels, numChannels) {\n        if (pixels == null) {\n            throw new Error('MathBackendWebGL.writePixels(): pixels can not be null');\n        }\n        var texShape = [pixels.height, pixels.width];\n        var outShape = [pixels.height, pixels.width, numChannels];\n        if (pixels instanceof HTMLVideoElement) {\n            if (this.canvas == null) {\n                throw new Error('Can\\'t read pixels from HTMLImageElement outside ' +\n                    'the browser.');\n            }\n            this.canvas.width = pixels.width;\n            this.canvas.height = pixels.height;\n            this.canvas.getContext('2d').drawImage(pixels, 0, 0, pixels.width, pixels.height);\n            pixels = this.canvas;\n        }\n        var tempPixelArray = tensor_1.Tensor.make(texShape, {}, 'int32');\n        this.texData.get(tempPixelArray.dataId).texType = tex_util_1.TextureType.UNSIGNED_BYTE;\n        this.gpgpu.uploadPixelDataToTexture(this.getTexture(tempPixelArray.dataId), pixels);\n        var program = new from_pixels_gpu_1.FromPixelsProgram(outShape);\n        var res = this.compileAndRun(program, [tempPixelArray]);\n        tempPixelArray.dispose();\n        return res;\n    };\n    MathBackendWebGL.prototype.write = function (dataId, values) {\n        if (values == null) {\n            throw new Error('MathBackendWebGL.write(): values can not be null');\n        }\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, texShape = texData.texShape, texType = texData.texType;\n        if (texture != null) {\n            this.textureManager.releaseTexture(texture, texShape, texType);\n            texData.texture = null;\n            texData.texShape = null;\n        }\n        texData.values = values;\n        if (!this.delayedStorage) {\n            this.uploadToGPU(dataId);\n        }\n    };\n    MathBackendWebGL.prototype.readSync = function (dataId) {\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, values = texData.values, texShape = texData.texShape;\n        if (values != null) {\n            this.cacheOnCPU(dataId);\n            return values;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = performance.now();\n        }\n        var float32Values = this.gpgpu.downloadMatrixFromTexture(texture, texShape[0], texShape[1]);\n        if (shouldTimeProgram) {\n            this.downloadWaitMs += performance.now() - start;\n        }\n        this.cacheOnCPU(dataId, float32Values);\n        return texData.values;\n    };\n    MathBackendWebGL.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var texData, texture, values, texShape, float32Values;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfNoData(dataId);\n                        texData = this.texData.get(dataId);\n                        texture = texData.texture, values = texData.values, texShape = texData.texShape;\n                        if (values != null) {\n                            this.cacheOnCPU(dataId);\n                            return [2, values];\n                        }\n                        if (!environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) return [3, 2];\n                        return [4, this.gpgpu.downloadMatrixFromTextureAsync(texture, texShape[0], texShape[1])];\n                    case 1:\n                        float32Values = _a.sent();\n                        this.cacheOnCPU(dataId, float32Values);\n                        return [2, texData.values];\n                    case 2:\n                        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 0) {\n                            return [2, this.readSync(dataId)];\n                        }\n                        return [4, this.gpgpu.runQuery(function () { })];\n                    case 3:\n                        _a.sent();\n                        return [2, this.readSync(dataId)];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldActiveTimers, newActiveTimers, outerMostTime, flattenedActiveTimers, kernelMs, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        oldActiveTimers = this.activeTimers;\n                        newActiveTimers = [];\n                        outerMostTime = false;\n                        if (this.programTimersStack == null) {\n                            this.programTimersStack = newActiveTimers;\n                            outerMostTime = true;\n                        }\n                        else {\n                            this.activeTimers.push(newActiveTimers);\n                        }\n                        this.activeTimers = newActiveTimers;\n                        f();\n                        flattenedActiveTimers = util.flatten(this.activeTimers);\n                        this.activeTimers = oldActiveTimers;\n                        if (outerMostTime) {\n                            this.programTimersStack = null;\n                        }\n                        return [4, Promise.all(flattenedActiveTimers).then(function (results) {\n                                var sum = 0;\n                                results.forEach(function (result) { return sum += result; });\n                                return sum;\n                            })];\n                    case 1:\n                        kernelMs = _a.sent();\n                        res = {\n                            uploadWaitMs: this.uploadWaitMs,\n                            downloadWaitMs: this.downloadWaitMs,\n                            kernelMs: kernelMs,\n                            wallMs: null\n                        };\n                        this.uploadWaitMs = 0;\n                        this.downloadWaitMs = 0;\n                        return [2, res];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.memory = function () {\n        return { unreliable: false };\n    };\n    MathBackendWebGL.prototype.startTimer = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            return this.gpgpu.beginQuery();\n        }\n        return { startMs: performance.now(), endMs: null };\n    };\n    MathBackendWebGL.prototype.endTimer = function (query) {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            this.gpgpu.endQuery();\n            return query;\n        }\n        query.endMs = performance.now();\n        return query;\n    };\n    MathBackendWebGL.prototype.getQueryTime = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var timerQuery;\n            return __generator(this, function (_a) {\n                if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n                    return [2, this.gpgpu.pollQueryTime(query)];\n                }\n                timerQuery = query;\n                return [2, timerQuery.endMs - timerQuery.startMs];\n            });\n        });\n    };\n    MathBackendWebGL.prototype.disposeData = function (dataId) {\n        if (this.texData.has(dataId)) {\n            var _a = this.texData.get(dataId), texture = _a.texture, texShape = _a.texShape, texType = _a.texType;\n            if (texture != null) {\n                this.textureManager.releaseTexture(texture, texShape, texType);\n            }\n            this.texData.delete(dataId);\n        }\n    };\n    MathBackendWebGL.prototype.getTexture = function (dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId).texture;\n    };\n    MathBackendWebGL.prototype.getTextureData = function (dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId);\n    };\n    MathBackendWebGL.prototype.getGPGPUContext = function () {\n        return this.gpgpu;\n    };\n    MathBackendWebGL.prototype.slice = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.reverse = function (x, axis) {\n        var program = new reverse_gpu_1.ReverseProgram(x.shape, axis);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.concat = function (a, b) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.neg = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.NEG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.matMul = function (a, b, transposeA, transposeB) {\n        var program = new mulmat_gpu_1.MatMulProgram(a.shape, b.shape, transposeA, transposeB);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.multiply = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        var program = new lrn_gpu_1.LRNProgram(x.shape, radius, bias, alpha, beta);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tile = function (x, reps) {\n        var program = new tile_gpu_1.TileProgram(x.shape, reps);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.pad = function (x, paddings, constantValue) {\n        var program = new pad_gpu_1.PadProgram(x.shape, paddings, constantValue);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.transpose = function (x, perm) {\n        var program = new transpose_gpu_1.TransposeProgram(x.shape, perm);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.gather = function (x, indices, axis) {\n        var program = new gather_gpu_1.GatherProgram(x.shape, indices.size, axis);\n        return this.compileAndRun(program, [x, indices]);\n    };\n    MathBackendWebGL.prototype.reduce = function (x, reduceType, dtype) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new reduce_gpu_1.ReduceProgram(reduceInfo, reduceType);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray([rows, cols], dtype);\n        this.compileAndRun(program, [x], output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.reduce(output, reduceType, dtype);\n    };\n    MathBackendWebGL.prototype.argReduce = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        if (bestIndicesA != null) {\n            batchSize = bestIndicesA.shape[0];\n            inSize = bestIndicesA.shape[1];\n        }\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new argminmax_gpu_1.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray([rows, cols], 'int32');\n        var inputs = [x];\n        if (bestIndicesA != null) {\n            inputs.push(bestIndicesA);\n        }\n        this.compileAndRun(program, inputs, output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.argReduce(x, reduceType, output);\n    };\n    MathBackendWebGL.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types.sumOutType(x.dtype);\n        return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMin = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'min').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMax = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'max').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.equal = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.notEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.NOT_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.less = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.lessEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.greater = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.greaterEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.logicalNot = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOGICAL_NOT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.logicalAnd = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_AND, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.logicalOr = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_OR, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.where = function (condition, a, b, dtype) {\n        var program = new logical_gpu_1.WhereProgram(condition.rank, a.shape, a.rank);\n        var output = this.makeOutputArray(program.outputShape, dtype);\n        return this.compileAndRun(program, [condition, a, b], output);\n    };\n    MathBackendWebGL.prototype.topKValues = function (x, k) {\n        throw new Error('topKValues GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.topKIndices = function (x, k) {\n        throw new Error('topKIndices GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.minimum = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MIN, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.mod = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MOD, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.maximum = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MAX, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.squaredDifference = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.divide = function (a, b) {\n        var op;\n        var outputDtype;\n        if (a.dtype === 'int32' && b.dtype === 'int32') {\n            op = binaryop_gpu.INT_DIV;\n            outputDtype = 'int32';\n        }\n        else {\n            op = binaryop_gpu.DIV;\n            outputDtype = 'float32';\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(op, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, outputDtype);\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.add = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.subtract = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.pow = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.ceil = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.CEIL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.floor = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.FLOOR);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sign = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.round = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ROUND);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.exp = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXP);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.expm1 = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXPM1);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log1p = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG1P);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.rsqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RSQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.square = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQUARE);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reciprocal = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RECIPROCAL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.elu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.eluDer = function (dy, y) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ELU_DER, dy.shape, y.shape);\n        return this.compileAndRun(program, [dy, y]);\n    };\n    MathBackendWebGL.prototype.selu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.int = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TO_INT);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.clip = function (x, min, max) {\n        var program = new clip_gpu_1.ClipProgram(x.shape, min, max);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.abs = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sigmoid = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGMOID);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.softplus = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SOFTPLUS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan2 = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ATAN2, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.sinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.erf = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ERF);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.step = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.conv2d = function (x, filter, convInfo) {\n        var program = new conv_gpu_1.Conv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.maxPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'max', false);\n        var output = this.makeOutputArray(program.outputShape, x.dtype);\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.avgPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'avg', false);\n        var output = this.makeOutputArray(program.outputShape, 'float32');\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        var getPositions = true;\n        var maxPoolPositionsProgram = new pool_gpu_1.Pool2DProgram(convInfo, 'max', getPositions);\n        var maxPoolPositions = this.compileAndRun(maxPoolPositionsProgram, [x]);\n        var maxPoolBackPropProgram = new max_pool_backprop_gpu_1.MaxPool2DBackpropProgram(convInfo);\n        var output = this.makeOutputArray(maxPoolBackPropProgram.outputShape, x.dtype);\n        var result = this.compileAndRun(maxPoolBackPropProgram, [dy, maxPoolPositions], output);\n        maxPoolPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        var avgPoolBackpropProgram = new avg_pool_backprop_gpu_1.AvgPool2DBackpropProgram(convInfo);\n        var output = this.makeOutputArray(avgPoolBackpropProgram.outputShape, x.dtype);\n        return this.compileAndRun(avgPoolBackpropProgram, [dy], output);\n    };\n    MathBackendWebGL.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendWebGL.prototype.reshape = function (x, shape) {\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendWebGL.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        var program = new resize_bilinear_gpu_1.ResizeBilinearProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        var program = new resize_nearest_neighbor_gpu_1.ResizeNearestNeighborProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        var probs = normalized ? logits : ops.softmax(logits);\n        var batchSize = probs.shape[0];\n        var numOutcomes = probs.shape[1];\n        var program = new multinomial_gpu_1.MultinomialProgram(batchSize, numOutcomes, numSamples);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        var customSetup = program.getCustomSetupFunc(seed);\n        return this.compileAndRun(program, [probs], output, customSetup);\n    };\n    MathBackendWebGL.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var program = new onehot_gpu_1.OneHotProgram(indices.size, depth, onValue, offValue);\n        return this.compileAndRun(program, [indices]);\n    };\n    MathBackendWebGL.prototype.makeOutputArray = function (shape, dtype) {\n        return tensor_1.Tensor.make(shape, {}, dtype);\n    };\n    MathBackendWebGL.prototype.compileAndRun = function (program, inputs, output, customSetup) {\n        var _this = this;\n        if (output == null) {\n            output = this.makeOutputArray(program.outputShape, inputs[0].dtype);\n        }\n        var inputsData = inputs.map(function (input) {\n            _this.uploadToGPU(input.dataId);\n            return { tensor: input, texData: _this.texData.get(input.dataId) };\n        });\n        this.uploadToGPU(output.dataId);\n        var outputData = {\n            tensor: output,\n            texData: this.texData.get(output.dataId)\n        };\n        var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        var binary = this.getAndSaveBinary(key, function () {\n            return gpgpu_math.compileProgram(_this.gpgpu, program, inputsData, outputData);\n        });\n        var shouldTimeProgram = this.activeTimers != null;\n        var query;\n        if (shouldTimeProgram) {\n            query = this.startTimer();\n        }\n        gpgpu_math.runProgram(binary, inputsData, outputData, customSetup);\n        if (shouldTimeProgram) {\n            query = this.endTimer(query);\n            this.activeTimers.push(this.getQueryTime(query));\n        }\n        return output;\n    };\n    MathBackendWebGL.prototype.getAndSaveBinary = function (key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    };\n    MathBackendWebGL.prototype.getTextureManager = function () {\n        return this.textureManager;\n    };\n    MathBackendWebGL.prototype.dispose = function () {\n        if (this.disposed) {\n            return;\n        }\n        for (var key in this.binaryCache) {\n            this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n        }\n        this.textureManager.dispose();\n        this.canvas.remove();\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.dispose();\n        }\n        this.disposed = true;\n    };\n    MathBackendWebGL.prototype.throwIfNoData = function (dataId) {\n        if (!this.texData.has(dataId)) {\n            throw new Error(\"WebGL backend: No data found for this tensor. \" +\n                \"Did you change your backend in the middle of the program? \" +\n                \"New backends can't use Tensors created with previous backends\");\n        }\n    };\n    MathBackendWebGL.prototype.uploadToGPU = function (dataId) {\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var shape = texData.shape, values = texData.values, texture = texData.texture, dtype = texData.dtype, texType = texData.texType;\n        if (texture != null) {\n            return;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = performance.now();\n        }\n        var texShape = webgl_util.getTextureShapeFromLogicalShape(this.gpgpu.gl, shape);\n        texData.texShape = texShape;\n        var newTexture = this.textureManager.acquireTexture(texShape, texType);\n        texData.texture = newTexture;\n        if (values != null) {\n            this.gpgpu.uploadMatrixToTexture(newTexture, texShape[0], texShape[1], typedArrayToFloat32(values, dtype));\n            texData.values = null;\n            if (shouldTimeProgram) {\n                this.uploadWaitMs += performance.now() - start;\n            }\n        }\n    };\n    MathBackendWebGL.prototype.cacheOnCPU = function (dataId, float32Values) {\n        var dontKeepCopyOnGPU = this.delayedStorage;\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, texShape = texData.texShape, dtype = texData.dtype, texType = texData.texType;\n        if (dontKeepCopyOnGPU && texture != null) {\n            this.textureManager.releaseTexture(texture, texShape, texType);\n            texData.texture = null;\n            texData.texShape = null;\n        }\n        if (float32Values != null) {\n            texData.values = float32ToTypedArray(float32Values, dtype);\n        }\n    };\n    return MathBackendWebGL;\n}());\nexports.MathBackendWebGL = MathBackendWebGL;\nenvironment_1.ENV.registerBackend('webgl', function () { return new MathBackendWebGL(); }, 2);\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        var result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (var i = 0; i < result.length; ++i) {\n            result[i] = Math.round(a[i]);\n        }\n        return result;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nfunction typedArrayToFloat32(a, dtype) {\n    return (a instanceof Float32Array) ? a : new Float32Array(a);\n}\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArgMinMaxProgram = (function () {\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        var compOp = (op === 'max') ? '>' : '<';\n        var indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = 0;\\n        float bestValue = getA(batch, inOffset);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n    }\n    return ArgMinMaxProgram;\n}());\nexports.ArgMinMaxProgram = ArgMinMaxProgram;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AvgPool2DBackpropProgram = (function () {\n    function AvgPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float avgMultiplier = float(\" + avgMultiplier + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return AvgPool2DBackpropProgram;\n}());\nexports.AvgPool2DBackpropProgram = AvgPool2DBackpropProgram;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = __webpack_require__(16);\nvar BatchNormProgram = (function () {\n    function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.supportsBroadcasting = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + offsetSnippet + \";\\n        float scale = \" + scaleSnippet + \";\\n        float inv = scale * inversesqrt(variance + float(\" + varianceEpsilon + \"));\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n    }\n    return BatchNormProgram;\n}());\nexports.BatchNormProgram = BatchNormProgram;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = __webpack_require__(33);\nvar ConcatProgram = (function () {\n    function ConcatProgram(aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = [];\n        this.outputShape =\n            concat_util.computeOutShape(aShape, bShape, 1);\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        float value = 0.0;\\n        if (yC < \" + aShape[1] + \") {\\n          value = getA(yR, yC);\\n        } else {\\n          yC -= \" + aShape[1] + \";\\n          value = getB(yR, yC);\\n        }\\n\\n        setOutput(value);\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}());\nexports.ConcatProgram = ConcatProgram;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DDerFilterProgram = (function () {\n    function Conv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerFilterProgram;\n}());\nexports.Conv2DDerFilterProgram = Conv2DDerFilterProgram;\nvar Conv2DDerInputProgram = (function () {\n    function Conv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerInputProgram;\n}());\nexports.Conv2DDerInputProgram = Conv2DDerInputProgram;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DProgram = (function () {\n    function Conv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n              vec4 xValues = vec4(\\n                getX(batch, xR, xC, d1),\\n                getX(batch, xR, xC, d1 + 1),\\n                getX(batch, xR, xC, d1 + 2),\\n                getX(batch, xR, xC, d1 + 3)\\n              );\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              dotProd += dot(xValues, wValues);\\n            }\\n\\n            if (\" + (inputDepthVec4Remainder === 1) + \") {\\n              dotProd +=\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n            } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n              vec2 xValues = vec2(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n              );\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n              vec3 xValues = vec3(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n              );\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DProgram;\n}());\nexports.Conv2DProgram = Conv2DProgram;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DProgram = (function () {\n    function DepthwiseConv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + channelMul + \";\\n        int q = d2 - d1 * \" + channelMul + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + xNumRows + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + xNumCols + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DProgram;\n}());\nexports.DepthwiseConv2DProgram = DepthwiseConv2DProgram;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromPixelsProgram = (function () {\n    function FromPixelsProgram(outputShape) {\n        this.variableNames = ['A'];\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = texture2D(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n    }\n    return FromPixelsProgram;\n}());\nexports.FromPixelsProgram = FromPixelsProgram;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar GatherProgram = (function () {\n    function GatherProgram(aShape, indicesLength, axis) {\n        this.variableNames = ['A', 'indices'];\n        var outputShape = aShape.slice();\n        outputShape[axis] = indicesLength;\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape, axis);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return GatherProgram;\n}());\nexports.GatherProgram = GatherProgram;\nfunction getSourceCoords(aShape, axis) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Gather for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"int(getIndices(resRC))\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        if (i === axis) {\n            sourceCoords.push(\"int(getIndices(\" + currentCoords[i] + \"))\");\n        }\n        else {\n            sourceCoords.push(\"\" + currentCoords[i]);\n        }\n    }\n    return sourceCoords.join();\n}\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar gpgpu_util = __webpack_require__(50);\nvar tex_util = __webpack_require__(25);\nvar webgl_util = __webpack_require__(27);\nvar GPGPUContext = (function () {\n    function GPGPUContext(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.autoDebugValidate = false;\n        this.vertexAttrsAreBound = false;\n        if (gl != null) {\n            this.gl = gl;\n        }\n        else {\n            this.gl = gpgpu_util.createWebGLContext();\n        }\n        if (environment_1.ENV.get('WEBGL_VERSION') === 1) {\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'OES_texture_float');\n            this.colorBufferFloatExtension =\n                this.gl.getExtension('WEBGL_color_buffer_float');\n        }\n        else {\n            this.colorBufferFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'EXT_color_buffer_float');\n        }\n        this.loseContextExtension =\n            webgl_util.getExtensionOrThrow(this.gl, 'WEBGL_lose_context');\n        if (environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) {\n            this.getBufferSubDataAsyncExtension =\n                this.gl.getExtension('WEBGL_get_buffer_sub_data_async');\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl);\n    }\n    GPGPUContext.prototype.dispose = function () {\n        var _this = this;\n        if (this.disposed) {\n            return;\n        }\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        var gl = this.gl;\n        webgl_util.callAndCheck(gl, function () { return gl.finish(); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteFramebuffer(_this.framebuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.vertexBuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.indexBuffer); });\n        this.loseContextExtension.loseContext();\n        this.disposed = true;\n    };\n    GPGPUContext.prototype.enableAutomaticDebugValidation = function (enabled) {\n        this.autoDebugValidate = enabled;\n        webgl_util.enableDebugWebGLErrorChecking(enabled);\n    };\n    GPGPUContext.prototype.createMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.uploadPixelDataToTexture = function (texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    };\n    GPGPUContext.prototype.createPackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.deleteMatrixTexture = function (texture) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteTexture(texture); });\n    };\n    GPGPUContext.prototype.uploadMatrixToTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        var numChannels = 1;\n        return gpgpu_util.uploadMatrixToTexture(this.gl, texture, rows, columns, matrix, numChannels);\n    };\n    GPGPUContext.prototype.uploadMatrixToPackedTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        return gpgpu_util.uploadMatrixToPackedTexture(this.gl, texture, rows, columns, matrix);\n    };\n    GPGPUContext.prototype.downloadMatrixFromTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () {\n            return gpgpu_util.downloadMatrixFromOutputTexture(_this.gl, rows, columns);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromTextureAsync = function (texture, rows, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.getBufferSubDataAsyncExtension == null) {\n                    throw new Error(\"Cannot download matrix from output texture asynchronously, \" +\n                        \"WEBGL_get_buffer_sub_data_async is not enabled.\");\n                }\n                return [2, this.downloadMatrixDriverAsync(texture, function () { return gpgpu_util.downloadMatrixFromOutputTextureAsync(_this.gl, _this.getBufferSubDataAsyncExtension, rows, columns); })];\n            });\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromRGBAColorTexture = function (texture, rows, columns, channels) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromRGBAColorTexture(_this.gl, rows, columns, channels); });\n    };\n    GPGPUContext.prototype.downloadMatrixFromPackedTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this.gl, rows, columns); });\n    };\n    GPGPUContext.prototype.createProgram = function (fragmentShaderSource) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        var fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n        var vertexShader = gpgpu_util.createVertexShader(gl);\n        var program = webgl_util.createProgram(gl);\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, vertexShader); });\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, fragmentShader); });\n        webgl_util.linkProgram(gl, program);\n        if (this.autoDebugValidate) {\n            webgl_util.validateProgram(gl, program);\n        }\n        if (!this.vertexAttrsAreBound) {\n            this.setProgram(program);\n            this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer);\n        }\n        return program;\n    };\n    GPGPUContext.prototype.deleteProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteProgram(program); });\n        }\n    };\n    GPGPUContext.prototype.setProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.autoDebugValidate) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.useProgram(program); });\n    };\n    GPGPUContext.prototype.getUniformLocation = function (program, uniformName, shouldThrow) {\n        if (shouldThrow === void 0) { shouldThrow = true; }\n        this.throwIfDisposed();\n        if (shouldThrow) {\n            return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n        }\n        else {\n            return webgl_util.getProgramUniformLocation(this.gl, program, uniformName);\n        }\n    };\n    GPGPUContext.prototype.getAttributeLocation = function (program, attribute) {\n        var _this = this;\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, function () { return _this.gl.getAttribLocation(program, attribute); });\n    };\n    GPGPUContext.prototype.getUniformLocationNoThrow = function (program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    };\n    GPGPUContext.prototype.setInputMatrixTexture = function (inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, this.program, inputMatrixTexture, uniformLocation, textureUnit);\n    };\n    GPGPUContext.prototype.setOutputMatrixTexture = function (outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixTexture = function (outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    };\n    GPGPUContext.prototype.debugValidate = function () {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    };\n    GPGPUContext.prototype.executeProgram = function () {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        var gl = this.gl;\n        if (this.autoDebugValidate) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, function () { return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); });\n    };\n    GPGPUContext.prototype.blockUntilAllProgramsCompleted = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.finish(); });\n    };\n    GPGPUContext.prototype.getQueryTimerExtension = function () {\n        if (this.disjointQueryTimerExtension == null) {\n            this.disjointQueryTimerExtension =\n                webgl_util.getExtensionOrThrow(this.gl, environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ?\n                    'EXT_disjoint_timer_query_webgl2' :\n                    'EXT_disjoint_timer_query');\n        }\n        return this.disjointQueryTimerExtension;\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL2 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL1 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.runQuery = function (queryFn) {\n        var query = this.beginQuery();\n        queryFn();\n        this.endQuery();\n        return this.pollQueryTime(query);\n    };\n    GPGPUContext.prototype.beginQuery = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_1 = this.getQueryTimerExtensionWebGL2();\n            var query_1 = gl2.createQuery();\n            gl2.beginQuery(ext_1.TIME_ELAPSED_EXT, query_1);\n            return query_1;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        var query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        return query;\n    };\n    GPGPUContext.prototype.endQuery = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_2 = this.getQueryTimerExtensionWebGL2();\n            gl2.endQuery(ext_2.TIME_ELAPSED_EXT);\n            return;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    };\n    GPGPUContext.prototype.isQueryAvailable = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return true;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var ext = this.getQueryTimerExtensionWebGL2();\n            var available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n            var disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            return available && !disjoint;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            var disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            return available && !disjoint;\n        }\n    };\n    GPGPUContext.prototype.pollQueryTime = function (query) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            var queryTimerVersion = environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION');\n            util.repeatedTry(function () { return _this.isQueryAvailable(query, queryTimerVersion); })\n                .then(function () { return resolve(_this.getQueryTime(query, queryTimerVersion)); })\n                .catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.getQueryTime = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return null;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n            return timeElapsedNanos / 1000000;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n            return timeElapsedNanos / 1000000;\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverSetup = function (texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverTeardown = function () {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.autoDebugValidate) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriver = function (texture, downloadAndDecode) {\n        this.downloadMatrixDriverSetup(texture);\n        var result = downloadAndDecode();\n        this.downloadMatrixDriverTeardown();\n        return result;\n    };\n    GPGPUContext.prototype.downloadMatrixDriverAsync = function (texture, downloadAndDecode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.downloadMatrixDriverSetup(texture);\n                        return [4, downloadAndDecode()];\n                    case 1:\n                        result = _a.sent();\n                        this.downloadMatrixDriverTeardown();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    GPGPUContext.prototype.setOutputMatrixTextureDriver = function (outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, function () { return gl.viewport(0, 0, width, height); });\n        webgl_util.callAndCheck(gl, function () { return gl.scissor(0, 0, width, height); });\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegionDriver = function (x, y, width, height) {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.scissor(x, y, width, height); });\n    };\n    GPGPUContext.prototype.throwIfDisposed = function () {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    };\n    GPGPUContext.prototype.throwIfNoProgram = function () {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    };\n    return GPGPUContext;\n}());\nexports.GPGPUContext = GPGPUContext;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar shader_compiler = __webpack_require__(15);\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.tensor.shape,\n            texShape: input.texData.texShape\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.tensor.shape,\n        texShape: output.texData.texShape\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    if (shouldUploadNaNUniform()) {\n        var throwIfNaNUniformIsNotUsed = false;\n        uniformLocations[NAN_UNIFORM_NAME] = gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME, throwIfNaNUniformIsNotUsed);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].tensor.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.tensor.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar WhereProgram = (function () {\n    function WhereProgram(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.outputShape = shape;\n        var cCoords;\n        var abCoords;\n        if (rank > 4) {\n            throw Error(\"Where for rank \" + rank + \" is not yet supported\");\n        }\n        if (rank === 1) {\n            abCoords = \"resRC\";\n            cCoords = \"resRC\";\n        }\n        else {\n            var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            var cCoordVars = [];\n            var abCoordVars = [];\n            for (var i = 0; i < shape.length; i++) {\n                abCoordVars.push(\"\" + currentCoords[i]);\n                if (i < cRank) {\n                    cCoordVars.push(\"\" + currentCoords[i]);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        float cVal = getC(\" + cCoords + \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\" + abCoords + \"));\\n        } else {\\n          setOutput(getB(\" + abCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return WhereProgram;\n}());\nexports.WhereProgram = WhereProgram;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRNProgram = (function () {\n    function LRNProgram(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        var rad = radius;\n        var maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        var powOperator;\n        var basis = \"float(\" + bias + \") + float(\" + alpha + \") * sum\";\n        if (beta === 0.5) {\n            powOperator = \"inversesqrt(\" + basis + \")\";\n        }\n        else if (beta === 1.0) {\n            powOperator = \"1.0/(\" + basis + \")\";\n        }\n        else {\n            powOperator = \"exp(log(\" + basis + \") * float(-\" + beta + \"));\";\n        }\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\" + rad + \"; j <= \" + rad + \"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \" + maxD + \") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \" + powOperator + \";\\n        setOutput(val);\\n      }\\n    \";\n    }\n    return LRNProgram;\n}());\nexports.LRNProgram = LRNProgram;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MaxPool2DBackpropProgram = (function () {\n    function MaxPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = filterHeight * filterWidth - 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + lastIndex + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + filterWidth + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool2DBackpropProgram;\n}());\nexports.MaxPool2DBackpropProgram = MaxPool2DBackpropProgram;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MatMulProgram = (function () {\n    function MatMulProgram(aShape, bShape, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        this.variableNames = ['matrixA', 'matrixB'];\n        var outerShapeA = transposeA ? aShape[1] : aShape[0];\n        var outerShapeB = transposeB ? bShape[0] : bShape[1];\n        var sharedDim = transposeA ? aShape[0] : aShape[1];\n        this.outputShape = [outerShapeA, outerShapeB];\n        var aSnippetFromOffset = function (vec4Offset, indexVar) {\n            return transposeA ? indexVar + \" + \" + vec4Offset + \", aRow\" :\n                \"aRow, \" + indexVar + \" + \" + vec4Offset;\n        };\n        var bSnippetFromOffset = function (vec4Offset, indexVar) {\n            return transposeB ? \"bCol, \" + indexVar + \" + \" + vec4Offset :\n                indexVar + \" + \" + vec4Offset + \", bCol\";\n        };\n        var sharedDimNearestVec4 = Math.floor(sharedDim / 4) * 4;\n        var sharedDimVec4Remainder = sharedDim % 4;\n        this.userCode = \" float dotARowBCol(int aRow, int bCol) {\\n      float result = 0.0;\\n      for (int i = 0; i < \" + sharedDimNearestVec4 + \"; i += 4) {\\n        vec4 a = vec4(\\n          getMatrixA(\" + aSnippetFromOffset(0, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(3, 'i') + \")\\n        );\\n        vec4 b = vec4(\\n          getMatrixB(\" + bSnippetFromOffset(0, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(3, 'i') + \")\\n        );\\n\\n        result += dot(a, b);\\n      }\\n\\n      if (\" + (sharedDimVec4Remainder === 1) + \") {\\n        result += getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \") *\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \");\\n      } else if (\" + (sharedDimVec4Remainder === 2) + \") {\\n        vec2 a = vec2(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        vec2 b = vec2(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      } else if (\" + (sharedDimVec4Remainder === 3) + \") {\\n        vec3 a = vec3(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        vec3 b = vec3(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      }\\n\\n      return result;\\n    }\\n\\n    void main() {\\n      ivec2 resRC = getOutputCoords();\\n      setOutput(dotARowBCol(resRC.x, resRC.y));\\n    }\\n    \";\n    }\n    return MatMulProgram;\n}());\nexports.MatMulProgram = MatMulProgram;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MultinomialProgram = (function () {\n    function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (numOutcomes - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (numOutcomes - 1) + \"));\\n      }\\n    \";\n    }\n    MultinomialProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return MultinomialProgram;\n}());\nexports.MultinomialProgram = MultinomialProgram;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneHotProgram = (function () {\n    function OneHotProgram(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + offValue + \"), float(\" + onValue + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n    }\n    return OneHotProgram;\n}());\nexports.OneHotProgram = OneHotProgram;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar PadProgram = (function () {\n    function PadProgram(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map(function (p, i) { return p[0] + xShape[i] + p[1]; });\n        var rank = xShape.length;\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        var start = paddings.map(function (p) { return p[0]; }).join(',');\n        var end = paddings.map(function (p, i) { return p[0] + xShape[i]; }).join(',');\n        var unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        if (rank === 1) {\n            this.userCode = \"\\n        int start = \" + start + \";\\n        int end = \" + end + \";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(\" + constantValue + \"));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \";\n            return;\n        }\n        this.userCode = \"\\n      \" + type + \" start = \" + type + \"(\" + start + \");\\n      \" + type + \" end = \" + type + \"(\" + end + \");\\n\\n      void main() {\\n        \" + type + \" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(\" + constantValue + \"));\\n        } else {\\n          \" + type + \" coords = outC - start;\\n          setOutput(getX(\" + unpackedCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return PadProgram;\n}());\nexports.PadProgram = PadProgram;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = (function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            initializationValue = '-1.0 / 0.0';\n        }\n        if (computePositions) {\n            var compareOp_1 = '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + filterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / count\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC;\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              getValue(batch, xR, xC + 3, d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}());\nexports.Pool2DProgram = Pool2DProgram;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReduceProgram = (function () {\n    function ReduceProgram(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var isReduceSum = reduceType === 'sum';\n        var initializationValue = '0.0';\n        if (!isReduceSum) {\n            if (reduceType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        var compareOp = reduceType === 'min' ? 'min' : 'max';\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = \"sumValue\";\n        }\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n      if (\" + isReduceSum + \") {\\n        sumValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        var checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return ReduceProgram;\n}());\nexports.ReduceProgram = ReduceProgram;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinearProgram = (function () {\n    function ResizeBilinearProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinearProgram;\n}());\nexports.ResizeBilinearProgram = ResizeBilinearProgram;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeNearestNeighborProgram = (function () {\n    function ResizeNearestNeighborProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + 0.5)));\\n\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeNearestNeighborProgram;\n}());\nexports.ResizeNearestNeighborProgram = ResizeNearestNeighborProgram;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar ReverseProgram = (function () {\n    function ReverseProgram(xShape, axis) {\n        this.variableNames = ['x'];\n        var rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(\"WebGL backend: Reverse of rank-\" + rank + \" tensor is not yet supported\");\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\" + xShape[0] + \" - coord - 1));\\n        }\\n      \";\n            return;\n        }\n        var getInCoord = function (i) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return xShape[i] + \" - coords[\" + i + \"] - 1\";\n            }\n            return \"coords[\" + i + \"]\";\n        };\n        var inCoords = xShape.map(function (_, i) { return getInCoord(i); }).join(',');\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + type + \" coords = getOutputCoords();\\n        setOutput(getX(\" + inCoords + \"));\\n      }\\n    \";\n    }\n    return ReverseProgram;\n}());\nexports.ReverseProgram = ReverseProgram;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar SliceProgram = (function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getCoords(this.rank);\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            if (_this.rank === 1) {\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n            }\n            else if (_this.rank === 2) {\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n            }\n            else if (_this.rank === 3) {\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n            }\n            else if (_this.rank === 4) {\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n            }\n            else {\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n            }\n        };\n    };\n    return SliceProgram;\n}());\nexports.SliceProgram = SliceProgram;\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank === 2) {\n        return 'sourceLoc.x, sourceLoc.y';\n    }\n    else if (rank === 3) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n    }\n    else if (rank === 4) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n    }\n    else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tex_util_1 = __webpack_require__(25);\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.allocatedTextures = [];\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shapeRC, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture = this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n        this.allocatedTextures.push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shape, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        if (this.allocatedTextures == null) {\n            return;\n        }\n        this.allocatedTextures.forEach(function (texture) {\n            _this.gpgpu.deleteMatrixTexture(texture);\n        });\n        this.freeTextures = null;\n        this.allocatedTextures = null;\n        this.usedTextureCount = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol, texType) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1] + \"_\" + texType;\n}\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar TileProgram = (function () {\n    function TileProgram(aShape, reps) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return TileProgram;\n}());\nexports.TileProgram = TileProgram;\nfunction getSourceCoords(aShape) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"imod(resRC, \" + aShape[0] + \")\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n    }\n    return sourceCoords.join();\n}\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = __webpack_require__(15);\nvar TransposeProgram = (function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}());\nexports.TransposeProgram = TransposeProgram;\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 4) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar array_ops_1 = __webpack_require__(28);\nvar broadcast_util_1 = __webpack_require__(16);\nvar operation_1 = __webpack_require__(8);\nvar ops_1 = __webpack_require__(7);\nvar BatchNormOps = (function () {\n    function BatchNormOps() {\n    }\n    BatchNormOps.batchNormalization2d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 2, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 2 || mean.rank === 1, \"Error in batchNormalization2D: mean must be rank 2 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 2 || variance.rank === 1, \"Error in batchNormalization2D: variance must be rank 2 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 2 || scale.rank === 1, \"Error in batchNormalization2D: scale must be rank 2 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 2 || offset.rank === 1, \"Error in batchNormalization2D: offset must be rank 2 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization3d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 3, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 3 || mean.rank === 1, \"Error in batchNormalization3D: mean must be rank 3 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 3 || variance.rank === 1, \"Error in batchNormalization3D: variance must be rank 3 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 3 || scale.rank === 1, \"Error in batchNormalization3D: scale must be rank 3 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 3 || offset.rank === 1, \"Error in batchNormalization3D: offset must be rank 3 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization4d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 4, \"Error in batchNormalization4D: x must be rank 4 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 4 || mean.rank === 1, \"Error in batchNormalization4D: mean must be rank 4 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 4 || variance.rank === 1, \"Error in batchNormalization4D: variance must be rank 4 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 4 || scale.rank === 1, \"Error in batchNormalization4D: scale must be rank 4 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 4 || offset.rank === 1, \"Error in batchNormalization4D: offset must be rank 4 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assertArgumentsAreTensors({ x: x, mean: mean, variance: variance }, 'batchNormalization');\n        if (scale != null) {\n            util.assertArgumentsAreTensors({ scale: scale }, 'batchNormalization');\n        }\n        if (offset != null) {\n            util.assertArgumentsAreTensors({ offset: offset }, 'batchNormalization');\n        }\n        util.assert(mean.rank === variance.rank, 'Batch normalization gradient requires mean and variance to have ' +\n            'equal ranks.');\n        util.assert(offset == null || mean.rank === offset.rank, 'Batch normalization gradient requires mean and offset to have ' +\n            'equal ranks.');\n        util.assert(scale == null || mean.rank === scale.rank, 'Batch normalization gradient requires mean and scale to have ' +\n            'equal ranks.');\n        var x4D;\n        if (x.rank === 0 || x.rank === 1) {\n            x4D = x.as4D(1, 1, 1, x.size);\n        }\n        else if (x.rank === 2) {\n            x4D = x.as4D(1, 1, x.shape[0], x.shape[1]);\n        }\n        else if (x.rank === 3) {\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        else {\n            x4D = x;\n        }\n        var der = function (dy) {\n            var scaleValue = scale == null ? array_ops_1.ArrayOps.scalar(1) : scale;\n            var reductionAxes = broadcast_util_1.getReductionAxes(mean.shape, x4D.shape);\n            var tileShape = [];\n            if (mean.rank === 1) {\n                for (var i = 0; i < x4D.shape.length - 1; ++i) {\n                    tileShape.push(x4D.shape[i]);\n                }\n                tileShape.push(1);\n            }\n            var xMinusMean = x.sub(mean);\n            var dyTimesScaleValue = dy.mul(scaleValue);\n            var oneOverSqrtVariance = ops_1.rsqrt(variance.add(array_ops_1.ArrayOps.scalar(varianceEpsilon)));\n            var minusHalfRCube = oneOverSqrtVariance.mul(oneOverSqrtVariance)\n                .mul(oneOverSqrtVariance)\n                .mul(array_ops_1.ArrayOps.scalar(-0.5));\n            var derX = function () {\n                if (mean.rank === 1) {\n                    return dy\n                        .mul(array_ops_1.ArrayOps.tile(oneOverSqrtVariance.as4D(1, 1, 1, mean.shape[0]), tileShape))\n                        .mul(scaleValue)\n                        .reshape(x.shape);\n                }\n                else {\n                    return dy.mul(oneOverSqrtVariance).mul(scaleValue).reshape(x.shape);\n                }\n            };\n            var derMean = function () {\n                var meanDer = oneOverSqrtVariance.mul(array_ops_1.ArrayOps.scalar(-1)).mul(dyTimesScaleValue);\n                if (mean.rank === 1) {\n                    meanDer = meanDer.sum(reductionAxes);\n                }\n                return meanDer.reshape(mean.shape);\n            };\n            var derVariance = function () {\n                var varianceDer = minusHalfRCube.mul(xMinusMean).mul(dyTimesScaleValue);\n                if (mean.rank === 1) {\n                    varianceDer = varianceDer.sum(reductionAxes);\n                }\n                return varianceDer.reshape(mean.shape);\n            };\n            var derScale = function () {\n                var xMinusMean2TimesRsqrt = xMinusMean.mul(oneOverSqrtVariance);\n                var scaleDer = dy.mul(xMinusMean2TimesRsqrt);\n                if (mean.rank === 1) {\n                    scaleDer = scaleDer.sum(reductionAxes);\n                }\n                return scaleDer.reshape(mean.shape);\n            };\n            var derOffset = function () {\n                var offsetDer = dy;\n                if (mean.rank === 1) {\n                    offsetDer = offsetDer.sum(reductionAxes);\n                }\n                return offsetDer.reshape(mean.shape);\n            };\n            return {\n                x: derX,\n                mean: derMean,\n                variance: derVariance,\n                scale: derScale,\n                offset: derOffset\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.batchNormalization(x4D, batchnormReshape4D(mean), batchnormReshape4D(variance), varianceEpsilon, batchnormReshape4D(scale), batchnormReshape4D(offset)); }, { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, der);\n        return res.reshape(x.shape);\n    };\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization2d\", null);\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization3d\", null);\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization4d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' })\n    ], BatchNormOps, \"batchNormalization\", null);\n    return BatchNormOps;\n}());\nexports.BatchNormOps = BatchNormOps;\nfunction batchnormReshape4D(x) {\n    if (x == null) {\n        return null;\n    }\n    if (x.rank === 0) {\n        return x.as1D();\n    }\n    else if (x.rank === 1) {\n        return x;\n    }\n    else if (x.rank === 2) {\n        return x.as4D(1, 1, x.shape[0], x.shape[1]);\n    }\n    else if (x.rank === 3) {\n        return x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    return x;\n}\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar broadcast_util = __webpack_require__(16);\nvar operation_1 = __webpack_require__(8);\nvar CompareOps = (function () {\n    function CompareOps() {\n    }\n    CompareOps.notEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'notEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.notEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.notEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in notEqualStrict: ');\n        return a.notEqual(b);\n    };\n    CompareOps.less = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'less');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.less(a, b); }, { a: a, b: b });\n    };\n    CompareOps.lessStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in lessStrict: ');\n        return a.less(b);\n    };\n    CompareOps.equal = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'equal');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.equal(a, b); }, { a: a, b: b });\n    };\n    CompareOps.equalStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in equalStrict: ');\n        return a.equal(b);\n    };\n    CompareOps.lessEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'lessEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.lessEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.lessEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in lessEqualStrict: ');\n        return a.lessEqual(b);\n    };\n    CompareOps.greater = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'greater');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.greater(a, b); }, { a: a, b: b });\n    };\n    CompareOps.greaterStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in greaterStrict: ');\n        return a.greater(b);\n    };\n    CompareOps.greaterEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'greaterEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.greaterEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.greaterEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in greaterEqualStrict: ');\n        return a.greaterEqual(b);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"notEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"notEqualStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"less\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"lessStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"equal\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"equalStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"lessEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"lessEqualStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"greater\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"greaterStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"greaterEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"greaterEqualStrict\", null);\n    return CompareOps;\n}());\nexports.CompareOps = CompareOps;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar conv_util = __webpack_require__(54);\nvar operation_1 = __webpack_require__(8);\nvar ConvOps = (function () {\n    function ConvOps() {\n    }\n    ConvOps.conv1d = function (x, filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\n        if (dilation === void 0) { dilation = 1; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv1d');\n        var x3D = x;\n        var reshapedTo3D = false;\n        if (x.rank === 2) {\n            reshapedTo3D = true;\n            x3D = x.as3D(1, x.shape[0], x.shape[1]);\n        }\n        util.assert(x3D.rank === 3, \"Error in conv1d: input must be rank 3, but got rank \" + x3D.rank + \".\");\n        util.assert(filter.rank === 3, \"Error in conv1d: filter must be rank 3, but got rank \" +\n            (filter.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv1d: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        util.assert(x3D.shape[2] === filter.shape[1], \"Error in conv1d: depth of input (\" + x3D.shape[2] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[1] + \".\"));\n        util.assert(eitherStridesOrDilationsAreOne(stride, dilation), 'Error in conv1D: Either stride or dilation must be 1.' +\n            (\"Got stride \" + stride + \" and dilation '\" + dilation + \"'\"));\n        util.assert(dataFormat === 'NWC', \"Error in conv1d: got dataFormat of \" + dataFormat + \" but only NWC is currently supported.\");\n        var filter4D = filter.as4D(1, filter.shape[0], filter.shape[1], filter.shape[2]);\n        var input4D = x3D.as4D(x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]);\n        var strides = [1, stride];\n        var dilations = [1, dilation];\n        var conv2dDataFormat = 'NHWC';\n        var res = ConvOps.conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n        if (reshapedTo3D) {\n            return res.as2D(res.shape[2], res.shape[3]);\n        }\n        return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\n    };\n    ConvOps.conv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in conv2d: input must be rank 4, but got rank \" + x4D.rank + \".\");\n        util.assert(filter.rank === 4, \"Error in conv2d: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2d: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in conv2d: depth of input (\" + x4D.shape[3] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in conv2D: Either strides or dilations must be 1.' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\n        util.assert(dataFormat === 'NHWC', \"Error in conv2d: got dataFormat of \" + dataFormat + \" but only NHWC is currently supported.\");\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n        var grad = function (dy) {\n            util.assert(tupleValuesAreOne(dilations), 'Error in gradient of conv2D: dilation rates greater than 1 are not' +\n                (\"yet supported in gradients. Got dilations '\" + dilations + \"'\"));\n            return {\n                x: function () { return ConvOps.conv2dDerInput(x4D.shape, dy, filter, strides, pad); },\n                filter: function () {\n                    return ConvOps.conv2dDerFilter(x4D, dy, filter.shape, strides, pad);\n                }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2d(x4D, filter, convInfo); }, { x: x4D, filter: filter }, grad);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.conv2dDerInput = function (xShape, dy, filter, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ dy: dy, filter: filter }, 'conv2dDerInput');\n        util.assert(xShape.length === dy.rank, \"Length of inShape \" +\n            (\"(\" + xShape.length + \") and rank of dy (\" + dy.rank + \") must match\"));\n        var xShape4D = xShape;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (dy.rank === 3) {\n            reshapedTo4D = true;\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n            xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n        }\n        var inDepth = xShape4D[3];\n        var outDepth = dy4D.shape[3];\n        util.assert(xShape4D.length === 4, \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\n            (xShape4D.length + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerInput: dy must be rank 4, but got \" +\n            (\"rank \" + dy4D.rank));\n        util.assert(filter.rank === 4, \"Error in conv2dDerInput: filter must be rank 4, but got \" +\n            (\"rank \" + filter.rank));\n        util.assert(inDepth === filter.shape[2], \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\n            (\"match input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(outDepth === filter.shape[3], \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must\" +\n            (\"match output depth for filter \" + filter.shape[3] + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2dDerInput: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var dilations = 1;\n        var convInfo = conv_util.computeConv2DInfo(xShape4D, filter.shape, strides, dilations, pad, dimRoundingMode);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2dDerInput(dy4D, filter, convInfo); }, { dy4D: dy4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.conv2dDerFilter = function (x, dy, filterShape, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x, dy: dy }, 'conv2dDerFilter');\n        var x4D = x;\n        if (x.rank === 3) {\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        var dy4D = dy;\n        if (dy4D.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\n            (x4D.shape + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\n            (dy4D.shape + \".\"));\n        util.assert(filterShape.length === 4, \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\n            (filterShape + \".\"));\n        util.assert(x4D.shape[3] === filterShape[2], \"Error in conv2dDerFilter: depth of input \" + x4D.shape[3] + \") must \" +\n            (\"match input depth in filter (\" + filterShape[2] + \".\"));\n        util.assert(dy4D.shape[3] === filterShape[3], \"Error in conv2dDerFilter: depth of dy (\" + dy4D.shape[3] + \") must \" +\n            (\"match output depth for filter (\" + filterShape[3] + \").\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2dDerFilter: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var dilations = 1;\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filterShape, strides, dilations, pad, dimRoundingMode);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2dDerFilter(x4D, dy4D, convInfo); }, { x4D: x4D, dy4D: dy4D });\n    };\n    ConvOps.conv2dTranspose = function (x, filter, outputShape, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2dTranspose');\n        return ConvOps.conv2dDerInput(outputShape, x, filter, strides, pad, dimRoundingMode);\n    };\n    ConvOps.depthwiseConv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'depthwiseConv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in depthwiseConv2D: input must be rank 4, but got \" +\n            (\"rank \" + x4D.rank + \".\"));\n        util.assert(filter.rank === 4, \"Error in depthwiseConv2D: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in depthwiseConv2D: number of input channels \" +\n            (\"(\" + x4D.shape[3] + \") must match the inChannels dimension in \") +\n            (\"filter \" + filter.shape[2] + \".\"));\n        if (dilations == null) {\n            dilations = [1, 1];\n        }\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in depthwiseConv2d: Either strides or dilations must be 1.' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in depthwiseConv2D: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode, true);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.depthwiseConv2D(x4D, filter, convInfo); }, { x4D: x4D, filter: filter });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.separableConv2d = function (x, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n        if (dilation === void 0) { dilation = [1, 1]; }\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        util.assertArgumentsAreTensors({ x: x, depthwiseFilter: depthwiseFilter, pointwiseFilter: pointwiseFilter }, 'separableConv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        if (dataFormat === 'NCHW') {\n            throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n                'NHWC is supported');\n        }\n        util.assert(x4D.rank === 4, \"Error in separableConv2d: input must be rank 4, but got \" +\n            (\"rank \" + x4D.rank + \".\"));\n        util.assert(depthwiseFilter.rank === 4, \"Error in separableConv2d: depthwise filter must be rank 4, but got \" +\n            (\"rank \" + depthwiseFilter.rank + \".\"));\n        util.assert(pointwiseFilter.rank === 4, \"Error in separableConv2d: pointwise filter must be rank 4, but got \" +\n            (\"rank \" + depthwiseFilter.rank + \".\"));\n        util.assert(pointwiseFilter.shape[0] === 1, \"Error in separableConv2d: the first dimension of pointwise filter \" +\n            (\" must be 1, but got \" + pointwiseFilter.shape[0] + \".\"));\n        util.assert(pointwiseFilter.shape[1] === 1, \"Error in separableConv2d: the second dimension of pointwise filter \" +\n            (\" must be 1, but got \" + pointwiseFilter.shape[1] + \".\"));\n        var inChannels = depthwiseFilter.shape[2];\n        var channelMultiplier = depthwiseFilter.shape[3];\n        util.assert(pointwiseFilter.shape[2] === inChannels * channelMultiplier, \"Error in separableConv2d: the third dimension of pointwise filter \" +\n            (\"must be \" + inChannels * channelMultiplier + \", \") +\n            (\"but got \" + pointwiseFilter.shape[2] + \".\"));\n        var depthwise = ConvOps.depthwiseConv2d(x4D, depthwiseFilter, strides, pad, dataFormat, dilation);\n        var pointwiseStride = 1;\n        var res = ConvOps.conv2d(depthwise, pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv1d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv2d\", null);\n    __decorate([\n        operation_1.operation\n    ], ConvOps, \"conv2dDerInput\", null);\n    __decorate([\n        operation_1.operation\n    ], ConvOps, \"conv2dDerFilter\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv2dTranspose\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"depthwiseConv2d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"separableConv2d\", null);\n    return ConvOps;\n}());\nexports.ConvOps = ConvOps;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction tupleValuesAreOne(param) {\n    var _a = parseTupleParam(param), dimA = _a[0], dimB = _a[1];\n    return dimA === 1 && dimB === 1;\n}\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar ImageOps = (function () {\n    function ImageOps() {\n    }\n    ImageOps.resizeBilinear = function (images, size, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeBilinear');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeBilinear: x must be rank 3 or 4, but got \" +\n            (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeBilinear: new shape must 2D, but got shape \" +\n            (size + \".\"));\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages =\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0], newWidth = size[1];\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.resizeBilinear(batchImages, newHeight, newWidth, alignCorners); }, { batchImages: batchImages });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ImageOps.resizeNearestNeighbor = function (images, size, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeNearestNeighbor');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" +\n            (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" +\n            (size + \".\"));\n        util.assert(images.dtype === 'float32' || images.dtype === 'int32', '`images` must have `int32` or `float32` as dtype');\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages =\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0], newWidth = size[1];\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.resizeNearestNeighbor(batchImages, newHeight, newWidth, alignCorners); }, { batchImages: batchImages });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\n        operation_1.operation\n    ], ImageOps, \"resizeBilinear\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\n        operation_1.operation\n    ], ImageOps, \"resizeNearestNeighbor\", null);\n    return ImageOps;\n}());\nexports.ImageOps = ImageOps;\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar types = __webpack_require__(22);\nvar util = __webpack_require__(0);\nvar broadcast_util = __webpack_require__(16);\nvar operation_1 = __webpack_require__(8);\nvar LogicalOps = (function () {\n    function LogicalOps() {\n    }\n    LogicalOps.logicalNot = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'logicalNot');\n        util.assert(x.dtype === 'bool', 'Error Array must be of type bool.');\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalNot(x); }, { x: x });\n    };\n    LogicalOps.logicalAnd = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalAnd');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalAnd(a, b); }, { a: a, b: b });\n    };\n    LogicalOps.logicalOr = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalOr');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalOr(a, b); }, { a: a, b: b });\n    };\n    LogicalOps.logicalXor = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalXor');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return LogicalOps.logicalOr(a, b).logicalAnd(LogicalOps.logicalAnd(a, b).logicalNot());\n    };\n    LogicalOps.where = function (condition, a, b) {\n        util.assertArgumentsAreTensors({ condition: condition, a: a, b: b }, 'where');\n        util.assert(condition.dtype === 'bool' || a.dtype === 'bool' || b.dtype === 'bool', 'Error Array must be of type bool.');\n        util.assertShapesMatch(a.shape, b.shape, 'Error in where: ');\n        if (condition.rank === 1) {\n            util.assert(condition.shape[0] === a.shape[0], 'The first dimension of `a` must match the size of `condition`.');\n        }\n        else {\n            util.assertShapesMatch(condition.shape, b.shape, 'Error in where: ');\n        }\n        var dtype = types.upcastType(a.dtype, b.dtype);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.where(condition, a, b, dtype); }, { condition: condition, a: a, b: b });\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalNot\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalAnd\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalOr\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalXor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"where\", null);\n    return LogicalOps;\n}());\nexports.LogicalOps = LogicalOps;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar LRNOps = (function () {\n    function LRNOps() {\n    }\n    LRNOps.localResponseNormalization = function (x, radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        util.assertArgumentsAreTensors({ x: x }, 'localResponseNormalization');\n        util.assert(x.rank === 4 || x.rank === 3, \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \" + x.rank + \".\");\n        util.assert(util.isInt(radius), \"Error in localResponseNormalization3D: radius must be an integer\\n                     but got radius \" + radius + \".\");\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.localResponseNormalization4D(x4D, radius, bias, alpha, beta); }, { x4D: x4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        else {\n            return res;\n        }\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], LRNOps, \"localResponseNormalization\", null);\n    return LRNOps;\n}());\nexports.LRNOps = LRNOps;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar LSTMOps = (function () {\n    function LSTMOps() {\n    }\n    LSTMOps.multiRNNCell = function (lstmCells, data, c, h) {\n        util.assertArgumentsAreTensors({ data: data, c: c, h: h }, 'multiRNNCell');\n        var input = data;\n        var newStates = [];\n        for (var i = 0; i < lstmCells.length; i++) {\n            var output = lstmCells[i](input, c[i], h[i]);\n            newStates.push(output[0]);\n            newStates.push(output[1]);\n            input = output[1];\n        }\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < newStates.length; i += 2) {\n            newC.push(newStates[i]);\n            newH.push(newStates[i + 1]);\n        }\n        return [newC, newH];\n    };\n    LSTMOps.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        util.assertArgumentsAreTensors({ forgetBias: forgetBias, lstmKernel: lstmKernel, lstmBias: lstmBias, data: data, c: c, h: h }, 'basicLSTMCell');\n        var combined = data.concat(h, 1);\n        var weighted = combined.matMul(lstmKernel);\n        var res = weighted.add(lstmBias);\n        var batchSize = res.shape[0];\n        var sliceCols = res.shape[1] / 4;\n        var sliceSize = [batchSize, sliceCols];\n        var i = res.slice([0, 0], sliceSize);\n        var j = res.slice([0, sliceCols], sliceSize);\n        var f = res.slice([0, sliceCols * 2], sliceSize);\n        var o = res.slice([0, sliceCols * 3], sliceSize);\n        var newC = i.sigmoid().mulStrict(j.tanh()).addStrict(c.mulStrict(forgetBias.add(f).sigmoid()));\n        var newH = newC.tanh().mulStrict(o.sigmoid());\n        return [newC, newH];\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"multiRNNCell\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"basicLSTMCell\", null);\n    return LSTMOps;\n}());\nexports.LSTMOps = LSTMOps;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar MatmulOps = (function () {\n    function MatmulOps() {\n    }\n    MatmulOps.matMul = function (a, b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'matMul');\n        var innerShapeA = transposeA ? a.shape[0] : a.shape[1];\n        var innerShapeB = transposeB ? b.shape[1] : b.shape[0];\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\n            (\" and \" + b.rank + \".\"));\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n            (innerShapeB + \") of Tensors with shapes \" + a.shape + \" and \") +\n            (b.shape + \" and transposeA=\" + transposeA) +\n            (\" and transposeB=\" + transposeB + \" must match.\"));\n        var grad = function (dy) {\n            if (!transposeA && !transposeB) {\n                return {\n                    a: function () { return dy.matMul(b.toFloat(), false, true); },\n                    b: function () { return a.toFloat().matMul(dy, true, false); }\n                };\n            }\n            else if (!transposeA && transposeB) {\n                return {\n                    a: function () { return dy.matMul(b.toFloat(), false, false); },\n                    b: function () { return dy.matMul(a.toFloat(), true, false); }\n                };\n            }\n            else if (transposeA && !transposeB) {\n                return {\n                    a: function () { return b.toFloat().matMul(dy, false, true); },\n                    b: function () { return a.toFloat().matMul(dy, false, false); }\n                };\n            }\n            else {\n                return {\n                    a: function () { return b.toFloat().matMul(dy, true, true); },\n                    b: function () { return dy.matMul(a.toFloat(), true, true); }\n                };\n            }\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.matMul(a, b, transposeA, transposeB); }, { a: a, b: b }, grad);\n    };\n    MatmulOps.vectorTimesMatrix = function (v, matrix) {\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\n        return v.as2D(1, -1).matMul(matrix).as1D();\n    };\n    MatmulOps.matrixTimesVector = function (matrix, v) {\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\n            \"must match inner dimension of second rank 2 input, but got \" +\n            (\"shape \" + matrix.shape + \".\"));\n        return matrix.matMul(v.as2D(-1, 1)).as1D();\n    };\n    MatmulOps.dotProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\n            (v2.size + \") must match.\"));\n        return v1.as2D(1, -1).matMul(v2.as2D(-1, 1)).asScalar();\n    };\n    MatmulOps.outerProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        return v1.as2D(-1, 1).matMul(v2.as2D(1, -1));\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"matMul\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"vectorTimesMatrix\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"matrixTimesVector\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"dotProduct\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"outerProduct\", null);\n    return MatmulOps;\n}());\nexports.MatmulOps = MatmulOps;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar util = __webpack_require__(0);\nvar array_ops_1 = __webpack_require__(28);\nvar binary_ops_1 = __webpack_require__(52);\nvar operation_1 = __webpack_require__(8);\nvar MovingAverageOps = (function () {\n    function MovingAverageOps() {\n    }\n    MovingAverageOps.movingAverage = function (v, x, decay, step, zeroDebias) {\n        if (zeroDebias === void 0) { zeroDebias = true; }\n        util.assertArgumentsAreTensors({ v: v, x: x }, 'movingAverage');\n        util.assertTypesMatch(v, x);\n        util.assert(util.arraysEqual(v.shape, x.shape), 'Shape mismatch in v and x');\n        var one = array_ops_1.ArrayOps.scalar(1);\n        decay = typeof decay === 'number' ? array_ops_1.ArrayOps.scalar(decay) : decay;\n        var oneMinusDecay = one.sub(decay);\n        var update = x.sub(v).mul(oneMinusDecay);\n        if (zeroDebias) {\n            util.assert(step != null, 'When using zeroDebias: true, step is required.');\n            step = typeof step === 'number' ? array_ops_1.ArrayOps.scalar(step) : step;\n            update = update.div(one.sub(binary_ops_1.BinaryOps.pow(decay, step)));\n        }\n        return v.add(update);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Moving Average' }),\n        operation_1.operation\n    ], MovingAverageOps, \"movingAverage\", null);\n    return MovingAverageOps;\n}());\nexports.MovingAverageOps = MovingAverageOps;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar util = __webpack_require__(0);\nvar axis_util = __webpack_require__(13);\nvar operation_1 = __webpack_require__(8);\nvar ops = __webpack_require__(7);\nvar NormOps = (function () {\n    function NormOps() {\n    }\n    NormOps.norm = function (x, ord, axis, keepDims) {\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'norm');\n        var norm = normImpl(x, ord, axis);\n        var keepDimsShape = norm.shape;\n        if (keepDims) {\n            var axes = axis_util.parseAxisParam(axis, x.shape);\n            keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n        }\n        return norm.reshape(keepDimsShape);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], NormOps, \"norm\", null);\n    return NormOps;\n}());\nexports.NormOps = NormOps;\nfunction normImpl(x, p, axis) {\n    if (axis === void 0) { axis = null; }\n    if (x.rank === 0) {\n        return x.abs();\n    }\n    if (x.rank !== 1 && axis === null) {\n        return normImpl(x.reshape([-1]), p, axis);\n    }\n    if (x.rank === 1 || typeof axis === 'number' ||\n        axis instanceof Array && axis.length === 1) {\n        if (p === 1) {\n            return x.abs().sum(axis);\n        }\n        if (p === Infinity) {\n            return x.abs().max(axis);\n        }\n        if (p === -Infinity) {\n            return x.abs().min(axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            return x.abs().pow(ops.scalar(2, 'int32')).sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    if (axis instanceof Array && axis.length === 2) {\n        if (p === 1) {\n            return x.abs().sum(axis[0]).max(axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return x.abs().sum(axis[1]).max(axis[0]);\n        }\n        if (p === -Infinity) {\n            return x.abs().sum(axis[1]).min(axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            return x.square().sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    throw new Error(\"Error in norm: invalid axis: \" + axis);\n}\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar conv_util = __webpack_require__(54);\nvar operation_1 = __webpack_require__(8);\nvar PoolOps = (function () {\n    function PoolOps() {\n    }\n    PoolOps.maxPool = function (x, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x }, 'maxPool');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in maxPool: input must be rank 4 but got rank \" + x4D.rank + \".\");\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in maxPool: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, pad, dimRoundingMode);\n        var grad = function (dy, saved) {\n            var y4D = saved[0];\n            return {\n                x: function () { return PoolOps.maxPoolBackprop(dy, x4D, y4D, filterSize, strides, pad); }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.maxPool(x4D, convInfo)); }, { x: x4D }, grad);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    PoolOps.maxPoolBackprop = function (dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ dy: dy, input: input, output: output }, 'maxPoolBackprop');\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        util.assert(dy.rank === 4, \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy.rank + \".\"));\n        util.assert(input.rank === 4, \"Error in maxPoolBackprop: input must be rank 4 but got rank \" +\n            (input.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in maxPoolBackprop: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(input.shape, filterSize, strides, pad, dimRoundingMode);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.maxPoolBackprop(dy, input, output, convInfo); }, { dy: dy, input: input });\n        return res;\n    };\n    PoolOps.avgPool = function (x, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x }, 'avgPool');\n        util.assert(x.dtype === 'float32', 'The input dtype to avgPool must be float32');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in avgPool: x must be rank 4 but got rank \" + x4D.rank + \".\");\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in avgPool: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, pad);\n        var grad = function (dy) {\n            return {\n                x: function () { return PoolOps.avgPoolBackprop(dy, x4D, filterSize, strides, pad); }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.avgPool(x4D, convInfo); }, { x: x4D }, grad);\n        res = res.cast(x.dtype);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    PoolOps.avgPoolBackprop = function (dy, input, filterSize, strides, pad) {\n        util.assertArgumentsAreTensors({ dy: dy, input: input }, 'avgPoolBackprop');\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        var input4D = input;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(dy4D.rank === 4, \"Error in avgPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy4D.rank + \".\"));\n        util.assert(input4D.rank === 4, \"Error in avgPoolBackprop: input must be rank 4 but got rank \" +\n            (input4D.rank + \".\"));\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.avgPoolBackprop(dy4D, input4D, convInfo); }, { dy4D: dy4D, input4D: input4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], PoolOps, \"maxPool\", null);\n    __decorate([\n        operation_1.operation\n    ], PoolOps, \"maxPoolBackprop\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], PoolOps, \"avgPool\", null);\n    __decorate([\n        operation_1.operation\n    ], PoolOps, \"avgPoolBackprop\", null);\n    return PoolOps;\n}());\nexports.PoolOps = PoolOps;\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = __webpack_require__(68);\nvar MPRandGauss = (function () {\n    function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        var seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    MPRandGauss.prototype.nextValue = function () {\n        if (!isNaN(this.nextVal)) {\n            var value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        var resultX, resultY;\n        var isValid = false;\n        while (!isValid) {\n            var v1 = void 0, v2 = void 0, s = void 0;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    };\n    MPRandGauss.prototype.convertValue = function (value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    MPRandGauss.prototype.isValidTruncated = function (value) {\n        return value <= this.upper && value >= this.lower;\n    };\n    return MPRandGauss;\n}());\nexports.MPRandGauss = MPRandGauss;\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar globals_1 = __webpack_require__(10);\nvar util = __webpack_require__(0);\nvar axis_util = __webpack_require__(13);\nvar operation_1 = __webpack_require__(8);\nvar ops = __webpack_require__(7);\nvar ReductionOps = (function () {\n    function ReductionOps() {\n    }\n    ReductionOps.logSumExp = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'logSumExp');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var xMax = x.max(axes, true);\n        var a = x.sub(xMax);\n        var b = a.exp();\n        var c = b.sum(axes);\n        var d = c.log();\n        var res = xMax.reshape(d.shape).add(d);\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.sum = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'sum');\n        if (x.dtype === 'bool') {\n            x = x.toInt();\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var customOp = globals_1.customGrad(function (x) {\n            var permutation = axis_util.getAxesPermutation(axes, x.rank);\n            var reductionAxes = axes;\n            var permutedX = x;\n            if (permutation != null) {\n                permutedX = x.transpose(permutation);\n                reductionAxes =\n                    axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\n            }\n            var value = environment_1.ENV.engine.runKernel(function (backend) { return backend.sum(permutedX, reductionAxes); }, { permutedX: permutedX });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n                value = value.reshape(newShape);\n            }\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32'));\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.mean = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'mean');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\n        var reduceShape = shapes[1];\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var customOp = globals_1.customGrad(function (x) {\n            var reduceSizeScalar = ops.scalar(reduceSize);\n            var xReduce = reduceSizeScalar.dtype === x.dtype ?\n                x :\n                x.cast(reduceSizeScalar.dtype);\n            var res = xReduce.div(reduceSizeScalar);\n            var value = res.sum(axis, keepDims);\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32')).div(reduceSizeScalar);\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.min = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'min');\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.min(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.max = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'max');\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.max(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.argMin = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'argMin');\n        if (axis == null) {\n            axis = 0;\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMin(x, axes[0]); }, { x: x });\n    };\n    ReductionOps.argMax = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'argMax');\n        if (axis == null) {\n            axis = 0;\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMax(x, axes[0]); }, { x: x });\n    };\n    ReductionOps.moments = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'moments');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var mean = x.mean(axes, keepDims);\n        var keepDimsShape = mean.shape;\n        if (!keepDims) {\n            keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n        }\n        var devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\n        var variance = devSquared.mean(axes, keepDims);\n        return { mean: mean, variance: variance };\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"logSumExp\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"sum\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"mean\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"min\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"max\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], ReductionOps, \"moments\", null);\n    return ReductionOps;\n}());\nexports.ReductionOps = ReductionOps;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar axis_util_1 = __webpack_require__(13);\nvar operation_1 = __webpack_require__(8);\nvar ReverseOps = (function () {\n    function ReverseOps() {\n    }\n    ReverseOps.reverse1d = function (x) {\n        util.assert(x.rank === 1, \"Error in reverse1D: x must be rank 1 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, 0);\n    };\n    ReverseOps.reverse2d = function (x, axis) {\n        util.assert(x.rank === 2, \"Error in reverse2D: x must be rank 2 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse3d = function (x, axis) {\n        util.assert(x.rank === 3, \"Error in reverse3D: x must be rank 3 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse4d = function (x, axis) {\n        util.assert(x.rank === 4, \"Error in reverse4D: x must be rank 4 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse = function (x, axis) {\n        util.assertArgumentsAreTensors({ x: x }, 'reverse');\n        if (x.rank === 0) {\n            return x.clone();\n        }\n        var axes = axis_util_1.parseAxisParam(axis, x.shape);\n        var grad = function (dy) {\n            return { x: function () { return dy.reverse(axes); } };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.reverse(x, axes); }, { x: x }, grad);\n        return res.reshapeAs(x);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ReverseOps, \"reverse\", null);\n    return ReverseOps;\n}());\nexports.ReverseOps = ReverseOps;\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar slice_util = __webpack_require__(121);\nvar SliceOps = (function () {\n    function SliceOps() {\n    }\n    SliceOps.slice1d = function (x, begin, size) {\n        util.assert(x.rank === 1, \"slice1d expects a rank-1 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, [begin], [size]);\n    };\n    SliceOps.slice2d = function (x, begin, size) {\n        util.assert(x.rank === 2, \"slice1d expects a rank-2 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice3d = function (x, begin, size) {\n        util.assert(x.rank === 3, \"slice1d expects a rank-3 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice4d = function (x, begin, size) {\n        util.assert(x.rank === 4, \"slice1d expects a rank-4 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice = function (x, begin, size) {\n        util.assertArgumentsAreTensors({ x: x }, 'slice');\n        if (x.rank === 0) {\n            throw new Error('Slicing scalar is not possible');\n        }\n        var begin_;\n        if (typeof begin === 'number') {\n            begin_ = [begin].concat(new Array(x.rank - 1).fill(0));\n        }\n        else if (begin.length < x.rank) {\n            begin_ = begin.concat(new Array(x.rank - begin.length).fill(0));\n        }\n        else {\n            begin_ = begin;\n        }\n        var size_;\n        if (size == null) {\n            size_ = new Array(x.rank).fill(-1);\n        }\n        else if (typeof size === 'number') {\n            size_ = [size].concat(new Array(x.rank - 1).fill(-1));\n        }\n        else if (size.length < x.rank) {\n            size_ = size.concat(new Array(x.rank - size.length).fill(-1));\n        }\n        else {\n            size_ = size;\n        }\n        size_ = size_.map(function (d, i) {\n            if (d >= 0) {\n                return d;\n            }\n            else {\n                util.assert(d === -1, 'Bad value in size');\n                return x.shape[i] - begin_[i];\n            }\n        });\n        slice_util.assertParamsValid(x, begin_, size_);\n        var inputShape = x.shape;\n        var grad = function (dy) {\n            var paddings = [];\n            for (var i = 0; i < dy.rank; i++) {\n                paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n            }\n            return { x: function () { return dy.pad(paddings); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.slice(x, begin_, size_); }, { x: x }, grad);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], SliceOps, \"slice\", null);\n    return SliceOps;\n}());\nexports.SliceOps = SliceOps;\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    util.assert(input.rank === size.length, \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    for (var i = 0; i < input.rank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"));\n    }\n}\nexports.assertParamsValid = assertParamsValid;\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar globals_1 = __webpack_require__(10);\nvar util = __webpack_require__(0);\nvar axis_util = __webpack_require__(13);\nvar operation_1 = __webpack_require__(8);\nvar ops = __webpack_require__(7);\nvar SoftmaxOps = (function () {\n    function SoftmaxOps() {\n    }\n    SoftmaxOps.softmax = function (logits, dim) {\n        if (dim === void 0) { dim = -1; }\n        util.assertArgumentsAreTensors({ logits: logits }, 'softmax');\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error('Softmax along a non-last dimension is not yet supported. ' +\n                (\"Logits was rank \" + logits.rank + \" and dim was \" + dim));\n        }\n        var customOp = globals_1.customGrad(function (logits) {\n            var keepDims = true;\n            var lse = logits.logSumExp([dim], keepDims);\n            var logResult = logits.toFloat().sub(lse);\n            var y = logResult.exp();\n            var gradFunc = function (dy) {\n                var dyTimesY = dy.mul(y);\n                var keepDims = true;\n                return dyTimesY.sub(dyTimesY.sum([dim], keepDims).mul(y));\n            };\n            return { value: y, gradFunc: gradFunc };\n        });\n        return customOp(logits);\n    };\n    SoftmaxOps.softmaxCrossEntropy = function (labels, logits, dim) {\n        if (dim === void 0) { dim = -1; }\n        util.assertArgumentsAreTensors({ labels: labels, logits: logits }, 'softmaxCrossEntropy');\n        util.assertShapesMatch(labels.shape, logits.shape, 'Error in softmaxCrossEntropy: ');\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error(\"Softmax cross entropy along a non-last dimension is not yet \" +\n                (\"supported. Labels / logits was rank \" + logits.rank + \" \") +\n                (\"and dim was \" + dim));\n        }\n        var customOp = globals_1.customGrad(function (labels, logits) {\n            var predictedProbs = logits.softmax(dim);\n            var costVector = ops.scalar(1e-5).add(predictedProbs).log().mul(labels).neg();\n            var value = costVector.sum([dim]);\n            var gradFunc = function (dy) {\n                var dyShape = axis_util.expandShapeToKeepDim(dy.shape, [dim]);\n                return [\n                    dy.reshape(dyShape).mul(labels.toFloat().sub(predictedProbs)),\n                    dy.reshape(dyShape).mul(predictedProbs.sub(labels.toFloat())),\n                ];\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(labels, logits);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], SoftmaxOps, \"softmax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], SoftmaxOps, \"softmaxCrossEntropy\", null);\n    return SoftmaxOps;\n}());\nexports.SoftmaxOps = SoftmaxOps;\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar axis_util = __webpack_require__(13);\nvar operation_1 = __webpack_require__(8);\nvar TransposeOps = (function () {\n    function TransposeOps() {\n    }\n    TransposeOps.transpose = function (x, perm) {\n        util.assertArgumentsAreTensors({ x: x }, 'transpose');\n        if (perm == null) {\n            perm = x.shape.map(function (s, i) { return i; }).reverse();\n        }\n        var der = function (dy) {\n            var undoPerm = axis_util.getUndoAxesPermutation(perm);\n            return { x: function () { return dy.transpose(undoPerm); } };\n        };\n        util.assert(x.rank === perm.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of perm \" + perm + \".\"));\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.transpose(x, perm); }, { x: x }, der);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], TransposeOps, \"transpose\", null);\n    return TransposeOps;\n}());\nexports.TransposeOps = TransposeOps;\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util = __webpack_require__(0);\nvar operation_1 = __webpack_require__(8);\nvar ops = __webpack_require__(7);\nvar ops_1 = __webpack_require__(7);\nvar selu_util = __webpack_require__(34);\nvar UnaryOps = (function () {\n    function UnaryOps() {\n    }\n    UnaryOps.neg = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'neg');\n        var grad = function (dy) {\n            return { x: function () { return dy.neg(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.neg(x); }, { x: x }, grad);\n    };\n    UnaryOps.ceil = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'ceil');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.ceil(x); }, { x: x }, grad);\n    };\n    UnaryOps.floor = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'floor');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.floor(x); }, { x: x }, grad);\n    };\n    UnaryOps.sign = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sign');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sign(x); }, { x: x }, grad);\n    };\n    UnaryOps.round = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'round');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.round(x); }, { x: x }, grad);\n    };\n    UnaryOps.exp = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'exp');\n        var bck = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return dy.mulStrict(y); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.exp(x)); }, { x: x }, bck);\n    };\n    UnaryOps.expm1 = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'expm1');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.exp()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.expm1(x); }, { x: x }, grad);\n    };\n    UnaryOps.log = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'log');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.toFloat()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.log(x); }, { x: x }, grad);\n    };\n    UnaryOps.log1p = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'log1p');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.add(ops.scalar(1))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.log1p(x); }, { x: x }, grad);\n    };\n    UnaryOps.sqrt = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sqrt');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.toFloat().sqrt().mul(ops.scalar(2))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sqrt(x); }, { x: x }, grad);\n    };\n    UnaryOps.rsqrt = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'rsqrt');\n        var grad = function (dy) {\n            return {\n                x: function () { return dy.divStrict(x.pow(ops.scalar(1.5)).mul(ops.scalar(2))).neg(); }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.rsqrt(x); }, { x: x }, grad);\n    };\n    UnaryOps.square = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'square');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.toFloat().mul(ops.scalar(2))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.square(x); }, { x: x }, grad);\n    };\n    UnaryOps.reciprocal = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'reciprocal');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.square().neg()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.reciprocal(x); }, { x: x }, grad);\n    };\n    UnaryOps.abs = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'abs');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.toFloat().step(-1)); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.abs(x); }, { x: x }, grad);\n    };\n    UnaryOps.clipByValue = function (x, clipValueMin, clipValueMax) {\n        util.assertArgumentsAreTensors({ x: x }, 'clipByValue');\n        util.assert((clipValueMin <= clipValueMax), \"Error in clip: min (\" + clipValueMin + \") must be \" +\n            (\"less than or equal to max (\" + clipValueMax + \").\"));\n        var grad = function (dy) {\n            return {\n                x: function () { return dy.where(x.greater(ops.scalar(clipValueMin))\n                    .logicalAnd(x.less(ops.scalar(clipValueMax))), ops_1.zerosLike(dy)); },\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.clip(x, clipValueMin, clipValueMax); }, { x: x }, grad);\n    };\n    UnaryOps.relu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'relu');\n        if (x.dtype === 'bool') {\n            return x.toInt();\n        }\n        var grad = function (dy) {\n            var stepRes = x.step();\n            return { x: function () { return dy.mulStrict(stepRes.toFloat()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.relu(x); }, { x: x }, grad);\n    };\n    UnaryOps.elu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'elu');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return {\n                x: function () {\n                    return environment_1.ENV.engine.runKernel(function (backend) { return backend.eluDer(dy, y); }, { dy: dy, y: y });\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.elu(x)); }, { x: x }, grad);\n    };\n    UnaryOps.selu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'selu');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    var mask = x.greater(ops.scalar(0));\n                    var scaleAlpha = ops.scalar(selu_util.SELU_SCALEALPHA);\n                    var scale = ops.scalar(selu_util.SELU_SCALE);\n                    var greaterThanZeroDer = dy.mul(scale);\n                    var lessEqualZeroDer = dy.mul(scaleAlpha).mul(x.toFloat().exp());\n                    return ops.where(mask, greaterThanZeroDer, lessEqualZeroDer);\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.selu(x); }, { x: x }, grad);\n    };\n    UnaryOps.leakyRelu = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        util.assertArgumentsAreTensors({ x: x }, 'leakyRelu');\n        return ops.maximum(ops.scalar(alpha).mul(x), x);\n    };\n    UnaryOps.prelu = function (x, alpha) {\n        util.assertArgumentsAreTensors({ x: x, alpha: alpha }, 'prelu');\n        var zero = ops.scalar(0);\n        return ops.maximum(zero, x).add(alpha.mul(ops.minimum(zero, x)));\n    };\n    UnaryOps.sigmoid = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sigmoid');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return dy.mulStrict(y.mul(ops.scalar(1).sub(y))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.sigmoid(x)); }, { x: x }, grad);\n    };\n    UnaryOps.logSigmoid = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'logSigmoid');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.neg().sigmoid()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.softplus(x.neg()).neg(); }, { x: x }, grad);\n    };\n    UnaryOps.softplus = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'softplus');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.sigmoid()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.softplus(x); }, { x: x }, grad);\n    };\n    UnaryOps.sin = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sin');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().cos().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sin(x); }, { x: x }, grad);\n    };\n    UnaryOps.cos = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'cos');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().sin().neg().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cos(x); }, { x: x }, grad);\n    };\n    UnaryOps.tan = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'tan');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.cos().square()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.tan(x); }, { x: x }, grad);\n    };\n    UnaryOps.asin = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'asin');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.asin(x); }, { x: x }, grad);\n    };\n    UnaryOps.acos = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'acos');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())))\n                        .neg();\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.acos(x); }, { x: x }, grad);\n    };\n    UnaryOps.atan = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'atan');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(ops.scalar(1).add(x.toFloat().square())); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atan(x); }, { x: x }, grad);\n    };\n    UnaryOps.sinh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sinh');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().cosh().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sinh(x); }, { x: x }, grad);\n    };\n    UnaryOps.cosh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'cosh');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().sinh().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cosh(x); }, { x: x }, grad);\n    };\n    UnaryOps.tanh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'tanh');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return ops.scalar(1).sub(y.square()).mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.tanh(x)); }, { x: x }, grad);\n    };\n    UnaryOps.asinh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'asinh');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).add(x.toFloat().square())));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.asinh(x); }, { x: x }, grad);\n    };\n    UnaryOps.acosh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'acosh');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(x.toFloat().square().sub(ops.scalar(1))));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.acosh(x); }, { x: x }, grad);\n    };\n    UnaryOps.atanh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'atanh');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(ops.scalar(1).sub(x.toFloat().square())); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atanh(x); }, { x: x }, grad);\n    };\n    UnaryOps.erf = function (x) {\n        util.assert(x.dtype === 'int32' || x.dtype === 'float32', 'Input dtype must be `int32` or `float32`.');\n        if (x.dtype === 'int32') {\n            x = x.toFloat();\n        }\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.mulStrict(ops.scalar(2 / Math.sqrt(Math.PI))\n                        .mul(x.square().neg().exp()));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.erf(x); }, { x: x }, grad);\n    };\n    UnaryOps.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        util.assertArgumentsAreTensors({ x: x }, 'step');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.step(x, alpha); }, { x: x }, grad);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"neg\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"ceil\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"floor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sign\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"round\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"exp\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"expm1\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"log\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"log1p\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sqrt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"rsqrt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"square\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"reciprocal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"abs\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"clipByValue\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"relu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"elu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"selu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"leakyRelu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"prelu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sigmoid\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"logSigmoid\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"softplus\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"cos\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"tan\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"asin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"acos\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"atan\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sinh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"cosh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"tanh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"asinh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"acosh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"atanh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"erf\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"step\", null);\n    return UnaryOps;\n}());\nexports.UnaryOps = UnaryOps;\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar adadelta_optimizer_1 = __webpack_require__(35);\nvar adagrad_optimizer_1 = __webpack_require__(36);\nvar adam_optimizer_1 = __webpack_require__(37);\nvar adamax_optimizer_1 = __webpack_require__(38);\nvar momentum_optimizer_1 = __webpack_require__(39);\nvar rmsprop_optimizer_1 = __webpack_require__(40);\nvar sgd_optimizer_1 = __webpack_require__(29);\nvar OptimizerConstructors = (function () {\n    function OptimizerConstructors() {\n    }\n    OptimizerConstructors.sgd = function (learningRate) {\n        return new sgd_optimizer_1.SGDOptimizer(learningRate);\n    };\n    OptimizerConstructors.momentum = function (learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        return new momentum_optimizer_1.MomentumOptimizer(learningRate, momentum, useNesterov);\n    };\n    OptimizerConstructors.rmsprop = function (learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = .9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (centered === void 0) { centered = false; }\n        return new rmsprop_optimizer_1.RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    };\n    OptimizerConstructors.adam = function (learningRate, beta1, beta2, epsilon) {\n        if (learningRate === void 0) { learningRate = 0.001; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        return new adam_optimizer_1.AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    };\n    OptimizerConstructors.adadelta = function (learningRate, rho, epsilon) {\n        if (learningRate === void 0) { learningRate = .001; }\n        if (rho === void 0) { rho = .95; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        return new adadelta_optimizer_1.AdadeltaOptimizer(learningRate, rho, epsilon);\n    };\n    OptimizerConstructors.adamax = function (learningRate, beta1, beta2, epsilon, decay) {\n        if (learningRate === void 0) { learningRate = 0.002; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (decay === void 0) { decay = 0.0; }\n        return new adamax_optimizer_1.AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    };\n    OptimizerConstructors.adagrad = function (learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        return new adagrad_optimizer_1.AdagradOptimizer(learningRate, initialAccumulatorValue);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"sgd\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"momentum\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"rmsprop\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adam\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adadelta\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adamax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adagrad\", null);\n    return OptimizerConstructors;\n}());\nexports.OptimizerConstructors = OptimizerConstructors;\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nvar Profiler = (function () {\n    function Profiler(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    Profiler.prototype.profileKernel = function (name, f) {\n        var _this = this;\n        var result;\n        var holdResultWrapperFn = function () {\n            result = f();\n        };\n        var timer = this.backendTimer.time(holdResultWrapperFn);\n        var vals = result.dataSync();\n        util.checkForNaN(vals, result.dtype, name);\n        timer.then(function (timing) {\n            _this.logger.logKernelProfile(name, result, vals, timing.kernelMs);\n        });\n        return result;\n    };\n    return Profiler;\n}());\nexports.Profiler = Profiler;\nvar Logger = (function () {\n    function Logger() {\n    }\n    Logger.prototype.logKernelProfile = function (name, result, vals, timeMs) {\n        var time = util.rightPad(timeMs + \"ms\", 9);\n        var paddedName = util.rightPad(name, 25);\n        var rank = result.rank;\n        var size = result.size;\n        var shape = util.rightPad(result.shape.toString(), 14);\n        console.log(\"%c\" + paddedName + \"\\t%c\" + time + \"\\t%c\" + rank + \"D \" + shape + \"\\t%c\" + size, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange');\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(0);\nfunction getFilteredNodesXToY(tape, xs, y) {\n    var tensorsFromX = {};\n    var nodesFromX = {};\n    for (var i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        for (var inputName in nodeInputs) {\n            var input = nodeInputs[inputName];\n            var anyInputFromX = false;\n            for (var j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    tensorsFromX[node.output.id] = true;\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    var tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    var nodesToY = {};\n    for (var i = tape.length - 1; i >= 0; i--) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        var outputs = [];\n        outputs.push(node.output);\n        for (var j = 0; j < outputs.length; j++) {\n            if (tensorsLeadToY[outputs[j].id]) {\n                for (var inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    var filteredTape = [];\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            var prunedInputs = {};\n            for (var inputName in node.inputs) {\n                var nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            var prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.output = node.output;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\nexports.getFilteredNodesXToY = getFilteredNodesXToY;\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape) {\n    for (var i = filteredTape.length - 1; i >= 0; i--) {\n        var node = filteredTape[i];\n        var dy = tensorAccumulatedGradientMap[node.output.id];\n        if (node.gradient == null) {\n            throw new Error(\"Cannot compute gradient: gradient function not found \" +\n                (\"for \" + node.name + \".\"));\n        }\n        var inputGradients = node.gradient(dy);\n        for (var inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(\"Cannot backprop through input \" + inputName + \". \" +\n                    (\"Available gradients found: \" + Object.keys(inputGradients) + \".\"));\n            }\n            var dx = inputGradients[inputName]();\n            var x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(\"Error in gradient for op \" + node.name + \". The gradient of input \" +\n                    (\"'\" + inputName + \"' has shape '\" + dx.shape + \"', which does not match \") +\n                    (\"the shape of the input '\" + x.shape + \"'\"));\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                var curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = curGradient.add(dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\nexports.backpropagateGradients = backpropagateGradients;\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = __webpack_require__(14);\nvar util = __webpack_require__(0);\nexports.WEBGL_ENVS = {\n    'BACKEND': 'test-webgl'\n};\nexports.CPU_ENVS = {\n    'BACKEND': 'test-cpu'\n};\nexports.ALL_ENVS = {};\nexports.TEST_EPSILON = 1e-3;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!(actual instanceof tensor_1.Tensor) && !(expected instanceof tensor_1.Tensor)) {\n        var aType = actual.constructor.name;\n        var bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(\"Arrays are of different type actual: \" + aType + \" \" +\n                (\"vs expected: \" + bType));\n        }\n    }\n    else if (actual instanceof tensor_1.Tensor && expected instanceof tensor_1.Tensor) {\n        if (actual.dtype !== expected.dtype) {\n            throw new Error(\"Arrays are of different type actual: \" + actual.dtype + \" \" +\n                (\"vs expected: \" + expected.dtype + \".\"));\n        }\n        if (!util.arraysEqual(actual.shape, expected.shape)) {\n            throw new Error(\"Arrays are of different shape actual: \" + actual.shape + \" \" +\n                (\"vs expected: \" + expected.shape + \".\"));\n        }\n    }\n    var actualValues;\n    var expectedValues;\n    if (actual instanceof tensor_1.Tensor) {\n        actualValues = actual.dataSync();\n    }\n    else {\n        actualValues = actual;\n    }\n    if (expected instanceof tensor_1.Tensor) {\n        expectedValues = expected.dataSync();\n    }\n    else {\n        expectedValues = expected;\n    }\n    if (actualValues.length !== expectedValues.length) {\n        throw new Error(\"Arrays have different lengths actual: \" + actualValues.length + \" vs \" +\n            (\"expected: \" + expectedValues.length + \".\\n\") +\n            (\"Actual:   \" + actualValues + \".\\n\") +\n            (\"Expected: \" + expectedValues + \".\"));\n    }\n    for (var i = 0; i < expectedValues.length; ++i) {\n        var a = actualValues[i];\n        var e = expectedValues[i];\n        if (!areClose(a, Number(e), epsilon)) {\n            throw new Error(\"Arrays differ: actual[\" + i + \"] = \" + a + \", expected[\" + i + \"] = \" + e + \".\\n\" +\n                (\"Actual:   \" + actualValues + \".\\n\") +\n                (\"Expected: \" + expectedValues + \".\"));\n        }\n    }\n}\nexports.expectArraysClose = expectArraysClose;\nfunction expectPromiseToFail(fn, done) {\n    fn().then(function () { return done.fail(); }, function () { return done(); });\n}\nexports.expectPromiseToFail = expectPromiseToFail;\nfunction expectArraysEqual(actual, expected) {\n    return expectArraysClose(actual, expected, 0);\n}\nexports.expectArraysEqual = expectArraysEqual;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (isNaN(a) && isNaN(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    var actualVals;\n    if (actual instanceof tensor_1.Tensor) {\n        actualVals = actual.dataSync();\n    }\n    else {\n        actualVals = actual;\n    }\n    for (var i = 0; i < actualVals.length; i++) {\n        if (actualVals[i] < low || actualVals[i] > high) {\n            throw new Error(\"Value out of range:\" + actualVals[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = __webpack_require__(2);\nvar environment_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar Tracking = (function () {\n    function Tracking() {\n    }\n    Tracking.tidy = function (nameOrFn, fn, gradMode) {\n        if (gradMode === void 0) { gradMode = false; }\n        var name = null;\n        if (fn == null) {\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n        }\n        environment_1.ENV.engine.startScope(name, gradMode);\n        var result = fn();\n        if (result instanceof Promise) {\n            console.error('Cannot return a Promise inside of tidy.');\n        }\n        environment_1.ENV.engine.endScope(result, gradMode);\n        return result;\n    };\n    Tracking.dispose = function (container) {\n        var tensors = util_1.extractTensorsFromAny(container);\n        tensors.forEach(function (tensor) { return tensor.dispose(); });\n    };\n    Tracking.keep = function (result) {\n        return environment_1.ENV.engine.keep(result);\n    };\n    Tracking.time = function (f) {\n        return environment_1.ENV.engine.time(f);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Tracking, \"tidy\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Tracking, \"keep\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Timing' })\n    ], Tracking, \"time\", null);\n    return Tracking;\n}());\nexports.Tracking = Tracking;\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar adadelta_optimizer_1 = __webpack_require__(35);\nvar adagrad_optimizer_1 = __webpack_require__(36);\nvar adam_optimizer_1 = __webpack_require__(37);\nvar adamax_optimizer_1 = __webpack_require__(38);\nvar momentum_optimizer_1 = __webpack_require__(39);\nvar optimizer_constructors_1 = __webpack_require__(125);\nvar rmsprop_optimizer_1 = __webpack_require__(40);\nvar sgd_optimizer_1 = __webpack_require__(29);\n[momentum_optimizer_1.MomentumOptimizer, sgd_optimizer_1.SGDOptimizer, adadelta_optimizer_1.AdadeltaOptimizer, adagrad_optimizer_1.AdagradOptimizer,\n    rmsprop_optimizer_1.RMSPropOptimizer, adamax_optimizer_1.AdamaxOptimizer, adam_optimizer_1.AdamOptimizer];\nexports.train = {\n    sgd: optimizer_constructors_1.OptimizerConstructors.sgd,\n    momentum: optimizer_constructors_1.OptimizerConstructors.momentum,\n    adadelta: optimizer_constructors_1.OptimizerConstructors.adadelta,\n    adagrad: optimizer_constructors_1.OptimizerConstructors.adagrad,\n    rmsprop: optimizer_constructors_1.OptimizerConstructors.rmsprop,\n    adamax: optimizer_constructors_1.OptimizerConstructors.adamax,\n    adam: optimizer_constructors_1.OptimizerConstructors.adam\n};\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.8.4';\nexports.version = version;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ops_1 = __webpack_require__(7);\nvar util = __webpack_require__(0);\nvar DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'int32': 4\n};\nfunction loadWeights(manifest, filePathPrefix, weightNames, requestOptions) {\n    if (filePathPrefix === void 0) { filePathPrefix = ''; }\n    return __awaiter(this, void 0, void 0, function () {\n        var groupIndicesToFetchMap, groupWeightsToFetch, weightsFound, allManifestWeightNames, weightsNotFound, groupIndicesToFetch, requests, responses, buffers, weightsTensorMap, bufferIndexOffset;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    groupIndicesToFetchMap = manifest.map(function () { return false; });\n                    groupWeightsToFetch = {};\n                    weightsFound = weightNames != null ? weightNames.map(function () { return false; }) : [];\n                    allManifestWeightNames = [];\n                    manifest.forEach(function (manifestGroupConfig, groupIndex) {\n                        var groupOffset = 0;\n                        manifestGroupConfig.weights.forEach(function (weightsEntry) {\n                            var weightsBytes = DTYPE_VALUE_SIZE_MAP[weightsEntry.dtype] *\n                                util.sizeFromShape(weightsEntry.shape);\n                            var enqueueWeightsForFetchingFn = function () {\n                                groupIndicesToFetchMap[groupIndex] = true;\n                                if (groupWeightsToFetch[groupIndex] == null) {\n                                    groupWeightsToFetch[groupIndex] = [];\n                                }\n                                groupWeightsToFetch[groupIndex].push({\n                                    manifestEntry: weightsEntry,\n                                    groupOffset: groupOffset,\n                                    sizeBytes: weightsBytes\n                                });\n                            };\n                            if (weightNames != null) {\n                                weightNames.forEach(function (weightName, weightIndex) {\n                                    if (weightName === weightsEntry.name) {\n                                        enqueueWeightsForFetchingFn();\n                                        weightsFound[weightIndex] = true;\n                                    }\n                                });\n                            }\n                            else {\n                                enqueueWeightsForFetchingFn();\n                            }\n                            allManifestWeightNames.push(weightsEntry.name);\n                            groupOffset += weightsBytes;\n                        });\n                    });\n                    if (!weightsFound.every(function (found) { return found; })) {\n                        weightsNotFound = weightNames.filter(function (weight, i) { return !weightsFound[i]; });\n                        throw new Error(\"Could not find weights in manifest with names: \" +\n                            (weightsNotFound.join(', ') + \". \\n\") +\n                            \"Manifest JSON has weights with names: \" +\n                            (allManifestWeightNames.join(', ') + \".\"));\n                    }\n                    groupIndicesToFetch = groupIndicesToFetchMap.reduce(function (accumulator, shouldFetch, i) {\n                        if (shouldFetch) {\n                            accumulator.push(i);\n                        }\n                        return accumulator;\n                    }, []);\n                    requests = [];\n                    groupIndicesToFetch.forEach(function (i) {\n                        manifest[i].paths.forEach(function (filepath) {\n                            var fetchUrl = filePathPrefix +\n                                (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                            requests.push(fetch(fetchUrl, requestOptions));\n                        });\n                    });\n                    return [4, Promise.all(requests)];\n                case 1:\n                    responses = _a.sent();\n                    return [4, Promise.all(responses.map(function (response) { return response.arrayBuffer(); }))];\n                case 2:\n                    buffers = _a.sent();\n                    weightsTensorMap = {};\n                    bufferIndexOffset = 0;\n                    groupIndicesToFetch.forEach(function (i) {\n                        var numBuffers = manifest[i].paths.length;\n                        var groupBytes = 0;\n                        for (var i_1 = 0; i_1 < numBuffers; i_1++) {\n                            groupBytes += buffers[bufferIndexOffset + i_1].byteLength;\n                        }\n                        var groupBuffer = new ArrayBuffer(groupBytes);\n                        var groupByteBuffer = new Uint8Array(groupBuffer);\n                        var groupBufferOffset = 0;\n                        for (var i_2 = 0; i_2 < numBuffers; i_2++) {\n                            var buffer = new Uint8Array(buffers[bufferIndexOffset + i_2]);\n                            groupByteBuffer.set(buffer, groupBufferOffset);\n                            groupBufferOffset += buffer.byteLength;\n                        }\n                        var weightsEntries = groupWeightsToFetch[i];\n                        weightsEntries.forEach(function (weightsEntry) {\n                            var byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                            var typedArray;\n                            if (weightsEntry.manifestEntry.dtype === 'float32') {\n                                typedArray = new Float32Array(byteBuffer);\n                            }\n                            else if (weightsEntry.manifestEntry.dtype === 'int32') {\n                                typedArray = new Int32Array(byteBuffer);\n                            }\n                            else {\n                                throw new Error(\"Weight \" + weightsEntry.manifestEntry.name + \" has unknown dtype \" +\n                                    (weightsEntry.manifestEntry.dtype + \".\"));\n                            }\n                            var weightName = weightsEntry.manifestEntry.name;\n                            if (weightsTensorMap[weightName] != null) {\n                                throw new Error(\"Duplicate weight with name \" + weightName + \". \" +\n                                    \"Please make sure weights names are unique in the manifest JSON.\");\n                            }\n                            weightsTensorMap[weightName] = ops_1.tensor(typedArray, weightsEntry.manifestEntry.shape, weightsEntry.manifestEntry.dtype);\n                        });\n                        bufferIndexOffset += numBuffers;\n                    });\n                    return [2, weightsTensorMap];\n            }\n        });\n    });\n}\nexports.loadWeights = loadWeights;\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(4);\nvar topology_1 = __webpack_require__(9);\nfunction assertFeedCompatibility(key, val) {\n    if (key.dtype != null && key.dtype !== val.dtype) {\n        throw new errors_1.ValueError(\"The dtype of the feed (\" + val.dtype + \") is incompatible with that of \" +\n            (\"the key '\" + key.name + \"' (\" + key.dtype + \").\"));\n    }\n    if (key.shape != null) {\n        if (key.shape.length !== val.shape.length) {\n            throw new errors_1.ValueError(\"The rank of feed (\" + val.shape.length + \") does not match the rank of \" +\n                (\"the key (\" + key.shape.length + \").\"));\n        }\n        for (var i = 0; i < key.shape.length; ++i) {\n            if (key.shape[i] != null && key.shape[i] !== val.shape[i]) {\n                throw new errors_1.ValueError(\"The \" + i + \"-th dimension of the feed (\" + val.shape[i] + \") is \" +\n                    (\"incompatible with that of the key (\" + key.shape[i] + \").\"));\n            }\n        }\n    }\n}\nvar FeedDict = (function () {\n    function FeedDict(feeds) {\n        this.id2Value = {};\n        if (feeds instanceof FeedDict) {\n            for (var id in feeds.id2Value) {\n                this.id2Value[id] = feeds.id2Value[id];\n            }\n        }\n        else {\n            if (feeds == null) {\n                return;\n            }\n            for (var _i = 0, feeds_1 = feeds; _i < feeds_1.length; _i++) {\n                var feed = feeds_1[_i];\n                this.add(feed.key, feed.value);\n            }\n        }\n    }\n    FeedDict.prototype.add = function (key, value) {\n        assertFeedCompatibility(key, value);\n        if (this.id2Value[key.id] == null) {\n            this.id2Value[key.id] = value;\n        }\n        else {\n            throw new errors_1.ValueError(\"Duplicate key: name=\" + key.name + \", id=\" + key.id);\n        }\n        return this;\n    };\n    FeedDict.prototype.addFeed = function (feed) {\n        this.add(feed.key, feed.value);\n    };\n    FeedDict.prototype.hasKey = function (key) {\n        return this.id2Value[key.id] != null;\n    };\n    FeedDict.prototype.getValue = function (key) {\n        if (this.id2Value[key.id] == null) {\n            throw new errors_1.ValueError(\"Nonexistent key: \" + JSON.stringify(key));\n        }\n        else {\n            return this.id2Value[key.id];\n        }\n    };\n    return FeedDict;\n}());\nexports.FeedDict = FeedDict;\nfunction execute(fetches, feedDict, kwargs) {\n    var arrayFetches = Array.isArray(fetches);\n    var fetchArray = arrayFetches ? fetches : [fetches];\n    var outputs = [];\n    var internalFeedDict = new FeedDict(feedDict);\n    for (var _i = 0, fetchArray_1 = fetchArray; _i < fetchArray_1.length; _i++) {\n        var fetch_1 = fetchArray_1[_i];\n        outputs.push(executeInternal(fetch_1, internalFeedDict, kwargs));\n    }\n    return arrayFetches ? outputs : outputs[0];\n}\nexports.execute = execute;\nfunction executeInternal(fetch, internalFeedDict, kwargs) {\n    if (internalFeedDict.hasKey(fetch)) {\n        return internalFeedDict.getValue(fetch);\n    }\n    if (fetch.sourceLayer instanceof topology_1.InputLayer) {\n        throw new errors_1.ValueError(\"Missing a feed value for SymbolicTensor from InputLayer \" +\n            (\"'\" + topology_1.InputLayer.name + \"'\"));\n    }\n    var inputs = fetch.inputs;\n    var inputValues = [];\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        var inputVal = executeInternal(input, internalFeedDict, kwargs);\n        inputValues.push(inputVal);\n    }\n    var output = fetch.sourceLayer.apply(inputValues, kwargs);\n    if (!Array.isArray(output)) {\n        output = [output];\n    }\n    var layerOutputs = getNodeOutputs(fetch);\n    var outputSymbolicTensors = Array.isArray(layerOutputs) ? layerOutputs : [layerOutputs];\n    for (var i = 0; i < outputSymbolicTensors.length; ++i) {\n        internalFeedDict.add(outputSymbolicTensors[i], output[i]);\n    }\n    return output.length === 1 ? output[0] : output[fetch.outputTensorIndex];\n}\nfunction getNodeOutputs(fetch) {\n    var layerOutputs;\n    if (fetch.sourceLayer.inboundNodes.length === 1) {\n        layerOutputs = fetch.sourceLayer.output;\n    }\n    else {\n        var nodeIndex = null;\n        for (var i = 0; i < fetch.sourceLayer.inboundNodes.length; ++i) {\n            for (var _i = 0, _a = fetch.sourceLayer.inboundNodes[i]\n                .outputTensors; _i < _a.length; _i++) {\n                var outputTensor = _a[_i];\n                if (outputTensor.id === fetch.id) {\n                    nodeIndex = i;\n                    break;\n                }\n            }\n        }\n        layerOutputs = fetch.sourceLayer.getOutputAt(nodeIndex);\n    }\n    return layerOutputs;\n}\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar training_1 = __webpack_require__(42);\nvar initializers_1 = __webpack_require__(20);\nvar advanced_activations_1 = __webpack_require__(135);\nvar convolutional_1 = __webpack_require__(60);\nvar convolutional_depthwise_1 = __webpack_require__(136);\nvar core_1 = __webpack_require__(137);\nvar embeddings_1 = __webpack_require__(138);\nvar merge_1 = __webpack_require__(139);\nvar normalization_1 = __webpack_require__(140);\nvar padding_1 = __webpack_require__(141);\nvar pooling_1 = __webpack_require__(142);\nvar recurrent_1 = __webpack_require__(61);\nvar wrappers_1 = __webpack_require__(143);\nvar losses_1 = __webpack_require__(43);\nvar metrics_1 = __webpack_require__(62);\nvar models_1 = __webpack_require__(63);\nvar regularizers_1 = __webpack_require__(21);\nvar ModelExports = (function () {\n    function ModelExports() {\n    }\n    ModelExports.model = function (config) {\n        return new training_1.Model(config);\n    };\n    ModelExports.sequential = function (config) {\n        return new models_1.Sequential(config);\n    };\n    ModelExports.loadModel = function (modelConfigPath) {\n        return models_1.loadModelInternal(modelConfigPath);\n    };\n    ModelExports.input = function (config) {\n        return topology_1.Input(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\n    ], ModelExports, \"model\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\n    ], ModelExports, \"sequential\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Models',\n            subheading: 'Loading',\n            useDocsFrom: 'loadModelInternal'\n        })\n    ], ModelExports, \"loadModel\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Models',\n            subheading: 'Inputs',\n            useDocsFrom: 'Input',\n            configParamIndices: [0]\n        })\n    ], ModelExports, \"input\", null);\n    return ModelExports;\n}());\nexports.ModelExports = ModelExports;\nvar LayerExports = (function () {\n    function LayerExports() {\n    }\n    LayerExports.inputLayer = function (config) {\n        return new topology_1.InputLayer(config);\n    };\n    LayerExports.elu = function (config) {\n        return new advanced_activations_1.ELU(config);\n    };\n    LayerExports.leakyReLU = function (config) {\n        return new advanced_activations_1.LeakyReLU(config);\n    };\n    LayerExports.softmax = function (config) {\n        return new advanced_activations_1.Softmax(config);\n    };\n    LayerExports.thresholdedReLU = function (config) {\n        return new advanced_activations_1.ThresholdedReLU(config);\n    };\n    LayerExports.conv1d = function (config) {\n        return new convolutional_1.Conv1D(config);\n    };\n    LayerExports.conv2d = function (config) {\n        return new convolutional_1.Conv2D(config);\n    };\n    LayerExports.conv2dTranspose = function (config) {\n        return new convolutional_1.Conv2DTranspose(config);\n    };\n    LayerExports.separableConv2d = function (config) {\n        return new convolutional_1.SeparableConv2D(config);\n    };\n    LayerExports.depthwiseConv2d = function (config) {\n        return new convolutional_depthwise_1.DepthwiseConv2D(config);\n    };\n    LayerExports.activation = function (config) {\n        return new core_1.Activation(config);\n    };\n    LayerExports.dense = function (config) {\n        return new core_1.Dense(config);\n    };\n    LayerExports.dropout = function (config) {\n        return new core_1.Dropout(config);\n    };\n    LayerExports.flatten = function (config) {\n        return new core_1.Flatten(config);\n    };\n    LayerExports.repeatVector = function (config) {\n        return new core_1.RepeatVector(config);\n    };\n    LayerExports.reshape = function (config) {\n        return new core_1.Reshape(config);\n    };\n    LayerExports.embedding = function (config) {\n        return new embeddings_1.Embedding(config);\n    };\n    LayerExports.add = function (config) {\n        return new merge_1.Add(config);\n    };\n    LayerExports.average = function (config) {\n        return new merge_1.Average(config);\n    };\n    LayerExports.concatenate = function (config) {\n        return new merge_1.Concatenate(config);\n    };\n    LayerExports.maximum = function (config) {\n        return new merge_1.Maximum(config);\n    };\n    LayerExports.minimum = function (config) {\n        return new merge_1.Minimum(config);\n    };\n    LayerExports.multiply = function (config) {\n        return new merge_1.Multiply(config);\n    };\n    LayerExports.batchNormalization = function (config) {\n        return new normalization_1.BatchNormalization(config);\n    };\n    LayerExports.zeroPadding2d = function (config) {\n        return new padding_1.ZeroPadding2D(config);\n    };\n    LayerExports.averagePooling1d = function (config) {\n        return new pooling_1.AveragePooling1D(config);\n    };\n    LayerExports.avgPool1d = function (config) {\n        return LayerExports.averagePooling1d(config);\n    };\n    LayerExports.avgPooling1d = function (config) {\n        return LayerExports.averagePooling1d(config);\n    };\n    LayerExports.averagePooling2d = function (config) {\n        return new pooling_1.AveragePooling2D(config);\n    };\n    LayerExports.avgPool2d = function (config) {\n        return LayerExports.averagePooling2d(config);\n    };\n    LayerExports.avgPooling2d = function (config) {\n        return LayerExports.averagePooling2d(config);\n    };\n    LayerExports.globalAveragePooling1d = function (config) {\n        return new pooling_1.GlobalAveragePooling1D(config);\n    };\n    LayerExports.globalAveragePooling2d = function (config) {\n        return new pooling_1.GlobalAveragePooling2D(config);\n    };\n    LayerExports.globalMaxPooling1d = function (config) {\n        return new pooling_1.GlobalMaxPooling1D(config);\n    };\n    LayerExports.globalMaxPooling2d = function (config) {\n        return new pooling_1.GlobalMaxPooling2D(config);\n    };\n    LayerExports.maxPooling1d = function (config) {\n        return new pooling_1.MaxPooling1D(config);\n    };\n    LayerExports.maxPooling2d = function (config) {\n        return new pooling_1.MaxPooling2D(config);\n    };\n    LayerExports.gru = function (config) {\n        return new recurrent_1.GRU(config);\n    };\n    LayerExports.gruCell = function (config) {\n        return new recurrent_1.GRUCell(config);\n    };\n    LayerExports.lstm = function (config) {\n        return new recurrent_1.LSTM(config);\n    };\n    LayerExports.lstmCell = function (config) {\n        return new recurrent_1.LSTMCell(config);\n    };\n    LayerExports.simpleRNN = function (config) {\n        return new recurrent_1.SimpleRNN(config);\n    };\n    LayerExports.simpleRNNCell = function (config) {\n        return new recurrent_1.SimpleRNNCell(config);\n    };\n    LayerExports.rnn = function (config) {\n        return new recurrent_1.RNN(config);\n    };\n    LayerExports.stackedRNNCells = function (config) {\n        return new recurrent_1.StackedRNNCells(config);\n    };\n    LayerExports.bidirectional = function (config) {\n        return new wrappers_1.Bidirectional(config);\n    };\n    LayerExports.timeDistributed = function (config) {\n        return new wrappers_1.TimeDistributed(config);\n    };\n    LayerExports.Layer = topology_1.Layer;\n    LayerExports.RNNCell = recurrent_1.RNNCell;\n    LayerExports.input = ModelExports.input;\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Inputs',\n            namespace: 'layers',\n            useDocsFrom: 'InputLayer',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"inputLayer\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'ELU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"elu\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'LeakyReLU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"leakyReLU\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'Softmax',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"softmax\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'ThresholdedReLU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"thresholdedReLU\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv2DTranspose',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv2dTranspose\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'SeparableConv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"separableConv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'DepthwiseConv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"depthwiseConv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Activation',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"activation\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Dense',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"dense\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Dropout',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"dropout\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Flatten',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"flatten\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'RepeatVector',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"repeatVector\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Reshape',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"reshape\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Embedding',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"embedding\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Add',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Average',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"average\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Concatenate',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"concatenate\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Maximum',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maximum\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Minimum',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"minimum\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Multiply',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"multiply\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Normalization',\n            namespace: 'layers',\n            useDocsFrom: 'BatchNormalization',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"batchNormalization\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Padding',\n            namespace: 'layers',\n            useDocsFrom: 'ZeroPadding2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"zeroPadding2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'AveragePooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"averagePooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'AveragePooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"averagePooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalAveragePooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalAveragePooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalAveragePooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalAveragePooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalMaxPooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalMaxPooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalMaxPooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalMaxPooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'MaxPooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maxPooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'MaxPooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maxPooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'GRU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"gru\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'GRUCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"gruCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'LSTM',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"lstm\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'LSTMCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"lstmCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'SimpleRNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"simpleRNN\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'SimpleRNNCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"simpleRNNCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'RNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"rnn\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'RNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"stackedRNNCells\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Wrapper',\n            namespace: 'layers',\n            useDocsFrom: 'Bidirectional',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"bidirectional\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Wrapper',\n            namespace: 'layers',\n            useDocsFrom: 'TimeDistributed',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"timeDistributed\", null);\n    return LayerExports;\n}());\nexports.LayerExports = LayerExports;\nvar ConstraintExports = (function () {\n    function ConstraintExports() {\n    }\n    ConstraintExports.maxNorm = function (config) {\n        return new constraints_1.MaxNorm(config);\n    };\n    ConstraintExports.unitNorm = function (config) {\n        return new constraints_1.UnitNorm(config);\n    };\n    ConstraintExports.nonNeg = function () {\n        return new constraints_1.NonNeg();\n    };\n    ConstraintExports.minMaxNorm = function (config) {\n        return new constraints_1.MinMaxNorm(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'MaxNorm',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"maxNorm\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'UnitNorm',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"unitNorm\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Constraints', namespace: 'constraints', useDocsFrom: 'NonNeg' })\n    ], ConstraintExports, \"nonNeg\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'MinMaxNormConfig',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"minMaxNorm\", null);\n    return ConstraintExports;\n}());\nexports.ConstraintExports = ConstraintExports;\nvar InitializerExports = (function () {\n    function InitializerExports() {\n    }\n    InitializerExports.zeros = function () {\n        return new initializers_1.Zeros();\n    };\n    InitializerExports.ones = function () {\n        return new initializers_1.Ones();\n    };\n    InitializerExports.constant = function (config) {\n        return new initializers_1.Constant(config);\n    };\n    InitializerExports.randomUniform = function (config) {\n        return new initializers_1.RandomUniform(config);\n    };\n    InitializerExports.randomNormal = function (config) {\n        return new initializers_1.RandomNormal(config);\n    };\n    InitializerExports.truncatedNormal = function (config) {\n        return new initializers_1.TruncatedNormal(config);\n    };\n    InitializerExports.identity = function (config) {\n        return new initializers_1.Identity(config);\n    };\n    InitializerExports.varianceScaling = function (config) {\n        return new initializers_1.VarianceScaling(config);\n    };\n    InitializerExports.glorotUniform = function (config) {\n        return new initializers_1.GlorotUniform(config);\n    };\n    InitializerExports.glorotNormal = function (config) {\n        return new initializers_1.GlorotNormal(config);\n    };\n    InitializerExports.heNormal = function (config) {\n        return new initializers_1.HeNormal(config);\n    };\n    InitializerExports.leCunNormal = function (config) {\n        return new initializers_1.LeCunNormal(config);\n    };\n    InitializerExports.orthogonal = function (config) {\n        return new initializers_1.Orthogonal(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Zeros'\n        })\n    ], InitializerExports, \"zeros\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Initializers', namespace: 'initializers', useDocsFrom: 'Ones' })\n    ], InitializerExports, \"ones\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Constant',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"constant\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'RandomUniform',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"randomUniform\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'RandomNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"randomNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'TruncatedNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"truncatedNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Identity',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"identity\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'VarianceScaling',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"varianceScaling\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'GlorotUniform',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"glorotUniform\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'GlorotNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"glorotNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'HeNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"heNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'LeCunNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"leCunNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Orthogonal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"orthogonal\", null);\n    return InitializerExports;\n}());\nexports.InitializerExports = InitializerExports;\nvar MetricExports = (function () {\n    function MetricExports() {\n    }\n    MetricExports.binaryAccuracy = function (yTrue, yPred) {\n        return metrics_1.binaryAccuracy(yTrue, yPred);\n    };\n    MetricExports.binaryCrossentropy = function (yTrue, yPred) {\n        return metrics_1.binaryCrossentropy(yTrue, yPred);\n    };\n    MetricExports.categoricalAccuracy = function (yTrue, yPred) {\n        return metrics_1.categoricalAccuracy(yTrue, yPred);\n    };\n    MetricExports.categoricalCrossentropy = function (yTrue, yPred) {\n        return losses_1.categoricalCrossentropy(yTrue, yPred);\n    };\n    MetricExports.cosineProximity = function (yTrue, yPred) {\n        return losses_1.cosineProximity(yTrue, yPred);\n    };\n    MetricExports.prototype.meanAbsoluteError = function (yTrue, yPred) {\n        return losses_1.meanAbsoluteError(yTrue, yPred);\n    };\n    MetricExports.prototype.meanAbsolutePercentageError = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.prototype.MAPE = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.prototype.mape = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.meanSquaredError = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    MetricExports.MSE = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    MetricExports.mse = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanAbsoluteError'\n        })\n    ], MetricExports.prototype, \"meanAbsoluteError\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanAbsolutePercentageError'\n        })\n    ], MetricExports.prototype, \"meanAbsolutePercentageError\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Metrics', namespace: 'metrics', useDocsFrom: 'binaryAccuracy' })\n    ], MetricExports, \"binaryAccuracy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'binaryCrossentropy'\n        })\n    ], MetricExports, \"binaryCrossentropy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'categoricalAccuracy'\n        })\n    ], MetricExports, \"categoricalAccuracy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'categoricalCrossentropy'\n        })\n    ], MetricExports, \"categoricalCrossentropy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'cosineProximity'\n        })\n    ], MetricExports, \"cosineProximity\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanSquaredError'\n        })\n    ], MetricExports, \"meanSquaredError\", null);\n    return MetricExports;\n}());\nexports.MetricExports = MetricExports;\nvar RegularizerExports = (function () {\n    function RegularizerExports() {\n    }\n    RegularizerExports.l1l2 = function (config) {\n        return new regularizers_1.L1L2(config);\n    };\n    RegularizerExports.l1 = function (config) {\n        return regularizers_1.l1(config);\n    };\n    RegularizerExports.l2 = function (config) {\n        return regularizers_1.l2(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l1l2\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l1\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l2\", null);\n    return RegularizerExports;\n}());\nexports.RegularizerExports = RegularizerExports;\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar activations_1 = __webpack_require__(30);\nvar tfjs_backend_1 = __webpack_require__(6);\nvar tfjs_backend_2 = __webpack_require__(6);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar types_1 = __webpack_require__(12);\nvar generic_utils = __webpack_require__(5);\nvar LeakyReLU = (function (_super) {\n    __extends(LeakyReLU, _super);\n    function LeakyReLU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_ALPHA = 0.3;\n        if (config == null) {\n            config = {};\n        }\n        _this.alpha = config.alpha == null ? _this.DEFAULT_ALPHA : config.alpha;\n        return _this;\n    }\n    LeakyReLU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return tfjs_core_1.leakyRelu(x, this.alpha);\n    };\n    LeakyReLU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    LeakyReLU.prototype.getClassName = function () {\n        return 'LeakyReLU';\n    };\n    LeakyReLU.prototype.getConfig = function () {\n        var config = { alpha: this.alpha };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return LeakyReLU;\n}(topology_1.Layer));\nexports.LeakyReLU = LeakyReLU;\ngeneric_utils.ClassNameMap.register('LeakyReLU', LeakyReLU);\nvar ELU = (function (_super) {\n    __extends(ELU, _super);\n    function ELU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_ALPHA = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        if (config.alpha != null && config.alpha !== _this.DEFAULT_ALPHA) {\n            throw new errors_1.NotImplementedError(\"Non-default alpha value (\" + config.alpha + \") is not supported by the \" +\n                \"ELU layer yet.\");\n        }\n        _this.alpha = config.alpha == null ? _this.DEFAULT_ALPHA : config.alpha;\n        return _this;\n    }\n    ELU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return tfjs_core_1.elu(x);\n    };\n    ELU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    ELU.prototype.getClassName = function () {\n        return 'ELU';\n    };\n    ELU.prototype.getConfig = function () {\n        var config = { alpha: this.alpha };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ELU;\n}(topology_1.Layer));\nexports.ELU = ELU;\ngeneric_utils.ClassNameMap.register('ELU', ELU);\nvar ThresholdedReLU = (function (_super) {\n    __extends(ThresholdedReLU, _super);\n    function ThresholdedReLU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_THETA = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        _this.theta = config.theta == null ? _this.DEFAULT_THETA : config.theta;\n        _this.thetaTensor = tfjs_backend_2.getScalar(_this.theta);\n        return _this;\n    }\n    ThresholdedReLU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return x.mul(tfjs_backend_1.cast(x.greater(this.thetaTensor), types_1.DType.float32));\n    };\n    ThresholdedReLU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    ThresholdedReLU.prototype.getClassName = function () {\n        return 'ThresholdedReLU';\n    };\n    ThresholdedReLU.prototype.getConfig = function () {\n        var config = { theta: this.theta };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ThresholdedReLU;\n}(topology_1.Layer));\nexports.ThresholdedReLU = ThresholdedReLU;\ngeneric_utils.ClassNameMap.register('ThresholdedReLU', ThresholdedReLU);\nvar Softmax = (function (_super) {\n    __extends(Softmax, _super);\n    function Softmax(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_AXIS = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        _this.axis = config.theta == null ? _this.DEFAULT_AXIS : config.theta;\n        return _this;\n    }\n    Softmax.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return activations_1.softmax(x, this.axis);\n    };\n    Softmax.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    Softmax.prototype.getClassName = function () {\n        return 'Softmax';\n    };\n    Softmax.prototype.getConfig = function () {\n        var config = { axis: this.axis };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Softmax;\n}(topology_1.Layer));\nexports.Softmax = Softmax;\ngeneric_utils.ClassNameMap.register('Softmax', Softmax);\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = __webpack_require__(6);\nvar constraints_1 = __webpack_require__(19);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar conv_utils_1 = __webpack_require__(44);\nvar generic_utils = __webpack_require__(5);\nvar generic_utils_1 = __webpack_require__(5);\nvar convolutional_1 = __webpack_require__(60);\nvar DepthwiseConv2D = (function (_super) {\n    __extends(DepthwiseConv2D, _super);\n    function DepthwiseConv2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.depthwiseKernel = null;\n        _this.depthMultiplier =\n            config.depthMultiplier == null ? 1 : config.depthMultiplier;\n        _this.depthwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.depthwiseConstraint = constraints_1.getConstraint(config.depthwiseConstraint);\n        _this.depthwiseRegularizer = regularizers_1.getRegularizer(config.depthwiseRegularizer);\n        return _this;\n    }\n    DepthwiseConv2D.prototype.getClassName = function () {\n        return 'DepthwiseConv2D';\n    };\n    DepthwiseConv2D.prototype.build = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        if (inputShape.length < 4) {\n            throw new errors_1.ValueError(\"Inputs to DepthwiseConv2D should have rank 4. \" +\n                (\"Received input shape: \" + JSON.stringify(inputShape) + \".\"));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : 3;\n        if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n            throw new errors_1.ValueError('The channel dimension of the inputs to DepthwiseConv2D should ' +\n                (\"be defined, but is not (\" + inputShape[channelAxis] + \").\"));\n        }\n        var inputDim = inputShape[channelAxis];\n        var depthwiseKernelShape = [\n            this.kernelSize[0], this.kernelSize[1], inputDim, this.depthMultiplier\n        ];\n        this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, null, this.depthwiseInitializer, this.depthwiseRegularizer, true, this.depthwiseConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [inputDim * this.depthMultiplier], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    DepthwiseConv2D.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils_1.getExactlyOneTensor(inputs);\n        var outputs = K.depthwiseConv2d(inputs, this.depthwiseKernel.read(), this.strides, this.padding, this.dataFormat, null);\n        if (this.useBias) {\n            outputs = K.biasAdd(outputs, this.bias.read(), this.dataFormat);\n        }\n        if (this.activation != null) {\n            outputs = this.activation(outputs);\n        }\n        return outputs;\n    };\n    DepthwiseConv2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        var outFilters = this.dataFormat === 'channelsFirst' ?\n            inputShape[1] * this.depthMultiplier :\n            inputShape[3] * this.depthMultiplier;\n        var outRows = conv_utils_1.convOutputLength(rows, this.kernelSize[0], this.padding, this.strides[0]);\n        var outCols = conv_utils_1.convOutputLength(cols, this.kernelSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], outFilters, outRows, outCols];\n        }\n        else {\n            return [inputShape[0], outRows, outCols, outFilters];\n        }\n    };\n    return DepthwiseConv2D;\n}(convolutional_1.Conv2D));\nexports.DepthwiseConv2D = DepthwiseConv2D;\ngeneric_utils.ClassNameMap.register('DepthwiseConv2D', DepthwiseConv2D);\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar activations_1 = __webpack_require__(30);\nvar K = __webpack_require__(6);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar generic_utils = __webpack_require__(5);\nvar generic_utils_1 = __webpack_require__(5);\nvar math_utils = __webpack_require__(17);\nvar Dropout = (function (_super) {\n    __extends(Dropout, _super);\n    function Dropout(config) {\n        var _this = _super.call(this, config) || this;\n        _this.rate = Math.max(Math.min(config.rate, 1), 0);\n        _this.rateScalar = K.getScalar(_this.rate);\n        _this.noiseShape = config.noiseShape;\n        _this.seed = config.seed;\n        if (_this.seed != null) {\n            throw new errors_1.NotImplementedError('Non-default seed is not implemented in Dropout layer yet: ' +\n                _this.seed);\n        }\n        _this.supportsMasking = true;\n        return _this;\n    }\n    Dropout.prototype.getNoiseShape = function (input) {\n        if (this.noiseShape == null) {\n            return this.noiseShape;\n        }\n        var inputShape = input.shape;\n        var noiseShape = [];\n        for (var i = 0; i < this.noiseShape.length; ++i) {\n            noiseShape.push(this.noiseShape[i] == null ? inputShape[i] : this.noiseShape[i]);\n        }\n        return noiseShape;\n    };\n    Dropout.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.noiseShape != null &&\n            !tfjs_core_1.util.arraysEqual(input.shape, this.noiseShape)) {\n            throw new errors_1.NotImplementedError('Non-default noise shape is not implemented in Dropout layer yet: ' +\n                JSON.stringify(this.noiseShape));\n        }\n        if (0 < this.rate && this.rate < 1) {\n            var training = kwargs['training'] == null ? false : kwargs['training'];\n            var noiseShape_1 = this.getNoiseShape(input);\n            var output = K.inTrainPhase(function () { return K.dropout(input, _this.rateScalar, noiseShape_1, _this.seed); }, function () { return input; }, training);\n            return output;\n        }\n        return inputs;\n    };\n    Dropout.prototype.getClassName = function () {\n        return 'Dropout';\n    };\n    Dropout.prototype.getConfig = function () {\n        var config = {\n            rate: this.rate,\n            noiseShape: this.noiseShape,\n            seed: this.seed,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Dropout;\n}(topology_1.Layer));\nexports.Dropout = Dropout;\ngeneric_utils.ClassNameMap.register('Dropout', Dropout);\nvar Dense = (function (_super) {\n    __extends(Dense, _super);\n    function Dense(config) {\n        var _this = _super.call(this, config) || this;\n        _this.activation = null;\n        _this.useBias = true;\n        _this.kernel = null;\n        _this.bias = null;\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        if (config.batchInputShape == null && config.inputShape == null &&\n            config.inputDim != null) {\n            var batchSize = null;\n            if (config.batchSize != null) {\n                batchSize = config.batchSize;\n            }\n            _this.batchInputShape = [batchSize, config.inputDim];\n        }\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation);\n        if (config.useBias != null) {\n            _this.useBias = config.useBias;\n        }\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        _this.inputSpec = [{ minNDim: 2 }];\n        return _this;\n    }\n    Dense.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputLastDim = inputShape[inputShape.length - 1];\n        if (this.kernel == null) {\n            this.kernel = this.addWeight('kernel', [inputLastDim, this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n            if (this.useBias) {\n                this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n            }\n        }\n        this.inputSpec = [{ minNDim: 2, axes: (_a = {}, _a[-1] = inputLastDim, _a) }];\n        this.built = true;\n        var _a;\n    };\n    Dense.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var outputShape = inputShape.slice();\n        outputShape[outputShape.length - 1] = this.units;\n        return outputShape;\n    };\n    Dense.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        var output = K.dot(input, this.kernel.read());\n        if (this.bias != null) {\n            output = K.biasAdd(output, this.bias.read());\n        }\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        return output;\n    };\n    Dense.prototype.getClassName = function () {\n        return 'Dense';\n    };\n    Dense.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Dense;\n}(topology_1.Layer));\nexports.Dense = Dense;\ngeneric_utils.ClassNameMap.register('Dense', Dense);\nvar Flatten = (function (_super) {\n    __extends(Flatten, _super);\n    function Flatten(config) {\n        var _this = _super.call(this, config || {}) || this;\n        _this.inputSpec = [{ minNDim: 3 }];\n        return _this;\n    }\n    Flatten.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        for (var _i = 0, _a = inputShape.slice(1); _i < _a.length; _i++) {\n            var dim = _a[_i];\n            if (dim == null) {\n                throw new errors_1.ValueError(\"The shape of the input to \\\"Flatten\\\" is not fully defined \" +\n                    (\"(got \" + inputShape.slice(1) + \"). Make sure to pass a complete \") +\n                    \"\\\"input_shape\\\" or \\\"batch_input_shape\\\" argument to the first \" +\n                    \"layer in your model.\");\n            }\n        }\n        return [inputShape[0], math_utils.arrayProd(inputShape, 1)];\n    };\n    Flatten.prototype.getClassName = function () {\n        return 'Flatten';\n    };\n    Flatten.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        return K.batchFlatten(generic_utils.getExactlyOneTensor(inputs));\n    };\n    return Flatten;\n}(topology_1.Layer));\nexports.Flatten = Flatten;\ngeneric_utils.ClassNameMap.register('Flatten', Flatten);\nvar Activation = (function (_super) {\n    __extends(Activation, _super);\n    function Activation(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        _this.activation = activations_1.getActivation(config.activation);\n        return _this;\n    }\n    Activation.prototype.getClassName = function () {\n        return 'Activation';\n    };\n    Activation.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return this.activation(input);\n    };\n    return Activation;\n}(topology_1.Layer));\nexports.Activation = Activation;\ngeneric_utils.ClassNameMap.register('Activation', Activation);\nvar RepeatVector = (function (_super) {\n    __extends(RepeatVector, _super);\n    function RepeatVector(config) {\n        var _this = _super.call(this, config) || this;\n        _this.n = config.n;\n        _this.inputSpec = [{ ndim: 2 }];\n        return _this;\n    }\n    RepeatVector.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], this.n, inputShape[1]];\n    };\n    RepeatVector.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils_1.getExactlyOneTensor(inputs);\n        return K.repeat(inputs, this.n);\n    };\n    RepeatVector.prototype.getClassName = function () {\n        return 'RepeatVector';\n    };\n    RepeatVector.prototype.getConfig = function () {\n        var config = {\n            n: this.n,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return RepeatVector;\n}(topology_1.Layer));\nexports.RepeatVector = RepeatVector;\ngeneric_utils.ClassNameMap.register('RepeatVector', RepeatVector);\nvar Reshape = (function (_super) {\n    __extends(Reshape, _super);\n    function Reshape(config) {\n        var _this = _super.call(this, config) || this;\n        _this.targetShape = config.targetShape;\n        for (var i = 0; i < _this.targetShape.length; ++i) {\n            if (_this.isUnknown(_this.targetShape[i])) {\n                _this.targetShape[i] = null;\n            }\n        }\n        return _this;\n    }\n    Reshape.prototype.isUnknown = function (dim) {\n        return dim < 0 || dim == null;\n    };\n    Reshape.prototype.fixUnknownDimension = function (inputShape, outputShape) {\n        var errorMsg = 'Total size of new array must be unchanged.';\n        var finalShape = outputShape.slice();\n        var known = 1;\n        var unknown = null;\n        for (var i = 0; i < finalShape.length; ++i) {\n            var dim = finalShape[i];\n            if (this.isUnknown(dim)) {\n                if (unknown === null) {\n                    unknown = i;\n                }\n                else {\n                    throw new errors_1.ValueError('Can only specifiy one unknown dimension.');\n                }\n            }\n            else {\n                known *= dim;\n            }\n        }\n        var originalSize = math_utils.arrayProd(inputShape);\n        if (unknown !== null) {\n            if (known === 0 || originalSize % known !== 0) {\n                throw new errors_1.ValueError(errorMsg);\n            }\n            finalShape[unknown] = originalSize / known;\n        }\n        else if (originalSize !== known) {\n            throw new errors_1.ValueError(errorMsg);\n        }\n        return finalShape;\n    };\n    Reshape.prototype.computeOutputShape = function (inputShape) {\n        var anyUnknownDims = false;\n        for (var i = 0; i < inputShape.length; ++i) {\n            if (this.isUnknown(inputShape[i])) {\n                anyUnknownDims = true;\n                break;\n            }\n        }\n        if (anyUnknownDims) {\n            return inputShape.slice(0, 1).concat(this.targetShape);\n        }\n        else {\n            return inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n        }\n    };\n    Reshape.prototype.getClassName = function () {\n        return 'Reshape';\n    };\n    Reshape.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        var inputShape = K.shape(input);\n        var outputShape = inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n        return K.reshape(input, outputShape);\n    };\n    return Reshape;\n}(topology_1.Layer));\nexports.Reshape = Reshape;\ngeneric_utils.ClassNameMap.register('Reshape', Reshape);\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = __webpack_require__(6);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar generic_utils = __webpack_require__(5);\nvar generic_utils_1 = __webpack_require__(5);\nvar Embedding = (function (_super) {\n    __extends(Embedding, _super);\n    function Embedding(config) {\n        var _this = _super.call(this, config) || this;\n        _this.embeddings = null;\n        _this.DEFAULT_EMBEDDINGS_INITIALIZER = 'randomUniform';\n        if (config.batchInputShape == null && config.inputShape == null) {\n            var batchSize = null;\n            if (config.batchSize != null) {\n                batchSize = config.batchSize;\n            }\n            if (config.inputLength == null) {\n                _this.batchInputShape = [batchSize, null];\n            }\n            else {\n                _this.batchInputShape =\n                    [batchSize].concat(generic_utils.toList(config.inputLength));\n            }\n        }\n        _this.inputDim = config.inputDim;\n        _this.outputDim = config.outputDim;\n        _this.embeddingsInitializer = initializers_1.getInitializer(config.embeddingsInitializer || _this.DEFAULT_EMBEDDINGS_INITIALIZER);\n        _this.embeddingsRegularizer = regularizers_1.getRegularizer(config.embeddingsRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        _this.embeddingsConstraint = constraints_1.getConstraint(config.embeddingsConstraint);\n        _this.maskZero = config.maskZero;\n        _this.inputLength = config.inputLength;\n        return _this;\n    }\n    Embedding.prototype.build = function (inputShape) {\n        this.embeddings = this.addWeight('embeddings', [this.inputDim, this.outputDim], this.dtype, this.embeddingsInitializer, this.embeddingsRegularizer, true, this.embeddingsConstraint);\n        this.built = true;\n    };\n    Embedding.prototype.computeMask = function (inputs, mask) {\n        throw new errors_1.NotImplementedError('computeMask has not been implemented for Embedding yet');\n    };\n    Embedding.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (this.inputLength == null) {\n            return inputShape.concat([this.outputDim]);\n        }\n        var inLens = generic_utils.toList(this.inputLength);\n        if (inLens.length !== inputShape.length - 1) {\n            throw new errors_1.ValueError(\"\\\"inputLength\\\" is \" + this.inputLength + \", but received \" +\n                (\"input shape has shape \" + inputShape));\n        }\n        else {\n            var i = 0;\n            for (var k = 0; k < inLens.length; ++k) {\n                var s1 = inLens[k];\n                var s2 = inputShape[k + 1];\n                if ((s1 != null) && (s2 != null) && (s1 !== s2)) {\n                    throw new errors_1.ValueError(\"\\\"inputLength\\\" is \" + this.inputLength + \", but received \" +\n                        (\"input shape has shape \" + inputShape));\n                }\n                else if (s1 == null) {\n                    inLens[i] = s2;\n                }\n                i++;\n            }\n        }\n        return [inputShape[0]].concat(inLens, [this.outputDim]);\n    };\n    Embedding.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (K.dtype(input) !== 'int32') {\n            input = K.cast(input, 'int32');\n        }\n        var output = K.gather(this.embeddings.read(), input.as1D());\n        return K.reshape(output, generic_utils_1.getExactlyOneShape(this.computeOutputShape(input.shape)));\n    };\n    Embedding.prototype.getClassName = function () {\n        return 'Embedding';\n    };\n    Embedding.prototype.getConfig = function () {\n        var config = {\n            inputDim: this.inputDim,\n            outputDim: this.outputDim,\n            embeddingsInitializer: initializers_1.serializeInitializer(this.embeddingsInitializer),\n            embeddingsRegularizer: regularizers_1.serializeRegularizer(this.embeddingsRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            embeddingsConstraint: constraints_1.serializeConstraint(this.embeddingsConstraint),\n            maskZero: this.maskZero,\n            inputLength: this.inputLength\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Embedding;\n}(topology_1.Layer));\nexports.Embedding = Embedding;\ngeneric_utils.ClassNameMap.register('Embedding', Embedding);\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar generic_utils = __webpack_require__(5);\nvar mathUtils = __webpack_require__(17);\nvar Merge = (function (_super) {\n    __extends(Merge, _super);\n    function Merge(config) {\n        var _this = _super.call(this, config || {}) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    Merge.prototype.getClassName = function () {\n        return 'Merge';\n    };\n    Merge.prototype.mergeFunction = function (inputs) {\n        throw new errors_1.NotImplementedError();\n    };\n    Merge.prototype.computeElementwiseOpOutputShape = function (shape1, shape2) {\n        if (shape1 == null || shape2 == null) {\n            return null;\n        }\n        else if (shape1.length < shape2.length) {\n            return this.computeElementwiseOpOutputShape(shape2, shape1);\n        }\n        else if (shape2.length === 0) {\n            return shape1;\n        }\n        var outputShape = shape1.slice(0, shape1.length - shape2.length);\n        for (var k = 0; k < shape2.length; ++k) {\n            var i = shape1[shape1.length - shape2.length + k];\n            var j = shape2[k];\n            if (i == null || j == null || i < 0 || j < 0) {\n                outputShape.push(null);\n            }\n            else if (i === 1) {\n                outputShape.push(j);\n            }\n            else if (j === 1) {\n                outputShape.push(i);\n            }\n            else {\n                if (i !== j) {\n                    throw new errors_1.ValueError('Operands could not be broadcast together with shapes ' +\n                        JSON.stringify(shape1) + ' ' + JSON.stringify(shape2));\n                }\n                outputShape.push(i);\n            }\n        }\n        return outputShape;\n    };\n    Merge.prototype.build = function (inputShape) {\n        if (Array.isArray(inputShape) && !Array.isArray(inputShape[0])) {\n            inputShape = [generic_utils.getExactlyOneShape(inputShape)];\n        }\n        inputShape = inputShape;\n        if (inputShape.length < 2) {\n            throw new errors_1.ValueError('A merge layer should be called on an Array of at least 2 inputs.' +\n                (\" Got \" + inputShape.length + \" input(s).\"));\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_1 = inputShape; _i < inputShape_1.length; _i++) {\n            var shape = inputShape_1[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length > 1) {\n            throw new errors_1.ValueError(\"Can not merge tensors with different batch sizes. \" +\n                (\"Got tensors with shapes: \" + JSON.stringify(inputShape) + \".\"));\n        }\n        var outputShape = inputShape[0] == null ? null : inputShape[0].slice(1);\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var allRanks = inputShape.map(function (shape) { return shape.length; });\n        if (inputShape.indexOf(null) === -1 &&\n            generic_utils.unique(allRanks).length === 1) {\n            this.reshapeRequired = false;\n        }\n        else {\n            this.reshapeRequired = true;\n        }\n    };\n    Merge.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        if (this.reshapeRequired) {\n            var reshapedInputs = [];\n            var inputDims = inputs.map(function (input) { return K.ndim(input); });\n            if (inputDims.indexOf(null) === -1) {\n                var maxNDim = mathUtils.max(inputDims);\n                for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n                    var x = inputs_1[_i];\n                    var xNDim = K.ndim(x);\n                    for (var k = 0; k < maxNDim - xNDim; ++k) {\n                        x = K.expandDims(x, 1);\n                    }\n                    reshapedInputs.push(x);\n                }\n                return this.mergeFunction(reshapedInputs);\n            }\n            else {\n                var transposed = false;\n                for (var _a = 0, inputs_2 = inputs; _a < inputs_2.length; _a++) {\n                    var x = inputs_2[_a];\n                    var xNDim = K.ndim(x);\n                    if (xNDim == null) {\n                        var xShape = K.shape(x);\n                        var batchSize = xShape[0];\n                        var newShape = xShape.slice(1).concat([batchSize]);\n                        var xTransposed = K.reshape(x, [batchSize].concat(mathUtils.arrayProd(xShape.slice(1))));\n                        xTransposed = K.permuteDimensions(xTransposed, [1, 0]);\n                        xTransposed = K.reshape(xTransposed, newShape);\n                        reshapedInputs.push(xTransposed);\n                        transposed = true;\n                    }\n                    else if (xNDim > 1) {\n                        var dims = mathUtils.range(1, xNDim).concat([0]);\n                        reshapedInputs.push(K.permuteDimensions(x, dims));\n                        transposed = true;\n                    }\n                    else {\n                        reshapedInputs.push(x);\n                    }\n                }\n                var y = this.mergeFunction(reshapedInputs);\n                var yNDim = K.ndim(y);\n                if (transposed) {\n                    if (yNDim == null) {\n                        var yShape = K.shape(y);\n                        var yNDim_1 = yShape.length;\n                        var batchSize = yShape[yNDim_1 - 1];\n                        var newShape = [batchSize].concat(yShape.slice(0, yShape.length - 1));\n                        y = K.reshape(K.permuteDimensions(K.reshape(y, [-1, batchSize]), [1, 0]), newShape);\n                    }\n                    else if (yNDim > 1) {\n                        var dims = [yNDim - 1].concat(mathUtils.range(0, yNDim - 1));\n                        y = K.permuteDimensions(y, dims);\n                    }\n                }\n                return y;\n            }\n        }\n        else {\n            return this.mergeFunction(inputs);\n        }\n    };\n    Merge.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        var outputShape;\n        if (inputShape[0] == null) {\n            outputShape = null;\n        }\n        else {\n            outputShape = inputShape[0].slice(1);\n        }\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_2 = inputShape; _i < inputShape_2.length; _i++) {\n            var shape = inputShape_2[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length === 1) {\n            outputShape = batchSizes.concat(outputShape);\n        }\n        else {\n            outputShape = [null].concat(outputShape);\n        }\n        return outputShape;\n    };\n    return Merge;\n}(topology_1.Layer));\nexports.Merge = Merge;\nvar Add = (function (_super) {\n    __extends(Add, _super);\n    function Add(config) {\n        return _super.call(this, config) || this;\n    }\n    Add.prototype.getClassName = function () {\n        return 'Add';\n    };\n    Add.prototype.mergeFunction = function (inputs) {\n        var output = K.zeros(inputs[0].shape);\n        for (var _i = 0, inputs_3 = inputs; _i < inputs_3.length; _i++) {\n            var input = inputs_3[_i];\n            output = K.add(output, input);\n        }\n        return output;\n    };\n    return Add;\n}(Merge));\nexports.Add = Add;\ngeneric_utils.ClassNameMap.register('Add', Add);\nfunction add(config) {\n    if (Array.isArray(config)) {\n        var layer = new Add({});\n        return layer.apply(config);\n    }\n    else {\n        return new Add(config);\n    }\n}\nexports.add = add;\nvar Multiply = (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply(config) {\n        return _super.call(this, config) || this;\n    }\n    Multiply.prototype.getClassName = function () {\n        return 'Multiply';\n    };\n    Multiply.prototype.mergeFunction = function (inputs) {\n        var output = K.ones(inputs[0].shape);\n        for (var _i = 0, inputs_4 = inputs; _i < inputs_4.length; _i++) {\n            var input = inputs_4[_i];\n            output = K.multiply(output, input);\n        }\n        return output;\n    };\n    return Multiply;\n}(Merge));\nexports.Multiply = Multiply;\ngeneric_utils.ClassNameMap.register('Multiply', Multiply);\nfunction multiply(config) {\n    if (Array.isArray(config)) {\n        var layer = new Multiply({});\n        return layer.apply(config);\n    }\n    else {\n        return new Multiply(config);\n    }\n}\nexports.multiply = multiply;\nvar Average = (function (_super) {\n    __extends(Average, _super);\n    function Average(config) {\n        return _super.call(this, config) || this;\n    }\n    Average.prototype.getClassName = function () {\n        return 'Average';\n    };\n    Average.prototype.mergeFunction = function (inputs) {\n        var output = K.zeros(inputs[0].shape);\n        for (var _i = 0, inputs_5 = inputs; _i < inputs_5.length; _i++) {\n            var input = inputs_5[_i];\n            output = K.add(output, input);\n        }\n        return K.scalarTimesArray(K.getScalar(1 / inputs.length), output);\n    };\n    return Average;\n}(Merge));\nexports.Average = Average;\ngeneric_utils.ClassNameMap.register('Average', Average);\nfunction average(config) {\n    if (Array.isArray(config)) {\n        var layer = new Average({});\n        return layer.apply(config);\n    }\n    else {\n        return new Average(config);\n    }\n}\nexports.average = average;\nvar Maximum = (function (_super) {\n    __extends(Maximum, _super);\n    function Maximum(config) {\n        return _super.call(this, config) || this;\n    }\n    Maximum.prototype.getClassName = function () {\n        return 'Maximum';\n    };\n    Maximum.prototype.mergeFunction = function (inputs) {\n        var output = inputs[0];\n        for (var i = 1; i < inputs.length; ++i) {\n            output = K.maximum(output, inputs[i]);\n        }\n        return output;\n    };\n    return Maximum;\n}(Merge));\nexports.Maximum = Maximum;\ngeneric_utils.ClassNameMap.register('Maximum', Maximum);\nfunction maximum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Maximum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Maximum(config);\n    }\n}\nexports.maximum = maximum;\nvar Minimum = (function (_super) {\n    __extends(Minimum, _super);\n    function Minimum(config) {\n        return _super.call(this, config) || this;\n    }\n    Minimum.prototype.getClassName = function () {\n        return 'Minimum';\n    };\n    Minimum.prototype.mergeFunction = function (inputs) {\n        var output = inputs[0];\n        for (var i = 1; i < inputs.length; ++i) {\n            output = K.minimum(output, inputs[i]);\n        }\n        return output;\n    };\n    return Minimum;\n}(Merge));\nexports.Minimum = Minimum;\ngeneric_utils.ClassNameMap.register('Minimum', Minimum);\nfunction minimum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Minimum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Minimum(config);\n    }\n}\nexports.minimum = minimum;\nvar Concatenate = (function (_super) {\n    __extends(Concatenate, _super);\n    function Concatenate(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_AXIS = -1;\n        if (config == null) {\n            config = {};\n        }\n        _this.axis = config.axis == null ? _this.DEFAULT_AXIS : config.axis;\n        _this.supportsMasking = true;\n        _this.reshapeRequired = false;\n        return _this;\n    }\n    Concatenate.prototype.getClassName = function () {\n        return 'Concatenate';\n    };\n    Concatenate.prototype.build = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0])) ||\n            inputShape.length === 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of at least 2 ' +\n                'inputs');\n        }\n        inputShape = inputShape;\n        var allNoneShape = true;\n        for (var _i = 0, inputShape_3 = inputShape; _i < inputShape_3.length; _i++) {\n            var shape = inputShape_3[_i];\n            if (shape != null) {\n                allNoneShape = false;\n                break;\n            }\n        }\n        if (allNoneShape) {\n            return;\n        }\n        var shapeSet = [];\n        for (var i = 0; i < inputShape.length; ++i) {\n            var shapeWithoutConcatAxis = inputShape[i].slice();\n            shapeWithoutConcatAxis.splice(this.axis, 1);\n            var exists = false;\n            for (var _a = 0, shapeSet_1 = shapeSet; _a < shapeSet_1.length; _a++) {\n                var shape = shapeSet_1[_a];\n                if (tfjs_core_1.util.arraysEqual(shape, shapeWithoutConcatAxis)) {\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                shapeSet.push(shapeWithoutConcatAxis);\n            }\n        }\n        if (shapeSet.length > 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer requires inputs with matching shapes ' +\n                'except for the concat axis. Got input shapes: ' +\n                JSON.stringify(inputShape));\n        }\n    };\n    Concatenate.prototype.mergeFunction = function (inputs) {\n        return K.concatenate(inputs, this.axis);\n    };\n    Concatenate.prototype.computeOutputShape = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0]))) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of inputs.');\n        }\n        var inputShapes = inputShape;\n        var outputShape = inputShapes[0].slice();\n        var axis = this.axis < 0 ? outputShape.length + this.axis : this.axis;\n        for (var _i = 0, _a = inputShapes.slice(1); _i < _a.length; _i++) {\n            var shape = _a[_i];\n            if (outputShape[axis] == null || shape[axis] == null) {\n                outputShape[axis] = null;\n                break;\n            }\n            outputShape[axis] += shape[axis];\n        }\n        return outputShape;\n    };\n    return Concatenate;\n}(Merge));\nexports.Concatenate = Concatenate;\ngeneric_utils.ClassNameMap.register('Concatenate', Concatenate);\nfunction concatenate(config) {\n    if (Array.isArray(config)) {\n        var layer = new Concatenate({});\n        return layer.apply(config);\n    }\n    else {\n        return new Concatenate(config);\n    }\n}\nexports.concatenate = concatenate;\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar constraints_1 = __webpack_require__(19);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar initializers_1 = __webpack_require__(20);\nvar regularizers_1 = __webpack_require__(21);\nvar generic_utils = __webpack_require__(5);\nvar math_utils_1 = __webpack_require__(17);\nvar BatchNormalization = (function (_super) {\n    __extends(BatchNormalization, _super);\n    function BatchNormalization(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        _this.axis = config.axis == null ? -1 : config.axis;\n        _this.momentum = config.momentum == null ? 0.99 : config.momentum;\n        _this.epsilon = config.epsilon == null ? 1e-3 : config.epsilon;\n        _this.center = config.center == null ? true : config.center;\n        _this.scale = config.scale == null ? true : config.scale;\n        _this.betaInitializer = initializers_1.getInitializer(config.betaInitializer || 'zeros');\n        _this.gammaInitializer = initializers_1.getInitializer(config.gammaInitializer || 'ones');\n        _this.movingMeanInitializer =\n            initializers_1.getInitializer(config.movingMeanInitializer || 'zeros');\n        _this.movingVarianceInitializer =\n            initializers_1.getInitializer(config.movingVarianceInitializer || 'ones');\n        _this.betaConstraint = constraints_1.getConstraint(config.betaConstraint);\n        _this.gammaConstraint = constraints_1.getConstraint(config.gammaConstraint);\n        _this.betaRegularizer = regularizers_1.getRegularizer(config.betaRegularizer);\n        _this.gammaRegularizer = regularizers_1.getRegularizer(config.gammaRegularizer);\n        _this.stepCount = 0;\n        return _this;\n    }\n    BatchNormalization.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var axis = this.axis >= 0 ? this.axis : (this.axis + inputShape.length);\n        var dim = inputShape[axis];\n        if (dim == null) {\n            throw new errors_1.ValueError(\"Axis \" + axis + \" of input tensor should have a defined dimension but \" +\n                \"the layer received an input with shape \" +\n                (JSON.stringify(inputShape) + \".\"));\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: inputShape.length, axes: (_a = {}, _a[axis] = dim, _a) })];\n        var shape = [dim];\n        if (this.scale) {\n            this.gamma = this.addWeight('gamma', shape, null, this.gammaInitializer, this.gammaRegularizer, true, this.gammaConstraint);\n        }\n        if (this.center) {\n            this.beta = this.addWeight('beta', shape, null, this.betaInitializer, this.betaRegularizer, true, this.betaConstraint);\n        }\n        this.movingMean = this.addWeight('moving_mean', shape, null, this.movingMeanInitializer, null, false);\n        this.movingVariance = this.addWeight('moving_variance', shape, null, this.movingVarianceInitializer, null, false);\n        this.built = true;\n        var _a;\n    };\n    BatchNormalization.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var training = kwargs['training'] == null ? false : kwargs['training'];\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            var inputShape = K.shape(input);\n            var ndim = inputShape.length;\n            var reductionAxes = math_utils_1.range(0, ndim);\n            var axis = _this.axis >= 0 ? _this.axis : (_this.axis + ndim);\n            reductionAxes.splice(axis, 1);\n            var broadcastShape = generic_utils.pyListRepeat(1, ndim);\n            broadcastShape[axis] = inputShape[axis];\n            var sortedReductionAxes = reductionAxes.slice();\n            sortedReductionAxes.sort();\n            var needsBroadcasting = !tfjs_core_1.util.arraysEqual(sortedReductionAxes, math_utils_1.range(0, ndim).slice(0, ndim - 1));\n            var normalizeInference = function () {\n                if (needsBroadcasting) {\n                    var broadcastMovingMean = K.reshape(_this.movingMean.read(), broadcastShape);\n                    var broadcastMovingVariance = K.reshape(_this.movingVariance.read(), broadcastShape);\n                    var broadcastBeta = _this.center ? K.reshape(_this.beta.read(), broadcastShape) : null;\n                    var broadcastGamma = _this.scale ? K.reshape(_this.gamma.read(), broadcastShape) : null;\n                    return K.batchNormalization(input, broadcastMovingMean, broadcastMovingVariance, broadcastBeta, broadcastGamma, _this.epsilon);\n                }\n                else {\n                    return K.batchNormalization(input, _this.movingMean.read(), _this.movingVariance.read(), _this.beta == null ? null : _this.beta.read(), _this.gamma == null ? null : _this.gamma.read(), _this.epsilon);\n                }\n            };\n            if (!training) {\n                return normalizeInference();\n            }\n            var _a = K.normalizeBatchInTraining(input, _this.gamma.read(), _this.beta.read(), reductionAxes, _this.epsilon), normedTraining = _a[0], mean = _a[1], variance = _a[2];\n            var sampleSize = math_utils_1.arrayProd(reductionAxes.map(function (axis) { return input.shape[axis]; }));\n            var varianceDebiased = variance.mul(K.getScalar(sampleSize / (sampleSize - (1 + _this.epsilon))));\n            var updateMovingMeanAndVariance = function () {\n                _this.stepCount++;\n                var newMovingMean = tfjs_core_1.movingAverage(_this.movingMean.read(), mean, _this.momentum, _this.stepCount);\n                _this.movingMean.write(newMovingMean);\n                var newMovingVariance = tfjs_core_1.movingAverage(_this.movingVariance.read(), varianceDebiased, _this.momentum, _this.stepCount);\n                _this.movingVariance.write(newMovingVariance);\n            };\n            updateMovingMeanAndVariance();\n            return normedTraining;\n        });\n    };\n    BatchNormalization.prototype.getClassName = function () {\n        return 'BatchNormalization';\n    };\n    BatchNormalization.prototype.getConfig = function () {\n        var config = {\n            axis: this.axis,\n            momentum: this.momentum,\n            epsilon: this.epsilon,\n            center: this.center,\n            scale: this.scale,\n            betaInitializer: initializers_1.serializeInitializer(this.betaInitializer),\n            gammaInitializer: initializers_1.serializeInitializer(this.gammaInitializer),\n            movingMeanInitializer: initializers_1.serializeInitializer(this.movingMeanInitializer),\n            movingVarianceInitializer: initializers_1.serializeInitializer(this.movingVarianceInitializer),\n            betaRegularizer: regularizers_1.serializeRegularizer(this.betaRegularizer),\n            gammaRegularizer: regularizers_1.serializeRegularizer(this.gammaRegularizer),\n            betaConstraint: constraints_1.serializeConstraint(this.betaConstraint),\n            gammaConstraint: constraints_1.serializeConstraint(this.gammaConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return BatchNormalization;\n}(topology_1.Layer));\nexports.BatchNormalization = BatchNormalization;\ngeneric_utils.ClassNameMap.register('BatchNormalization', BatchNormalization);\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(41);\nvar K = __webpack_require__(6);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar generic_utils_1 = __webpack_require__(5);\nvar ZeroPadding2D = (function (_super) {\n    __extends(ZeroPadding2D, _super);\n    function ZeroPadding2D(config) {\n        var _this = this;\n        if (config == null) {\n            config = {};\n        }\n        _this = _super.call(this, config) || this;\n        _this.dataFormat =\n            config.dataFormat == null ? common_1.imageDataFormat() : config.dataFormat;\n        if (config.padding == null) {\n            _this.padding = [[1, 1], [1, 1]];\n        }\n        else if (typeof config.padding === 'number') {\n            _this.padding =\n                [[config.padding, config.padding], [config.padding, config.padding]];\n        }\n        else {\n            config.padding = config.padding;\n            if (config.padding.length !== 2) {\n                throw new errors_1.ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" +\n                    (\"received a length-\" + config.padding.length + \" array.\"));\n            }\n            var heightPadding = void 0;\n            var widthPadding = void 0;\n            if (typeof config.padding[0] === 'number') {\n                heightPadding =\n                    [config.padding[0], config.padding[0]];\n                widthPadding =\n                    [config.padding[1], config.padding[1]];\n            }\n            else {\n                config.padding = config.padding;\n                if (config.padding[0].length !== 2) {\n                    throw new errors_1.ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" +\n                        (\"but received a length-\" + config.padding[0].length + \" array.\"));\n                }\n                heightPadding = config.padding[0];\n                if (config.padding[1].length !== 2) {\n                    throw new errors_1.ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" +\n                        (\"but received a length-\" + config.padding[1].length + \" array.\"));\n                }\n                widthPadding = config.padding[1];\n            }\n            _this.padding = [heightPadding, widthPadding];\n        }\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    ZeroPadding2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        var rows;\n        var cols;\n        if (this.dataFormat === 'channelsFirst') {\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[3] != null && inputShape[3] >= 0) {\n                cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            if (inputShape[1] != null && inputShape[1] >= 0) {\n                rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    ZeroPadding2D.prototype.call = function (inputs, kwargs) {\n        return K.spatial2dPadding(generic_utils_1.getExactlyOneTensor(inputs), this.padding, this.dataFormat);\n    };\n    ZeroPadding2D.prototype.getClassName = function () {\n        return 'ZeroPadding2D';\n    };\n    ZeroPadding2D.prototype.getConfig = function () {\n        var config = {\n            padding: this.padding,\n            dataFormat: this.dataFormat,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ZeroPadding2D;\n}(topology_1.Layer));\nexports.ZeroPadding2D = ZeroPadding2D;\ngeneric_utils_1.ClassNameMap.register('ZeroPadding2D', ZeroPadding2D);\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = __webpack_require__(6);\nvar common_1 = __webpack_require__(26);\nvar topology_1 = __webpack_require__(9);\nvar topology_2 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar conv_utils_1 = __webpack_require__(44);\nvar generic_utils = __webpack_require__(5);\nvar Pooling1D = (function (_super) {\n    __extends(Pooling1D, _super);\n    function Pooling1D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = 2;\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = [config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : [config.strides];\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    Pooling1D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        length = conv_utils_1.convOutputLength(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n        return [inputShape[0], length, inputShape[2]];\n    };\n    Pooling1D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        inputs = K.expandDims(generic_utils.getExactlyOneTensor(inputs), 2);\n        var output = this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), [this.poolSize[0], 1], [this.strides[0], 1], this.padding, 'channelsLast');\n        return K.squeeze(output, 2);\n    };\n    Pooling1D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling1D;\n}(topology_2.Layer));\nexports.Pooling1D = Pooling1D;\nvar MaxPooling1D = (function (_super) {\n    __extends(MaxPooling1D, _super);\n    function MaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling1D.prototype.getClassName = function () {\n        return 'MaxPooling1D';\n    };\n    MaxPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling1D;\n}(Pooling1D));\nexports.MaxPooling1D = MaxPooling1D;\ngeneric_utils.ClassNameMap.register('MaxPooling1D', MaxPooling1D);\nvar AveragePooling1D = (function (_super) {\n    __extends(AveragePooling1D, _super);\n    function AveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling1D.prototype.getClassName = function () {\n        return 'AveragePooling1D';\n    };\n    AveragePooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AveragePooling1D;\n}(Pooling1D));\nexports.AveragePooling1D = AveragePooling1D;\ngeneric_utils.ClassNameMap.register('AveragePooling1D', AveragePooling1D);\nvar Pooling2D = (function (_super) {\n    __extends(Pooling2D, _super);\n    function Pooling2D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = [2, 2];\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = Array.isArray(config.poolSize) ?\n            config.poolSize :\n            [config.poolSize, config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : config.strides;\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    Pooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        rows =\n            conv_utils_1.convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\n        cols =\n            conv_utils_1.convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    Pooling2D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        return this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), this.poolSize, this.strides, this.padding, this.dataFormat);\n    };\n    Pooling2D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n            dataFormat: this.dataFormat\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling2D;\n}(topology_2.Layer));\nexports.Pooling2D = Pooling2D;\nvar MaxPooling2D = (function (_super) {\n    __extends(MaxPooling2D, _super);\n    function MaxPooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling2D.prototype.getClassName = function () {\n        return 'MaxPooling2D';\n    };\n    MaxPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling2D;\n}(Pooling2D));\nexports.MaxPooling2D = MaxPooling2D;\ngeneric_utils.ClassNameMap.register('MaxPooling2D', MaxPooling2D);\nvar AveragePooling2D = (function (_super) {\n    __extends(AveragePooling2D, _super);\n    function AveragePooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling2D.prototype.getClassName = function () {\n        return 'AveragePooling2D';\n    };\n    AveragePooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AveragePooling2D;\n}(Pooling2D));\nexports.AveragePooling2D = AveragePooling2D;\ngeneric_utils.ClassNameMap.register('AveragePooling2D', AveragePooling2D);\nvar GlobalPooling1D = (function (_super) {\n    __extends(GlobalPooling1D, _super);\n    function GlobalPooling1D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    GlobalPooling1D.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], inputShape[2]];\n    };\n    GlobalPooling1D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    return GlobalPooling1D;\n}(topology_2.Layer));\nexports.GlobalPooling1D = GlobalPooling1D;\nvar GlobalAveragePooling1D = (function (_super) {\n    __extends(GlobalAveragePooling1D, _super);\n    function GlobalAveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalAveragePooling1D.prototype.getClassName = function () {\n        return 'GlobalAveragePooling1D';\n    };\n    GlobalAveragePooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.mean(input, 1);\n    };\n    return GlobalAveragePooling1D;\n}(GlobalPooling1D));\nexports.GlobalAveragePooling1D = GlobalAveragePooling1D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling1D', GlobalAveragePooling1D);\nvar GlobalMaxPooling1D = (function (_super) {\n    __extends(GlobalMaxPooling1D, _super);\n    function GlobalMaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalMaxPooling1D.prototype.getClassName = function () {\n        return 'GlobalMaxPooling1D';\n    };\n    GlobalMaxPooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.max(input, 1);\n    };\n    return GlobalMaxPooling1D;\n}(GlobalPooling1D));\nexports.GlobalMaxPooling1D = GlobalMaxPooling1D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling1D', GlobalMaxPooling1D);\nvar GlobalPooling2D = (function (_super) {\n    __extends(GlobalPooling2D, _super);\n    function GlobalPooling2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    GlobalPooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        if (this.dataFormat === 'channelsLast') {\n            return [inputShape[0], inputShape[3]];\n        }\n        else {\n            return [inputShape[0], inputShape[1]];\n        }\n    };\n    GlobalPooling2D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    GlobalPooling2D.prototype.getConfig = function () {\n        var config = { dataFormat: this.dataFormat };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GlobalPooling2D;\n}(topology_2.Layer));\nexports.GlobalPooling2D = GlobalPooling2D;\nvar GlobalAveragePooling2D = (function (_super) {\n    __extends(GlobalAveragePooling2D, _super);\n    function GlobalAveragePooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalAveragePooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.mean(input, [1, 2]);\n        }\n        else {\n            return K.mean(input, [2, 3]);\n        }\n    };\n    GlobalAveragePooling2D.prototype.getClassName = function () {\n        return 'GlobalAveragePooling2D';\n    };\n    return GlobalAveragePooling2D;\n}(GlobalPooling2D));\nexports.GlobalAveragePooling2D = GlobalAveragePooling2D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling2D', GlobalAveragePooling2D);\nvar GlobalMaxPooling2D = (function (_super) {\n    __extends(GlobalMaxPooling2D, _super);\n    function GlobalMaxPooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalMaxPooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.max(input, [1, 2]);\n        }\n        else {\n            return K.max(input, [2, 3]);\n        }\n    };\n    GlobalMaxPooling2D.prototype.getClassName = function () {\n        return 'GlobalMaxPooling2D';\n    };\n    return GlobalMaxPooling2D;\n}(GlobalPooling2D));\nexports.GlobalMaxPooling2D = GlobalMaxPooling2D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling2D', GlobalMaxPooling2D);\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = __webpack_require__(6);\nvar topology_1 = __webpack_require__(9);\nvar errors_1 = __webpack_require__(4);\nvar generic_utils = __webpack_require__(5);\nvar serialization_1 = __webpack_require__(31);\nvar Wrapper = (function (_super) {\n    __extends(Wrapper, _super);\n    function Wrapper(config) {\n        var _this = _super.call(this, config) || this;\n        _this.layer = config.layer;\n        return _this;\n    }\n    Wrapper.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Object.defineProperty(Wrapper.prototype, \"trainable\", {\n        get: function () {\n            if (this.layer != null) {\n                return this.layer.trainable;\n            }\n            else {\n                return false;\n            }\n        },\n        set: function (value) {\n            if (this.layer != null) {\n                this.layer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.layer.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.layer.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"updates\", {\n        get: function () {\n            return this.layer._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"losses\", {\n        get: function () {\n            return this.layer.losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Wrapper.prototype.getWeights = function () {\n        return this.layer.getWeights();\n    };\n    Wrapper.prototype.setWeights = function (weights) {\n        this.layer.setWeights(weights);\n    };\n    Wrapper.prototype.getConfig = function () {\n        var config = {\n            'layer': {\n                'className': this.layer.getClassName(),\n                'config': this.layer.getConfig(),\n            }\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    Wrapper.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var layerConfig = config['layer'];\n        var layer = serialization_1.deserialize(layerConfig, customObjects);\n        delete config['layer'];\n        var newConfig = { layer: layer };\n        Object.assign(newConfig, config);\n        return new cls(newConfig);\n    };\n    return Wrapper;\n}(topology_1.Layer));\nexports.Wrapper = Wrapper;\nvar TimeDistributed = (function (_super) {\n    __extends(TimeDistributed, _super);\n    function TimeDistributed(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    TimeDistributed.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < 3) {\n            throw new errors_1.ValueError(\"TimeDistributed layer expects an input shape >= 3D, but received \" +\n                (\"input shape \" + JSON.stringify(inputShape)));\n        }\n        this.inputSpec = [{ shape: inputShape }];\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (!this.layer.built) {\n            this.layer.build(childInputShape);\n            this.layer.built = true;\n        }\n        _super.prototype.build.call(this, inputShape);\n    };\n    TimeDistributed.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        var childOutputShape = this.layer.computeOutputShape(childInputShape);\n        var timesteps = inputShape[1];\n        return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n    };\n    TimeDistributed.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var step = function (inputs, states) {\n            var output = _this.layer.call(inputs, kwargs);\n            return [output, []];\n        };\n        var rnnOutputs = K.rnn(step, inputs, [], false, null, null, false, inputs.shape[1]);\n        var y = rnnOutputs[1];\n        return y;\n    };\n    TimeDistributed.prototype.getClassName = function () {\n        return 'TimeDistributed';\n    };\n    return TimeDistributed;\n}(Wrapper));\nexports.TimeDistributed = TimeDistributed;\ngeneric_utils.ClassNameMap.register('TimeDistributed', TimeDistributed);\nvar BidirectionalMergeMode;\n(function (BidirectionalMergeMode) {\n    BidirectionalMergeMode[BidirectionalMergeMode[\"SUM\"] = 0] = \"SUM\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"MUL\"] = 1] = \"MUL\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"CONCAT\"] = 2] = \"CONCAT\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"AVE\"] = 3] = \"AVE\";\n})(BidirectionalMergeMode = exports.BidirectionalMergeMode || (exports.BidirectionalMergeMode = {}));\ngeneric_utils.SerializableEnumRegistry.register('merge_mode', {\n    'sum': BidirectionalMergeMode.SUM,\n    'mul': BidirectionalMergeMode.MUL,\n    'concat': BidirectionalMergeMode.CONCAT,\n    'ave': BidirectionalMergeMode.AVE,\n});\nvar Bidirectional = (function (_super) {\n    __extends(Bidirectional, _super);\n    function Bidirectional(config) {\n        var _this = _super.call(this, config) || this;\n        _this.forwardLayer = config.layer;\n        var layerConfig = config.layer.getConfig();\n        layerConfig['goBackwards'] =\n            layerConfig['goBackwards'] === true ? false : true;\n        _this.backwardLayer =\n            serialization_1.deserialize({ className: config.layer.getClassName(), config: layerConfig });\n        _this.forwardLayer.name = 'forward_' + _this.forwardLayer.name;\n        _this.backwardLayer.name = 'backward_' + _this.backwardLayer.name;\n        _this.mergeMode = config.mergeMode;\n        if (config.weights) {\n            throw new errors_1.NotImplementedError('weights support is not implemented for Bidirectional layer yet.');\n        }\n        _this._stateful = config.layer.stateful;\n        _this.returnSequences = config.layer.returnSequences;\n        _this.returnState = config.layer.returnState;\n        _this.supportsMasking = true;\n        _this._trainable = true;\n        _this.inputSpec = config.layer.inputSpec;\n        return _this;\n    }\n    Object.defineProperty(Bidirectional.prototype, \"trainable\", {\n        get: function () {\n            return this._trainable;\n        },\n        set: function (value) {\n            this._trainable = value;\n            if (this.forwardLayer != null) {\n                this.forwardLayer.trainable = value;\n            }\n            if (this.backwardLayer != null) {\n                this.backwardLayer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getWeights = function () {\n        return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights());\n    };\n    Bidirectional.prototype.setWeights = function (weights) {\n        var numWeights = weights.length;\n        var numeightsOver2 = Math.floor(numWeights / 2);\n        this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n        this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n    };\n    Bidirectional.prototype.computeOutputShape = function (inputShape) {\n        var layerShapes = this.forwardLayer.computeOutputShape(inputShape);\n        if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n            layerShapes = [layerShapes];\n        }\n        layerShapes = layerShapes;\n        var outputShape;\n        var outputShapes;\n        var stateShape;\n        if (this.returnState) {\n            stateShape = layerShapes.slice(1);\n            outputShape = layerShapes[0];\n        }\n        else {\n            outputShape = layerShapes[0];\n        }\n        outputShape = outputShape;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            outputShape[outputShape.length - 1] *= 2;\n            outputShapes = [outputShape];\n        }\n        else if (this.mergeMode == null) {\n            outputShapes = [outputShape, outputShape.slice()];\n        }\n        else {\n            outputShapes = [outputShape];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return outputShapes.concat(stateShape).concat(stateShape.slice());\n            }\n            return [outputShape].concat(stateShape).concat(stateShape.slice());\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Bidirectional.prototype.apply = function (inputs, kwargs) {\n        var initialState = null;\n        if (kwargs != null) {\n            initialState = kwargs['initialState'];\n        }\n        if (Array.isArray(inputs)) {\n            initialState = inputs.slice(1);\n            inputs = inputs[0];\n        }\n        if (initialState == null || initialState.length === 0) {\n            var applyOutputs = _super.prototype.apply.call(this, inputs, kwargs);\n            return applyOutputs;\n        }\n        else {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n    };\n    Bidirectional.prototype.call = function (inputs, kwargs) {\n        if (kwargs['mask'] != null) {\n            throw new errors_1.NotImplementedError('The support for masking is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        if (kwargs['initialState'] != null) {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        var y = this.forwardLayer.call(inputs, kwargs);\n        var yRev = this.backwardLayer.call(inputs, kwargs);\n        var states;\n        if (this.returnState) {\n            if (Array.isArray(y)) {\n                states = y.slice(1).concat(yRev.slice(1));\n            }\n            else {\n            }\n            y = y[0];\n            yRev = yRev[0];\n        }\n        if (this.returnSequences) {\n            yRev = K.reverse(yRev, 1);\n        }\n        var output;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            output = K.concatenate([y, yRev]);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.SUM) {\n            output = K.add(y, yRev);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.AVE) {\n            output = K.scalarTimesArray(K.getScalar(0.5), K.add(y, yRev));\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.MUL) {\n            output = K.multiply(y, yRev);\n        }\n        else if (this.mergeMode == null) {\n            output = [y, yRev];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return output.concat(states);\n            }\n            return [output].concat(states);\n        }\n        return output;\n    };\n    Bidirectional.prototype.resetStates = function (states) {\n        this.forwardLayer.resetStates();\n        this.backwardLayer.resetStates();\n    };\n    Bidirectional.prototype.build = function (inputShape) {\n        var _this = this;\n        K.nameScope(this.forwardLayer.name, function () {\n            _this.forwardLayer.build(inputShape);\n        });\n        K.nameScope(this.backwardLayer.name, function () {\n            _this.backwardLayer.build(inputShape);\n        });\n        this.built = true;\n    };\n    Object.defineProperty(Bidirectional.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bidirectional.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getClassName = function () {\n        return 'Bidirectional';\n    };\n    return Bidirectional;\n}(Wrapper));\nexports.Bidirectional = Bidirectional;\ngeneric_utils.ClassNameMap.register('Bidirectional', Bidirectional);\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = __webpack_require__(3);\nvar K = __webpack_require__(6);\nvar errors_1 = __webpack_require__(4);\nfunction getOptimizer(identifier) {\n    var optimizerMap = {\n        'Adagrad': function () { return tfjs_core_1.train.adagrad(.01); },\n        'Adam': function () { return tfjs_core_1.train.adam(.001, .9, .999, K.epsilon()); },\n        'RMSProp': function () { return tfjs_core_1.train.rmsprop(.001, .9, null, K.epsilon()); },\n        'SGD': function () { return tfjs_core_1.train.sgd(.01); }\n    };\n    optimizerMap['adagrad'] = optimizerMap['Adagrad'];\n    optimizerMap['adam'] = optimizerMap['Adam'];\n    optimizerMap['rmsprop'] = optimizerMap['RMSProp'];\n    optimizerMap['sgd'] = optimizerMap['SGD'];\n    if (identifier in optimizerMap) {\n        return optimizerMap[identifier]();\n    }\n    throw new errors_1.ValueError(\"Unknown Optimizer \" + identifier);\n}\nexports.getOptimizer = getOptimizer;\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.5.3';\nexports.version = version;\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(3));\n__export(__webpack_require__(59));\nvar tfjs_core_1 = __webpack_require__(3);\nvar tfjs_layers_1 = __webpack_require__(59);\nvar version_1 = __webpack_require__(147);\nexports.version = {\n    'tfjs-core': tfjs_core_1.version_core,\n    'tfjs-layers': tfjs_layers_1.version_layers,\n    'tfjs': version_1.version\n};\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.10.3';\nexports.version = version;\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 149 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DrawableCanvas=function(_Component){_inherits(DrawableCanvas,_Component);function DrawableCanvas(props){_classCallCheck(this,DrawableCanvas);var _this=_possibleConstructorReturn(this,(DrawableCanvas.__proto__||Object.getPrototypeOf(DrawableCanvas)).call(this,props));_this.handleOnMouseDown=_this.handleOnMouseDown.bind(_this);_this.handleOnTouchStart=_this.handleOnTouchStart.bind(_this);_this.handleOnMouseMove=_this.handleOnMouseMove.bind(_this);_this.handleOnTouchMove=_this.handleOnTouchMove.bind(_this);_this.handleonMouseUp=_this.handleonMouseUp.bind(_this);return _this;}_createClass(DrawableCanvas,[{key:'componentDidMount',value:function componentDidMount(){this.ctx=this.canvas.getContext('2d');}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){if(nextProps.clear){this.resetCanvas();}}},{key:'resetCanvas',value:function resetCanvas(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);}},{key:'handleOnTouchStart',value:function handleOnTouchStart(e){var rect=this.canvas.getBoundingClientRect();this.ctx.beginPath();this.lastX=e.targetTouches[0].pageX-rect.left;this.lastY=e.targetTouches[0].pageY-rect.top;this.drawing=true;}},{key:'handleOnMouseDown',value:function handleOnMouseDown(e){var rect=this.canvas.getBoundingClientRect();this.ctx.beginPath();this.lastX=e.clientX-rect.left;this.lastY=e.clientY-rect.top;this.drawing=true;}},{key:'handleOnTouchMove',value:function handleOnTouchMove(e){if(this.drawing){var rect=this.canvas.getBoundingClientRect();var lastX=this.lastX;var lastY=this.lastY;var currentX=e.targetTouches[0].pageX-rect.left;var currentY=e.targetTouches[0].pageY-rect.top;this.draw(lastX,lastY,currentX,currentY);this.lastX=currentX;this.lastY=currentY;}}},{key:'handleOnMouseMove',value:function handleOnMouseMove(e){if(this.drawing){var rect=this.canvas.getBoundingClientRect();var lastX=this.lastX;var lastY=this.lastY;var currentX=e.clientX-rect.left;var currentY=e.clientY-rect.top;this.draw(lastX,lastY,currentX,currentY);this.lastX=currentX;this.lastY=currentY;}}},{key:'handleonMouseUp',value:function handleonMouseUp(){this.ctx.drawImage(this.canvas,0,0,28,28);this.drawing=false;if(typeof this.props.onGetImage==='function'){this.props.onGetImage(this.ctx.getImageData(0,0,28,28));}}},{key:'draw',value:function draw(lX,lY,cX,cY){var newContext=this.ctx;newContext.strokeStyle=this.props.brushColor;newContext.lineWidth=this.props.lineWidth;this.ctx=newContext;this.ctx.moveTo(lX,lY);this.ctx.lineTo(cX,cY);this.ctx.stroke();}},{key:'render',value:function render(){var _this2=this;var style={cursor:'crosshair',border:'1px black solid'};return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('canvas',{ref:function ref(canvas){_this2.canvas=canvas;},width:this.props.width,style:style,height:this.props.height,onMouseDown:this.handleOnMouseDown,onTouchStart:this.handleOnTouchStart,onMouseMove:this.handleOnMouseMove,onTouchMove:this.handleOnTouchMove,onMouseUp:this.handleonMouseUp,onTouchEnd:this.handleonMouseUp});}}]);return DrawableCanvas;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (DrawableCanvas);\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(164);\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = __webpack_require__(45);\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (false) {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(158);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(157);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(66);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(66);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.1.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(47),m=__webpack_require__(153),A=__webpack_require__(46),B=__webpack_require__(45),ca=__webpack_require__(152),da=__webpack_require__(156),ea=__webpack_require__(159),ha=__webpack_require__(154),ia=__webpack_require__(155),C=__webpack_require__(65);\nfunction D(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:D(\"227\");\nvar la={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function qa(a,b){return(a&b)===b}\nvar ra={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ra,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){sa.hasOwnProperty(f)?D(\"48\",f):void 0;var g=f.toLowerCase(),k=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:qa(k,b.MUST_USE_PROPERTY),\nhasBooleanValue:qa(k,b.HAS_BOOLEAN_VALUE),hasNumericValue:qa(k,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:qa(k,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:qa(k,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:qa(k,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:D(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);sa[f]=g}}},sa={};\nfunction ta(a,b){if(la.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return la.hasOwnProperty(a)?a=!0:(b=ua(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function ua(a){return sa.hasOwnProperty(a)?sa[a]:null}\nvar va=ra,wa=va.MUST_USE_PROPERTY,H=va.HAS_BOOLEAN_VALUE,xa=va.HAS_NUMERIC_VALUE,ya=va.HAS_POSITIVE_NUMERIC_VALUE,za=va.HAS_OVERLOADED_BOOLEAN_VALUE,Aa=va.HAS_STRING_BOOLEAN_VALUE,Ba={Properties:{allowFullScreen:H,async:H,autoFocus:H,autoPlay:H,capture:za,checked:wa|H,cols:ya,contentEditable:Aa,controls:H,\"default\":H,defer:H,disabled:H,download:za,draggable:Aa,formNoValidate:H,hidden:H,loop:H,multiple:wa|H,muted:wa|H,noValidate:H,open:H,playsInline:H,readOnly:H,required:H,reversed:H,rows:ya,rowSpan:xa,\nscoped:H,seamless:H,selected:wa|H,size:ya,start:xa,span:ya,spellCheck:Aa,style:0,tabIndex:0,itemScope:H,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Aa},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\na.setAttribute(\"value\",\"\"+b)}}},Ca=va.HAS_STRING_BOOLEAN_VALUE,K={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Da={Properties:{autoReverse:Ca,externalResourcesRequired:Ca,preserveAlpha:Ca},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:K.xlink,xlinkArcrole:K.xlink,xlinkHref:K.xlink,xlinkRole:K.xlink,xlinkShow:K.xlink,xlinkTitle:K.xlink,xlinkType:K.xlink,\nxmlBase:K.xml,xmlLang:K.xml,xmlSpace:K.xml}},Ea=/[\\-\\:]([a-z])/g;function Ha(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ea,\nHa);Da.Properties[b]=0;Da.DOMAttributeNames[b]=a});va.injectDOMPropertyConfig(Ba);va.injectDOMPropertyConfig(Da);\nvar N={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?D(\"197\"):void 0;Ia=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,k,h){Ia.apply(N,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,k,h){N.invokeGuardedCallback.apply(this,arguments);if(N.hasCaughtError()){var r=N.clearCaughtError();N._hasRethrowError||(N._hasRethrowError=!0,N._rethrowError=\nr)}},rethrowCaughtError:function(){return Ja.apply(N,arguments)},hasCaughtError:function(){return N._hasCaughtError},clearCaughtError:function(){if(N._hasCaughtError){var a=N._caughtError;N._caughtError=null;N._hasCaughtError=!1;return a}D(\"198\")}};function Ia(a,b,c,d,e,f,g,k,h){N._hasCaughtError=!1;N._caughtError=null;var r=Array.prototype.slice.call(arguments,3);try{b.apply(c,r)}catch(n){N._caughtError=n,N._hasCaughtError=!0}}\nfunction Ja(){if(N._hasRethrowError){var a=N._rethrowError;N._rethrowError=null;N._hasRethrowError=!1;throw a;}}var Ka=null,La={};\nfunction Ma(){if(Ka)for(var a in La){var b=La[a],c=Ka.indexOf(a);-1<c?void 0:D(\"96\",a);if(!Na[c]){b.extractEvents?void 0:D(\"97\",a);Na[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,k=d;Oa.hasOwnProperty(k)?D(\"99\",k):void 0;Oa[k]=f;var h=f.phasedRegistrationNames;if(h){for(e in h)h.hasOwnProperty(e)&&Pa(h[e],g,k);e=!0}else f.registrationName?(Pa(f.registrationName,g,k),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction Pa(a,b,c){Qa[a]?D(\"100\",a):void 0;Qa[a]=b;Ra[a]=b.eventTypes[c].dependencies}var Na=[],Oa={},Qa={},Ra={};function Sa(a){Ka?D(\"101\"):void 0;Ka=Array.prototype.slice.call(a);Ma()}function Ta(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];La.hasOwnProperty(c)&&La[c]===d||(La[c]?D(\"102\",c):void 0,La[c]=d,b=!0)}b&&Ma()}\nvar Ua=Object.freeze({plugins:Na,eventNameDispatchConfigs:Oa,registrationNameModules:Qa,registrationNameDependencies:Ra,possibleRegistrationNames:null,injectEventPluginOrder:Sa,injectEventPluginsByName:Ta}),Va=null,Wa=null,Xa=null;function Ya(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Xa(d);N.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Za(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function $a(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var ab=null;\nfunction bb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ya(a,b,c[e],d[e]);else c&&Ya(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function cb(a){return bb(a,!0)}function db(a){return bb(a,!1)}var ib={injectEventPluginOrder:Sa,injectEventPluginsByName:Ta};\nfunction jb(a,b){var c=a.stateNode;if(!c)return null;var d=Va(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function kb(a,b,c,d){for(var e,f=0;f<Na.length;f++){var g=Na[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Za(e,g))}return e}function lb(a){a&&(ab=Za(ab,a))}function mb(a){var b=ab;ab=null;a?$a(b,cb):$a(b,db);ab?D(\"95\"):void 0;N.rethrowCaughtError()}var nb=Object.freeze({injection:ib,getListener:jb,extractEvents:kb,enqueueEvents:lb,processEventQueue:mb}),ob=Math.random().toString(36).slice(2),O=\"__reactInternalInstance$\"+ob,pb=\"__reactEventHandlers$\"+ob;\nfunction qb(a){if(a[O])return a[O];for(var b=[];!a[O];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[O];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[O]);a=b.pop())c=d;return c}function rb(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function sb(a){return a[pb]||null}\nvar tb=Object.freeze({precacheFiberNode:function(a,b){b[O]=a},getClosestInstanceFromNode:qb,getInstanceFromNode:function(a){a=a[O];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:rb,getFiberCurrentPropsFromNode:sb,updateFiberProps:function(a,b){a[pb]=b}});function Q(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=Q(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\nfunction vb(a,b,c){if(b=jb(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Q(b):null;ub(b,vb,a)}}\nfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=jb(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){$a(a,wb)}\nfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,k=e;k;k=Q(k))g++;k=0;for(var h=f;h;h=Q(h))k++;for(;0<g-k;)e=Q(e),g--;for(;0<k-g;)f=Q(f),k--;for(;g--;){if(e===f||e===f.alternate)break a;e=Q(e);f=Q(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=Q(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=Q(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\nvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){$a(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){$a(a,zb)}}),Db=null;function Eb(){!Db&&m.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var R={_root:null,_startText:null,_fallbackText:null};\nfunction Fb(){if(R._fallbackText)return R._fallbackText;var a,b=R._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);R._fallbackText=e.slice(a,1<d?1-d:void 0);return R._fallbackText}function Gb(){return\"value\"in R._root?R._root.value:R._root[Eb()]}\nvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:B.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction S(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?B.thatReturnsTrue:B.thatReturnsFalse;this.isPropagationStopped=B.thatReturnsFalse;return this}\nA(S.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=B.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=B.thatReturnsTrue)},persist:function(){this.isPersistent=B.thatReturnsTrue},isPersistent:B.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});S.Interface=Ib;S.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;A(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=A({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(S);function Qb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Rb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Qb;a.release=Rb}function Sb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Sb,{data:null});function Tb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Tb,{data:null});var Ub=[9,13,27,32],Vb=m.canUseDOM&&\"CompositionEvent\"in window,Wb=null;m.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\nif(Xb=m.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\nvar Zb=Xb,$b=m.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\nfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Ub.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\nfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),R._root=null,R._startText=null,R._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\nvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(R._root=d,R._startText=Gb(),fc=!0)),f=Sb.getPooled(f,b,c,d),e?f.data=\ne:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Tb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Wa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:D(\"194\");var b=Va(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\nfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\nfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;m.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction yc(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\nfunction Ec(a,b,c){a=S.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){lb(a);mb(!1)}function Ic(a){var b=rb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Qc=!1;m.canUseDOM&&(Qc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Rc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Sc),Gc=Fc=null)}function Sc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\nfunction Tc(a,b,c){\"topFocus\"===a?(Rc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Sc)):\"topBlur\"===a&&Rc()}function Uc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Vc(a,b){if(\"topClick\"===a)return Ic(b)}function Wc(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\nvar Xc={eventTypes:Dc,_isInputEventSupported:Qc,extractEvents:function(a,b,c,d){var e=b?rb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Qc)g=Wc;else{g=Uc;var k=Tc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Vc);if(g&&(g=g(a,b)))return Ec(g,c,d);k&&k(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\na&&e.setAttribute(\"value\",a))}};function Yc(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yc,{view:null,detail:null});var Zc={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function $c(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Zc[a])?!!b[a]:!1}function ad(){return $c}function bd(a,b,c,d){return S.call(this,a,b,c,d)}\nYc.augmentClass(bd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ad,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar cd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},dd={eventTypes:cd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?qb(b):null):a=null;if(a===\nb)return null;var f=null==a?e:rb(a);e=null==b?e:rb(b);var g=bd.getPooled(cd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=bd.getPooled(cd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},ed=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function fd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\nfunction gd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function hd(a){return(a=a._reactInternalFiber)?2===gd(a):!1}function id(a){2!==gd(a)?D(\"188\"):void 0}\nfunction jd(a){var b=a.alternate;if(!b)return b=gd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return id(e),a;if(g===d)return id(e),b;g=g.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var k=e.child;k;){if(k===c){g=!0;c=e;d=f;break}if(k===d){g=!0;d=e;c=f;break}k=k.sibling}if(!g){for(k=f.child;k;){if(k===c){g=!0;c=f;d=e;break}if(k===d){g=!0;d=f;c=e;break}k=k.sibling}g?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function kd(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction ld(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var md=[];\nfunction nd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=qb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],od(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var pd=!0,od=void 0;function qd(a){pd=!!a}function U(a,b,c){return c?ca.listen(c,b,rd.bind(null,a)):null}function sd(a,b,c){return c?ca.capture(c,b,rd.bind(null,a)):null}\nfunction rd(a,b){if(pd){var c=wc(b);c=qb(c);null===c||\"number\"!==typeof c.tag||2===gd(c)||(c=null);if(md.length){var d=md.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(nd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>md.length&&md.push(a)}}}\nvar td=Object.freeze({get _enabled(){return pd},get _handleTopLevel(){return od},setHandleTopLevel:function(a){od=a},setEnabled:qd,isEnabled:function(){return pd},trapBubbledEvent:U,trapCapturedEvent:sd,dispatchEvent:rd});function ud(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar vd={animationend:ud(\"Animation\",\"AnimationEnd\"),animationiteration:ud(\"Animation\",\"AnimationIteration\"),animationstart:ud(\"Animation\",\"AnimationStart\"),transitionend:ud(\"Transition\",\"TransitionEnd\")},wd={},xd={};m.canUseDOM&&(xd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete vd.animationend.animation,delete vd.animationiteration.animation,delete vd.animationstart.animation),\"TransitionEvent\"in window||delete vd.transitionend.transition);\nfunction yd(a){if(wd[a])return wd[a];if(!vd[a])return a;var b=vd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in xd)return wd[a]=b[c];return\"\"}\nvar zd={topAbort:\"abort\",topAnimationEnd:yd(\"animationend\")||\"animationend\",topAnimationIteration:yd(\"animationiteration\")||\"animationiteration\",topAnimationStart:yd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:yd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ad={},Bd=0,Cd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Dd(a){Object.prototype.hasOwnProperty.call(a,Cd)||(a[Cd]=Bd++,Ad[a[Cd]]={});return Ad[a[Cd]]}function Ed(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Fd(a,b){var c=Ed(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ed(c)}}function Gd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Hd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Id={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Jd=null,Kd=null,Ld=null,Md=!1;\nfunction Nd(a,b){if(Md||null==Jd||Jd!==da())return null;var c=Jd;\"selectionStart\"in c&&Gd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Ld&&ea(Ld,c)?null:(Ld=c,a=S.getPooled(Id.select,Kd,a,b),a.type=\"select\",a.target=Jd,Ab(a),a)}\nvar Od={eventTypes:Id,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Dd(e);f=Ra.onSelect;for(var g=0;g<f.length;g++){var k=f[g];if(!e.hasOwnProperty(k)||!e[k]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?rb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Jd=e,Kd=b,Ld=null;break;case \"topBlur\":Ld=Kd=Jd=null;break;case \"topMouseDown\":Md=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Md=!1,Nd(c,d);case \"topSelectionChange\":if(Hd)break;\ncase \"topKeyDown\":case \"topKeyUp\":return Nd(c,d)}return null}};function Pd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Pd,{animationName:null,elapsedTime:null,pseudoElement:null});function Qd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Qd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Rd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Rd,{relatedTarget:null});\nfunction Sd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar Td={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Ud={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Vd(a,b,c,d){return S.call(this,a,b,c,d)}\nYc.augmentClass(Vd,{key:function(a){if(a.key){var b=Td[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Sd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Ud[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ad,charCode:function(a){return\"keypress\"===a.type?Sd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?Sd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function Wd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Wd,{dataTransfer:null});function Xd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Xd,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ad});function Yd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yd,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction Zd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Zd,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var $d={},ae={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};$d[a]=c;ae[b]=c});\nvar be={eventTypes:$d,extractEvents:function(a,b,c,d){var e=ae[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Sd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Vd;break;case \"topBlur\":case \"topFocus\":a=Rd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=bd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\nWd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Xd;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Pd;break;case \"topTransitionEnd\":a=Yd;break;case \"topScroll\":a=Yc;break;case \"topWheel\":a=Zd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Qd;break;default:a=S}b=a.getPooled(e,b,c,d);Ab(b);return b}};od=function(a,b,c,d){a=kb(a,b,c,d);lb(a);mb(!1)};ib.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nVa=tb.getFiberCurrentPropsFromNode;Wa=tb.getInstanceFromNode;Xa=tb.getNodeFromInstance;ib.injectEventPluginsByName({SimpleEventPlugin:be,EnterLeaveEventPlugin:dd,ChangeEventPlugin:Xc,SelectEventPlugin:Od,BeforeInputEventPlugin:ic});var ce=[],de=-1;function V(a){0>de||(a.current=ce[de],ce[de]=null,de--)}function W(a,b){de++;ce[de]=a.current;a.current=b}new Set;var ee={current:C},X={current:!1},fe=C;function ge(a){return he(a)?fe:ee.current}\nfunction ie(a,b){var c=a.type.contextTypes;if(!c)return C;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function he(a){return 2===a.tag&&null!=a.type.childContextTypes}function je(a){he(a)&&(V(X,a),V(ee,a))}\nfunction ke(a,b,c){null!=ee.cursor?D(\"168\"):void 0;W(ee,b,a);W(X,c,a)}function le(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",fd(a)||\"Unknown\",e);return A({},b,c)}function me(a){if(!he(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||C;fe=ee.current;W(ee,b,a);W(X,X.current,a);return!0}\nfunction ne(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var d=le(a,fe);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ee,a);W(ee,d,a)}else V(X,a);W(X,b,a)}\nfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction oe(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction pe(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):D(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function qe(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\nfunction re(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function se(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function te(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ue(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ve=null,we=null;\nfunction xe(a){return function(b){try{return a(b)}catch(c){}}}function ye(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ve=xe(function(a){return b.onCommitFiberRoot(c,a)});we=xe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function ze(a){\"function\"===typeof ve&&ve(a)}function Ae(a){\"function\"===typeof we&&we(a)}\nfunction Be(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ce(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\nfunction De(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Be(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Be(null))):a=null;a=a!==d?a:null;null===a?Ce(d,b):null===d.last||null===a.last?(Ce(d,b),Ce(a,b)):(Ce(d,b),a.last=b)}function Ee(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Le(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,k=c.first,h=!1;null!==k;){var r=k.expirationTime;if(r>f){var n=c.expirationTime;if(0===n||n>r)c.expirationTime=r;h||(h=!0,c.baseState=a)}else{h||(c.first=k.next,null===\nc.first&&(c.last=null));if(k.isReplace)a=Ee(k,d,a,e),g=!0;else if(r=Ee(k,d,a,e))a=g?A({},a,r):A(a,r),g=!1;k.isForced&&(c.hasForceUpdate=!0);null!==k.callback&&(r=c.callbackList,null===r&&(r=c.callbackList=[]),r.push(k))}k=k.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);h||(c.baseState=a);return a}\nfunction Me(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Ne(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:hd,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);De(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var f=b(c);De(c,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\na(c,f)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);De(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ge(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?ie(a,d):C;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\nb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:D(\"158\");var k=ge(a);d.props=g;d.state=a.memoizedState=e;d.refs=C;d.context=ie(a,k);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Le(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var k=b.memoizedProps,h=b.pendingProps;h||(h=k,null==h?D(\"159\"):void 0);var u=g.context,x=ge(b);x=ie(b,x);\"function\"!==typeof g.componentWillReceiveProps||k===h&&u===x||(u=g.state,g.componentWillReceiveProps(h,x),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Le(a,b,b.updateQueue,g,h,e):u;if(!(k!==h||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof g.componentDidUpdate||k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var F=h;if(null===k||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)F=!0;else{var L=b.stateNode,G=b.type;F=\"function\"===typeof L.shouldComponentUpdate?L.shouldComponentUpdate(F,e,x):G.prototype&&G.prototype.isPureReactComponent?!ea(k,F)||!ea(u,e):!0}F?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(h,e,x),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\nk===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,h),d(b,e));g.props=h;g.state=e;g.context=x;return F}}}var Oe=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106;function Pe(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Oe,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var Qe=Array.isArray,Re=\"function\"===typeof Symbol&&Symbol.iterator,Se,Te,Ue,Ve;\n\"function\"===typeof Symbol&&Symbol[\"for\"]?(Se=Symbol[\"for\"](\"react.element\"),Te=Symbol[\"for\"](\"react.call\"),Ue=Symbol[\"for\"](\"react.return\"),Ve=Symbol[\"for\"](\"react.fragment\")):(Se=60103,Te=60104,Ue=60105,Ve=60107);function We(a){if(null===a||\"undefined\"===typeof a)return null;a=Re&&a[Re]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Xe(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?D(\"110\"):void 0,d=b.stateNode);d?void 0:D(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===C?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?D(\"148\"):void 0;b._owner?void 0:D(\"149\",c)}return c}\nfunction Ye(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Ze(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var p=c.lastEffect;null!==p?(p.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=8}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c,d){if(a)return b=oe(b,c,d),b.index=0,b.sibling=null,b;b.expirationTime=d;b.effectTag=0;b.index=\n0;b.sibling=null;b.pendingProps=c;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=2,c):d;a.effectTag=2;return c}function k(a){b&&null===a.alternate&&(a.effectTag=2);return a}function h(a,b,c,d){if(null===b||6!==b.tag)return b=re(c,a.internalContextTag,d),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function r(a,b,c,d){if(null!==b&&b.type===c.type)return d=f(b,c.props,d),d.ref=Xe(b,c),d[\"return\"]=a,d;d=pe(c,a.internalContextTag,d);\nd.ref=Xe(b,c);d[\"return\"]=a;return d}function n(a,b,c,d){if(null===b||7!==b.tag)return b=se(c,a.internalContextTag,d),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||9!==b.tag)return b=te(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=f(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function u(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ue(c,a.internalContextTag,\nd),b[\"return\"]=a,b;b=f(b,c.children||[],d);b[\"return\"]=a;return b}function x(a,b,c,d,e){if(null===b||10!==b.tag)return b=qe(c,a.internalContextTag,d,e),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function F(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=re(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Se:if(b.type===Ve)return b=qe(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=pe(b,a.internalContextTag,c);\nc.ref=Xe(null,b);c[\"return\"]=a;return c;case Te:return b=se(b,a.internalContextTag,c),b[\"return\"]=a,b;case Ue:return c=te(b,a.internalContextTag,c),c.type=b.value,c[\"return\"]=a,c;case Oe:return b=ue(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Qe(b)||We(b))return b=qe(b,a.internalContextTag,c,null),b[\"return\"]=a,b;Ye(a,b)}return null}function L(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Se:return c.key===\ne?c.type===Ve?x(a,b,c.props.children,d,e):r(a,b,c,d):null;case Te:return c.key===e?n(a,b,c,d):null;case Ue:return null===e?y(a,b,c,d):null;case Oe:return c.key===e?u(a,b,c,d):null}if(Qe(c)||We(c))return null!==e?null:x(a,b,c,d,null);Ye(a,c)}return null}function G(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Se:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?x(b,a,d.props.children,e,d.key):\nr(b,a,d,e);case Te:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e);case Ue:return a=a.get(c)||null,y(b,a,d,e);case Oe:return a=a.get(null===d.key?c:d.key)||null,u(b,a,d,e)}if(Qe(d)||We(d))return a=a.get(c)||null,x(b,a,d,e,null);Ye(b,d)}return null}function T(a,f,v,k){for(var p=null,z=null,l=f,h=f=0,t=null;null!==l&&h<v.length;h++){l.index>h?(t=l,l=null):t=l.sibling;var w=L(a,l,v[h],k);if(null===w){null===l&&(l=t);break}b&&l&&null===w.alternate&&c(a,l);f=g(w,f,h);null===z?p=w:z.sibling=w;z=w;\nl=t}if(h===v.length)return d(a,l),p;if(null===l){for(;h<v.length;h++)if(l=F(a,v[h],k))f=g(l,f,h),null===z?p=l:z.sibling=l,z=l;return p}for(l=e(a,l);h<v.length;h++)if(t=G(l,a,h,v[h],k)){if(b&&null!==t.alternate)l[\"delete\"](null===t.key?h:t.key);f=g(t,f,h);null===z?p=t:z.sibling=t;z=t}b&&l.forEach(function(b){return c(a,b)});return p}function I(a,f,v,k){var p=We(v);\"function\"!==typeof p?D(\"150\"):void 0;v=p.call(v);null==v?D(\"151\"):void 0;for(var h=p=null,l=f,z=f=0,t=null,w=v.next();null!==l&&!w.done;z++,\nw=v.next()){l.index>z?(t=l,l=null):t=l.sibling;var n=L(a,l,w.value,k);if(null===n){l||(l=t);break}b&&l&&null===n.alternate&&c(a,l);f=g(n,f,z);null===h?p=n:h.sibling=n;h=n;l=t}if(w.done)return d(a,l),p;if(null===l){for(;!w.done;z++,w=v.next())w=F(a,w.value,k),null!==w&&(f=g(w,f,z),null===h?p=w:h.sibling=w,h=w);return p}for(l=e(a,l);!w.done;z++,w=v.next())if(w=G(l,a,z,w.value,k),null!==w){if(b&&null!==w.alternate)l[\"delete\"](null===w.key?z:w.key);f=g(w,f,z);null===h?p=w:h.sibling=w;h=w}b&&l.forEach(function(b){return c(a,\nb)});return p}return function(a,b,e,g){var h=\"object\"===typeof e&&null!==e;if(h)switch(e.$$typeof){case Se:a:{var v=e.key;for(h=b;null!==h;){if(h.key===v)if(10===h.tag?e.type===Ve:h.type===e.type){d(a,h.sibling);b=f(h,e.type===Ve?e.props.children:e.props,g);b.ref=Xe(h,e);b[\"return\"]=a;a=b;break a}else{d(a,h);break}else c(a,h);h=h.sibling}e.type===Ve?(e=qe(e.props.children,a.internalContextTag,g,e.key),e[\"return\"]=a,a=e):(g=pe(e,a.internalContextTag,g),g.ref=Xe(b,e),g[\"return\"]=a,a=g)}return k(a);\ncase Te:a:{for(h=e.key;null!==b;){if(b.key===h)if(7===b.tag){d(a,b.sibling);e=f(b,e,g);e[\"return\"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=se(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return k(a);case Ue:a:{if(null!==b)if(9===b.tag){d(a,b.sibling);b=f(b,null,g);b.type=e.value;b[\"return\"]=a;a=b;break a}else d(a,b);b=te(e,a.internalContextTag,g);b.type=e.value;b[\"return\"]=a;a=b}return k(a);case Oe:a:{for(h=e.key;null!==b;){if(b.key===h)if(4===b.tag&&b.stateNode.containerInfo===e.containerInfo&&\nb.stateNode.implementation===e.implementation){d(a,b.sibling);e=f(b,e.children||[],g);e[\"return\"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=ue(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return k(a)}if(\"string\"===typeof e||\"number\"===typeof e)return e=\"\"+e,null!==b&&6===b.tag?(d(a,b.sibling),e=f(b,e,g)):(d(a,b),e=re(e,a.internalContextTag,g)),e[\"return\"]=a,a=e,k(a);if(Qe(e))return T(a,b,e,g);if(We(e))return I(a,b,e,g);h&&Ye(a,e);if(\"undefined\"===typeof e)switch(a.tag){case 2:case 1:e=\na.type,D(\"152\",e.displayName||e.name||\"Component\")}return d(a,b)}}var $e=Ze(!0,!0),af=Ze(!1,!0),bf=Ze(!1,!1);\nfunction cf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.expirationTime)}function g(a,b,c,d){b.child=null===a?bf(b,b.child,c,d):a.child===b.child?$e(b,b.child,c,d):af(b,b.child,c,d)}function k(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){k(a,b);if(!c)return d&&ne(b,!1),n(a,b);c=b.stateNode;ed.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&ne(b,!0);return b.child}function r(a){var b=a.stateNode;b.pendingContext?ke(a,\nb.pendingContext,b.pendingContext!==b.context):b.context&&ke(a,b.context,!1);G(a,b.containerInfo)}function n(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=oe(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=oe(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function y(a,b){switch(b.tag){case 3:r(b);break;case 2:me(b);break;case 4:G(b,b.stateNode.containerInfo)}return null}var u=\na.shouldSetTextContent,x=a.useSyncScheduling,F=a.shouldDeprioritizeSubtree,L=b.pushHostContext,G=b.pushHostContainer,T=c.enterHydrationState,I=c.resetHydrationState,z=c.tryToClaimNextHydratableInstance;a=Ne(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var p=a.adoptClassInstance,v=a.constructClassInstance,t=a.mountClassInstance,Kb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return y(a,b);switch(b.tag){case 0:null!==a?\nD(\"155\"):void 0;var d=b.type,e=b.pendingProps,g=ge(b);g=ie(b,g);d=d(e,g);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=me(b),p(b,d),t(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=n(a,b);break a}d=ge(b);d=ie(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=me(b),d=void 0,null===\na?b.stateNode?D(\"153\"):(v(b,b.pendingProps),t(b,c),d=!0):d=Kb(a,b,c),h(a,b,d,e);case 3:return r(b),e=b.updateQueue,null!==e?(d=b.memoizedState,e=Le(a,b,e,null,null,c),d===e?(I(),b=n(a,b)):(d=e.element,g=b.stateNode,(null===a||null===a.child)&&g.hydrate&&T(b)?(b.effectTag|=2,b.child=bf(b,b.child,d,c)):(I(),f(a,b,d)),b.memoizedState=e,b=b.child)):(I(),b=n(a,b)),b;case 5:L(b);null===a&&z(b);e=b.type;var l=b.memoizedProps;d=b.pendingProps;null===d&&(d=l,null===d?D(\"154\"):void 0);g=null!==a?a.memoizedProps:\nnull;X.current||null!==d&&l!==d?(l=d.children,u(e,d)?l=null:g&&u(e,g)&&(b.effectTag|=16),k(a,b),2147483647!==c&&!x&&F(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,l),b.memoizedProps=d,b=b.child)):b=n(a,b);return b;case 6:return null===a&&z(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?D(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=\nnull===a?bf(b,b.stateNode,d,c):a.child===b.child?$e(b,b.stateNode,d,c):af(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;case 9:return null;case 4:a:{G(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?D(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=n(a,b);break a}null===a?b.child=af(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||\nb.memoizedProps===c){b=n(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:D(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:me(b);break;case 3:r(b);break;default:D(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return y(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction df(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,k=a.finalizeInitialChildren,h=a.prepareUpdate,r=a.persistence,n=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,x=b.popHostContainer,F=c.prepareToHydrateHostInstance,L=c.prepareToHydrateHostTextInstance,G=c.popHydrationState,T=void 0,I=void 0,z=void 0;a.mutation?(T=function(){},I=function(a,b,c){(b.updateQueue=c)&&d(b)},z=function(a,b,c,e){c!==e&&d(b)}):r?D(\"235\"):D(\"236\");\nreturn{completeWork:function(a,b,c){var p=b.pendingProps;if(null===p)p=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return je(b),null;case 3:x(b);V(X,b);V(ee,b);p=b.stateNode;p.pendingContext&&(p.context=p.pendingContext,p.pendingContext=null);if(null===a||null===a.child)G(b),b.effectTag&=-3;T(b);return null;case 5:y(b);c=n();var v=b.type;if(null!==a&&null!=b.stateNode){var l=a.memoizedProps,t=b.stateNode,r=u();t=\nh(t,v,l,p,c,r);I(a,b,t,v,l,p,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!p)return null===b.stateNode?D(\"166\"):void 0,null;a=u();if(G(b))F(b,c,a)&&d(b);else{a=e(v,p,c,a,b);a:for(l=b.child;null!==l;){if(5===l.tag||6===l.tag)g(a,l.stateNode);else if(4!==l.tag&&null!==l.child){l.child[\"return\"]=l;l=l.child;continue}if(l===b)break;for(;null===l.sibling;){if(null===l[\"return\"]||l[\"return\"]===b)break a;l=l[\"return\"]}l.sibling[\"return\"]=l[\"return\"];l=l.sibling}k(a,v,p,c)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)z(a,b,a.memoizedProps,p);else{if(\"string\"!==typeof p)return null===b.stateNode?D(\"166\"):void 0,null;a=n();c=u();G(b)?L(b)&&d(b):b.stateNode=f(p,a,c,b)}return null;case 7:(p=b.memoizedProps)?void 0:D(\"165\");b.tag=8;v=[];a:for((l=b.stateNode)&&(l[\"return\"]=b);null!==l;){if(5===l.tag||6===l.tag||4===l.tag)D(\"247\");else if(9===l.tag)v.push(l.type);else if(null!==l.child){l.child[\"return\"]=l;l=l.child;continue}for(;null===l.sibling;){if(null===\nl[\"return\"]||l[\"return\"]===b)break a;l=l[\"return\"]}l.sibling[\"return\"]=l[\"return\"];l=l.sibling}l=p.handler;p=l(p.props,v);b.child=$e(b,null!==a?a.child:null,p,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return x(b),T(b),null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction ef(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(v){b(a,v)}}function d(a){\"function\"===typeof Ae&&Ae(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(v){b(a,v)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:h&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||h&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\nb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?I(f,b.stateNode):T(f,b.stateNode);\nelse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var k=a.getPublicInstance,h=a.mutation;a=a.persistence;h||(a?D(\"235\"):D(\"236\"));var r=h.commitMount,n=h.commitUpdate,y=h.resetTextContent,u=h.commitTextUpdate,x=h.appendChild,F=h.appendChildToContainer,L=h.insertBefore,G=h.insertInContainerBefore,\nT=h.removeChild,I=h.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\nnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):L(b,e.stateNode,c):d?F(b,e.stateNode):x(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\na)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&n(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\nc,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Me(b,c);break;case 3:c=b.updateQueue;null!==c&&Me(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&r(c,\nb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:D(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(k(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var ff={};\nfunction gf(a){function b(a){a===ff?D(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:ff},f={current:ff},g={current:ff};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),k=b(e.current);\nd=c(k,a.type,d);k!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=ff;g.current=ff}}}\nfunction hf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,k=a.getNextHydratableSibling,h=a.getFirstHydratableChild,r=a.hydrateInstance,n=a.hydrateTextInstance,y=null,u=null,x=!1;return{enterHydrationState:function(a){u=\nh(a.stateNode.containerInfo);y=a;return x=!0},resetHydrationState:function(){u=y=null;x=!1},tryToClaimNextHydratableInstance:function(a){if(x){var d=u;if(d){if(!c(a,d)){d=k(d);if(!d||!c(a,d)){a.effectTag|=2;x=!1;y=a;return}b(y,u)}y=a;u=h(d)}else a.effectTag|=2,x=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=r(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return n(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\ny)return!1;if(!x)return d(a),x=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=k(c);d(a);u=y?k(a.stateNode):null;return!0}}}\nfunction jf(a){function b(a){Lb=ma=!0;var b=a.stateNode;b.current===a?D(\"177\"):void 0;b.isReadyForCommit=!1;ed.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;vg();for(q=c;null!==q;){var d=!1,e=void 0;try{for(;null!==q;){var f=q.effectTag;f&16&&wg(q);if(f&128){var g=q.alternate;null!==g&&xg(g)}switch(f&-242){case 2:He(q);q.effectTag&=-3;break;case 6:He(q);q.effectTag&=-3;Ie(q.alternate,q);break;case 4:Ie(q.alternate,\nq);break;case 8:Lc=!0,yg(q),Lc=!1}q=q.nextEffect}}catch(Mc){d=!0,e=Mc}d&&(null===q?D(\"178\"):void 0,k(q,e),null!==q&&(q=q.nextEffect))}zg();b.current=a;for(q=c;null!==q;){c=!1;d=void 0;try{for(;null!==q;){var h=q.effectTag;h&36&&Ag(q.alternate,q);h&128&&Bg(q);if(h&64)switch(e=q,f=void 0,null!==P&&(f=P.get(e),P[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=P.get(e),P[\"delete\"](e))),null==f?D(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\nbreak;case 3:null===ba&&(ba=f.error);break;default:D(\"157\")}var Fa=q.nextEffect;q.nextEffect=null;q=Fa}}catch(Mc){c=!0,d=Mc}c&&(null===q?D(\"178\"):void 0,k(q,d),null!==q&&(q=q.nextEffect))}ma=Lb=!1;\"function\"===typeof ze&&ze(a.stateNode);fa&&(fa.forEach(F),fa=null);null!==ba&&(a=ba,ba=null,v(a));b=b.current.expirationTime;0===b&&(na=P=null);return b}function c(a){for(;;){var b=og(a.alternate,a,J),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===J||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\ne.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\nif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=w(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function e(a){var b=ng(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function f(a){if(null!==P){if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=h(E)?e(E):d(E);else for(;null!==E&&!p();)E=h(E)?e(E):d(E)}else if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=d(E);else for(;null!==E&&!p();)E=d(E)}function g(a,b){ma?D(\"243\"):void 0;ma=!0;a.isReadyForCommit=\n!1;if(a!==eb||b!==J||null===E){for(;-1<de;)ce[de]=null,de--;fe=C;ee.current=C;X.current=!1;mg();eb=a;J=b;E=oe(eb.current,null,b)}var c=!1,d=null;try{f(b)}catch(Kc){c=!0,d=Kc}for(;c;){if(fb){ba=d;break}var g=E;if(null===g)fb=!0;else{var h=k(g,d);null===h?D(\"183\"):void 0;if(!fb){try{c=h;d=b;for(h=c;null!==g;){switch(g.tag){case 2:je(g);break;case 5:l(g);break;case 3:Fe(g);break;case 4:Fe(g)}if(g===h||g.alternate===h)break;g=g[\"return\"]}E=e(c);f(d)}catch(Kc){c=!0;d=Kc;continue}break}}}b=ba;fb=ma=!1;\nba=null;null!==b&&v(b);return a.isReadyForCommit?a.current.alternate:null}function k(a,b){var c=ed.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,r(a)&&(fb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=fd(g),c=g,e=!0):3===g.tag&&(c=g);if(r(g)){if(Lc||null!==fa&&(fa.has(g)||null!==g.alternate&&fa.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===na&&(na=new Set);na.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\ng._debugOwner,l=g._debugSource;var Fa=fd(g);var n=null;k&&(n=fd(k));k=l;Fa=\"\\n    in \"+(Fa||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:Fa=\"\"}h+=Fa;g=g[\"return\"]}while(g);g=h;a=fd(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Cg){console.error(Cg)}Lb?(null===fa&&(fa=new Set),\nfa.add(c)):F(c);return c}null===ba&&(ba=b);return null}function h(a){return null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))}function r(a){return null!==na&&(na.has(a)||null!==a.alternate&&na.has(a.alternate))}function n(){return 20*(((L()+100)/20|0)+1)}function y(a){return 0!==ja?ja:ma?Lb?1:J:!Dg||a.internalContextTag&1?n():1}function u(a,b){return x(a,b,!1)}function x(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||\na.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ma&&c===eb&&b<=J&&(E=eb=null,J=0);var d=b;Mb>Eg&&D(\"185\");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===M?(oa=M=c,c.nextScheduledRoot=c):(M=M.nextScheduledRoot=c,M.nextScheduledRoot=oa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}Ga||(ka?Nb&&z(c,1):1===d?I(1,null):gb||(gb=!0,Je(T)))}else break;a=a[\"return\"]}}function F(a){x(a,1,\n!0)}function L(){return Nc=((Ke()-Fg)/10|0)+2}function G(){var a=0,b=null;if(null!==M)for(var c=M,d=oa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===M?D(\"244\"):void 0;if(d===d.nextScheduledRoot){oa=M=d.nextScheduledRoot=null;break}else if(d===oa)oa=e=d.nextScheduledRoot,M.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===M){M=c;M.nextScheduledRoot=oa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===\na||e<a)a=e,b=d;if(d===M)break;c=d;d=d.nextScheduledRoot}}c=pa;null!==c&&c===b?Mb++:Mb=0;pa=b;Ob=a}function T(a){I(0,a)}function I(a,b){hb=b;for(G();null!==pa&&0!==Ob&&(0===a||Ob<=a)&&!Oc;)z(pa,Ob),G();null!==hb&&(gb=!1);null===pa||gb||(gb=!0,Je(T));hb=null;Oc=!1;Mb=0;if(Pb)throw a=Pc,Pc=null,Pb=!1,a;}function z(a,c){Ga?D(\"245\"):void 0;Ga=!0;if(c<=L()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=\nb(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(p()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Ga=!1}function p(){return null===hb||hb.timeRemaining()>Gg?!1:Oc=!0}function v(a){null===pa?D(\"246\"):void 0;pa.remainingExpirationTime=0;Pb||(Pb=!0,Pc=a)}var t=gf(a),Kb=hf(a),Fe=t.popHostContainer,l=t.popHostContext,mg=t.resetHostContainer,Ge=cf(a,t,Kb,u,y),w=Ge.beginWork,ng=Ge.beginFailedWork,og=df(a,t,Kb).completeWork;\nt=ef(a,k);var wg=t.commitResetTextContent,He=t.commitPlacement,yg=t.commitDeletion,Ie=t.commitWork,Ag=t.commitLifeCycles,Bg=t.commitAttachRef,xg=t.commitDetachRef,Ke=a.now,Je=a.scheduleDeferredCallback,Dg=a.useSyncScheduling,vg=a.prepareForCommit,zg=a.resetAfterCommit,Fg=Ke(),Nc=2,ja=0,ma=!1,E=null,eb=null,J=0,q=null,P=null,na=null,fa=null,ba=null,fb=!1,Lb=!1,Lc=!1,oa=null,M=null,gb=!1,Ga=!1,pa=null,Ob=0,Oc=!1,Pb=!1,Pc=null,hb=null,ka=!1,Nb=!1,Eg=1E3,Mb=0,Gg=1;return{computeAsyncExpiration:n,computeExpirationForFiber:y,\nscheduleWork:u,batchedUpdates:function(a,b){var c=ka;ka=!0;try{return a(b)}finally{(ka=c)||Ga||I(1,null)}},unbatchedUpdates:function(a){if(ka&&!Nb){Nb=!0;try{return a()}finally{Nb=!1}}return a()},flushSync:function(a){var b=ka;ka=!0;try{a:{var c=ja;ja=1;try{var d=a();break a}finally{ja=c}d=void 0}return d}finally{ka=b,Ga?D(\"187\"):void 0,I(1,null)}},deferredUpdates:function(a){var b=ja;ja=n();try{return a()}finally{ja=b}}}}\nfunction kf(a){function b(a){a=kd(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=jf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,r){var g=b.current;if(c){c=\nc._reactInternalFiber;var h;b:{2===gd(c)&&2===c.tag?void 0:D(\"170\");for(h=c;3!==h.tag;){if(he(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:D(\"171\")}h=h.stateNode.context}c=he(c)?le(c,h):h}else c=C;null===b.context?b.context=c:b.pendingContext=c;b=r;b=void 0===b?null:b;r=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);De(g,{expirationTime:r,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});f(g,r)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=ld(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return ye(A({},\na,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var lf=Object.freeze({default:kf}),mf=lf&&kf||lf,nf=mf[\"default\"]?mf[\"default\"]:mf,of=\"object\"===typeof performance&&\"function\"===typeof performance.now,pf=void 0;pf=of?function(){return performance.now()}:function(){return Date.now()};var qf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback){var rf=null,sf=!1,tf=!1,uf=0,vf=33,wf=33,xf;xf=of?{timeRemaining:function(){return uf-performance.now()}}:{timeRemaining:function(){return uf-Date.now()}};var yf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){a.source===window&&a.data===yf&&(sf=!1,a=rf,rf=null,null!==a&&a(xf))},!1);var zf=function(a){tf=!1;var b=a-uf+wf;b<wf&&vf<wf?(8>b&&(b=8),wf=b<vf?vf:b):vf=b;uf=a+wf;sf||(sf=!0,\nwindow.postMessage(yf,\"*\"))};qf=function(a){rf=a;tf||(tf=!0,requestAnimationFrame(zf));return 0}}else qf=requestIdleCallback;else qf=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};\nvar Af=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Bf={},Cf={};function Df(a){if(Cf.hasOwnProperty(a))return!0;if(Bf.hasOwnProperty(a))return!1;if(Af.test(a))return Cf[a]=!0;Bf[a]=!0;return!1}\nfunction Ef(a,b,c){var d=ua(b);if(d&&ta(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Ff(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Gf(a,b,ta(b,c)?c:null)}\nfunction Gf(a,b,c){Df(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Ff(a,b){var c=ua(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\nfunction Hf(a,b){var c=b.value,d=b.checked;return A({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function If(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\nfunction Jf(a,b){var c=b.checked;null!=c&&Ef(a,\"checked\",c||!1);c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Kf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Lf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\nfunction Mf(a,b){a=A({children:void 0},b);if(b=Lf(b.children))a.children=b;return a}function Nf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Of(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Pf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Qf(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"),d=c);a._wrapperState={initialValue:\"\"+d}}\nfunction Rf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Sf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Tf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Uf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Vf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Uf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Wf=void 0,Xf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Tf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Wf=Wf||document.createElement(\"div\");Wf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Wf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),Yf=/[\"'&<>]/;\nfunction Zf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nm.canUseDOM&&(\"textContent\"in document.documentElement||(Zf=function(a,b){if(3===a.nodeType)a.nodeValue=b;else{if(\"boolean\"===typeof b||\"number\"===typeof b)b=\"\"+b;else{b=\"\"+b;var c=Yf.exec(b);if(c){var d=\"\",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c=\"\\x26quot;\";break;case 38:c=\"\\x26amp;\";break;case 39:c=\"\\x26#x27;\";break;case 60:c=\"\\x26lt;\";break;case 62:c=\"\\x26gt;\";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Xf(a,b)}}));\nvar $f=Zf,ag={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},bg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(ag).forEach(function(a){bg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);ag[b]=ag[a]})});\nfunction cg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||ag.hasOwnProperty(e)&&ag[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var dg=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction eg(a,b,c){b&&(dg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction fg(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var gg=Tf.html,hg=B.thatReturns(\"\");\nfunction ig(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Dd(a);b=Ra[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topWheel\"===e?yc(\"wheel\")?U(\"topWheel\",\"wheel\",a):yc(\"mousewheel\")?U(\"topWheel\",\"mousewheel\",a):U(\"topWheel\",\"DOMMouseScroll\",a):\"topScroll\"===e?sd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(sd(\"topFocus\",\"focus\",a),sd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&sd(\"topCancel\",\"cancel\",a),c.topCancel=\n!0):\"topClose\"===e?(yc(\"close\",!0)&&sd(\"topClose\",\"close\",a),c.topClose=!0):zd.hasOwnProperty(e)&&U(e,zd[e],a),c[e]=!0)}}\nvar jg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"};function kg(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===gg&&(d=Uf(a));d===gg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function lg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction pg(a,b,c,d){var e=fg(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":If(a,c);f=Hf(a,c);U(\"topInvalid\",\"invalid\",a);\nig(d,\"onChange\");break;case \"option\":f=Mf(a,c);break;case \"select\":Of(a,c);f=A({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);ig(d,\"onChange\");break;case \"textarea\":Qf(a,c);f=Pf(a,c);U(\"topInvalid\",\"invalid\",a);ig(d,\"onChange\");break;default:f=c}eg(b,f,hg);var g=f,k;for(k in g)if(g.hasOwnProperty(k)){var h=g[k];\"style\"===k?cg(a,h,hg):\"dangerouslySetInnerHTML\"===k?(h=h?h.__html:void 0,null!=h&&Xf(a,h)):\"children\"===k?\"string\"===typeof h?(\"textarea\"!==b||\"\"!==h)&&$f(a,h):\"number\"===typeof h&&$f(a,\n\"\"+h):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(Qa.hasOwnProperty(k)?null!=h&&ig(d,k):e?Gf(a,k,h):null!=h&&Ef(a,k,h))}switch(b){case \"input\":Bc(a);Kf(a,c);break;case \"textarea\":Bc(a);Sf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Nf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Nf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\nB)}}\nfunction qg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Hf(a,c);d=Hf(a,d);f=[];break;case \"option\":c=Mf(a,c);d=Mf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Pf(a,c);d=Pf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=B)}eg(b,d,hg);var g,k;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(k in b=c[g],b)b.hasOwnProperty(k)&&(a||(a={}),a[k]=\n\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Qa.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var h=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&h!==b&&(null!=h||null!=b))if(\"style\"===g)if(b){for(k in b)!b.hasOwnProperty(k)||h&&h.hasOwnProperty(k)||(a||(a={}),a[k]=\"\");for(k in h)h.hasOwnProperty(k)&&b[k]!==h[k]&&(a||(a={}),a[k]=h[k])}else a||(f||(f=[]),f.push(g,a)),a=h;else\"dangerouslySetInnerHTML\"===\ng?(h=h?h.__html:void 0,b=b?b.__html:void 0,null!=h&&b!==h&&(f=f||[]).push(g,\"\"+h)):\"children\"===g?b===h||\"string\"!==typeof h&&\"number\"!==typeof h||(f=f||[]).push(g,\"\"+h):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Qa.hasOwnProperty(g)?(null!=h&&ig(e,g),f||b===h||(f=[])):(f=f||[]).push(g,h))}a&&(f=f||[]).push(\"style\",a);return f}\nfunction rg(a,b,c,d,e){fg(c,d);d=fg(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],k=b[f+1];\"style\"===g?cg(a,k,hg):\"dangerouslySetInnerHTML\"===g?Xf(a,k):\"children\"===g?$f(a,k):d?null!=k?Gf(a,g,k):a.removeAttribute(g):null!=k?Ef(a,g,k):Ff(a,g)}switch(c){case \"input\":Jf(a,e);Cc(a);break;case \"textarea\":Rf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Nf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=\ne.defaultValue?Nf(a,!!e.multiple,e.defaultValue,!0):Nf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction sg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":If(a,c);U(\"topInvalid\",\"invalid\",a);ig(e,\"onChange\");break;case \"select\":Of(a,c);\nU(\"topInvalid\",\"invalid\",a);ig(e,\"onChange\");break;case \"textarea\":Qf(a,c),U(\"topInvalid\",\"invalid\",a),ig(e,\"onChange\")}eg(b,c,hg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Qa.hasOwnProperty(g)&&null!=f&&ig(e,g));switch(b){case \"input\":Bc(a);Kf(a,c);break;case \"textarea\":Bc(a);Sf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=B)}return d}function tg(a,b){return a.nodeValue!==b}\nvar ug=Object.freeze({createElement:kg,createTextNode:lg,setInitialProperties:pg,diffProperties:qg,updateProperties:rg,diffHydratedProperties:sg,diffHydratedText:tg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Jf(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=sb(d);e?void 0:D(\"90\");Jf(d,e)}}}break;case \"textarea\":Rf(a,c);break;case \"select\":b=c.value,null!=b&&Nf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(ug);var Hg=null,Ig=null;function Jg(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction Kg(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\nvar Z=nf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Vf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Vf(a,b)}return a},getChildHostContext:function(a,b){return Vf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Hg=pd;var a=da();if(Gd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(x){b=null;break a}var f=0,g=-1,k=-1,h=0,r=0,n=a,y=null;b:for(;;){for(var u;;){n!==b||0!==d&&3!==n.nodeType||(g=f+d);n!==e||0!==c&&3!==n.nodeType||(k=f+c);3===n.nodeType&&(f+=n.nodeValue.length);if(null===(u=n.firstChild))break;y=n;n=u}for(;;){if(n===a)break b;y===b&&++h===d&&(g=f);y===e&&++r===c&&(k=f);if(null!==(u=n.nextSibling))break;n=y;y=n.parentNode}n=u}b=-1===g||-1===k?null:\n{start:g,end:k}}else b=null}b=b||{start:0,end:0}}else b=null;Ig={focusedElem:a,selectionRange:b};qd(!1)},resetAfterCommit:function(){var a=Ig,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ha(document.documentElement,c)){if(Gd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=Fd(c,a);var f=Fd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\na.top}Ig=null;qd(Hg);Hg=null},createInstance:function(a,b,c,d,e){a=kg(a,b,c,d);a[O]=e;a[pb]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return qg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\ntypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=lg(a,b);a[O]=d;return a},now:pf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[pb]=e;rg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\nb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\nb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[O]=f;a[pb]=c;return sg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[O]=c;return tg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\ndidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:qf,useSyncScheduling:!0});rc=Z.batchedUpdates;\nfunction Lg(a,b,c,d,e){Jg(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Kg(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Mg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Jg(b)?void 0:D(\"200\");return Pe(a,b,null,c)}\nfunction Ng(a,b){this._reactRootContainer=Z.createContainer(a,b)}Ng.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Ng.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\nvar Og={createPortal:Mg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?D(\"188\"):D(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Lg(null,a,b,!0,c)},render:function(a,b,c){return Lg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Lg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Jg(a)?void 0:\nD(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Lg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Mg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:nb,EventPluginRegistry:Ua,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:tb,ReactDOMEventListener:td}};\nZ.injectIntoDevTools({findFiberByHostInstance:qb,bundleType:0,version:\"16.1.1\",rendererPackageName:\"react-dom\"});var Pg=Object.freeze({default:Og}),Qg=Pg&&Og||Pg;module.exports=Qg[\"default\"]?Qg[\"default\"]:Qg;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.1.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar m=__webpack_require__(46),n=__webpack_require__(65),p=__webpack_require__(45);\nfunction q(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar r={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function t(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}t.prototype.isReactComponent={};t.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?q(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};t.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction u(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}function v(){}v.prototype=t.prototype;var w=u.prototype=new v;w.constructor=u;m(w,t.prototype);w.isPureReactComponent=!0;function x(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}var y=x.prototype=new v;y.constructor=x;m(y,t.prototype);y.unstable_isAsyncReactComponent=!0;y.render=function(){return this.props.children};\nvar z={current:null},A=Object.prototype.hasOwnProperty,B=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,C={key:!0,ref:!0,__self:!0,__source:!0};\nfunction D(a,b,e){var d,c={},h=null,k=null;if(null!=b)for(d in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(h=\"\"+b.key),b)A.call(b,d)&&!C.hasOwnProperty(d)&&(c[d]=b[d]);var f=arguments.length-2;if(1===f)c.children=e;else if(1<f){for(var g=Array(f),l=0;l<f;l++)g[l]=arguments[l+2];c.children=g}if(a&&a.defaultProps)for(d in f=a.defaultProps,f)void 0===c[d]&&(c[d]=f[d]);return{$$typeof:B,type:a,key:h,ref:k,props:c,_owner:z.current}}function E(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===B}\nvar F=\"function\"===typeof Symbol&&Symbol.iterator,G=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,H=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106;function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var I=/\\/+/g,J=[];\nfunction K(a,b,e,d){if(J.length){var c=J.pop();c.result=a;c.keyPrefix=b;c.func=e;c.context=d;c.count=0;return c}return{result:a,keyPrefix:b,func:e,context:d,count:0}}function L(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>J.length&&J.push(a)}\nfunction M(a,b,e,d){var c=typeof a;if(\"undefined\"===c||\"boolean\"===c)a=null;if(null===a||\"string\"===c||\"number\"===c||\"object\"===c&&a.$$typeof===G||\"object\"===c&&a.$$typeof===H)return e(d,a,\"\"===b?\".\"+N(a,0):b),1;var h=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var f=b+N(c,k);h+=M(c,f,e,d)}else if(f=F&&a[F]||a[\"@@iterator\"],\"function\"===typeof f)for(a=f.call(a),k=0;!(c=a.next()).done;)c=c.value,f=b+N(c,k++),h+=M(c,f,e,d);else\"object\"===c&&(e=\"\"+a,q(\"31\",\"[object Object]\"===\ne?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return h}function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function O(a,b){a.func.call(a.context,b,a.count++)}\nfunction P(a,b,e){var d=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?Q(a,d,e,p.thatReturnsArgument):null!=a&&(E(a)&&(b=c+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(I,\"$\\x26/\")+\"/\")+e,a={$$typeof:B,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),d.push(a))}function Q(a,b,e,d,c){var h=\"\";null!=e&&(h=(\"\"+e).replace(I,\"$\\x26/\")+\"/\");b=K(b,h,d,c);null==a||M(a,\"\",P,b);L(b)}\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.fragment\");\nvar R={Children:{map:function(a,b,e){if(null==a)return a;var d=[];Q(a,d,null,b,e);return d},forEach:function(a,b,e){if(null==a)return a;b=K(null,null,b,e);null==a||M(a,\"\",O,b);L(b)},count:function(a){return null==a?0:M(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];Q(a,b,null,p.thatReturnsArgument);return b},only:function(a){E(a)?void 0:q(\"143\");return a}},Component:t,PureComponent:u,unstable_AsyncComponent:x,createElement:D,cloneElement:function(a,b,e){var d=m({},a.props),c=a.key,h=a.ref,\nk=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,k=z.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(g in b)A.call(b,g)&&!C.hasOwnProperty(g)&&(d[g]=void 0===b[g]&&void 0!==f?f[g]:b[g])}var g=arguments.length-2;if(1===g)d.children=e;else if(1<g){f=Array(g);for(var l=0;l<g;l++)f[l]=arguments[l+2];d.children=f}return{$$typeof:B,type:a.type,key:c,ref:h,props:d,_owner:k}},createFactory:function(a){var b=D.bind(null,a);b.type=a;return b},isValidElement:E,\nversion:\"16.1.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:z,assign:m}},S=Object.freeze({default:R}),T=S&&R||S;module.exports=T[\"default\"]?T[\"default\"]:T;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(165);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__(11) && __webpack_require__(23)) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  __webpack_require__(11)   // present with an AMD loader\n);\n\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(174);\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return seedrandom; }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(70);\nmodule.exports = __webpack_require__(69);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.53375487.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/MNIST_React_TensorFlowJS/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 175);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ccc85af25e9dedc6c1e5","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"./tensor\");\nfunction assertArgumentIsTensor(x, argName, functionName) {\n    assert(x instanceof tensor_1.Tensor, \"Argument '\" + argName + \"' passed to '\" + functionName + \"' must be a Tensor, \" +\n        (\"but got \" + typeof x + \".\"));\n}\nfunction assertArgumentsAreTensors(args, functionName) {\n    var _loop_1 = function (argName) {\n        var arg = args[argName];\n        if (Array.isArray(arg)) {\n            arg.forEach(function (t, i) {\n                assertArgumentIsTensor(t, argName + \"[\" + i + \"]\", functionName);\n            });\n        }\n        else {\n            assertArgumentIsTensor(arg, argName, functionName);\n        }\n    };\n    for (var argName in args) {\n        _loop_1(argName);\n    }\n}\nexports.assertArgumentsAreTensors = assertArgumentsAreTensors;\nfunction shuffle(array) {\n    var counter = array.length;\n    var temp = 0;\n    var index = 0;\n    while (counter > 0) {\n        index = (Math.random() * counter) | 0;\n        counter--;\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\nexports.shuffle = shuffle;\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexports.clamp = clamp;\nfunction randUniform(a, b) {\n    return Math.random() * (b - a) + a;\n}\nexports.randUniform = randUniform;\nfunction distSquared(a, b) {\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        var diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\nexports.distSquared = distSquared;\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(msg);\n    }\n}\nexports.assert = assert;\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix) {\n    if (errorMessagePrefix === void 0) { errorMessagePrefix = ''; }\n    assert(arraysEqual(shapeA, shapeB), errorMessagePrefix + (\" Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n}\nexports.assertShapesMatch = assertShapesMatch;\nfunction assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, \" The dtypes of the first(\" + a.dtype + \") and\" +\n        (\" second(\" + b.dtype + \") input must match\"));\n}\nexports.assertTypesMatch = assertTypesMatch;\nfunction flatten(arr, ret) {\n    if (ret === void 0) { ret = []; }\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; ++i) {\n            flatten(arr[i], ret);\n        }\n    }\n    else {\n        ret.push(arr);\n    }\n    return ret;\n}\nexports.flatten = flatten;\nfunction inferShape(val) {\n    if (isTypedArray(val)) {\n        return [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return [];\n    }\n    var shape = [];\n    while (val instanceof Array) {\n        shape.push(val.length);\n        val = val[0];\n    }\n    return shape;\n}\nexports.inferShape = inferShape;\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        return 1;\n    }\n    var size = shape[0];\n    for (var i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexports.sizeFromShape = sizeFromShape;\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nexports.isScalarShape = isScalarShape;\nfunction arraysEqual(n1, n2) {\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (var i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.arraysEqual = arraysEqual;\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nexports.isInt = isInt;\nfunction tanh(x) {\n    if (Math.tanh != null) {\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        var e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexports.tanh = tanh;\nfunction sizeToSquarishShape(size) {\n    for (var a = Math.floor(Math.sqrt(size)); a > 1; --a) {\n        if (size % a === 0) {\n            return [a, size / a];\n        }\n    }\n    return [1, size];\n}\nexports.sizeToSquarishShape = sizeToSquarishShape;\nfunction createShuffledIndices(n) {\n    var shuffledIndices = new Uint32Array(n);\n    for (var i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexports.createShuffledIndices = createShuffledIndices;\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexports.rightPad = rightPad;\nfunction repeatedTry(checkFn, delayFn, maxCounter) {\n    if (delayFn === void 0) { delayFn = function (counter) { return 0; }; }\n    return new Promise(function (resolve, reject) {\n        var tryCount = 0;\n        var tryFn = function () {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            var nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        setTimeout(tryFn, 0);\n    });\n}\nexports.repeatedTry = repeatedTry;\nfunction getQueryParams(queryString) {\n    var params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n        var t = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            t[_i - 1] = arguments[_i];\n        }\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nexports.getQueryParams = getQueryParams;\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction inferFromImplicitShape(shape, size) {\n    var shapeProd = 1;\n    var implicitIdx = -1;\n    for (var i = 0; i < shape.length; ++i) {\n        if (shape[i] > 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(\"Shapes can only have 1 implicit size. \" +\n                    (\"Found - 1 at dim \" + implicitIdx + \" and dim \" + i));\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] <= 0) {\n            throw Error(\"Shapes can not be <= 0. Found \" + shape[i] + \" at dim \" + i);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(\"Size(\" + size + \") must match the product of shape \" + shape);\n        }\n        return shape;\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(\"The implicit shape can't be a fractional number. \" +\n            (\"Got \" + size + \" / \" + shapeProd));\n    }\n    var newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexports.inferFromImplicitShape = inferFromImplicitShape;\nfunction squeezeShape(shape, axis) {\n    var newShape = [];\n    var keptDims = [];\n    var j = 0;\n    for (var i = 0; i < shape.length; ++i) {\n        if (axis != null) {\n            if (axis[j] === i && shape[i] > 1) {\n                throw new Error(\"Can't squeeze axis \" + i + \" since its dim '\" + shape[i] + \"' is not 1\");\n            }\n            if ((axis[j] == null || axis[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axis[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] > 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape: newShape, keptDims: keptDims };\n}\nexports.squeezeShape = squeezeShape;\nfunction getTypedArrayFromDType(dtype, size) {\n    var values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n    return values;\n}\nexports.getTypedArrayFromDType = getTypedArrayFromDType;\nfunction isTensorInList(tensor, tensorList) {\n    for (var i = 0; i < tensorList.length; i++) {\n        if (tensorList[i].id === tensor.id) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isTensorInList = isTensorInList;\nfunction checkForNaN(vals, dtype, name) {\n    if (dtype !== 'float32') {\n        return;\n    }\n    for (var i = 0; i < vals.length; i++) {\n        if (isNaN(vals[i])) {\n            throw Error(\"The result of the '\" + name + \"' has NaNs.\");\n        }\n    }\n}\nexports.checkForNaN = checkForNaN;\nfunction flattenNameArrayMap(nameArrayMap, keys) {\n    var xs = [];\n    if (nameArrayMap instanceof tensor_1.Tensor) {\n        xs.push(nameArrayMap);\n    }\n    else {\n        var xMap = nameArrayMap;\n        for (var i = 0; i < keys.length; i++) {\n            xs.push(xMap[keys[i]]);\n        }\n    }\n    return xs;\n}\nexports.flattenNameArrayMap = flattenNameArrayMap;\nfunction unflattenToNameArrayMap(keys, flatArrays) {\n    if (keys.length !== flatArrays.length) {\n        throw new Error(\"Cannot unflatten Tensor[], keys and arrays are not of same length.\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = flatArrays[i];\n    }\n    return result;\n}\nexports.unflattenToNameArrayMap = unflattenToNameArrayMap;\nfunction hasEncodingLoss(oldType, newType) {\n    if (newType === 'float32') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexports.hasEncodingLoss = hasEncodingLoss;\nfunction copyTypedArray(array, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(array);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(array);\n    }\n    else if (dtype === 'bool') {\n        var bool = new Uint8Array(array.length);\n        for (var i = 0; i < bool.length; ++i) {\n            if (Math.round(array[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n}\nexports.copyTypedArray = copyTypedArray;\nfunction isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nexports.isTypedArray = isTypedArray;\nfunction bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nexports.bytesPerElement = bytesPerElement;\nfunction isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexports.isFunction = isFunction;\nfunction extractTensorsFromContainer(result) {\n    return extractTensorsFromAny(result);\n}\nexports.extractTensorsFromContainer = extractTensorsFromContainer;\nfunction extractTensorsFromAny(result) {\n    if (result == null) {\n        return [];\n    }\n    if (result instanceof tensor_1.Tensor) {\n        return [result];\n    }\n    var list = [];\n    var resultObj = result;\n    if (!isIterable(resultObj)) {\n        return [];\n    }\n    for (var k in resultObj) {\n        var sublist = flatten(resultObj[k]).filter(function (x) { return x instanceof tensor_1.Tensor; });\n        list.push.apply(list, sublist);\n    }\n    return list;\n}\nexports.extractTensorsFromAny = extractTensorsFromAny;\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar device_util = require(\"./device_util\");\nvar doc_1 = require(\"./doc\");\nvar engine_1 = require(\"./engine\");\nvar util = require(\"./util\");\nvar Type;\n(function (Type) {\n    Type[Type[\"NUMBER\"] = 0] = \"NUMBER\";\n    Type[Type[\"BOOLEAN\"] = 1] = \"BOOLEAN\";\n    Type[Type[\"STRING\"] = 2] = \"STRING\";\n})(Type = exports.Type || (exports.Type = {}));\nexports.URL_PROPERTIES = [\n    { name: 'DEBUG', type: Type.BOOLEAN },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', type: Type.BOOLEAN },\n    { name: 'WEBGL_VERSION', type: Type.NUMBER },\n    { name: 'WEBGL_FLOAT_TEXTURE_ENABLED', type: Type.BOOLEAN }, {\n        name: 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED',\n        type: Type.BOOLEAN\n    },\n    { name: 'BACKEND', type: Type.STRING }\n];\nfunction hasExtension(gl, extensionName) {\n    var ext = gl.getExtension(extensionName);\n    return ext != null;\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion === 0) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    var tempCanvas = document.createElement('canvas');\n    if (webGLVersion === 1) {\n        return (tempCanvas.getContext('webgl') ||\n            tempCanvas.getContext('experimental-webgl'));\n    }\n    return tempCanvas.getContext('webgl2');\n}\nfunction loseContext(gl) {\n    if (gl != null) {\n        var loseContextExtension = gl.getExtension('WEBGL_lose_context');\n        if (loseContextExtension == null) {\n            throw new Error('Extension WEBGL_lose_context not supported on this browser.');\n        }\n        loseContextExtension.loseContext();\n    }\n}\nfunction isWebGLVersionEnabled(webGLVersion) {\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (gl != null) {\n        loseContext(gl);\n        return true;\n    }\n    return false;\n}\nfunction getWebGLDisjointQueryTimerVersion(webGLVersion) {\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    var queryTimerVersion;\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n        webGLVersion === 2) {\n        queryTimerVersion = 2;\n    }\n    else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n        queryTimerVersion = 1;\n    }\n    else {\n        queryTimerVersion = 0;\n    }\n    if (gl != null) {\n        loseContext(gl);\n    }\n    return queryTimerVersion;\n}\nfunction isFloatTextureReadPixelsEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n    }\n    else {\n        if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n            return false;\n        }\n    }\n    var frameBuffer = gl.createFramebuffer();\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var internalFormat = webGLVersion === 2 ? gl.RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var frameBufferComplete = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, new Float32Array(4));\n    var readPixelsNoError = gl.getError() === gl.NO_ERROR;\n    loseContext(gl);\n    return frameBufferComplete && readPixelsNoError;\n}\nfunction isWebGLGetBufferSubDataAsyncExtensionEnabled(webGLVersion) {\n    if (webGLVersion > 0) {\n        return false;\n    }\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    var gl = getWebGLRenderingContext(webGLVersion);\n    var isEnabled = hasExtension(gl, 'WEBGL_get_buffer_sub_data_async');\n    loseContext(gl);\n    return isEnabled;\n}\nvar Environment = (function () {\n    function Environment(features) {\n        this.features = {};\n        this.registry = {};\n        if (features != null) {\n            this.features = features;\n        }\n        if (this.get('DEBUG')) {\n            console.warn('Debugging mode is ON. The output of every math call will ' +\n                'be downloaded to CPU and checked for NaNs. ' +\n                'This significantly impacts performance.');\n        }\n    }\n    Environment.setBackend = function (backendType, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        if (!(backendType in exports.ENV.registry)) {\n            throw new Error(\"Backend type '\" + backendType + \"' not found in registry\");\n        }\n        exports.ENV.initBackend(backendType, safeMode);\n    };\n    Environment.getBackend = function () {\n        exports.ENV.initDefaultBackend();\n        return exports.ENV.currentBackend;\n    };\n    Environment.memory = function () {\n        return exports.ENV.engine.memory();\n    };\n    Environment.prototype.get = function (feature) {\n        if (feature in this.features) {\n            return this.features[feature];\n        }\n        this.features[feature] = this.evaluateFeature(feature);\n        return this.features[feature];\n    };\n    Environment.prototype.set = function (feature, value) {\n        this.features[feature] = value;\n    };\n    Environment.prototype.getBestBackendType = function () {\n        var _this = this;\n        if (Object.keys(this.registry).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        var sortedBackends = Object.keys(this.registry)\n            .map(function (name) {\n            return { name: name, entry: _this.registry[name] };\n        })\n            .sort(function (a, b) {\n            return b.entry.priority - a.entry.priority;\n        });\n        return sortedBackends[0].name;\n    };\n    Environment.prototype.evaluateFeature = function (feature) {\n        if (feature === 'DEBUG') {\n            return false;\n        }\n        else if (feature === 'BACKEND') {\n            return this.getBestBackendType();\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') {\n            var webGLVersion = this.get('WEBGL_VERSION');\n            if (webGLVersion === 0) {\n                return 0;\n            }\n            return getWebGLDisjointQueryTimerVersion(webGLVersion);\n        }\n        else if (feature === 'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') {\n            return this.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n                !device_util.isMobile();\n        }\n        else if (feature === 'WEBGL_VERSION') {\n            if (isWebGLVersionEnabled(2)) {\n                return 2;\n            }\n            else if (isWebGLVersionEnabled(1)) {\n                return 1;\n            }\n            return 0;\n        }\n        else if (feature === 'WEBGL_FLOAT_TEXTURE_ENABLED') {\n            return isFloatTextureReadPixelsEnabled(this.get('WEBGL_VERSION'));\n        }\n        else if (feature === 'WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED') {\n            return isWebGLGetBufferSubDataAsyncExtensionEnabled(this.get('WEBGL_VERSION'));\n        }\n        throw new Error(\"Unknown feature \" + feature + \".\");\n    };\n    Environment.prototype.setFeatures = function (features) {\n        this.features = features;\n    };\n    Environment.prototype.reset = function () {\n        this.features = getFeaturesFromURL();\n        if (this.globalEngine != null) {\n            this.globalEngine.dispose();\n            this.globalEngine = null;\n        }\n    };\n    Environment.prototype.initBackend = function (backendType, safeMode) {\n        if (safeMode === void 0) { safeMode = false; }\n        this.currentBackend = backendType;\n        if (this.globalEngine != null) {\n            this.globalEngine.dispose();\n        }\n        var backend = exports.ENV.findBackend(backendType);\n        this.globalEngine = new engine_1.Engine(backend, safeMode);\n    };\n    Environment.prototype.findBackend = function (name) {\n        if (!(name in this.registry)) {\n            return null;\n        }\n        return this.registry[name].backend;\n    };\n    Environment.prototype.registerBackend = function (name, factory, priority) {\n        if (priority === void 0) { priority = 1; }\n        if (name in this.registry) {\n            console.warn(name + \" backend was already registered\");\n        }\n        try {\n            var backend = factory();\n            this.registry[name] = { backend: backend, priority: priority };\n            return true;\n        }\n        catch (err) {\n            console.warn(err.message);\n            return false;\n        }\n    };\n    Environment.prototype.removeBackend = function (name) {\n        if (!(name in this.registry)) {\n            throw new Error(name + \" backend not found in registry\");\n        }\n        this.registry[name].backend.dispose();\n        delete this.registry[name];\n    };\n    Object.defineProperty(Environment.prototype, \"engine\", {\n        get: function () {\n            this.initDefaultBackend();\n            return this.globalEngine;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Environment.prototype.initDefaultBackend = function () {\n        if (this.globalEngine == null) {\n            this.initBackend(exports.ENV.get('BACKEND'), false);\n        }\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Environment' })\n    ], Environment, \"setBackend\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Environment' })\n    ], Environment, \"getBackend\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Environment, \"memory\", null);\n    return Environment;\n}());\nexports.Environment = Environment;\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\nfunction getFeaturesFromURL() {\n    var features = {};\n    if (typeof window === 'undefined') {\n        return features;\n    }\n    var urlParams = util.getQueryParams(window.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var urlFlags_1 = {};\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n            var _a = keyValue.split(':'), key = _a[0], value = _a[1];\n            urlFlags_1[key] = value;\n        });\n        exports.URL_PROPERTIES.forEach(function (urlProperty) {\n            if (urlProperty.name in urlFlags_1) {\n                console.log(\"Setting feature override from URL \" + urlProperty.name + \": \" +\n                    (\"\" + urlFlags_1[urlProperty.name]));\n                if (urlProperty.type === Type.NUMBER) {\n                    features[urlProperty.name] = +urlFlags_1[urlProperty.name];\n                }\n                else if (urlProperty.type === Type.BOOLEAN) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name] === 'true';\n                }\n                else if (urlProperty.type === Type.STRING) {\n                    features[urlProperty.name] = urlFlags_1[urlProperty.name];\n                }\n                else {\n                    console.warn(\"Unknown URL param: \" + urlProperty.name + \".\");\n                }\n            }\n        });\n    }\n    return features;\n}\nfunction getGlobalNamespace() {\n    var ns;\n    if (typeof (window) !== 'undefined') {\n        ns = window;\n    }\n    else if (typeof (global) !== 'undefined') {\n        ns = global;\n    }\n    else {\n        throw new Error('Could not find a global object');\n    }\n    return ns;\n}\nfunction getOrMakeEnvironment() {\n    var ns = getGlobalNamespace();\n    ns.ENV = ns.ENV || new Environment(getFeaturesFromURL());\n    return ns.ENV;\n}\nexports.ENV = getOrMakeEnvironment();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/environment.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction doc(info) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n}\nexports.doc = doc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/doc.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./kernels/backend_webgl\");\nrequire(\"./kernels/backend_cpu\");\nvar browser_util_1 = require(\"./browser_util\");\nvar environment = require(\"./environment\");\nexports.environment = environment;\nvar environment_1 = require(\"./environment\");\nvar gpgpu_util = require(\"./kernels/webgl/gpgpu_util\");\nvar webgl_util = require(\"./kernels/webgl/webgl_util\");\nvar test_util = require(\"./test_util\");\nexports.test_util = test_util;\nvar util = require(\"./util\");\nexports.util = util;\nvar version_1 = require(\"./version\");\nexports.version_core = version_1.version;\nvar adadelta_optimizer_1 = require(\"./optimizers/adadelta_optimizer\");\nexports.AdadeltaOptimizer = adadelta_optimizer_1.AdadeltaOptimizer;\nvar adagrad_optimizer_1 = require(\"./optimizers/adagrad_optimizer\");\nexports.AdagradOptimizer = adagrad_optimizer_1.AdagradOptimizer;\nvar adam_optimizer_1 = require(\"./optimizers/adam_optimizer\");\nexports.AdamOptimizer = adam_optimizer_1.AdamOptimizer;\nvar adamax_optimizer_1 = require(\"./optimizers/adamax_optimizer\");\nexports.AdamaxOptimizer = adamax_optimizer_1.AdamaxOptimizer;\nvar momentum_optimizer_1 = require(\"./optimizers/momentum_optimizer\");\nexports.MomentumOptimizer = momentum_optimizer_1.MomentumOptimizer;\nvar optimizer_1 = require(\"./optimizers/optimizer\");\nexports.Optimizer = optimizer_1.Optimizer;\nvar rmsprop_optimizer_1 = require(\"./optimizers/rmsprop_optimizer\");\nexports.RMSPropOptimizer = rmsprop_optimizer_1.RMSPropOptimizer;\nvar sgd_optimizer_1 = require(\"./optimizers/sgd_optimizer\");\nexports.SGDOptimizer = sgd_optimizer_1.SGDOptimizer;\nvar tensor_1 = require(\"./tensor\");\nexports.Tensor = tensor_1.Tensor;\nexports.TensorBuffer = tensor_1.TensorBuffer;\nexports.variable = tensor_1.variable;\nexports.Variable = tensor_1.Variable;\nvar types_1 = require(\"./types\");\nexports.Rank = types_1.Rank;\nvar weights_loader_1 = require(\"./weights_loader\");\nexports.loadWeights = weights_loader_1.loadWeights;\n__export(require(\"./ops/ops\"));\nvar loss_ops_1 = require(\"./ops/loss_ops\");\nexports.Reduction = loss_ops_1.Reduction;\n__export(require(\"./train\"));\n__export(require(\"./globals\"));\nvar environment_2 = require(\"./environment\");\nexports.ENV = environment_2.ENV;\nexports.Environment = environment_2.Environment;\nexports.setBackend = environment_1.Environment.setBackend;\nexports.getBackend = environment_1.Environment.getBackend;\nexports.memory = environment_1.Environment.memory;\nvar doc_1 = require(\"./doc\");\nexports.doc = doc_1.doc;\nexports.nextFrame = browser_util_1.BrowserUtil.nextFrame;\nexports.webgl = {\n    webgl_util: webgl_util,\n    gpgpu_util: gpgpu_util\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/index.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AttributeError = (function (_super) {\n    __extends(AttributeError, _super);\n    function AttributeError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, AttributeError.prototype);\n        return _this;\n    }\n    return AttributeError;\n}(Error));\nexports.AttributeError = AttributeError;\nvar RuntimeError = (function (_super) {\n    __extends(RuntimeError, _super);\n    function RuntimeError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, RuntimeError.prototype);\n        return _this;\n    }\n    return RuntimeError;\n}(Error));\nexports.RuntimeError = RuntimeError;\nvar ValueError = (function (_super) {\n    __extends(ValueError, _super);\n    function ValueError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ValueError.prototype);\n        return _this;\n    }\n    return ValueError;\n}(Error));\nexports.ValueError = ValueError;\nvar NotImplementedError = (function (_super) {\n    __extends(NotImplementedError, _super);\n    function NotImplementedError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, NotImplementedError.prototype);\n        return _this;\n    }\n    return NotImplementedError;\n}(Error));\nexports.NotImplementedError = NotImplementedError;\nvar AssertionError = (function (_super) {\n    __extends(AssertionError, _super);\n    function AssertionError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, AssertionError.prototype);\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexports.AssertionError = AssertionError;\nvar IndexError = (function (_super) {\n    __extends(IndexError, _super);\n    function IndexError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, IndexError.prototype);\n        return _this;\n    }\n    return IndexError;\n}(Error));\nexports.IndexError = IndexError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/errors.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar types_1 = require(\"../types\");\nfunction pyListRepeat(value, numValues) {\n    if (Array.isArray(value)) {\n        var newArray = [];\n        for (var i = 0; i < numValues; i++) {\n            newArray = newArray.concat(value);\n        }\n        return newArray;\n    }\n    else {\n        var newArray = new Array(numValues);\n        newArray.fill(value);\n        return newArray;\n    }\n}\nexports.pyListRepeat = pyListRepeat;\nfunction pyGetAttr(obj, attrName, defaultValue) {\n    if (attrName in obj) {\n        return obj[attrName];\n    }\n    if (defaultValue === undefined) {\n        throw new errors_1.AttributeError('pyGetAttr: Attempting to get attribute ' + attrName +\n            'with no default value defined');\n    }\n    return defaultValue;\n}\nexports.pyGetAttr = pyGetAttr;\nfunction pyNormalizeArrayIndex(x, index) {\n    if (x == null || index == null) {\n        throw new errors_1.ValueError(\"Must provide a valid array and index for \" +\n            (\"pyNormalizeArrayIndex(). Got array \" + x + \" and index \" + index + \".\"));\n    }\n    var errMsg = \"Index \" + index + \" out of range for array of length \" + x.length;\n    if (index < 0) {\n        if (index < -x.length) {\n            throw new errors_1.IndexError(errMsg);\n        }\n        return x.length + index;\n    }\n    if (index >= x.length) {\n        throw new errors_1.IndexError(errMsg);\n    }\n    return index;\n}\nexports.pyNormalizeArrayIndex = pyNormalizeArrayIndex;\nfunction assert(val, message) {\n    if (!val) {\n        throw new errors_1.AssertionError(message);\n    }\n}\nexports.assert = assert;\nfunction count(array, refernce) {\n    var counter = 0;\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var item = array_1[_i];\n        if (item === refernce) {\n            counter++;\n        }\n    }\n    return counter;\n}\nexports.count = count;\nvar ClassNameMap = (function () {\n    function ClassNameMap() {\n        this.pythonClassNameMap = {};\n    }\n    ClassNameMap.getMap = function () {\n        if (ClassNameMap.instance == null) {\n            ClassNameMap.instance = new ClassNameMap();\n        }\n        return ClassNameMap.instance;\n    };\n    ClassNameMap.register = function (className, cls) {\n        this.getMap().pythonClassNameMap[className] =\n            [cls, cls.fromConfig];\n    };\n    return ClassNameMap;\n}());\nexports.ClassNameMap = ClassNameMap;\nvar SerializableEnumRegistry = (function () {\n    function SerializableEnumRegistry() {\n        this.enumRegistry = {};\n    }\n    SerializableEnumRegistry.getMap = function () {\n        if (SerializableEnumRegistry.instance == null) {\n            SerializableEnumRegistry.instance = new SerializableEnumRegistry();\n        }\n        return SerializableEnumRegistry.instance;\n    };\n    SerializableEnumRegistry.register = function (fieldName, enumCls) {\n        if (SerializableEnumRegistry.contains(fieldName)) {\n            throw new errors_1.ValueError(\"Attempting to register a repeated enum: \" + fieldName);\n        }\n        this.getMap().enumRegistry[fieldName] = enumCls;\n    };\n    SerializableEnumRegistry.contains = function (fieldName) {\n        return fieldName in this.getMap().enumRegistry;\n    };\n    SerializableEnumRegistry.lookup = function (fieldName, value) {\n        return this.getMap().enumRegistry[fieldName][value];\n    };\n    SerializableEnumRegistry.reverseLookup = function (fieldName, value) {\n        var enumMap = this.getMap().enumRegistry[fieldName];\n        for (var candidateString in enumMap) {\n            if (enumMap[candidateString] === value) {\n                return candidateString;\n            }\n        }\n        throw new errors_1.ValueError(\"Could not find serialization string for \" + value);\n    };\n    return SerializableEnumRegistry;\n}());\nexports.SerializableEnumRegistry = SerializableEnumRegistry;\nfunction singletonOrArray(xs) {\n    if (xs.length === 1) {\n        return xs[0];\n    }\n    return xs;\n}\nexports.singletonOrArray = singletonOrArray;\nfunction toList(x) {\n    if (Array.isArray(x)) {\n        return x;\n    }\n    return [x];\n}\nexports.toList = toList;\nfunction objectListUid(objs) {\n    var objectList = toList(objs);\n    var retVal = '';\n    for (var _i = 0, objectList_1 = objectList; _i < objectList_1.length; _i++) {\n        var obj = objectList_1[_i];\n        if (obj.id == null) {\n            throw new errors_1.ValueError(\"Object \" + obj + \" passed to objectListUid without an id\");\n        }\n        if (retVal !== '') {\n            retVal = retVal + ', ';\n        }\n        retVal = retVal + Math.abs(obj.id);\n    }\n    return retVal;\n}\nexports.objectListUid = objectListUid;\nfunction isArrayOfShapes(x) {\n    return Array.isArray(x) && Array.isArray(x[0]);\n}\nexports.isArrayOfShapes = isArrayOfShapes;\nfunction normalizeShapeList(x) {\n    if (x.length === 0) {\n        return [];\n    }\n    if (!Array.isArray(x[0])) {\n        return [x];\n    }\n    return x;\n}\nexports.normalizeShapeList = normalizeShapeList;\nfunction toSnakeCase(name) {\n    var intermediate = name.replace(/(.)([A-Z][a-z0-9]+)/g, '$1_$2');\n    var insecure = intermediate.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();\n    if (insecure[0] !== '_') {\n        return insecure;\n    }\n    return 'private' + insecure;\n}\nexports.toSnakeCase = toSnakeCase;\nfunction toCamelCase(identifier) {\n    if (identifier.length <= 1) {\n        return identifier;\n    }\n    if (identifier.indexOf('_') === -1) {\n        return identifier;\n    }\n    return identifier.replace(/[_]+(\\w|$)/g, function (m, p1) { return p1.toUpperCase(); });\n}\nexports.toCamelCase = toCamelCase;\nvar _GLOBAL_CUSTOM_OBJECTS = {};\nfunction serializeKerasObject(instance) {\n    if (instance === null || instance === undefined) {\n        return null;\n    }\n    return { className: instance.getClassName(), config: instance.getConfig() };\n}\nexports.serializeKerasObject = serializeKerasObject;\nfunction deserializeKerasObject(identifier, moduleObjects, customObjects, printableModuleName) {\n    if (moduleObjects === void 0) { moduleObjects = {}; }\n    if (customObjects === void 0) { customObjects = {}; }\n    if (printableModuleName === void 0) { printableModuleName = 'object'; }\n    if (typeof identifier === 'string') {\n        var functionName = identifier;\n        var fn = void 0;\n        if (functionName in customObjects) {\n            fn = customObjects[functionName];\n        }\n        else if (functionName in _GLOBAL_CUSTOM_OBJECTS) {\n            fn = _GLOBAL_CUSTOM_OBJECTS[functionName];\n        }\n        else {\n            fn = moduleObjects[functionName];\n            if (fn == null) {\n                throw new errors_1.ValueError(\"Unknown \" + printableModuleName + \": \" + identifier);\n            }\n        }\n        return fn;\n    }\n    else {\n        var config = identifier;\n        if (config.className == null || config.config == null) {\n            throw new errors_1.ValueError(printableModuleName + \": Improper config format: \" +\n                (JSON.stringify(config) + \".\\n\") +\n                \"'className' and 'config' must set.\");\n        }\n        var className = config.className;\n        var cls = void 0, fromConfig = void 0;\n        if (className in customObjects) {\n            _a = customObjects.get(className), cls = _a[0], fromConfig = _a[1];\n        }\n        else if (className in _GLOBAL_CUSTOM_OBJECTS) {\n            _b = _GLOBAL_CUSTOM_OBJECTS.className, cls = _b[0], fromConfig = _b[1];\n        }\n        else if (className in moduleObjects) {\n            _c = moduleObjects[className], cls = _c[0], fromConfig = _c[1];\n        }\n        if (cls == null) {\n            throw new errors_1.ValueError(\"Unknown \" + printableModuleName + \": \" + className);\n        }\n        if (fromConfig != null) {\n            var customObjectsCombined = {};\n            for (var _i = 0, _d = Object.keys(_GLOBAL_CUSTOM_OBJECTS); _i < _d.length; _i++) {\n                var key = _d[_i];\n                customObjectsCombined[key] = _GLOBAL_CUSTOM_OBJECTS[key];\n            }\n            for (var _e = 0, _f = Object.keys(customObjects); _e < _f.length; _e++) {\n                var key = _f[_e];\n                customObjectsCombined[key] = customObjects[key];\n            }\n            var nestedConfig = config.config;\n            nestedConfig.customObjects = customObjectsCombined;\n            var backupCustomObjects = __assign({}, _GLOBAL_CUSTOM_OBJECTS);\n            for (var _g = 0, _h = Object.keys(customObjects); _g < _h.length; _g++) {\n                var key = _h[_g];\n                _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n            }\n            var returnObj = fromConfig(cls, config.config);\n            _GLOBAL_CUSTOM_OBJECTS = __assign({}, backupCustomObjects);\n            return returnObj;\n        }\n        else {\n            var backupCustomObjects = __assign({}, _GLOBAL_CUSTOM_OBJECTS);\n            for (var _j = 0, _k = Object.keys(customObjects); _j < _k.length; _j++) {\n                var key = _k[_j];\n                _GLOBAL_CUSTOM_OBJECTS[key] = customObjects[key];\n            }\n            var returnObj = new cls(config.config);\n            _GLOBAL_CUSTOM_OBJECTS = __assign({}, backupCustomObjects);\n            return returnObj;\n        }\n    }\n    var _a, _b, _c;\n}\nexports.deserializeKerasObject = deserializeKerasObject;\nfunction getExactlyOneTensor(xs) {\n    var x;\n    if (Array.isArray(xs)) {\n        if (xs.length !== 1) {\n            throw new errors_1.ValueError(\"Expected Tensor length to be 1; got \" + xs.length);\n        }\n        x = xs[0];\n    }\n    else {\n        x = xs;\n    }\n    return x;\n}\nexports.getExactlyOneTensor = getExactlyOneTensor;\nfunction getExactlyOneShape(shapes) {\n    if (Array.isArray(shapes) && Array.isArray(shapes[0])) {\n        if (shapes.length === 1) {\n            shapes = shapes;\n            return shapes[0];\n        }\n        else {\n            throw new errors_1.ValueError(\"Expected exactly 1 Shape; got \" + shapes.length);\n        }\n    }\n    else {\n        return shapes;\n    }\n}\nexports.getExactlyOneShape = getExactlyOneShape;\nfunction numberCompare(a, b) {\n    return (a < b) ? -1 : ((a > b) ? 1 : 0);\n}\nexports.numberCompare = numberCompare;\nfunction reverseNumberCompare(a, b) {\n    return -1 * numberCompare(a, b);\n}\nexports.reverseNumberCompare = reverseNumberCompare;\nfunction stringToDType(dtype) {\n    switch (dtype) {\n        case 'float32':\n            return types_1.DType.float32;\n        default:\n            throw new errors_1.ValueError(\"Invalid dtype: \" + dtype);\n    }\n}\nexports.stringToDType = stringToDType;\nfunction stringsEqual(xs, ys) {\n    if (xs == null || ys == null) {\n        return xs === ys;\n    }\n    if (xs.length !== ys.length) {\n        return false;\n    }\n    for (var i = 0; i < xs.length; ++i) {\n        if (xs[i] !== ys[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.stringsEqual = stringsEqual;\nfunction unique(xs) {\n    if (xs == null) {\n        return xs;\n    }\n    var out = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        if (out.indexOf(x) === -1) {\n            out.push(x);\n        }\n    }\n    return out;\n}\nexports.unique = unique;\nfunction isObjectEmpty(obj) {\n    if (obj == null) {\n        throw new errors_1.ValueError(\"Invalid value in obj: \" + JSON.stringify(obj));\n    }\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isObjectEmpty = isObjectEmpty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/utils/generic_utils.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar common_1 = require(\"../common\");\nvar errors_1 = require(\"../errors\");\nvar types_1 = require(\"../types\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar math_utils = require(\"../utils/math_utils\");\nvar common_2 = require(\"./common\");\nvar common_3 = require(\"./common\");\nvar backend = 'webgl';\nvar DEFAULT_DTYPE = types_1.DType.float32;\nfunction disposeScalarCache() {\n    for (var typeKey in scalarCache) {\n        for (var key in scalarCache[typeKey]) {\n            scalarCache[typeKey][key].dispose();\n            delete scalarCache[typeKey][key];\n        }\n    }\n}\nexports.disposeScalarCache = disposeScalarCache;\nfunction setBackend(requestedBackend) {\n    tfc.setBackend(requestedBackend);\n    backend = requestedBackend;\n    disposeScalarCache();\n}\nexports.setBackend = setBackend;\nfunction getBackend() {\n    return backend;\n}\nexports.getBackend = getBackend;\nfunction keep(x) {\n    return tfc.keep(x);\n}\nexports.keep = keep;\nvar scalarCache = {\n    float32: {},\n    int32: {}\n};\nfunction getScalar(value, dtype) {\n    if (dtype === undefined) {\n        dtype = DEFAULT_DTYPE;\n    }\n    if (scalarCache[dtype][value] == null) {\n        scalarCache[dtype][value] = tfjs_core_1.scalar(value, dtype);\n        tfc.keep(scalarCache[dtype][value]);\n    }\n    return scalarCache[dtype][value];\n}\nexports.getScalar = getScalar;\nexports.epsilon = common_2.epsilon;\nfunction isBackendSymbolic() {\n    return false;\n}\nexports.isBackendSymbolic = isBackendSymbolic;\nfunction shape(x) {\n    return x.shape;\n}\nexports.shape = shape;\nfunction intShape(x) {\n    return x.shape;\n}\nexports.intShape = intShape;\nfunction ndim(x) {\n    return x.shape.length;\n}\nexports.ndim = ndim;\nfunction dtype(x) {\n    return (x instanceof tfjs_core_1.Tensor) ? DEFAULT_DTYPE : x.dtype;\n}\nexports.dtype = dtype;\nfunction normalizeAxis(x, axis) {\n    if (axis == null) {\n        return axis;\n    }\n    var xShape = shape(x);\n    if (Array.isArray(axis)) {\n        return axis.map(function (thisAxis) { return generic_utils_1.pyNormalizeArrayIndex(xShape, thisAxis); });\n    }\n    return generic_utils_1.pyNormalizeArrayIndex(xShape, axis);\n}\nexports.normalizeAxis = normalizeAxis;\nfunction countParams(x) {\n    var shape = x.shape;\n    if (shape.length > 0) {\n        return shape.reduce(function (a, b) { return a * b; });\n    }\n    else {\n        return 1;\n    }\n}\nexports.countParams = countParams;\nfunction cast(x, dtype) {\n    return x.asType(dtype);\n}\nexports.cast = cast;\nfunction reshape(x, shape) {\n    return x.reshape(shape);\n}\nexports.reshape = reshape;\nfunction transpose(x, perm) {\n    return tfc.transpose(x, perm);\n}\nexports.transpose = transpose;\nexports.permuteDimensions = transpose;\nfunction reverse(x, axes) {\n    return tfc.reverse(x, axes);\n}\nexports.reverse = reverse;\nfunction expandDims(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    var outShape = shape(x).slice();\n    if (axis < 0) {\n        axis = outShape.length + axis + 1;\n    }\n    outShape.splice(axis, 0, 1);\n    return reshape(x, outShape);\n}\nexports.expandDims = expandDims;\nfunction squeeze(x, axis) {\n    return tfc.squeeze(x, [axis]);\n}\nexports.squeeze = squeeze;\nfunction temporalPadding(x, padding) {\n    if (ndim(x) !== 3) {\n        throw new errors_1.ValueError(\"temporalPadding expects input tensor to be 3-D, but received a \" +\n            (ndim(x) + \"-D tensor.\"));\n    }\n    if (padding == null) {\n        padding = [1, 1];\n    }\n    if (padding.length !== 2) {\n        throw new errors_1.ValueError(\"temporalPadding expects input padding pattern to be a length-2 \" +\n            (\"array, but received a length-\" + padding.length + \" array.\"));\n    }\n    var pattern = [[0, 0], padding, [0, 0]];\n    return tfc.pad(x, pattern);\n}\nexports.temporalPadding = temporalPadding;\nfunction spatial2dPadding(x, padding, dataFormat) {\n    if (ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"temporalPadding expects input tensor to be 4-D, but received a \" +\n            (ndim(x) + \"-D tensor.\"));\n    }\n    if (padding == null) {\n        padding = [[1, 1], [1, 1]];\n    }\n    if (padding.length !== 2 || padding[0].length !== 2 ||\n        padding[1].length !== 2) {\n        throw new errors_1.ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' +\n            'each of which is an Array of two integers.');\n    }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n        throw new errors_1.ValueError(\"Unknown data format: \" + dataFormat + \". \" +\n            \"Supported data formats are 'channelsLast' and 'channelsFirst.\");\n    }\n    var pattern;\n    if (dataFormat === 'channelsFirst') {\n        pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n    }\n    else {\n        pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n    }\n    return tfc.pad(x, pattern);\n}\nexports.spatial2dPadding = spatial2dPadding;\nfunction repeat(x, n) {\n    if (x.shape.length !== 2) {\n        throw new errors_1.ValueError(\"repeat() expects a rank-2 tensor, but received a \" +\n            (\"rank-\" + x.shape.length + \" tensor.\"));\n    }\n    var y = expandDims(x, 1);\n    return tile(y, [1, n, 1]);\n}\nexports.repeat = repeat;\nfunction flatten(x) {\n    var newShape = [math_utils.arrayProd(x.shape)];\n    return reshape(x, newShape);\n}\nexports.flatten = flatten;\nfunction batchFlatten(x) {\n    if (ndim(x) <= 1) {\n        throw new errors_1.ValueError(\"batchFlatten requires a minimum rank of 2. Got rank: \" + ndim(x) + \".\");\n    }\n    var newShape = [x.shape[0], math_utils.arrayProd(x.shape, 1)];\n    return reshape(x, newShape);\n}\nexports.batchFlatten = batchFlatten;\nfunction sliceAlongFirstAxis(array, start, size) {\n    switch (array.rank) {\n        case 1:\n            return tfc.slice1d(array, start, size);\n        case 2:\n            return tfc.slice2d(array, [start, 0], [size, array.shape[1]]);\n        case 3:\n            return tfc.slice3d(array, [start, 0, 0], [size, array.shape[1], array.shape[2]]);\n        case 4:\n            return tfc.slice4d(array, [start, 0, 0, 0], [size, array.shape[1], array.shape[2], array.shape[3]]);\n        default:\n            throw new errors_1.ValueError(\"sliceAlongFirstAxis() received an unsupported tensor rank: \" +\n                (\"\" + array.rank));\n    }\n}\nexports.sliceAlongFirstAxis = sliceAlongFirstAxis;\nfunction sliceAlongLastAxis(array, start, size) {\n    switch (array.rank) {\n        case 1:\n            return tfc.slice1d(array, start, size);\n        case 2:\n            return tfc.slice2d(array, [0, start], [array.shape[0], size]);\n        case 3:\n            return tfc.slice3d(array, [0, 0, start], [array.shape[0], array.shape[1], size]);\n        case 4:\n            return tfc.slice4d(array, [0, 0, 0, start], [array.shape[0], array.shape[1], array.shape[2], size]);\n        default:\n            throw new errors_1.ValueError(\"sliceAlongLastAxis() received an unsupported tensor rank: \" +\n                (\"\" + array.rank));\n    }\n}\nexports.sliceAlongLastAxis = sliceAlongLastAxis;\nfunction regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    return tfjs_core_1.tidy(function () {\n        var meanAndVariance = tfc.moments(x, reductionAxes);\n        var mean = meanAndVariance.mean;\n        var variance = meanAndVariance.variance;\n        var normed = batchNormalization(x, mean, variance, beta, gamma, epsilon);\n        return [normed, mean, variance];\n    });\n}\nfunction broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    return tfjs_core_1.tidy(function () {\n        var meanAndVariance = tfc.moments(x, reductionAxes);\n        var mean = meanAndVariance.mean;\n        var variance = meanAndVariance.variance;\n        var targetShape = [];\n        for (var _i = 0, _a = math_utils.range(0, ndim(x)); _i < _a.length; _i++) {\n            var axis = _a[_i];\n            if (reductionAxes.indexOf(axis) !== -1) {\n                targetShape.push(1);\n            }\n            else {\n                targetShape.push(x.shape[axis]);\n            }\n        }\n        var broadcastMean = reshape(mean, targetShape);\n        var broadcastVariance = reshape(variance, targetShape);\n        var broadcastGamma = gamma == null ? null : reshape(gamma, targetShape);\n        var broadcastBeta = beta == null ? null : reshape(beta, targetShape);\n        var normed = batchNormalization(x, broadcastMean, broadcastVariance, broadcastBeta, broadcastGamma, epsilon);\n        return [normed, mean, variance];\n    });\n}\nfunction normalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    if (tfjs_core_1.util.arraysEqual(reductionAxes.slice().sort(), math_utils.range(0, ndim(x) - 1))) {\n        return regularNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n    }\n    else {\n        return broadcastNormalizeBatchInTraining(x, gamma, beta, reductionAxes, epsilon);\n    }\n}\nexports.normalizeBatchInTraining = normalizeBatchInTraining;\nfunction concatenate(tensors, axis) {\n    if (axis === void 0) { axis = -1; }\n    var rank;\n    if (axis < 0) {\n        rank = ndim(tensors[0]);\n        if (rank !== 0) {\n            axis = rank;\n        }\n        else {\n            axis = 0;\n        }\n    }\n    if (axis === ndim(tensors[0])) {\n        axis = -1;\n    }\n    return tfc.concat(tensors, axis);\n}\nexports.concatenate = concatenate;\nfunction concatAlongFirstAxis(a, b) {\n    switch (a.rank) {\n        case 1:\n            return tfc.concat1d([a, b]);\n        case 2:\n            return tfc.concat2d([a, b], 0);\n        case 3:\n            return tfc.concat3d([a, b], 0);\n        case 4:\n            return tfc.concat4d([a, b], 0);\n        default:\n            throw new errors_1.ValueError('concatAlongFirstAxis() received an unsupported tensor rank: ' +\n                a.rank);\n    }\n}\nexports.concatAlongFirstAxis = concatAlongFirstAxis;\nfunction tile(x, n) {\n    if (!Array.isArray(n)) {\n        n = [n];\n    }\n    if (ndim(x) !== n.length) {\n        throw new errors_1.ValueError(\"The length of input n (\" + n.length + \") does not match \" +\n            (\"the number of dimensions in input x (\" + ndim(x) + \")\"));\n    }\n    return tfc.tile(x, n);\n}\nexports.tile = tile;\nfunction variable(x, dtype, name, constraint) {\n    return new types_1.LayerVariable(x, dtype, name, true, constraint);\n}\nexports.variable = variable;\nfunction batchGetValue(xs) {\n    return xs.map(function (x) { return x.read(); });\n}\nexports.batchGetValue = batchGetValue;\nfunction batchSetValue(variablesAndValues) {\n    variablesAndValues.map(function (variableAndValue) {\n        var variable = variableAndValue[0];\n        variable.write(variableAndValue[1]);\n    });\n}\nexports.batchSetValue = batchSetValue;\nfunction zeros(shape, dtype) {\n    return tfc.zeros(shape);\n}\nexports.zeros = zeros;\nfunction zerosVariable(shape, dtype, name) {\n    return new types_1.LayerVariable(zeros(shape), dtype, name);\n}\nexports.zerosVariable = zerosVariable;\nfunction zerosLike(x, dtype, name) {\n    return new types_1.LayerVariable(tfc.zerosLike(x), dtype, name);\n}\nexports.zerosLike = zerosLike;\nfunction ones(shape, dtype) {\n    return tfc.ones(shape);\n}\nexports.ones = ones;\nfunction onesVariable(shape, dtype, name) {\n    var allocated = tfc.ones(shape);\n    return new types_1.LayerVariable(allocated, dtype, name);\n}\nexports.onesVariable = onesVariable;\nfunction onesLike(x, dtype, name) {\n    var allocated = tfc.onesLike(x);\n    return new types_1.LayerVariable(allocated, dtype, name);\n}\nexports.onesLike = onesLike;\nfunction identity(x) {\n    return x.clone();\n}\nexports.identity = identity;\nfunction eye(size, dtype, name) {\n    var buffer = [];\n    for (var i = 0; i < size; ++i) {\n        for (var j = 0; j < size; ++j) {\n            buffer.push(i === j ? 1 : 0);\n        }\n    }\n    return tfjs_core_1.tensor2d(buffer, [size, size]);\n}\nexports.eye = eye;\nfunction eyeVariable(size, dtype, name) {\n    return new types_1.LayerVariable(eye(size, dtype), dtype, name);\n}\nexports.eyeVariable = eyeVariable;\nfunction neg(x) {\n    return tfc.neg(x);\n}\nexports.neg = neg;\nfunction add(x, y) {\n    return tfc.add(x, y);\n}\nexports.add = add;\nfunction subtract(x, y) {\n    return tfc.sub(x, y);\n}\nexports.subtract = subtract;\nfunction multiply(x, y) {\n    return tfc.mul(x, y);\n}\nexports.multiply = multiply;\nfunction divide(x, y) {\n    return tfc.div(x, y);\n}\nexports.divide = divide;\nfunction scalarTimesArray(c, x) {\n    return tfc.mul(c, x);\n}\nexports.scalarTimesArray = scalarTimesArray;\nfunction scalarPlusArray(c, x) {\n    return tfc.add(c, x);\n}\nexports.scalarPlusArray = scalarPlusArray;\nfunction randomUniform(shape, minval, maxval, dtype, seed) {\n    return tfc.randomUniform(shape, minval, maxval);\n}\nexports.randomUniform = randomUniform;\nfunction randomUniformVariable(shape, minval, maxval, dtype, seed, name) {\n    if (name === void 0) { name = 'randomUniform'; }\n    return new types_1.LayerVariable(randomUniform(shape, minval, maxval, dtype, seed), dtype, name);\n}\nexports.randomUniformVariable = randomUniformVariable;\nfunction truncatedNormal(shape, mean, stddev, dtype, seed) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    return tfc.truncatedNormal(shape, mean, stddev);\n}\nexports.truncatedNormal = truncatedNormal;\nfunction truncatedNormalVariable(shape, mean, stddev, dtype, seed, name) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (name === void 0) { name = 'truncatedNormal'; }\n    return new types_1.LayerVariable(truncatedNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\nexports.truncatedNormalVariable = truncatedNormalVariable;\nfunction randomNormal(shape, mean, stddev, dtype, seed) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (dtype === types_1.DType.bool) {\n        throw new errors_1.NotImplementedError(\"randomNormal does not support dType bool.\");\n    }\n    var dtypeString = (dtype === types_1.DType.float32) ? 'float32' : 'int32';\n    return tfc.randomNormal(shape, mean, stddev, dtypeString, seed);\n}\nexports.randomNormal = randomNormal;\nfunction randomNormalVariable(shape, mean, stddev, dtype, seed, name) {\n    if (mean === void 0) { mean = 0.0; }\n    if (stddev === void 0) { stddev = 1.0; }\n    if (name === void 0) { name = 'randomNormal'; }\n    return new types_1.LayerVariable(randomNormal(shape, mean, stddev, dtype, seed), dtype, name);\n}\nexports.randomNormalVariable = randomNormalVariable;\nfunction update(x, xNew) {\n    return x.write(xNew);\n}\nexports.update = update;\nfunction updateAdd(x, increment) {\n    return x.write(tfc.add(x.read(), increment));\n}\nexports.updateAdd = updateAdd;\nfunction updateSub(x, decrement) {\n    return x.write(tfc.sub(x.read(), decrement));\n}\nexports.updateSub = updateSub;\nfunction dot(x, y) {\n    if (ndim(y) !== 2) {\n        throw new errors_1.NotImplementedError(\"dot support for y other than rank 2 is not yet implemented: \" +\n            (\"y shape = \" + shape));\n    }\n    else {\n        if (ndim(x) === 2) {\n            return tfc.matMul(x, y);\n        }\n        else if (ndim(x) === 3) {\n            var xShape0 = x.shape[0];\n            var xShape1 = x.shape[1];\n            var xShape2 = x.shape[2];\n            x = x.reshape([xShape0 * xShape1, xShape2]);\n            return tfc.matMul(x, y).reshape([\n                xShape0, xShape1, y.shape[1]\n            ]);\n        }\n        else {\n            throw new errors_1.NotImplementedError(\"dot support for x of rank \" + ndim(x) + \" is not yet implemented: \" +\n                (\"x shape = \" + shape));\n        }\n    }\n}\nexports.dot = dot;\nfunction sign(x) {\n    var zerosLikeX = tfjs_core_1.zerosLike(x);\n    var onesLikeX = tfjs_core_1.onesLike(x);\n    return tfjs_core_1.where(equal(x, zerosLikeX), zerosLikeX, tfjs_core_1.where(greater(x, tfjs_core_1.zerosLike(x)), onesLikeX, scalarTimesArray(getScalar(-1), onesLikeX)));\n}\nexports.sign = sign;\nfunction qr(x) {\n    if (x.shape.length !== 2) {\n        throw new errors_1.ValueError(\"qr() requires a 2D Tensor, but got a \" + x.shape.length + \"D Tensor.\");\n    }\n    if (x.shape[0] < x.shape[1]) {\n        throw new errors_1.ValueError(\"qr() requires x.shape[0] >= x.shape[1], but got shape: [\" + x.shape + \"]\");\n    }\n    var m = x.shape[0];\n    var n = x.shape[1];\n    var q = eye(m);\n    var r = x;\n    var one2D = tfjs_core_1.tensor2d([[1]], [1, 1]);\n    for (var j = 0; j < n; ++j) {\n        var rjEnd1 = r.slice([j, j], [m - j, 1]);\n        var normX = tfc.norm(rjEnd1);\n        var rjj = r.slice([j, j], [1, 1]);\n        var s = tfc.neg(sign(rjj));\n        var u1 = rjj.sub(multiply(s, normX));\n        var wPre = divide(rjEnd1, u1);\n        var w = void 0;\n        if (wPre.shape[0] === 1) {\n            w = one2D;\n        }\n        else {\n            w = one2D.concat(wPre.slice([1, 0], [wPre.shape[0] - 1, wPre.shape[1]]), 0);\n        }\n        var tau = tfc.neg(divide(tfc.matMul(s, u1), normX));\n        var rjEndAll = r.slice([j, 0], [m - j, n]);\n        var tauTimesW = tau.mul(w);\n        if (j === 0) {\n            r = rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll)));\n        }\n        else {\n            r = r.slice([0, 0], [j, n])\n                .concat(rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll))), 0);\n        }\n        var qAllJEnd = q.slice([0, j], [m, q.shape[1] - j]);\n        if (j === 0) {\n            q = qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose()));\n        }\n        else {\n            q = q.slice([0, 0], [m, j])\n                .concat(qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose())), 1);\n        }\n    }\n    return [q, r];\n}\nexports.qr = qr;\nfunction oneHot(indices, numClasses) {\n    if (ndim(indices) !== 1) {\n        throw new Error('Only 1D one-hot tensors are supported in the ' +\n            'deeplearn backend, at present.');\n    }\n    indices = indices.toInt();\n    return tfc.oneHot(indices, numClasses).toFloat();\n}\nexports.oneHot = oneHot;\nfunction mean(x, axis, keepDims) {\n    axis = normalizeAxis(x, axis);\n    return tfc.mean(x, axis, keepDims);\n}\nexports.mean = mean;\nfunction argmax(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    return tfc.argMax(x, axis);\n}\nexports.argmax = argmax;\nfunction gather(reference, indices, axis) {\n    if (Array.isArray(indices)) {\n        indices = tfjs_core_1.tensor1d(indices, 'int32');\n    }\n    else {\n        indices = indices.toInt();\n    }\n    return tfc.gather(reference, indices, axis);\n}\nexports.gather = gather;\nfunction max(x, axis, keepDims) {\n    return tfc.max(x, axis, keepDims);\n}\nexports.max = max;\nfunction min(x, axis, keepDims) {\n    return tfc.min(x, axis, keepDims);\n}\nexports.min = min;\nfunction minimum(x, y) {\n    return tfc.minimum(x, y);\n}\nexports.minimum = minimum;\nfunction sum(x, axis, keepDims) {\n    return tfc.sum(x, axis, keepDims);\n}\nexports.sum = sum;\nfunction abs(x) {\n    return tfc.abs(x);\n}\nexports.abs = abs;\nfunction square(x) {\n    return tfc.mulStrict(x, x);\n}\nexports.square = square;\nfunction sqrt(x) {\n    return tfc.sqrt(x);\n}\nexports.sqrt = sqrt;\nfunction exp(x) {\n    return tfc.exp(x);\n}\nexports.exp = exp;\nfunction log(x) {\n    return tfc.log(x);\n}\nexports.log = log;\nfunction pow(x, a) {\n    if (typeof (a) === 'number') {\n        a = tfjs_core_1.scalar(Math.round(a), 'int32');\n    }\n    if (a.dtype !== 'int32') {\n        throw new errors_1.NotImplementedError(\"Non-int32 dtype (\" + a.dtype + \") is not supported by pow() yet\");\n    }\n    return tfc.pow(x, a);\n}\nexports.pow = pow;\nfunction clip(x, minValue, maxValue) {\n    return tfc.clipByValue(x, minValue, maxValue);\n}\nexports.clip = clip;\nfunction equal(x, y) {\n    return tfc.equal(x, y);\n}\nexports.equal = equal;\nfunction greater(x, y) {\n    return tfc.greater(x, y);\n}\nexports.greater = greater;\nfunction greaterEqual(x, y) {\n    return tfc.greaterEqual(x, y);\n}\nexports.greaterEqual = greaterEqual;\nfunction maximum(x, y) {\n    return tfc.maximum(x, y);\n}\nexports.maximum = maximum;\nfunction sin(x) {\n    return tfc.sin(x.value());\n}\nexports.sin = sin;\nfunction cos(x) {\n    return tfc.cos(x.value());\n}\nexports.cos = cos;\nfunction batchNormalization(x, mean, variance, beta, gamma, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-3; }\n    var out;\n    if (ndim(x) === 2) {\n        out = tfc.batchNormalization2d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else if (ndim(x) === 3) {\n        out = tfc.batchNormalization3d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else if (ndim(x) === 4) {\n        out = tfc.batchNormalization4d(x, mean, variance, epsilon, gamma, beta);\n    }\n    else {\n        throw new errors_1.NotImplementedError(\"batchNormalization is not implememnted for array of rank \" + ndim(x) + \" \" +\n            \"yet\");\n    }\n    return out;\n}\nexports.batchNormalization = batchNormalization;\nfunction biasAdd(x, bias, dataFormat) {\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (ndim(bias) !== 1 && ndim(bias) !== ndim(x)) {\n        throw new errors_1.ValueError('Unexpected bias dimensions: ' + ndim(bias) +\n            '; expected it to be 1 or ' + ndim(x));\n    }\n    var biasShape = bias.shape;\n    var y;\n    if (ndim(x) === 5) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1, 1, 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[3], biasShape[0], biasShape[1], biasShape[2]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, 1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) === 4) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1, 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[2], biasShape[0], biasShape[1]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) === 3) {\n        if (dataFormat === 'channelsFirst') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, biasShape[0], 1]));\n            }\n            else {\n                y = x.add(bias.reshape([1, biasShape[1], biasShape[0]]));\n            }\n        }\n        else if (dataFormat === 'channelsLast') {\n            if (biasShape.length === 1) {\n                y = x.add(bias.reshape([1, 1, biasShape[0]]));\n            }\n            else {\n                y = x.add(bias.reshape([1].concat(biasShape)));\n            }\n        }\n    }\n    else if (ndim(x) < 3) {\n        y = x.add(bias);\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupported input rank by biasAdd: \" + ndim(x));\n    }\n    return y;\n}\nexports.biasAdd = biasAdd;\nfunction elu(x, alpha) {\n    if (alpha === void 0) { alpha = 1; }\n    if (alpha !== 1) {\n        throw new errors_1.NotImplementedError(\"Support for alpha values other than 1 (\" + alpha + \") is not implemented \" +\n            \"yet.\");\n    }\n    return tfc.elu(x);\n}\nexports.elu = elu;\nfunction selu(x) {\n    return tfc.selu(x);\n}\nexports.selu = selu;\nfunction relu(x) {\n    return tfc.relu(x);\n}\nexports.relu = relu;\nfunction softplus(x) {\n    return tfc.log(tfc.add(getScalar(1), tfc.exp(x)));\n}\nexports.softplus = softplus;\nfunction softsign(x) {\n    return tfc.div(x, tfc.add(getScalar(1), tfc.abs(x)));\n}\nexports.softsign = softsign;\nfunction tanh(x) {\n    return tfc.tanh(x);\n}\nexports.tanh = tanh;\nfunction dropout(x, level, noiseShape, seed) {\n    if (noiseShape != null && !tfjs_core_1.util.arraysEqual(x.shape, noiseShape)) {\n        throw new errors_1.NotImplementedError('Non-default noise shape is not implemented yet: ' +\n            JSON.stringify(noiseShape));\n    }\n    if (seed != null) {\n        throw new errors_1.NotImplementedError('seed is not implemented for dropout yet.');\n    }\n    var multiplier = tfc.step(tfc.add(neg(level), randomUniform(x.shape, 0, 1, types_1.DType.float32)));\n    multiplier = tfc.mul(divide(getScalar(1), subtract(getScalar(1), level)), multiplier);\n    return tfc.mul(x, multiplier);\n}\nexports.dropout = dropout;\nfunction l2Normalize(x, axis) {\n    var squareSum = sum(square(x), axis, true);\n    var epsilonTensor = scalarTimesArray(tfjs_core_1.scalar(exports.epsilon()), tfc.onesLike(x));\n    var norm = sqrt(maximum(squareSum, epsilonTensor));\n    return divide(x, norm);\n}\nexports.l2Normalize = l2Normalize;\nfunction preprocessConv2DInput(x, dataFormat) {\n    common_1.checkDataFormat(dataFormat);\n    if (dataFormat === 'channelsFirst') {\n        return tfc.transpose(x, [0, 2, 3, 1]);\n    }\n    else {\n        return x;\n    }\n}\nfunction conv1dWithBias(x, kernel, bias, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = 1; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dilationRate === void 0) { dilationRate = 1; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (x.shape.length !== 3) {\n        throw new errors_1.ValueError(\"The input of a conv1dWithBias operation should be 3, but is \" +\n            (x.shape.length + \" instead.\"));\n    }\n    if (kernel.shape.length !== 3) {\n        throw new errors_1.ValueError(\"The kernel for a conv1dWithBias operation should be 3, but is \" +\n            (kernel.shape.length + \" instead\"));\n    }\n    if (bias != null && bias.shape.length !== 1) {\n        throw new errors_1.ValueError(\"The bias for a conv1dWithBias operation should be 1, but is \" +\n            (kernel.shape.length + \" instead\"));\n    }\n    if (dataFormat === 'channelsFirst') {\n        x = transpose(x, [0, 2, 1]);\n    }\n    if (padding === 'casual') {\n        throw new errors_1.NotImplementedError('The support for CASUAL padding mode in conv1dWithBias is not ' +\n            'implemented yet.');\n    }\n    var y = tfc.conv1d(x, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NWC', dilationRate);\n    if (bias != null) {\n        y = biasAdd(y, bias);\n    }\n    return y;\n}\nexports.conv1dWithBias = conv1dWithBias;\nfunction conv1d(x, kernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = 1; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dilationRate === void 0) { dilationRate = 1; }\n    common_1.checkDataFormat(dataFormat);\n    return conv1dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n}\nexports.conv1d = conv1d;\nfunction conv2d(x, kernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    common_1.checkDataFormat(dataFormat);\n    return conv2dWithBias(x, kernel, null, strides, padding, dataFormat, dilationRate);\n}\nexports.conv2d = conv2d;\nfunction conv2dWithBias(x, kernel, bias, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    if (ndim(x) !== 3 && ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"conv2dWithBias expects input to be of rank 3 or 4, but received \" +\n            (ndim(x) + \".\"));\n    }\n    if (ndim(kernel) !== 3 && ndim(kernel) !== 4) {\n        throw new errors_1.ValueError(\"conv2dWithBias expects kernel to be of rank 3 or 4, but received \" +\n            (ndim(x) + \".\"));\n    }\n    var y = preprocessConv2DInput(x, dataFormat);\n    if (padding === 'casual') {\n        throw new errors_1.NotImplementedError('The support for CASUAL padding mode in conv1dWithBias is not ' +\n            'implemented yet.');\n    }\n    y = tfc.conv2d(y, kernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n    if (bias != null) {\n        y = biasAdd(y, bias);\n    }\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.conv2dWithBias = conv2dWithBias;\nfunction depthwiseConv2d(x, depthwiseKernel, strides, padding, dataFormat, dilationRate) {\n    if (strides === void 0) { strides = [1, 1]; }\n    if (padding === void 0) { padding = 'valid'; }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    common_1.checkDataFormat(dataFormat);\n    var y = preprocessConv2DInput(x, dataFormat);\n    if (ndim(x) !== 4) {\n        throw new errors_1.ValueError(\"Input for depthwiseConv2d is required to be 4-D, but is instead \" +\n            (ndim(x) + \"-D\"));\n    }\n    if (ndim(depthwiseKernel) !== 4) {\n        throw new errors_1.ValueError(\"depthwiseKernel is required to be 4-D, but is instead \" +\n            (ndim(depthwiseKernel) + \"-D\"));\n    }\n    y = tfc.depthwiseConv2d(y, depthwiseKernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.depthwiseConv2d = depthwiseConv2d;\nfunction pool2d(x, poolSize, strides, padding, dataFormat, poolMode) {\n    common_1.checkDataFormat(dataFormat);\n    common_1.checkPoolMode(poolMode);\n    common_1.checkPaddingMode(padding);\n    if (strides == null) {\n        strides = [1, 1];\n    }\n    if (padding == null) {\n        padding = 'valid';\n    }\n    if (dataFormat == null) {\n        dataFormat = common_3.imageDataFormat();\n    }\n    if (poolMode == null) {\n        poolMode = 'max';\n    }\n    x = preprocessConv2DInput(x, dataFormat);\n    var y;\n    var paddingString = (padding === 'same') ? 'same' : 'valid';\n    if (poolMode === 'max') {\n        y = tfc.maxPool(x, poolSize, strides, paddingString);\n    }\n    else {\n        y = tfc.avgPool(x, poolSize, strides, paddingString);\n    }\n    if (dataFormat === 'channelsFirst') {\n        y = tfc.transpose(y, [0, 3, 1, 2]);\n    }\n    return y;\n}\nexports.pool2d = pool2d;\nfunction nameScope(name, fn) {\n    return common_1.nameScope(name, fn);\n}\nexports.nameScope = nameScope;\nfunction floatx() {\n    return types_1.DType.float32;\n}\nexports.floatx = floatx;\nvar _uidPrefixes = {};\nfunction getUid(prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    if (!(prefix in _uidPrefixes)) {\n        _uidPrefixes[prefix] = 0;\n    }\n    _uidPrefixes[prefix] += 1;\n    return prefix + _uidPrefixes[prefix].toString();\n}\nexports.getUid = getUid;\nfunction softmax(x, axis) {\n    if (axis === void 0) { axis = -1; }\n    return tfc.softmax(x, axis);\n}\nexports.softmax = softmax;\nfunction categoricalCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    if (fromLogits) {\n        output = softmax(output);\n    }\n    else {\n        var outputSum = sum(output, shape(output).length - 1, true);\n        output = divide(output, outputSum);\n    }\n    output = clip(output, exports.epsilon(), 1 - exports.epsilon());\n    return tfc.neg(tfc.sum(tfc.mul(target.toFloat(), tfc.log(output)), shape(output).length - 1));\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    var flatTarget = tfc.floor(flatten(target)).toInt();\n    var outputShape = shape(output);\n    var oneHotTarget = reshape(tfc.oneHot(flatTarget, outputShape[outputShape.length - 1]), outputShape);\n    return categoricalCrossentropy(oneHotTarget, output, fromLogits);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(target, output, fromLogits) {\n    if (fromLogits === void 0) { fromLogits = false; }\n    var y;\n    if (!fromLogits) {\n        y = clip(output, exports.epsilon(), 1 - exports.epsilon());\n        y = log(divide(y, subtract(tfc.onesLike(y), y)));\n    }\n    else {\n        y = output;\n    }\n    return sigmoidCrossEntropyWithLogits(target, y);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction sigmoidCrossEntropyWithLogits(target, output) {\n    var maxOutput = tfc.maximum(output, tfc.zerosLike(output));\n    var outputXTarget = tfc.mul(output, target);\n    var sigmoidOutput = tfc.log(tfc.add(getScalar(1), tfc.exp(tfc.neg(tfc.abs(output)))));\n    var result = tfc.add(tfc.sub(maxOutput, outputXTarget), sigmoidOutput);\n    return result;\n}\nexports.sigmoidCrossEntropyWithLogits = sigmoidCrossEntropyWithLogits;\nfunction sigmoid(x) {\n    return tfc.sigmoid(x);\n}\nexports.sigmoid = sigmoid;\nfunction hardSigmoid(x) {\n    var y = scalarPlusArray(tfjs_core_1.scalar(0.5), scalarTimesArray(tfjs_core_1.scalar(0.2), x));\n    return clip(y, 0, 1);\n}\nexports.hardSigmoid = hardSigmoid;\nfunction inTrainPhase(x, alt, training) {\n    if (training === void 0) { training = false; }\n    return training ? x() : alt();\n}\nexports.inTrainPhase = inTrainPhase;\nfunction rnn(stepFunction, inputs, initialStates, goBackwards, mask, constants, unroll, inputLength) {\n    if (goBackwards === void 0) { goBackwards = false; }\n    if (unroll === void 0) { unroll = false; }\n    var ndim = inputs.shape.length;\n    if (ndim < 3) {\n        throw new errors_1.ValueError(\"Input should be at least 3D, but is \" + ndim + \"D.\");\n    }\n    var axes = [1, 0].concat(math_utils.range(2, ndim));\n    inputs = transpose(inputs, axes);\n    if (mask != null) {\n        throw new errors_1.NotImplementedError('The rnn() function of the deeplearn.js backend does not support ' +\n            'masking yet.');\n    }\n    if (constants != null) {\n        throw new errors_1.NotImplementedError('The rnn() functoin of the deeplearn.js backend does not support ' +\n            'constants yet.');\n    }\n    if (unroll) {\n        console.warn('Backend rnn(): the unroll = true option is not applicable to the ' +\n            'imperative deeplearn.js backend.');\n    }\n    if (goBackwards) {\n        inputs = reverse(inputs, 0);\n    }\n    var outputs;\n    var lastOutput;\n    var states = initialStates;\n    var timeSteps = inputs.shape[0];\n    for (var t = 0; t < timeSteps; ++t) {\n        var currentInput = sliceAlongFirstAxis(inputs, t, 1);\n        currentInput = reshape(currentInput, currentInput.shape.slice(1));\n        var stepOutputs = stepFunction(currentInput, states);\n        lastOutput = stepOutputs[0];\n        if (t === 0) {\n            outputs = lastOutput.reshape([1].concat(lastOutput.shape));\n        }\n        else {\n            outputs = concatAlongFirstAxis(outputs, lastOutput.reshape([1].concat(lastOutput.shape)));\n        }\n        states = stepOutputs[1];\n    }\n    return [\n        lastOutput,\n        transpose(outputs, [1, 0].concat(math_utils.range(2, outputs.shape.length))),\n        states\n    ];\n}\nexports.rnn = rnn;\nfunction gradients(lossFn, variables) {\n    var variableList = variables.map(function (variable) { return variable.read(); });\n    var valudAndGrads = tfjs_core_1.variableGrads(lossFn, variableList);\n    return variables.map(function (variable) { return valudAndGrads.grads[variable.name]; });\n}\nexports.gradients = gradients;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/backend/tfjs_backend.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar array_ops_1 = require(\"./array_ops\");\nvar batchnorm_1 = require(\"./batchnorm\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar compare_1 = require(\"./compare\");\nvar concat_1 = require(\"./concat\");\nvar conv_1 = require(\"./conv\");\nvar image_ops_1 = require(\"./image_ops\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar loss_ops_1 = require(\"./loss_ops\");\nvar lrn_1 = require(\"./lrn\");\nvar lstm_1 = require(\"./lstm\");\nvar matmul_1 = require(\"./matmul\");\nvar moving_average_1 = require(\"./moving_average\");\nvar norm_1 = require(\"./norm\");\nvar pool_1 = require(\"./pool\");\nvar reduction_ops_1 = require(\"./reduction_ops\");\nvar reverse_1 = require(\"./reverse\");\nvar slice_1 = require(\"./slice\");\nvar softmax_1 = require(\"./softmax\");\nvar transpose_1 = require(\"./transpose\");\nvar unary_ops_1 = require(\"./unary_ops\");\nexports.batchNormalization = batchnorm_1.BatchNormOps.batchNormalization;\nexports.batchNormalization2d = batchnorm_1.BatchNormOps.batchNormalization2d;\nexports.batchNormalization3d = batchnorm_1.BatchNormOps.batchNormalization3d;\nexports.batchNormalization4d = batchnorm_1.BatchNormOps.batchNormalization4d;\nexports.concat = concat_1.ConcatOps.concat;\nexports.concat1d = concat_1.ConcatOps.concat1d;\nexports.concat2d = concat_1.ConcatOps.concat2d;\nexports.concat3d = concat_1.ConcatOps.concat3d;\nexports.concat4d = concat_1.ConcatOps.concat4d;\nexports.conv1d = conv_1.ConvOps.conv1d;\nexports.conv2d = conv_1.ConvOps.conv2d;\nexports.conv2dTranspose = conv_1.ConvOps.conv2dTranspose;\nexports.depthwiseConv2d = conv_1.ConvOps.depthwiseConv2d;\nexports.separableConv2d = conv_1.ConvOps.separableConv2d;\nexports.matMul = matmul_1.MatmulOps.matMul;\nexports.matrixTimesVector = matmul_1.MatmulOps.matrixTimesVector;\nexports.outerProduct = matmul_1.MatmulOps.outerProduct;\nexports.vectorTimesMatrix = matmul_1.MatmulOps.vectorTimesMatrix;\nexports.avgPool = pool_1.PoolOps.avgPool;\nexports.maxPool = pool_1.PoolOps.maxPool;\nexports.transpose = transpose_1.TransposeOps.transpose;\nexports.reverse = reverse_1.ReverseOps.reverse;\nexports.reverse1d = reverse_1.ReverseOps.reverse1d;\nexports.reverse2d = reverse_1.ReverseOps.reverse2d;\nexports.reverse3d = reverse_1.ReverseOps.reverse3d;\nexports.reverse4d = reverse_1.ReverseOps.reverse4d;\nexports.slice = slice_1.SliceOps.slice;\nexports.slice1d = slice_1.SliceOps.slice1d;\nexports.slice2d = slice_1.SliceOps.slice2d;\nexports.slice3d = slice_1.SliceOps.slice3d;\nexports.slice4d = slice_1.SliceOps.slice4d;\nexports.argMax = reduction_ops_1.ReductionOps.argMax;\nexports.argMin = reduction_ops_1.ReductionOps.argMin;\nexports.logSumExp = reduction_ops_1.ReductionOps.logSumExp;\nexports.max = reduction_ops_1.ReductionOps.max;\nexports.mean = reduction_ops_1.ReductionOps.mean;\nexports.min = reduction_ops_1.ReductionOps.min;\nexports.moments = reduction_ops_1.ReductionOps.moments;\nexports.sum = reduction_ops_1.ReductionOps.sum;\nexports.equal = compare_1.CompareOps.equal;\nexports.equalStrict = compare_1.CompareOps.equalStrict;\nexports.greater = compare_1.CompareOps.greater;\nexports.greaterStrict = compare_1.CompareOps.greaterStrict;\nexports.greaterEqual = compare_1.CompareOps.greaterEqual;\nexports.greaterEqualStrict = compare_1.CompareOps.greaterEqualStrict;\nexports.less = compare_1.CompareOps.less;\nexports.lessStrict = compare_1.CompareOps.lessStrict;\nexports.lessEqual = compare_1.CompareOps.lessEqual;\nexports.lessEqualStrict = compare_1.CompareOps.lessEqualStrict;\nexports.notEqual = compare_1.CompareOps.notEqual;\nexports.notEqualStrict = compare_1.CompareOps.notEqualStrict;\nexports.logicalNot = logical_ops_1.LogicalOps.logicalNot;\nexports.logicalAnd = logical_ops_1.LogicalOps.logicalAnd;\nexports.logicalOr = logical_ops_1.LogicalOps.logicalOr;\nexports.logicalXor = logical_ops_1.LogicalOps.logicalXor;\nexports.where = logical_ops_1.LogicalOps.where;\nexports.abs = unary_ops_1.UnaryOps.abs;\nexports.acos = unary_ops_1.UnaryOps.acos;\nexports.acosh = unary_ops_1.UnaryOps.acosh;\nexports.asin = unary_ops_1.UnaryOps.asin;\nexports.asinh = unary_ops_1.UnaryOps.asinh;\nexports.atan = unary_ops_1.UnaryOps.atan;\nexports.atanh = unary_ops_1.UnaryOps.atanh;\nexports.ceil = unary_ops_1.UnaryOps.ceil;\nexports.clipByValue = unary_ops_1.UnaryOps.clipByValue;\nexports.cos = unary_ops_1.UnaryOps.cos;\nexports.cosh = unary_ops_1.UnaryOps.cosh;\nexports.elu = unary_ops_1.UnaryOps.elu;\nexports.exp = unary_ops_1.UnaryOps.exp;\nexports.expm1 = unary_ops_1.UnaryOps.expm1;\nexports.floor = unary_ops_1.UnaryOps.floor;\nexports.sign = unary_ops_1.UnaryOps.sign;\nexports.leakyRelu = unary_ops_1.UnaryOps.leakyRelu;\nexports.log = unary_ops_1.UnaryOps.log;\nexports.log1p = unary_ops_1.UnaryOps.log1p;\nexports.logSigmoid = unary_ops_1.UnaryOps.logSigmoid;\nexports.neg = unary_ops_1.UnaryOps.neg;\nexports.prelu = unary_ops_1.UnaryOps.prelu;\nexports.relu = unary_ops_1.UnaryOps.relu;\nexports.reciprocal = unary_ops_1.UnaryOps.reciprocal;\nexports.round = unary_ops_1.UnaryOps.round;\nexports.selu = unary_ops_1.UnaryOps.selu;\nexports.sigmoid = unary_ops_1.UnaryOps.sigmoid;\nexports.sin = unary_ops_1.UnaryOps.sin;\nexports.sinh = unary_ops_1.UnaryOps.sinh;\nexports.softplus = unary_ops_1.UnaryOps.softplus;\nexports.sqrt = unary_ops_1.UnaryOps.sqrt;\nexports.rsqrt = unary_ops_1.UnaryOps.rsqrt;\nexports.square = unary_ops_1.UnaryOps.square;\nexports.step = unary_ops_1.UnaryOps.step;\nexports.tan = unary_ops_1.UnaryOps.tan;\nexports.tanh = unary_ops_1.UnaryOps.tanh;\nexports.erf = unary_ops_1.UnaryOps.erf;\nexports.add = binary_ops_1.BinaryOps.add;\nexports.addStrict = binary_ops_1.BinaryOps.addStrict;\nexports.atan2 = binary_ops_1.BinaryOps.atan2;\nexports.div = binary_ops_1.BinaryOps.div;\nexports.divStrict = binary_ops_1.BinaryOps.divStrict;\nexports.maximum = binary_ops_1.BinaryOps.maximum;\nexports.maximumStrict = binary_ops_1.BinaryOps.maximumStrict;\nexports.minimum = binary_ops_1.BinaryOps.minimum;\nexports.minimumStrict = binary_ops_1.BinaryOps.minimumStrict;\nexports.mod = binary_ops_1.BinaryOps.mod;\nexports.modStrict = binary_ops_1.BinaryOps.modStrict;\nexports.mul = binary_ops_1.BinaryOps.mul;\nexports.mulStrict = binary_ops_1.BinaryOps.mulStrict;\nexports.pow = binary_ops_1.BinaryOps.pow;\nexports.powStrict = binary_ops_1.BinaryOps.powStrict;\nexports.sub = binary_ops_1.BinaryOps.sub;\nexports.subStrict = binary_ops_1.BinaryOps.subStrict;\nexports.squaredDifference = binary_ops_1.BinaryOps.squaredDifference;\nexports.squaredDifferenceStrict = binary_ops_1.BinaryOps.squaredDifferenceStrict;\nexports.norm = norm_1.NormOps.norm;\nexports.cast = array_ops_1.ArrayOps.cast;\nexports.clone = array_ops_1.ArrayOps.clone;\nexports.fromPixels = array_ops_1.ArrayOps.fromPixels;\nexports.toPixels = array_ops_1.ArrayOps.toPixels;\nexports.ones = array_ops_1.ArrayOps.ones;\nexports.onesLike = array_ops_1.ArrayOps.onesLike;\nexports.zeros = array_ops_1.ArrayOps.zeros;\nexports.zerosLike = array_ops_1.ArrayOps.zerosLike;\nexports.rand = array_ops_1.ArrayOps.rand;\nexports.randomNormal = array_ops_1.ArrayOps.randomNormal;\nexports.truncatedNormal = array_ops_1.ArrayOps.truncatedNormal;\nexports.randomUniform = array_ops_1.ArrayOps.randomUniform;\nexports.multinomial = array_ops_1.ArrayOps.multinomial;\nexports.reshape = array_ops_1.ArrayOps.reshape;\nexports.squeeze = array_ops_1.ArrayOps.squeeze;\nexports.tile = array_ops_1.ArrayOps.tile;\nexports.gather = array_ops_1.ArrayOps.gather;\nexports.oneHot = array_ops_1.ArrayOps.oneHot;\nexports.linspace = array_ops_1.ArrayOps.linspace;\nexports.range = array_ops_1.ArrayOps.range;\nexports.buffer = array_ops_1.ArrayOps.buffer;\nexports.fill = array_ops_1.ArrayOps.fill;\nexports.tensor = array_ops_1.ArrayOps.tensor;\nexports.scalar = array_ops_1.ArrayOps.scalar;\nexports.tensor1d = array_ops_1.ArrayOps.tensor1d;\nexports.tensor2d = array_ops_1.ArrayOps.tensor2d;\nexports.tensor3d = array_ops_1.ArrayOps.tensor3d;\nexports.tensor4d = array_ops_1.ArrayOps.tensor4d;\nexports.print = array_ops_1.ArrayOps.print;\nexports.expandDims = array_ops_1.ArrayOps.expandDims;\nexports.stack = array_ops_1.ArrayOps.stack;\nexports.split = array_ops_1.ArrayOps.split;\nexports.pad = array_ops_1.ArrayOps.pad;\nexports.pad1d = array_ops_1.ArrayOps.pad1d;\nexports.pad2d = array_ops_1.ArrayOps.pad2d;\nexports.pad3d = array_ops_1.ArrayOps.pad3d;\nexports.pad4d = array_ops_1.ArrayOps.pad4d;\nexports.movingAverage = moving_average_1.MovingAverageOps.movingAverage;\nexports.basicLSTMCell = lstm_1.LSTMOps.basicLSTMCell;\nexports.multiRNNCell = lstm_1.LSTMOps.multiRNNCell;\nexports.softmax = softmax_1.SoftmaxOps.softmax;\nexports.localResponseNormalization = lrn_1.LRNOps.localResponseNormalization;\nvar tensor_1 = require(\"../tensor\");\nvar types_1 = require(\"../types\");\n[tensor_1.Tensor, types_1.Rank];\n[loss_ops_1.Reduction];\nexports.losses = {\n    softmaxCrossEntropy: softmax_1.SoftmaxOps.softmaxCrossEntropy,\n    absoluteDifference: loss_ops_1.LossOps.absoluteDifference,\n    computeWeightedLoss: loss_ops_1.LossOps.computeWeightedLoss\n};\nexports.image = {\n    resizeBilinear: image_ops_1.ImageOps.resizeBilinear,\n    resizeNearestNeighbor: image_ops_1.ImageOps.resizeNearestNeighbor,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/ops.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globals_1 = require(\"../globals\");\nfunction operation(target, name, descriptor) {\n    var fn = descriptor.value;\n    descriptor.value = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return globals_1.tidy(name, function () { return fn.apply(void 0, args); });\n    };\n    return descriptor;\n}\nexports.operation = operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/operation.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"../backend/tfjs_backend\");\nvar errors_1 = require(\"../errors\");\nvar serialization_1 = require(\"../layers/serialization\");\nvar types_1 = require(\"../types\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar serialization_utils_1 = require(\"../utils/serialization_utils\");\nvar InputSpec = (function () {\n    function InputSpec(config) {\n        this.dtype = config.dtype;\n        this.shape = config.shape;\n        if (config.shape != null) {\n            this.ndim = config.shape.length;\n        }\n        else {\n            this.ndim = config.ndim;\n        }\n        this.maxNDim = config.maxNDim;\n        this.minNDim = config.minNDim;\n        this.axes = config.axes || {};\n    }\n    return InputSpec;\n}());\nexports.InputSpec = InputSpec;\nvar _nextNodeID = 0;\nvar Node = (function () {\n    function Node(config, callArgs) {\n        this.callArgs = callArgs;\n        this.id = _nextNodeID++;\n        this.outboundLayer = config.outboundLayer;\n        this.inboundLayers = config.inboundLayers;\n        this.nodeIndices = config.nodeIndices;\n        this.tensorIndices = config.tensorIndices;\n        this.inputTensors = config.inputTensors;\n        this.outputTensors = config.outputTensors;\n        this.inputMasks = config.inputMasks;\n        this.outputMasks = config.outputMasks;\n        this.inputShapes = config.inputShapes;\n        this.outputShapes = config.outputShapes;\n        for (var _i = 0, _a = config.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                layer.outboundNodes.push(this);\n            }\n        }\n        config.outboundLayer.inboundNodes.push(this);\n    }\n    Node.prototype.getConfig = function () {\n        var inboundNames = [];\n        for (var _i = 0, _a = this.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                inboundNames.push(layer.name);\n            }\n            else {\n                inboundNames.push(null);\n            }\n        }\n        return {\n            outboundLayer: this.outboundLayer ? this.outboundLayer.name : null,\n            inboundLayers: inboundNames,\n            nodeIndices: this.nodeIndices,\n            tensorIndices: this.tensorIndices\n        };\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar _nextLayerID = 0;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer(config) {\n        var _this = _super.call(this) || this;\n        _this._callHook = null;\n        _this._addedWeightNames = [];\n        _this._stateful = false;\n        _this.id = _nextLayerID++;\n        _this.activityRegularizer = null;\n        _this.inputSpec = null;\n        _this.supportsMasking = false;\n        _this._trainableWeights = [];\n        _this._nonTrainableWeights = [];\n        _this._losses = [];\n        _this._updates = [];\n        _this._built = false;\n        _this.inboundNodes = [];\n        _this.outboundNodes = [];\n        var name = config.name;\n        if (!name) {\n            var prefix = _this.getClassName();\n            name = generic_utils.toSnakeCase(prefix) + '_' + K.getUid(prefix);\n        }\n        _this.name = name;\n        _this.trainable = generic_utils.pyGetAttr(config, 'trainable', true);\n        _this.updatable = generic_utils.pyGetAttr(config, 'updatable', true);\n        if (config.inputShape != null || config.batchInputShape != null) {\n            var batchInputShape = void 0;\n            if (config.batchInputShape != null) {\n                batchInputShape = config.batchInputShape;\n            }\n            else if (config.inputShape != null) {\n                var batchSize = null;\n                if (config.batchSize != null) {\n                    batchSize = config.batchSize;\n                }\n                batchInputShape = [batchSize].concat(config.inputShape);\n            }\n            _this.batchInputShape = batchInputShape;\n            var dtype = config.dtype;\n            if (dtype == null) {\n                dtype = config.inputDType;\n            }\n            if (dtype == null) {\n                dtype = K.floatx();\n            }\n            _this.dtype = dtype;\n        }\n        if (config.weights != null) {\n            _this.initialWeights = config.weights;\n        }\n        else {\n            _this.initialWeights = null;\n        }\n        return _this;\n    }\n    Layer.nodeKey = function (layer, nodeIndex) {\n        return layer.name + '_ib-' + nodeIndex.toString();\n    };\n    Layer.prototype.getNodeAtIndex = function (nodeIndex, attrName) {\n        if (this.inboundNodes.length === 0) {\n            throw new errors_1.RuntimeError('The layer has never been called ' +\n                (\"and thus has no defined \" + attrName + \".\"));\n        }\n        if (this.inboundNodes.length <= nodeIndex) {\n            throw new errors_1.ValueError(\"Asked to get \" + attrName + \" at node \" + nodeIndex + \", \" +\n                (\"but the layer has only \" + this.inboundNodes.length + \" inbound nodes.\"));\n        }\n        return this.inboundNodes[nodeIndex];\n    };\n    Layer.prototype.getInputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'input').inputTensors);\n    };\n    Layer.prototype.getOutputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'output').outputTensors);\n    };\n    Object.defineProperty(Layer.prototype, \"input\", {\n        get: function () {\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer input\" ' +\n                    'is ill-defined. ' +\n                    'Use `getInputAt(nodeIndex)` instead.');\n            }\n            else if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' is not connected, no input to return.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'input').inputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"output\", {\n        get: function () {\n            if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has no inbound nodes.');\n            }\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer output\" ' +\n                    'is ill-defined. ' +\n                    'Use `getOutputAt(nodeIndex)` instead.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'output').outputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"losses\", {\n        get: function () {\n            return this._losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.calculateLosses = function () {\n        return this.losses.map(function (lossFn) { return lossFn(); });\n    };\n    Object.defineProperty(Layer.prototype, \"updates\", {\n        get: function () {\n            return this._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"built\", {\n        get: function () {\n            return this._built;\n        },\n        set: function (built) {\n            this._built = built;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"trainableWeights\", {\n        get: function () {\n            if (this.trainable) {\n                return this._trainableWeights;\n            }\n            else {\n                return [];\n            }\n        },\n        set: function (weights) {\n            this._trainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return this._trainableWeights.concat(this._nonTrainableWeights);\n            }\n            else {\n                return this._nonTrainableWeights;\n            }\n        },\n        set: function (weights) {\n            this._nonTrainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"weights\", {\n        get: function () {\n            return this.trainableWeights.concat(this.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"stateful\", {\n        get: function () {\n            return this._stateful;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.assertInputCompatibility = function (inputs) {\n        inputs = generic_utils.toList(inputs);\n        if (this.inputSpec == null || this.inputSpec.length === 0) {\n            return;\n        }\n        var inputSpec = generic_utils.toList(this.inputSpec);\n        if (inputs.length !== inputSpec.length) {\n            throw new errors_1.ValueError(\"Layer \" + this.name + \" expects \" + inputSpec.length + \" inputs, \" +\n                (\"but it received \" + inputs.length + \" input tensors. \") +\n                (\"Input received: \" + inputs));\n        }\n        for (var inputIndex = 0; inputIndex < inputs.length; inputIndex++) {\n            var x = inputs[inputIndex];\n            var spec = inputSpec[inputIndex];\n            if (spec == null) {\n                continue;\n            }\n            var ndim = K.ndim(x);\n            if (spec.ndim != null) {\n                if (ndim !== spec.ndim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \": \" +\n                        (\"expected ndim=\" + spec.ndim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.maxNDim != null) {\n                if (ndim > spec.maxNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected max_ndim=\" + spec.maxNDim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.minNDim != null) {\n                if (ndim < spec.minNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected min_ndim=\" + spec.minNDim + \", found ndim=\" + ndim + \".\"));\n                }\n            }\n            if (spec.dtype != null) {\n                if (K.dtype(x) !== spec.dtype) {\n                    var xDType = K.dtype(x);\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \" \" +\n                        (\": expected dtype=\" + spec.dtype + \", found dtype=\" + xDType + \".\"));\n                }\n            }\n            if (spec.axes) {\n                var xShape = K.intShape(x);\n                for (var key in spec.axes) {\n                    var axis = Number(key);\n                    var value = spec.axes[key];\n                    var xShapeAtAxis = axis >= 0 ? xShape[axis] : xShape[xShape.length + axis];\n                    if (value != null && [value, null].indexOf(xShapeAtAxis) === -1) {\n                        throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                            (this.name + \": expected axis \" + axis + \" of input shape to \") +\n                            (\"have value \" + value + \" but got shape \" + xShape + \".\"));\n                    }\n                }\n            }\n            if (spec.shape != null) {\n                var xShape = K.intShape(x);\n                for (var i = 0; i < spec.shape.length; ++i) {\n                    var specDim = spec.shape[i];\n                    var dim = xShape[i];\n                    if (specDim != null && dim != null) {\n                        if (specDim !== dim) {\n                            throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                                (this.name + \": expected shape=\" + spec.shape + \", \") +\n                                'found shape=${xShape}.');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layer.prototype.call = function (inputs, kwargs) {\n        return inputs;\n    };\n    Layer.prototype.invokeCallHook = function (inputs, kwargs) {\n        if (this._callHook != null) {\n            this._callHook(inputs, kwargs);\n        }\n    };\n    Layer.prototype.setCallHook = function (callHook) {\n        this._callHook = callHook;\n    };\n    Layer.prototype.clearCallHook = function () {\n        this._callHook = null;\n    };\n    Layer.prototype.apply = function (inputs, kwargs) {\n        var _this = this;\n        kwargs = kwargs || {};\n        var inputsList = generic_utils.toList(inputs);\n        var allAreSymbolic = true;\n        for (var _i = 0, inputsList_1 = inputsList; _i < inputsList_1.length; _i++) {\n            var input = inputsList_1[_i];\n            if (!(input instanceof types_1.SymbolicTensor)) {\n                allAreSymbolic = false;\n                break;\n            }\n        }\n        var noneAreSymbolic = true;\n        for (var _a = 0, inputsList_2 = inputsList; _a < inputsList_2.length; _a++) {\n            var input = inputsList_2[_a];\n            if (input instanceof types_1.SymbolicTensor) {\n                noneAreSymbolic = false;\n                break;\n            }\n        }\n        if (allAreSymbolic === noneAreSymbolic) {\n            throw new errors_1.ValueError('Arguments to apply() must be all ' +\n                'SymbolicTensors or all Tensors');\n        }\n        return K.nameScope(this.name, function () {\n            if (!_this.built) {\n                _this.assertInputCompatibility(inputs);\n                var inputShapes = [];\n                for (var _i = 0, _a = generic_utils.toList(inputs); _i < _a.length; _i++) {\n                    var xElem = _a[_i];\n                    inputShapes.push(K.intShape(xElem));\n                }\n                _this.build(generic_utils.singletonOrArray(inputShapes));\n                _this.built = true;\n                if (_this.initialWeights) {\n                    _this.setWeights(_this.initialWeights);\n                }\n            }\n            _this.assertInputCompatibility(inputs);\n            if (noneAreSymbolic) {\n                var output = _this.call(inputs, kwargs);\n                var outputList = generic_utils.toList(output);\n                var outputListCopy = [];\n                for (var _b = 0, outputList_1 = outputList; _b < outputList_1.length; _b++) {\n                    var x = outputList_1[_b];\n                    if (inputsList.indexOf(x) !== -1) {\n                        x = K.identity(x);\n                    }\n                    outputListCopy.push(x);\n                }\n                output = generic_utils.singletonOrArray(outputListCopy);\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n            else {\n                var inputShape = collectInputShape(inputs);\n                var outputShape = _this.computeOutputShape(inputShape);\n                var output = void 0;\n                var outputDType_1 = guessOutputDType(inputs);\n                if (outputShape != null && outputShape.length > 0 &&\n                    Array.isArray(outputShape[0])) {\n                    output = outputShape\n                        .map(function (shape, index) { return new types_1.SymbolicTensor(outputDType_1, shape, _this, generic_utils.toList(inputs), kwargs, _this.name, index); });\n                }\n                else {\n                    output = new types_1.SymbolicTensor(outputDType_1, outputShape, _this, generic_utils.toList(inputs), kwargs, _this.name);\n                }\n                _this.addInboundNode(inputs, output, null, null, inputShape, outputShape, kwargs);\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n        });\n    };\n    Layer.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Layer.prototype.getWeights = function () {\n        return K.batchGetValue(this.weights);\n    };\n    Layer.prototype.setWeights = function (weights) {\n        var params = this.weights;\n        if (params.length !== weights.length) {\n            throw new errors_1.ValueError(\"You called setWeights(weights) on layer \\\"\" + this.name + \"\\\" \" +\n                (\"with a weight list of length \" + weights.length + \", \") +\n                (\"but the layer was expecting \" + params.length + \" weights. \") +\n                (\"Provided weights: \" + weights + \"...\"));\n        }\n        if (params.length === 0) {\n            return;\n        }\n        var weightValueTuples = [];\n        var paramValues = K.batchGetValue(params);\n        for (var i = 0; i < paramValues.length; ++i) {\n            var pv = paramValues[i];\n            var p = params[i];\n            var w = weights[i];\n            if (!tfjs_core_1.util.arraysEqual(pv.shape, w.shape)) {\n                throw new errors_1.ValueError(\"Layer weight shape \" + pv.shape + \" \" +\n                    (\"not compatible with provided weight shape \" + w.shape));\n            }\n            weightValueTuples.push([p, w]);\n        }\n        K.batchSetValue(weightValueTuples);\n    };\n    Layer.prototype.addWeight = function (name, shape, dtype, initializer, regularizer, trainable, constraint) {\n        if (this._addedWeightNames.indexOf(name) !== -1) {\n            throw new errors_1.ValueError(\"Duplicate weight name \" + name + \" for layer \" + this.name);\n        }\n        this._addedWeightNames.push(name);\n        if (dtype == null) {\n            dtype = K.floatx();\n        }\n        var weight = new types_1.LayerVariable(initializer.apply(shape, dtype), dtype, name, trainable, constraint);\n        if (regularizer != null) {\n            this.addLoss(function () { return regularizer.apply(weight.read()); });\n        }\n        if (trainable == null) {\n            trainable = true;\n        }\n        if (trainable) {\n            this._trainableWeights.push(weight);\n        }\n        else {\n            this._nonTrainableWeights.push(weight);\n        }\n        return weight;\n    };\n    Layer.prototype.addLoss = function (losses) {\n        if (losses == null || Array.isArray(losses) && losses.length === 0) {\n            return;\n        }\n        losses = generic_utils.toList(losses);\n        if (this._losses !== undefined && this._losses !== null) {\n            (_a = this.losses).push.apply(_a, losses);\n        }\n        var _a;\n    };\n    Layer.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    Layer.prototype.computeMask = function (inputs, mask) {\n        var _this = this;\n        if (!this.supportsMasking) {\n            if (mask != null) {\n                if (Array.isArray(mask)) {\n                    mask.forEach(function (maskElement) {\n                        if (maskElement != null) {\n                            throw new TypeError(\"Layer \" + _this.name + \" does not support masking,\" +\n                                'but was passed an inputMask.');\n                        }\n                    });\n                }\n                else {\n                    throw new TypeError(\"Layer \" + this.name + \" does not support masking,\" +\n                        'but was passed an inputMask.');\n                }\n            }\n            return null;\n        }\n        return mask;\n    };\n    Layer.prototype.addInboundNode = function (inputTensors, outputTensors, inputMasks, outputMasks, inputShapes, outputShapes, kwargs) {\n        if (kwargs === void 0) { kwargs = null; }\n        var inputTensorList = generic_utils.toList(inputTensors);\n        outputTensors = generic_utils.toList(outputTensors);\n        inputMasks = generic_utils.toList(inputMasks);\n        outputMasks = generic_utils.toList(outputMasks);\n        inputShapes = generic_utils.normalizeShapeList(inputShapes);\n        outputShapes = generic_utils.normalizeShapeList(outputShapes);\n        var inboundLayers = [];\n        var nodeIndices = [];\n        var tensorIndices = [];\n        for (var _i = 0, inputTensorList_1 = inputTensorList; _i < inputTensorList_1.length; _i++) {\n            var x = inputTensorList_1[_i];\n            inboundLayers.push(x.sourceLayer);\n            nodeIndices.push(x.nodeIndex);\n            tensorIndices.push(x.tensorIndex);\n        }\n        new Node({\n            outboundLayer: this,\n            inboundLayers: inboundLayers,\n            nodeIndices: nodeIndices,\n            tensorIndices: tensorIndices,\n            inputTensors: inputTensorList,\n            outputTensors: outputTensors,\n            inputMasks: inputMasks,\n            outputMasks: outputMasks,\n            inputShapes: inputShapes,\n            outputShapes: outputShapes\n        }, kwargs);\n        for (var i = 0; i < outputTensors.length; i++) {\n            outputTensors[i].sourceLayer = this;\n            outputTensors[i].nodeIndex = this.inboundNodes.length - 1;\n            outputTensors[i].tensorIndex = i;\n        }\n    };\n    Layer.prototype.getConfig = function () {\n        var config = { name: this.name, trainable: this.trainable };\n        if (this.batchInputShape != null) {\n            config['batchInputShape'] = this.batchInputShape;\n        }\n        if (this.dtype != null) {\n            config['dtype'] = this.dtype;\n        }\n        return config;\n    };\n    Layer.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', 'subheading': 'Classes' })\n    ], Layer.prototype, \"apply\", null);\n    Layer = __decorate([\n        tfjs_core_1.doc({ heading: 'Layers', subheading: 'Classes', namespace: 'layers' })\n    ], Layer);\n    return Layer;\n}(types_1.Serializable));\nexports.Layer = Layer;\nfunction collectInputShape(inputTensors) {\n    inputTensors =\n        generic_utils.toList(inputTensors);\n    var shapes = [];\n    for (var _i = 0, inputTensors_1 = inputTensors; _i < inputTensors_1.length; _i++) {\n        var x = inputTensors_1[_i];\n        shapes.push(K.intShape(x));\n    }\n    return generic_utils.singletonOrArray(shapes);\n}\nfunction guessOutputDType(inputTensors) {\n    return types_1.DType.float32;\n}\nvar InputLayer = (function (_super) {\n    __extends(InputLayer, _super);\n    function InputLayer(config) {\n        var _this = _super.call(this, {\n            dtype: config.dtype,\n            name: config.name != null ? config.name : K.getUid('input').toString()\n        }) || this;\n        if (config.batchSize == null) {\n            config.batchSize = null;\n        }\n        if (config.sparse == null) {\n            config.sparse = false;\n        }\n        _this.trainable = false;\n        _this.built = true;\n        _this.sparse = config.sparse;\n        if (config.inputShape != null && config.batchInputShape != null) {\n            throw new errors_1.ValueError('Only provide the inputShape OR ' +\n                'batchInputShape argument to inputLayer, not both at the same time.');\n        }\n        var batchInputShape = config.batchInputShape;\n        if (batchInputShape == null) {\n            if (config.inputShape == null) {\n                throw new errors_1.ValueError('An InputLayer should be passed either a ' +\n                    '`batchInputShape` or an `inputShape`.');\n            }\n            else {\n                batchInputShape = [config.batchSize].concat(config.inputShape);\n            }\n        }\n        else {\n            if (config.batchSize != null) {\n                throw new errors_1.ValueError('Cannot specify batchSize if batchInputShape is' +\n                    'specified when creating an InputLayer.');\n            }\n        }\n        var dtype = config.dtype || K.floatx();\n        _this.batchInputShape = batchInputShape;\n        _this.dtype = dtype;\n        _this.inputSpec = [{ shape: batchInputShape }];\n        var inputTensor = new types_1.SymbolicTensor(_this.dtype, _this.batchInputShape, _this, [], {}, _this.name);\n        inputTensor.nodeIndex = 0;\n        inputTensor.tensorIndex = 0;\n        new Node({\n            outboundLayer: _this,\n            inboundLayers: [],\n            nodeIndices: [],\n            tensorIndices: [],\n            inputTensors: [inputTensor],\n            outputTensors: [inputTensor],\n            inputMasks: [null],\n            outputMasks: [null],\n            inputShapes: [batchInputShape],\n            outputShapes: [batchInputShape]\n        });\n        return _this;\n    }\n    InputLayer.prototype.apply = function (inputs, kwargs) {\n        throw new errors_1.ValueError('Cannot pass any input to an ' +\n            (\"InputLayer's apply() method. InputLayer name: \" + this.name));\n    };\n    InputLayer.prototype.getClassName = function () {\n        return 'InputLayer';\n    };\n    InputLayer.prototype.getConfig = function () {\n        return {\n            batchInputShape: this.batchInputShape,\n            dtype: this.dtype,\n            sparse: this.sparse,\n            name: this.name\n        };\n    };\n    return InputLayer;\n}(Layer));\nexports.InputLayer = InputLayer;\ngeneric_utils.ClassNameMap.register('InputLayer', InputLayer);\nfunction Input(config) {\n    if (config.batchShape == null && config.shape == null) {\n        throw new Error('Please provide to Input either a `shape`' +\n            ' or a `batchShape` argument. Note that ' +\n            '`shape` does not include the batch ' +\n            'dimension.');\n    }\n    if (config.batchShape != null && config.shape != null) {\n        throw new errors_1.ValueError('Please provide either a `shape` or `batchShape` ' +\n            'argument to Input, but not both.');\n    }\n    var batchShape = config.batchShape;\n    if (config.shape != null && batchShape == null) {\n        batchShape = [null].concat(config.shape);\n    }\n    var dtype = config.dtype;\n    if (dtype == null) {\n        dtype = K.floatx();\n    }\n    var inputLayer = new InputLayer({\n        batchInputShape: batchShape,\n        name: config.name,\n        dtype: dtype,\n        sparse: config.sparse\n    });\n    var outputs = inputLayer.inboundNodes[0].outputTensors;\n    return outputs[0];\n}\nexports.Input = Input;\nvar Container = (function (_super) {\n    __extends(Container, _super);\n    function Container(config) {\n        var _this = _super.call(this, {}) || this;\n        _this.containerNodes = new Set();\n        _this.name = config.name;\n        if (_this.name == null) {\n            var prefix = _this.getClassName().toLowerCase();\n            _this.name = K.getUid(prefix);\n        }\n        _this.supportsMasking = false;\n        _this.trainable = true;\n        _this.updatable = true;\n        if (Array.isArray(config.inputs)) {\n            _this.inputs = config.inputs.slice();\n        }\n        else {\n            _this.inputs = [config.inputs];\n        }\n        if (Array.isArray(config.outputs)) {\n            _this.outputs = config.outputs.slice();\n        }\n        else {\n            _this.outputs = [config.outputs];\n        }\n        if (generic_utils.unique(_this.inputs).length !== _this.inputs.length) {\n            throw new errors_1.ValueError('The list of inputs passed to the model is ' +\n                'redundant. All inputs should only appear once. Found: ' +\n                _this.inputs.map(function (x) { return x.name; }));\n        }\n        if (generic_utils.unique(_this.outputs).length !== _this.outputs.length) {\n            console.warn('The list of outputs passed to the model is redundant. ' +\n                'All outputs should only appear once. Found: ' +\n                _this.outputs.map(function (x) { return x.name; }));\n        }\n        _this.inputLayers = [];\n        _this.inputLayersNodeIndices = [];\n        _this.inputLayersTensorIndices = [];\n        _this.outputLayers = [];\n        _this.outputLayersNodeIndices = [];\n        _this.outputLayersTensorIndices = [];\n        _this.layers = [];\n        for (var _i = 0, _a = _this.outputs; _i < _a.length; _i++) {\n            var x = _a[_i];\n            var layer = x.sourceLayer;\n            var nodeIndex = x.nodeIndex;\n            var tensorIndex = x.tensorIndex;\n            _this.outputLayers.push(layer);\n            _this.outputLayersNodeIndices.push(nodeIndex);\n            _this.outputLayersTensorIndices.push(tensorIndex);\n        }\n        for (var _b = 0, _c = _this.inputs; _b < _c.length; _b++) {\n            var x = _c[_b];\n            var layer = x.sourceLayer;\n            var nodeIndex = x.nodeIndex;\n            var tensorIndex = x.tensorIndex;\n            generic_utils.assert(nodeIndex === 0, 'input layer has >1 nodes');\n            generic_utils.assert(tensorIndex === 0, 'input layer has >1 tensors');\n            _this.inputLayers.push(layer);\n            _this.inputLayersNodeIndices.push(nodeIndex);\n            _this.inputLayersTensorIndices.push(tensorIndex);\n        }\n        _this.inputNames = [];\n        _this.outputNames = [];\n        _this.feedInputShapes = [];\n        _this.feedInputNames = [];\n        _this.feedOutputNames = [];\n        for (var i = 0; i < _this.inputLayers.length; i++) {\n            var layer = _this.inputLayers[i];\n            if (!(layer instanceof InputLayer)) {\n                throw new TypeError('Input layers to a Model must be InputLayer objects. ' +\n                    (\"Received inputs: \" + config.inputs + \". \") +\n                    (\"Input \" + i + \" (0-based) originates \") +\n                    (\"from layer type \" + layer.getClassName() + \".\"));\n            }\n            _this.inputNames.push(layer.name);\n            _this.feedInputShapes.push(layer.batchInputShape);\n            _this.feedInputNames.push(layer.name);\n        }\n        for (var _d = 0, _e = _this.outputLayers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            _this.outputNames.push(layer.name);\n        }\n        _this.internalInputShapes = _this.inputs.map(function (x) { return x.shape; });\n        _this.internalOutputShapes = _this.outputs.map(function (x) { return x.shape; });\n        var nodesDepths = {};\n        var nodeIDToNode = {};\n        var layersDepths = {};\n        var layerIDToLayer = {};\n        var layerIndices = {};\n        var nodesInDecreasingDepth = [];\n        var buildMapOfGraph = function (tensor, finishedNodes, nodesInProgress, layer, nodeIndex, tensorIndex) {\n            if (layer == null || nodeIndex == null || tensorIndex == null) {\n                layer = tensor.sourceLayer;\n                nodeIndex = tensor.nodeIndex;\n                tensorIndex = tensor.tensorIndex;\n            }\n            var node = layer.inboundNodes[nodeIndex];\n            if (nodesInProgress.indexOf(node) !== -1) {\n                throw new errors_1.RuntimeError(\"The tensor \" + tensor.name + \" at layer \\\"\" + layer.name + \"\\\" \" +\n                    'is part of a cycle.');\n            }\n            if (finishedNodes.indexOf(node) !== -1) {\n                return;\n            }\n            _this.containerNodes.add(Container.nodeKey(layer, nodeIndex));\n            if (!(layer.id in layerIndices)) {\n                layerIndices[layer.id] = Object.keys(layerIndices).length;\n            }\n            if (nodesInProgress.indexOf(node) === -1) {\n                nodesInProgress.push(node);\n            }\n            var numInboundLayers = node.inboundLayers.length;\n            for (var i = 0; i < numInboundLayers; i++) {\n                var x = node.inputTensors[i];\n                var layer_1 = node.inboundLayers[i];\n                var nodeIndex_1 = node.nodeIndices[i];\n                var tensorIndex_1 = node.tensorIndices[i];\n                buildMapOfGraph(x, finishedNodes, nodesInProgress, layer_1, nodeIndex_1, tensorIndex_1);\n            }\n            finishedNodes.push(node);\n            while (nodesInProgress.indexOf(node) >= 0) {\n                nodesInProgress.splice(nodesInProgress.indexOf(node), 1);\n            }\n            nodesInDecreasingDepth.push(node);\n        };\n        var finishedNodes = [];\n        var nodesInProgress = [];\n        for (var _f = 0, _g = _this.outputs; _f < _g.length; _f++) {\n            var x = _g[_f];\n            buildMapOfGraph(x, finishedNodes, nodesInProgress);\n        }\n        var reversedNodesInDecreasingDepth = nodesInDecreasingDepth.slice().reverse();\n        for (var _h = 0, reversedNodesInDecreasingDepth_1 = reversedNodesInDecreasingDepth; _h < reversedNodesInDecreasingDepth_1.length; _h++) {\n            var node = reversedNodesInDecreasingDepth_1[_h];\n            nodeIDToNode[node.id] = node;\n            if (!(node.id in nodesDepths)) {\n                nodesDepths[node.id] = 0;\n            }\n            var depth = nodesDepths[node.id];\n            var previousDepth = (layersDepths[node.outboundLayer.id] == null ?\n                0 :\n                layersDepths[node.outboundLayer.id]);\n            depth = Math.max(depth, previousDepth);\n            layersDepths[node.outboundLayer.id] = depth;\n            layerIDToLayer[node.outboundLayer.id] = node.outboundLayer;\n            nodesDepths[node.id] = depth;\n            for (var i = 0; i < node.inboundLayers.length; i++) {\n                var inboundLayer = node.inboundLayers[i];\n                var nodeIndex = node.nodeIndices[i];\n                var inboundNode = inboundLayer.inboundNodes[nodeIndex];\n                var previousDepth_1 = (nodesDepths[inboundNode.id] == null ? 0 :\n                    nodesDepths[inboundNode.id]);\n                nodesDepths[inboundNode.id] = Math.max(depth + 1, previousDepth_1);\n                nodeIDToNode[inboundNode.id] = inboundNode;\n            }\n        }\n        var nodesByDepth = {};\n        for (var nodeID in nodesDepths) {\n            var depth = nodesDepths[nodeID];\n            if (!(depth in nodesByDepth)) {\n                nodesByDepth[depth] = [];\n            }\n            nodesByDepth[depth].push(nodeIDToNode[nodeID]);\n        }\n        var layersByDepth = {};\n        for (var layerID in layersDepths) {\n            var depth = layersDepths[layerID];\n            if (!(depth in layersByDepth)) {\n                layersByDepth[depth] = [];\n            }\n            layersByDepth[depth].push(layerIDToLayer[layerID]);\n        }\n        var depthKeys = Object.keys(layersByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        _this.layers = [];\n        for (var _j = 0, depthKeys_1 = depthKeys; _j < depthKeys_1.length; _j++) {\n            var depth = depthKeys_1[_j];\n            var layersForDepth = layersByDepth[depth];\n            layersForDepth.sort(function (a, b) {\n                var aIndex = layerIndices[a.id];\n                var bIndex = layerIndices[b.id];\n                if (aIndex < bIndex) {\n                    return -1;\n                }\n                if (aIndex > bIndex) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (var _k = 0, layersForDepth_1 = layersForDepth; _k < layersForDepth_1.length; _k++) {\n                var layer = layersForDepth_1[_k];\n                _this.layers.push(layer);\n            }\n        }\n        _this.layersByDepth = layersByDepth;\n        depthKeys = Object.keys(nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        var computableTensors = _this.inputs.slice();\n        var layersWithCompleteInput = [];\n        for (var _l = 0, depthKeys_2 = depthKeys; _l < depthKeys_2.length; _l++) {\n            var depth = depthKeys_2[_l];\n            for (var _m = 0, _o = nodesByDepth[depth]; _m < _o.length; _m++) {\n                var node = _o[_m];\n                var layer = node.outboundLayer;\n                if (layer != null) {\n                    for (var _p = 0, _q = node.inputTensors; _p < _q.length; _p++) {\n                        var x = _q[_p];\n                        if (computableTensors.indexOf(x) === -1) {\n                            throw new errors_1.RuntimeError(\"Graph disconnected: cannot obtain value for tensor \" + x +\n                                (\" at layer \\\"\" + layer.name + \"\\\". \") +\n                                'The following previous layers were accessed without ' +\n                                (\"issue: \" + layersWithCompleteInput));\n                        }\n                    }\n                    for (var _r = 0, _s = node.outputTensors; _r < _s.length; _r++) {\n                        var x = _s[_r];\n                        computableTensors.push(x);\n                    }\n                    layersWithCompleteInput.push(layer.name);\n                }\n            }\n        }\n        _this.nodesByDepth = nodesByDepth;\n        var allNames = _this.layers.map(function (x) { return x.name; });\n        var _loop_1 = function (name_1) {\n            var numOccurrences = allNames.filter(function (x) { return x === name_1; }).length;\n            if (numOccurrences !== 1) {\n                throw new errors_1.RuntimeError(\"The name \\\"\" + name_1 + \"\\\" is used \" + numOccurrences + \" times \" +\n                    'in the model. All layer names should be unique. Layer names: ' +\n                    JSON.stringify(allNames));\n            }\n        };\n        for (var _t = 0, allNames_1 = allNames; _t < allNames_1.length; _t++) {\n            var name_1 = allNames_1[_t];\n            _loop_1(name_1);\n        }\n        _this.outboundNodes = [];\n        _this.inboundNodes = [];\n        new Node({\n            outboundLayer: _this,\n            inboundLayers: [],\n            nodeIndices: [],\n            tensorIndices: [],\n            inputTensors: _this.inputs,\n            outputTensors: _this.outputs,\n            inputMasks: _this.inputs.map(function (x) { return null; }),\n            outputMasks: _this.outputs.map(function (x) { return null; }),\n            inputShapes: _this.inputs.map(function (x) { return x.shape; }),\n            outputShapes: _this.outputs.map(function (x) { return x.shape; })\n        });\n        _this.built = true;\n        return _this;\n    }\n    Object.defineProperty(Container.prototype, \"trainableWeights\", {\n        get: function () {\n            if (this._trainableWeights.length > 0) {\n                throw new errors_1.ValueError('Container instance unexpectedly contains _trainableWeights.' +\n                    'The trainable weights of a Container are a union of the ' +\n                    'trainable weights of its consituent Layers. Its own ' +\n                    '_trainableWeights must remain an empty Array.');\n            }\n            if (!this.trainable) {\n                return [];\n            }\n            var weights = [];\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                weights = weights.concat(layer.trainableWeights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            var weights = [];\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                weights.push.apply(weights, layer.nonTrainableWeights);\n            }\n            if (!this.trainable) {\n                var trainableWeights = [];\n                for (var _b = 0, _c = this.layers; _b < _c.length; _b++) {\n                    var layer = _c[_b];\n                    trainableWeights.push.apply(trainableWeights, layer.trainableWeights);\n                }\n                return trainableWeights.concat(weights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"weights\", {\n        get: function () {\n            return this.trainableWeights.concat(this.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Container.prototype.loadWeights = function (weightsJSON, skipMismatch, isNamedTensorMap) {\n        if (skipMismatch === void 0) { skipMismatch = false; }\n        if (isNamedTensorMap === void 0) { isNamedTensorMap = false; }\n        if (isNamedTensorMap) {\n            loadWeightsFromNamedTensorMap(weightsJSON, this.layers);\n        }\n        else {\n            loadWeightsFromJson(weightsJSON, this.layers, skipMismatch);\n        }\n    };\n    Container.prototype.updatedConfig = function () {\n        var theConfig = this.getConfig();\n        var modelConfig = {\n            className: this.getClassName(),\n            config: theConfig,\n            kerasVersion: 'tfjs-layers pre-release',\n            backend: 'TensorFlow.js'\n        };\n        return modelConfig;\n    };\n    Container.prototype.toJSON = function (unused) {\n        var modelConfig = this.updatedConfig();\n        return JSON.stringify(serialization_utils_1.convertTsToPythonic(modelConfig));\n    };\n    Container.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.toList(inputs);\n        var masks;\n        if ('mask' in kwargs) {\n            masks = generic_utils.toList(kwargs['mask']);\n        }\n        else {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        return this.runInternalGraph(inputs, masks)[0];\n    };\n    Container.prototype.computeMask = function (inputs, mask) {\n        inputs = generic_utils.toList(inputs);\n        var masks;\n        if (mask == null) {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        else {\n            masks = generic_utils.toList(mask);\n        }\n        return this.runInternalGraph(inputs, masks)[1];\n    };\n    Container.prototype.computeOutputShape = function (inputShape) {\n        var inputShapes = generic_utils.normalizeShapeList(inputShape);\n        if (inputShapes.length !== this.inputLayers.length) {\n            throw new errors_1.ValueError(\"Invalid inputShape argument \" + inputShape + \": \" +\n                (\"model has \" + this.inputLayers.length + \" tensor inputs.\"));\n        }\n        var layersToOutputShapes = {};\n        for (var i = 0; i < inputShapes.length; i++) {\n            var layer = this.inputLayers[i];\n            var inputShape_1 = inputShapes[i];\n            var shapeKey = layer.name + '_0_0';\n            layersToOutputShapes[shapeKey] = inputShape_1;\n        }\n        var depthKeys = Object.keys(this.nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        if (depthKeys.length > 1) {\n            for (var _i = 0, depthKeys_3 = depthKeys; _i < depthKeys_3.length; _i++) {\n                var depth = depthKeys_3[_i];\n                var nodes = this.nodesByDepth[depth];\n                for (var _a = 0, nodes_1 = nodes; _a < nodes_1.length; _a++) {\n                    var node = nodes_1[_a];\n                    var layer = node.outboundLayer;\n                    if (this.inputLayers.map(function (x) { return x.id; }).indexOf(layer.id) !== -1) {\n                        continue;\n                    }\n                    var inputShapes_1 = [];\n                    for (var j = 0; j < node.inboundLayers.length; j++) {\n                        var inboundLayer = node.inboundLayers[j];\n                        var nodeIndex_2 = node.nodeIndices[j];\n                        var tensorIndex = node.tensorIndices[j];\n                        var shapeKey = inboundLayer.name + \"_\" + nodeIndex_2 + \"_\" + tensorIndex;\n                        var inputShape_2 = layersToOutputShapes[shapeKey];\n                        inputShapes_1.push(inputShape_2);\n                    }\n                    var outputShape = layer.computeOutputShape(generic_utils.singletonOrArray(inputShapes_1));\n                    var outputShapes_1 = generic_utils.normalizeShapeList(outputShape);\n                    var nodeIndex = layer.inboundNodes.indexOf(node);\n                    for (var j = 0; j < outputShapes_1.length; j++) {\n                        var shapeKey = layer.name + \"_\" + nodeIndex + \"_\" + j;\n                        layersToOutputShapes[shapeKey] = outputShapes_1[j];\n                    }\n                }\n            }\n        }\n        var outputShapes = [];\n        var outputShapeKeys = [];\n        for (var i = 0; i < this.outputLayers.length; i++) {\n            var layer = this.outputLayers[i];\n            var nodeIndex = this.outputLayersNodeIndices[i];\n            var tensorIndex = this.outputLayersTensorIndices[i];\n            var shapeKey = layer.name + \"_\" + nodeIndex + \"_\" + tensorIndex;\n            outputShapeKeys.push(shapeKey);\n        }\n        for (var i = 0; i < outputShapeKeys.length; i++) {\n            var key = outputShapeKeys[i];\n            generic_utils.assert(key in layersToOutputShapes);\n            outputShapes.push(layersToOutputShapes[key]);\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Container.prototype.runInternalGraph = function (inputs, masks) {\n        if (masks == null) {\n            masks = generic_utils.pyListRepeat(null, inputs.length);\n        }\n        var tensorMap = {};\n        for (var i = 0; i < this.inputs.length; ++i) {\n            var x = this.inputs[i];\n            var y = inputs[i];\n            var mask = masks[i];\n            tensorMap[x.id] = [y, mask];\n        }\n        var depthKeys = Object.keys(this.nodesByDepth)\n            .map(function (x) { return parseInt(x, 10); })\n            .sort(generic_utils.reverseNumberCompare);\n        for (var _i = 0, depthKeys_4 = depthKeys; _i < depthKeys_4.length; _i++) {\n            var depth = depthKeys_4[_i];\n            var nodes = this.nodesByDepth[depth];\n            for (var _a = 0, nodes_2 = nodes; _a < nodes_2.length; _a++) {\n                var node = nodes_2[_a];\n                var layer = node.outboundLayer;\n                var referenceInputTensors = node.inputTensors;\n                var referenceOutputTensors = node.outputTensors;\n                var computedData = new Array();\n                for (var _b = 0, referenceInputTensors_1 = referenceInputTensors; _b < referenceInputTensors_1.length; _b++) {\n                    var x = referenceInputTensors_1[_b];\n                    if (x.id in tensorMap) {\n                        computedData.push(tensorMap[x.id]);\n                    }\n                }\n                if (computedData.length === referenceInputTensors.length) {\n                    var kwargs = {};\n                    var computedTensors = void 0;\n                    var computedMasks = void 0;\n                    var outputTensors_1 = void 0;\n                    var outputMasks_1 = void 0;\n                    if (node.callArgs != null) {\n                        kwargs = node.callArgs;\n                    }\n                    if (computedData.length === 1) {\n                        var _c = computedData[0], computedTensor = _c[0], computedMask = _c[1];\n                        if (kwargs.mask == null) {\n                            kwargs['mask'] = computedMask;\n                        }\n                        outputTensors_1 =\n                            generic_utils.toList(layer.call(computedTensor, kwargs));\n                        outputMasks_1 = generic_utils.toList(layer.computeMask(computedTensor, computedMask));\n                        computedTensors = [computedTensor];\n                        computedMasks = [computedMask];\n                    }\n                    else {\n                        computedTensors = computedData.map(function (x) { return x[0]; });\n                        computedMasks = computedData.map(function (x) { return x[1]; });\n                        if (kwargs.mask == null) {\n                            kwargs['mask'] = computedMasks;\n                        }\n                        outputTensors_1 =\n                            generic_utils.toList(layer.call(computedTensors, kwargs));\n                        outputMasks_1 = generic_utils.toList(layer.computeMask(computedTensors, computedMasks));\n                    }\n                    if (layer.activityRegularizer) {\n                        throw new errors_1.NotImplementedError('Model invocation with concrete Tensor value(s) in the ' +\n                            'presence of activity regularizer(s) is not supported yet.');\n                    }\n                    for (var i = 0; i < referenceOutputTensors.length; ++i) {\n                        var x = referenceOutputTensors[i];\n                        var y = outputTensors_1[i];\n                        var mask = outputMasks_1[i];\n                        tensorMap[x.id] = [y, mask];\n                    }\n                }\n            }\n        }\n        var outputTensors = [];\n        var outputMasks = [];\n        var outputShapes = [];\n        for (var _d = 0, _e = this.outputs; _d < _e.length; _d++) {\n            var x = _e[_d];\n            generic_utils.assert(x.id in tensorMap, \"Could not compute output \" + x.name + \" : \" + x.id);\n            var _f = tensorMap[x.id], tensor = _f[0], mask = _f[1];\n            outputShapes.push(tensor.shape);\n            outputTensors.push(tensor);\n            outputMasks.push(mask);\n        }\n        return [outputTensors, outputMasks, outputShapes];\n    };\n    Container.prototype.buildNodeConversionMap = function (layers) {\n        var nodeConversionMap = {};\n        var keptNodes;\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            keptNodes = layer instanceof Container ? 1 : 0;\n            for (var originalNodeIndex = 0; originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n                var nodeKey = Container.nodeKey(layer, originalNodeIndex);\n                if (nodeKey in this.containerNodes) {\n                    nodeConversionMap[nodeKey] = keptNodes;\n                    keptNodes += 1;\n                }\n            }\n        }\n        return nodeConversionMap;\n    };\n    Container.prototype.getLayer = function (name, index) {\n        if (index != null) {\n            if (this.layers.length <= index) {\n                throw new errors_1.ValueError(\"Was asked to retrieve layer at index \" + index + \", but model only \" +\n                    (\"has \" + this.layers.length + \" layer(s).\"));\n            }\n            else {\n                return this.layers[index];\n            }\n        }\n        else {\n            if (name == null) {\n                throw new errors_1.ValueError('Provide either a layer name or layer index');\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer.name === name) {\n                return layer;\n            }\n        }\n        throw new errors_1.ValueError(\"No such layer: \" + name);\n    };\n    Container.prototype.calculateLosses = function () {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var losses = [];\n            for (var _i = 0, _a = _this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                for (var nodeIndex = 0; nodeIndex < layer.inboundNodes.length; ++nodeIndex) {\n                    var nodeKey = Container.nodeKey(layer, nodeIndex);\n                    if (_this.containerNodes.has(nodeKey)) {\n                        losses.push.apply(losses, layer.calculateLosses());\n                    }\n                }\n            }\n            return losses;\n        });\n    };\n    Container.prototype.getConfig = function () {\n        var config = { name: this.name };\n        var nodeConversionMap = this.buildNodeConversionMap(this.layers);\n        var layerConfigs = [];\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            var layerClassName = layer.getClassName();\n            var layerConfig = layer.getConfig();\n            var filteredInboundNodes = [];\n            for (var originalNodeIndex = 0; originalNodeIndex < layer.inboundNodes.length; originalNodeIndex++) {\n                var node = layer.inboundNodes[originalNodeIndex];\n                var nodeKey = Container.nodeKey(layer, originalNodeIndex);\n                var kwargs = {};\n                if (this.containerNodes.has(nodeKey)) {\n                    if (node.callArgs) {\n                        var testString = JSON.stringify(node.callArgs);\n                        if (testString.indexOf('undefined') === -1) {\n                            kwargs = node.callArgs;\n                        }\n                        else {\n                            console.warn(\"Layer \" + layer.name + \" was passed \" +\n                                \"non-serializable keyword arguments: \" +\n                                (node.callArgs + \". They will not be included \") +\n                                \"in the serialized model (and thus will be \" +\n                                \"missing at deserialization time).\");\n                            kwargs = {};\n                        }\n                    }\n                    if (node.inboundLayers.length > 0) {\n                        var nodeData = [];\n                        for (var i = 0; i < node.inboundLayers.length; i++) {\n                            var inboundLayer = node.inboundLayers[i];\n                            var nodeIndex = node.nodeIndices[i];\n                            var tensorIndex = node.tensorIndices[i];\n                            var nodeKey_1 = Container.nodeKey(inboundLayer, nodeIndex);\n                            var newNodeIndex = nodeConversionMap[nodeKey_1];\n                            if (newNodeIndex === null || newNodeIndex === undefined) {\n                                newNodeIndex = 0;\n                            }\n                            nodeData.push([inboundLayer.name, newNodeIndex, tensorIndex, kwargs]);\n                        }\n                        filteredInboundNodes.push(nodeData);\n                    }\n                }\n            }\n            layerConfigs.push({\n                name: layer.name,\n                className: layerClassName,\n                config: layerConfig,\n                inboundNodes: filteredInboundNodes\n            });\n        }\n        config['layers'] = layerConfigs;\n        var modelInputs = [];\n        for (var i = 0; i < this.inputLayers.length; i++) {\n            var layer = this.inputLayers[i];\n            var nodeIndex = this.inputLayersNodeIndices[i];\n            var nodeKey = Container.nodeKey(layer, nodeIndex);\n            if (!this.containerNodes.has(nodeKey)) {\n                continue;\n            }\n            var newNodeIndex = nodeConversionMap[nodeKey];\n            if (newNodeIndex === null || newNodeIndex === undefined) {\n                newNodeIndex = 0;\n            }\n            var tensorIndex = this.inputLayersTensorIndices[i];\n            modelInputs.push([layer.name, newNodeIndex, tensorIndex]);\n        }\n        config['inputLayers'] = modelInputs;\n        var modelOutputs = [];\n        for (var i = 0; i < this.outputLayers.length; i++) {\n            var layer = this.outputLayers[i];\n            var nodeIndex = this.outputLayersNodeIndices[i];\n            var nodeKey = Container.nodeKey(layer, nodeIndex);\n            if (!this.containerNodes.has(nodeKey)) {\n                continue;\n            }\n            var newNodeIndex = nodeConversionMap[nodeKey];\n            if (newNodeIndex === null || newNodeIndex === undefined) {\n                newNodeIndex = 0;\n            }\n            var tensorIndex = this.outputLayersTensorIndices[i];\n            modelOutputs.push([layer.name, newNodeIndex, tensorIndex]);\n        }\n        config['outputLayers'] = modelOutputs;\n        return config;\n    };\n    Container.fromConfig = function (cls, config) {\n        var createdLayers = {};\n        var unprocessedNodes = {};\n        function addUnprocessedNode(layer, nodeData) {\n            if (!(layer.name in unprocessedNodes)) {\n                unprocessedNodes[layer.name] = [nodeData];\n            }\n            else {\n                unprocessedNodes[layer.name].push(nodeData);\n            }\n        }\n        function processNode(layer, nodeData) {\n            var inputTensors = [];\n            var kwargs;\n            for (var _i = 0, nodeData_1 = nodeData; _i < nodeData_1.length; _i++) {\n                var inputData = nodeData_1[_i];\n                var inboundLayerName = inputData[0];\n                var inboundNodeIndex = inputData[1];\n                var inboundTensorIndex = inputData[2];\n                if (inputData.length === 3) {\n                    kwargs = {};\n                }\n                else if (inputData.length === 4) {\n                    kwargs = inputData[3];\n                }\n                else {\n                    throw new errors_1.ValueError(\"Improperly formatted model config for layer \" + JSON.stringify(layer) + \": \" + JSON.stringify(inputData));\n                }\n                if (!(inboundLayerName in createdLayers)) {\n                    addUnprocessedNode(layer, nodeData);\n                    return;\n                }\n                var inboundLayer = createdLayers[inboundLayerName];\n                if (inboundLayer.inboundNodes.length <= inboundNodeIndex) {\n                    addUnprocessedNode(layer, nodeData);\n                    return;\n                }\n                var inboundNode = inboundLayer.inboundNodes[inboundNodeIndex];\n                inputTensors.push(inboundNode.outputTensors[inboundTensorIndex]);\n            }\n            if (inputTensors.length > 0) {\n                layer.apply(generic_utils.singletonOrArray(inputTensors), kwargs);\n            }\n        }\n        function processLayer(layerData) {\n            var layerName = layerData.name;\n            var layer = serialization_1.deserialize(layerData, config.customObjects != null ?\n                config.customObjects :\n                {});\n            createdLayers[layerName] = layer;\n            var inboundNodesData = layerData.inboundNodes;\n            for (var _i = 0, inboundNodesData_1 = inboundNodesData; _i < inboundNodesData_1.length; _i++) {\n                var nodeData = inboundNodesData_1[_i];\n                if (!(nodeData instanceof Array)) {\n                    throw new errors_1.ValueError(\"Corrupted configuration, expected array for nodeData: \" + nodeData);\n                }\n                addUnprocessedNode(layer, nodeData);\n            }\n        }\n        var name = config.name;\n        var layersFromConfig = config.layers;\n        for (var _i = 0, layersFromConfig_1 = layersFromConfig; _i < layersFromConfig_1.length; _i++) {\n            var layerData = layersFromConfig_1[_i];\n            processLayer(layerData);\n        }\n        while (!generic_utils.isObjectEmpty(unprocessedNodes)) {\n            for (var _a = 0, layersFromConfig_2 = layersFromConfig; _a < layersFromConfig_2.length; _a++) {\n                var layerData = layersFromConfig_2[_a];\n                var layer = createdLayers[layerData.name];\n                if (layer.name in unprocessedNodes) {\n                    for (var _b = 0, _c = unprocessedNodes[layer.name]; _b < _c.length; _b++) {\n                        var nodeData = _c[_b];\n                        processNode(layer, nodeData);\n                    }\n                    delete unprocessedNodes[layer.name];\n                }\n            }\n        }\n        var inputTensors = [];\n        var outputTensors = [];\n        var inputLayersFromConfig = config.inputLayers;\n        for (var _d = 0, inputLayersFromConfig_1 = inputLayersFromConfig; _d < inputLayersFromConfig_1.length; _d++) {\n            var layerData = inputLayersFromConfig_1[_d];\n            var layerName = layerData[0];\n            var nodeIndex = layerData[1];\n            var tensorIndex = layerData[2];\n            generic_utils.assert(layerName in createdLayers);\n            var layer = createdLayers[layerName];\n            var layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n            inputTensors.push(layerOutputTensors[tensorIndex]);\n        }\n        var outputLayersFromConfig = config.outputLayers;\n        for (var _e = 0, outputLayersFromConfig_1 = outputLayersFromConfig; _e < outputLayersFromConfig_1.length; _e++) {\n            var layerData = outputLayersFromConfig_1[_e];\n            var layerName = layerData[0];\n            var nodeIndex = layerData[1];\n            var tensorIndex = layerData[2];\n            generic_utils.assert(layerName in createdLayers);\n            var layer = createdLayers[layerName];\n            var layerOutputTensors = layer.inboundNodes[nodeIndex].outputTensors;\n            outputTensors.push(layerOutputTensors[tensorIndex]);\n        }\n        return new cls({ inputs: inputTensors, outputs: outputTensors, name: name });\n    };\n    Object.defineProperty(Container.prototype, \"stateful\", {\n        get: function () {\n            if (this._stateful) {\n                throw new errors_1.ValueError('Container instance unexpectedly has _stateful = true. The ' +\n                    'statefulness of a Container is determined by the Layers it ' +\n                    'contains. Its _stateful property must remain the default false.');\n            }\n            for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                if (layer.stateful) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Classes',\n            namespace: 'layers',\n            subclasses: ['Model']\n        })\n    ], Container.prototype, \"getLayer\", null);\n    return Container;\n}(Layer));\nexports.Container = Container;\nfunction getSourceInputs(tensor, layer, nodeIndex) {\n    if (layer == null || (nodeIndex != null && nodeIndex > 0)) {\n        layer = tensor.sourceLayer;\n        nodeIndex = tensor.nodeIndex;\n    }\n    if (layer.inboundNodes.length === 0) {\n        return [tensor];\n    }\n    else {\n        var node = layer.inboundNodes[nodeIndex];\n        if (node.inboundLayers.length === 0) {\n            return node.inputTensors;\n        }\n        else {\n            var sourceTensors = [];\n            for (var i = 0; i < node.inboundLayers.length; i++) {\n                var x = node.inputTensors[i];\n                var layer_2 = node.inboundLayers[i];\n                var nodeIndex_3 = node.nodeIndices[i];\n                var previousSources = getSourceInputs(x, layer_2, nodeIndex_3);\n                for (var _i = 0, previousSources_1 = previousSources; _i < previousSources_1.length; _i++) {\n                    var x_1 = previousSources_1[_i];\n                    if (sourceTensors.indexOf(x_1) === -1) {\n                        sourceTensors.push(x_1);\n                    }\n                }\n            }\n            return sourceTensors;\n        }\n    }\n}\nexports.getSourceInputs = getSourceInputs;\nfunction loadTensor(dtype, shape, value) {\n    var dataType = generic_utils.stringToDType(dtype);\n    return tfjs_core_1.Tensor.make(shape, { values: shape.length === 0 ? value : tfjs_core_1.util.flatten(value) }, dataType);\n}\nfunction preprocessWeightsForLoading(layer, weights, originalKerasVersion, originalBackend) {\n    if (!originalKerasVersion.startsWith('2.')) {\n        throw new errors_1.ValueError('Unsupported Keras version in weights being loaded: ' +\n            originalKerasVersion);\n    }\n    return weights;\n}\nfunction loadWeightsFromNamedTensorMap(weights, layers) {\n    var nameToWeight = {};\n    var totalWeightsCount = 0;\n    for (var _i = 0, layers_1 = layers; _i < layers_1.length; _i++) {\n        var layer = layers_1[_i];\n        for (var _a = 0, _b = layer.weights; _a < _b.length; _a++) {\n            var weight = _b[_a];\n            if (nameToWeight[weight.name] != null) {\n                throw new errors_1.ValueError(\"Duplicate weight name: \" + weight.name);\n            }\n            nameToWeight[weight.name] = weight;\n            totalWeightsCount++;\n        }\n    }\n    var weightValueTuples = [];\n    for (var name_2 in weights) {\n        weightValueTuples.push([nameToWeight[name_2], weights[name_2]]);\n        delete nameToWeight[name_2];\n    }\n    var unsetNames = [];\n    for (var name_3 in nameToWeight) {\n        unsetNames.push(name_3);\n    }\n    if (unsetNames.length > 0) {\n        throw new errors_1.ValueError(unsetNames.length + \" of \" + totalWeightsCount + \" weights are not set: \" +\n            (\"\" + unsetNames));\n    }\n    K.batchSetValue(weightValueTuples);\n}\nexports.loadWeightsFromNamedTensorMap = loadWeightsFromNamedTensorMap;\nfunction loadWeightsFromJson(weightsJSON, layers, skipMismatch) {\n    if (skipMismatch === void 0) { skipMismatch = false; }\n    var originalKerasVersion = weightsJSON['keras_version'];\n    var originalBackend = weightsJSON['backend'];\n    var layerNames = layers.map(function (layer) { return layer.name; });\n    var index = {};\n    for (var _i = 0, layers_2 = layers; _i < layers_2.length; _i++) {\n        var layer = layers_2[_i];\n        if (layer.name != null) {\n            if (index[layer.name] == null) {\n                index[layer.name] = [];\n            }\n            index[layer.name].push(layer);\n        }\n    }\n    var nameToWeights = weightsJSON['weights'];\n    var weightValueTuples = [];\n    for (var k = 0; k < layerNames.length; ++k) {\n        var name_4 = layerNames[k];\n        var layerWeights = nameToWeights[name_4];\n        if (layerWeights == null) {\n            layerWeights = [];\n        }\n        var weightValues = [];\n        for (var n = 0; n < layerWeights.length; ++n) {\n            var weightEntry = layerWeights[n];\n            weightValues.push(new types_1.LayerVariable(loadTensor(weightEntry['dtype'], weightEntry['shape'], weightEntry['value'])));\n        }\n        for (var _a = 0, _b = index[name_4]; _a < _b.length; _a++) {\n            var layer = _b[_a];\n            var symbolicWeights = layer.weights;\n            weightValues = preprocessWeightsForLoading(layer, weightValues, originalKerasVersion, originalBackend);\n            if (weightValues.length !== symbolicWeights.length) {\n                if (skipMismatch) {\n                    console.warn(\"Skipping loading of weights of layer \" + layer.name + \" \" +\n                        (\"due to mismatch in number of weights: (\" + weightValues.length + \" \") +\n                        (\"vs \" + symbolicWeights.length + \").\"));\n                }\n                else {\n                    throw new errors_1.ValueError(\"Layer #\" + k + \" (named \\\"\" + layer.name + \"\\\") expects \" +\n                        (symbolicWeights.length + \" weight(s), but the saved weights \") +\n                        (\"have \" + weightValues.length + \" element(s).\"));\n                }\n            }\n            for (var i = 0; i < weightValues.length; ++i) {\n                if (skipMismatch) {\n                    if (!tfjs_core_1.util.arraysEqual(symbolicWeights[i].shape, weightValues[i].shape)) {\n                        console.warn(\"Skipping loading of weights for layer \" + layer.name + \" due \" +\n                            (\"to mismatch in shape (\" + symbolicWeights[i].shape + \" vs \") +\n                            (weightValues[i].shape + \")\"));\n                        continue;\n                    }\n                }\n                weightValueTuples.push([symbolicWeights[i], weightValues[i].read()]);\n            }\n        }\n    }\n    K.batchSetValue(weightValueTuples);\n}\nexports.loadWeightsFromJson = loadWeightsFromJson;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/engine/topology.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gradients_1 = require(\"./gradients\");\nvar tracking_1 = require(\"./tracking\");\nexports.tidy = tracking_1.Tracking.tidy;\nexports.keep = tracking_1.Tracking.keep;\nexports.dispose = tracking_1.Tracking.dispose;\nexports.time = tracking_1.Tracking.time;\nexports.grad = gradients_1.Gradients.grad;\nexports.valueAndGrad = gradients_1.Gradients.valueAndGrad;\nexports.grads = gradients_1.Gradients.grads;\nexports.valueAndGrads = gradients_1.Gradients.valueAndGrads;\nexports.variableGrads = gradients_1.Gradients.variableGrads;\nexports.customGrad = gradients_1.Gradients.customGrad;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/globals.js\n// module id = 10\n// module chunks = 0","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar common_1 = require(\"./common\");\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar _nextUniqueTensorId = 0;\nvar SymbolicTensor = (function () {\n    function SymbolicTensor(dtype, shape, sourceLayer, inputs, callArgs, name, outputTensorIndex) {\n        this.dtype = dtype;\n        this.shape = shape;\n        this.sourceLayer = sourceLayer;\n        this.inputs = inputs;\n        this.callArgs = callArgs;\n        this.outputTensorIndex = outputTensorIndex;\n        this.id = _nextUniqueTensorId++;\n        if (name != null) {\n            this.originalName = common_1.getScopedTensorName(name);\n            this.name = common_1.getUniqueTensorName(this.originalName);\n        }\n    }\n    SymbolicTensor = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', 'subheading': 'Classes' })\n    ], SymbolicTensor);\n    return SymbolicTensor;\n}());\nexports.SymbolicTensor = SymbolicTensor;\nvar ConcreteTensor = (function () {\n    function ConcreteTensor(val, name) {\n        this.dtype = DType.float32;\n        this.shape = val.shape;\n        this.val = val;\n        this.id = _nextUniqueTensorId++;\n        if (name != null) {\n            this.originalName = common_1.getScopedTensorName(name);\n            this.name = common_1.getUniqueTensorName(this.originalName);\n        }\n    }\n    ConcreteTensor.prototype.value = function () {\n        return this.val;\n    };\n    return ConcreteTensor;\n}());\nexports.ConcreteTensor = ConcreteTensor;\nfunction checkShapesMatch(x, y) {\n    if (x.shape.toString() !== y.shape.toString()) {\n        throw new Error('Shape mismatch: ' + JSON.stringify(x.shape) + ' vs. ' +\n            JSON.stringify(y.shape));\n    }\n}\nfunction getValueTensor(val) {\n    return val instanceof ConcreteTensor ? val.value() : val;\n}\nvar DEFAULT_VARIABLE_NAME_PREFIX = 'Variable';\nvar LayerVariable = (function () {\n    function LayerVariable(val, dtype, name, trainable, constraint) {\n        if (dtype === void 0) { dtype = DType.float32; }\n        if (name === void 0) { name = DEFAULT_VARIABLE_NAME_PREFIX; }\n        if (trainable === void 0) { trainable = true; }\n        if (constraint === void 0) { constraint = null; }\n        this.dtype = dtype == null ? DType.float32 : dtype;\n        this.shape = val.shape;\n        this.id = _nextUniqueTensorId++;\n        name = name == null ? DEFAULT_VARIABLE_NAME_PREFIX : name;\n        this.originalName = common_1.getScopedTensorName(name);\n        this.name = common_1.getUniqueTensorName(this.originalName);\n        this.trainable = trainable;\n        this.constraint = constraint;\n        this.val =\n            tfjs_core_1.variable(getValueTensor(val), this.trainable, this.name, this.dtype);\n    }\n    LayerVariable.prototype.read = function () {\n        return this.val;\n    };\n    LayerVariable.prototype.write = function (newVal) {\n        checkShapesMatch(this.val, newVal);\n        this.val.assign(getValueTensor(newVal));\n        if (this.constraint != null) {\n            this.val.assign(this.constraint.apply(this.val));\n        }\n        return this;\n    };\n    return LayerVariable;\n}());\nexports.LayerVariable = LayerVariable;\nvar Serializable = (function () {\n    function Serializable() {\n    }\n    return Serializable;\n}());\nexports.Serializable = Serializable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/types.js\n// module id = 12\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction axesAreInnerMostDims(axes, rank) {\n    for (var i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.axesAreInnerMostDims = axesAreInnerMostDims;\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    var rank = outputLoc.length + reduceLoc.length;\n    var loc = [];\n    var outIdx = 0;\n    var reduceIdx = 0;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexports.combineLocations = combineLocations;\nfunction computeOutAndReduceShapes(aShape, axes) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    var reduceShape = axes.map(function (dim) { return aShape[dim]; });\n    return [outShape, reduceShape];\n}\nexports.computeOutAndReduceShapes = computeOutAndReduceShapes;\nfunction expandShapeToKeepDim(shape, axes) {\n    var reduceSubShape = axes.map(function (x) { return 1; });\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexports.expandShapeToKeepDim = expandShapeToKeepDim;\nfunction parseAxisParam(axis, shape) {\n    var rank = shape.length;\n    axis = axis == null ? shape.map(function (s, i) { return i; }) : [].concat(axis);\n    util.assert(axis.every(function (ax) { return ax >= -rank && ax < rank; }), \"All values in axis param must be in range [-\" + rank + \", \" + rank + \") but \" +\n        (\"got axis \" + axis));\n    util.assert(axis.every(function (ax) { return util.isInt(ax); }), \"All values in axis param must be integers but \" +\n        (\"got axis \" + axis));\n    return axis.map(function (a) { return a < 0 ? rank + a : a; });\n}\nexports.parseAxisParam = parseAxisParam;\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    util.assert(axesAreInnerMostDims(axes, rank), msg + \" supports only inner-most axes for now. \" +\n        (\"Got axes \" + axes + \" and rank-\" + rank + \" input.\"));\n}\nexports.assertAxesAreInnerMostDims = assertAxesAreInnerMostDims;\nfunction getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    var result = [];\n    for (var i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(function (axis) { return result.push(axis); });\n    return result;\n}\nexports.getAxesPermutation = getAxesPermutation;\nfunction getUndoAxesPermutation(axes) {\n    return axes.map(function (axis, i) { return [i, axis]; })\n        .sort(function (a, b) { return a[1] - b[1]; })\n        .map(function (x) { return x[0]; });\n}\nexports.getUndoAxesPermutation = getUndoAxesPermutation;\nfunction getInnerMostAxes(numAxes, rank) {\n    var res = [];\n    for (var i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\nexports.getInnerMostAxes = getInnerMostAxes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/axis_util.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"./doc\");\nvar environment_1 = require(\"./environment\");\nvar ops = require(\"./ops/ops\");\nvar tensor_util = require(\"./tensor_util\");\nvar util = require(\"./util\");\nvar TensorBuffer = (function () {\n    function TensorBuffer(shape, dtype, values) {\n        this.dtype = dtype;\n        if (values != null) {\n            var n = values.length;\n            var size = util.sizeFromShape(shape);\n            util.assert(n === size, \"Length of values '\" + n + \"' does not match the size \" +\n                (\"inferred by the shape '\" + size + \"'\"));\n        }\n        this.shape = shape.slice();\n        this.values =\n            values || util.getTypedArrayFromDType(dtype, util.sizeFromShape(shape));\n        this.strides = computeStrides(shape);\n        this.size = util.sizeFromShape(shape);\n    }\n    TensorBuffer.prototype.set = function (value) {\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, \"The number of provided coordinates (\" + locs.length + \") must \" +\n            (\"match the rank (\" + this.rank + \")\"));\n        var index = this.locToIndex(locs);\n        this.values[index] = value;\n    };\n    TensorBuffer.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    };\n    TensorBuffer.prototype.locToIndex = function (locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    };\n    TensorBuffer.prototype.indexToLoc = function (index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        var locs = new Array(this.shape.length);\n        for (var i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    };\n    Object.defineProperty(TensorBuffer.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TensorBuffer.prototype.toTensor = function () {\n        return Tensor.make(this.shape, { values: this.values }, this.dtype);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"set\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"get\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], TensorBuffer.prototype, \"toTensor\", null);\n    TensorBuffer = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], TensorBuffer);\n    return TensorBuffer;\n}());\nexports.TensorBuffer = TensorBuffer;\nvar Tensor = (function () {\n    function Tensor(shape, dtype, values, dataId) {\n        this.isDisposed = false;\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            util.assert(this.size === values.length, \"Constructing tensor of shape (\" + this.size + \") should match the \" +\n                (\"length of values (\" + values.length + \")\"));\n        }\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.strides = computeStrides(shape);\n        this.dataId = dataId != null ? dataId : {};\n        this.id = Tensor_1.nextId++;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n        environment_1.ENV.engine.registerTensor(this);\n        if (values != null) {\n            environment_1.ENV.engine.write(this.dataId, values);\n        }\n    }\n    Tensor_1 = Tensor;\n    Tensor.make = function (shape, data, dtype) {\n        return new Tensor_1(shape, dtype, data.values, data.dataId);\n    };\n    Tensor.prototype.flatten = function () {\n        this.throwIfDisposed();\n        return this.as1D();\n    };\n    Tensor.prototype.asScalar = function () {\n        this.throwIfDisposed();\n        util.assert(this.size === 1, 'The array must have only 1 element.');\n        return this.reshape([]);\n    };\n    Tensor.prototype.as1D = function () {\n        this.throwIfDisposed();\n        return this.reshape([this.size]);\n    };\n    Tensor.prototype.as2D = function (rows, columns) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns]);\n    };\n    Tensor.prototype.as3D = function (rows, columns, depth) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth]);\n    };\n    Tensor.prototype.as4D = function (rows, columns, depth, depth2) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2]);\n    };\n    Tensor.prototype.asType = function (dtype) {\n        this.throwIfDisposed();\n        return ops.cast(this, dtype);\n    };\n    Object.defineProperty(Tensor.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tensor.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        util.assert(locs.length === this.rank, 'Number of coordinates in get() must match the rank of the tensor');\n        this.throwIfDisposed();\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.dataSync()[index];\n    };\n    Tensor.prototype.buffer = function () {\n        return ops.buffer(this.shape, this.dtype, this.dataSync());\n    };\n    Tensor.prototype.data = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.throwIfDisposed();\n                return [2, environment_1.ENV.engine.read(this.dataId)];\n            });\n        });\n    };\n    Tensor.prototype.dataSync = function () {\n        this.throwIfDisposed();\n        return environment_1.ENV.engine.readSync(this.dataId);\n    };\n    Tensor.prototype.dispose = function () {\n        if (this.isDisposed) {\n            return;\n        }\n        this.isDisposed = true;\n        environment_1.ENV.engine.disposeTensor(this);\n    };\n    Tensor.prototype.throwIfDisposed = function () {\n        if (this.isDisposed) {\n            throw new Error(\"Tensor is disposed.\");\n        }\n    };\n    Tensor.prototype.toFloat = function () {\n        return this.asType('float32');\n    };\n    Tensor.prototype.toInt = function () {\n        return this.asType('int32');\n    };\n    Tensor.prototype.toBool = function () {\n        return this.asType('bool');\n    };\n    Tensor.prototype.print = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        return ops.print(this, verbose);\n    };\n    Tensor.prototype.reshape = function (newShape) {\n        this.throwIfDisposed();\n        return ops.reshape(this, newShape);\n    };\n    Tensor.prototype.reshapeAs = function (x) {\n        this.throwIfDisposed();\n        return this.reshape(x.shape);\n    };\n    Tensor.prototype.expandDims = function (axis) {\n        if (axis === void 0) { axis = 0; }\n        return ops.expandDims(this, axis);\n    };\n    Tensor.prototype.squeeze = function (axis) {\n        this.throwIfDisposed();\n        return ops.squeeze(this, axis);\n    };\n    Tensor.prototype.clone = function () {\n        this.throwIfDisposed();\n        return ops.clone(this);\n    };\n    Tensor.prototype.toString = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        return tensor_util.tensorToString(this, verbose);\n    };\n    Tensor.prototype.tile = function (reps) {\n        this.throwIfDisposed();\n        return ops.tile(this, reps);\n    };\n    Tensor.prototype.gather = function (indices, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return ops.gather(this, indices, axis);\n    };\n    Tensor.prototype.matMul = function (b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        this.throwIfDisposed();\n        return ops.matMul(this, b, transposeA, transposeB);\n    };\n    Tensor.prototype.norm = function (ord, axis, keepDims) {\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.norm(this, ord, axis, keepDims);\n    };\n    Tensor.prototype.slice = function (begin, size) {\n        this.throwIfDisposed();\n        return ops.slice(this, begin, size);\n    };\n    Tensor.prototype.reverse = function (axis) {\n        this.throwIfDisposed();\n        return ops.reverse(this, axis);\n    };\n    Tensor.prototype.concat = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return ops.concat([this, x], axis);\n    };\n    Tensor.prototype.stack = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        return ops.stack([this, x], axis);\n    };\n    Tensor.prototype.pad = function (paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        return ops.pad(this, paddings, constantValue);\n    };\n    Tensor.prototype.batchNormalization = function (mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        this.throwIfDisposed();\n        return ops.batchNormalization(this, mean, variance, varianceEpsilon, scale, offset);\n    };\n    Tensor.prototype.logSumExp = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.logSumExp(this, axis, keepDims);\n    };\n    Tensor.prototype.sum = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.sum(this, axis, keepDims);\n    };\n    Tensor.prototype.mean = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.mean(this, axis, keepDims);\n    };\n    Tensor.prototype.min = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.min(this, axis, keepDims);\n    };\n    Tensor.prototype.max = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return ops.max(this, axis, keepDims);\n    };\n    Tensor.prototype.argMin = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return ops.argMin(this, axis);\n    };\n    Tensor.prototype.argMax = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return ops.argMax(this, axis);\n    };\n    Tensor.prototype.cast = function (dtype) {\n        this.throwIfDisposed();\n        return ops.cast(this, dtype);\n    };\n    Tensor.prototype.add = function (x) {\n        this.throwIfDisposed();\n        return ops.add(this, x);\n    };\n    Tensor.prototype.addStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.addStrict(this, x);\n    };\n    Tensor.prototype.sub = function (x) {\n        this.throwIfDisposed();\n        return ops.sub(this, x);\n    };\n    Tensor.prototype.subStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.subStrict(this, x);\n    };\n    Tensor.prototype.pow = function (exp) {\n        this.throwIfDisposed();\n        return ops.pow(this, exp);\n    };\n    Tensor.prototype.powStrict = function (exp) {\n        this.throwIfDisposed();\n        return ops.powStrict(this, exp);\n    };\n    Tensor.prototype.mul = function (x) {\n        this.throwIfDisposed();\n        return ops.mul(this, x);\n    };\n    Tensor.prototype.mulStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.mulStrict(this, x);\n    };\n    Tensor.prototype.div = function (x) {\n        this.throwIfDisposed();\n        return ops.div(this, x);\n    };\n    Tensor.prototype.divStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.divStrict(this, x);\n    };\n    Tensor.prototype.minimum = function (x) {\n        this.throwIfDisposed();\n        return ops.minimum(this, x);\n    };\n    Tensor.prototype.minimumStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.minimumStrict(this, x);\n    };\n    Tensor.prototype.maximum = function (x) {\n        this.throwIfDisposed();\n        return ops.maximum(this, x);\n    };\n    Tensor.prototype.maximumStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.maximumStrict(this, x);\n    };\n    Tensor.prototype.mod = function (x) {\n        this.throwIfDisposed();\n        return ops.mod(this, x);\n    };\n    Tensor.prototype.modStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.modStrict(this, x);\n    };\n    Tensor.prototype.squaredDifference = function (x) {\n        this.throwIfDisposed();\n        return ops.squaredDifference(this, x);\n    };\n    Tensor.prototype.squaredDifferenceStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.squaredDifferenceStrict(this, x);\n    };\n    Tensor.prototype.transpose = function (perm) {\n        this.throwIfDisposed();\n        return ops.transpose(this, perm);\n    };\n    Tensor.prototype.notEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.notEqual(this, x);\n    };\n    Tensor.prototype.notEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.notEqualStrict(this, x);\n    };\n    Tensor.prototype.less = function (x) {\n        this.throwIfDisposed();\n        return ops.less(this, x);\n    };\n    Tensor.prototype.lessStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.lessStrict(this, x);\n    };\n    Tensor.prototype.equal = function (x) {\n        this.throwIfDisposed();\n        return ops.equal(this, x);\n    };\n    Tensor.prototype.equalStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.equalStrict(this, x);\n    };\n    Tensor.prototype.lessEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.lessEqual(this, x);\n    };\n    Tensor.prototype.lessEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.lessEqualStrict(this, x);\n    };\n    Tensor.prototype.greater = function (x) {\n        this.throwIfDisposed();\n        return ops.greater(this, x);\n    };\n    Tensor.prototype.greaterStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterStrict(this, x);\n    };\n    Tensor.prototype.greaterEqual = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterEqual(this, x);\n    };\n    Tensor.prototype.greaterEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return ops.greaterEqualStrict(this, x);\n    };\n    Tensor.prototype.logicalAnd = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalAnd(this, x);\n    };\n    Tensor.prototype.logicalOr = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalOr(this, x);\n    };\n    Tensor.prototype.logicalNot = function () {\n        this.throwIfDisposed();\n        return ops.logicalNot(this);\n    };\n    Tensor.prototype.logicalXor = function (x) {\n        this.throwIfDisposed();\n        return ops.logicalXor(this, x);\n    };\n    Tensor.prototype.where = function (condition, x) {\n        this.throwIfDisposed();\n        return ops.where(condition, this, x);\n    };\n    Tensor.prototype.neg = function () {\n        this.throwIfDisposed();\n        return ops.neg(this);\n    };\n    Tensor.prototype.ceil = function () {\n        this.throwIfDisposed();\n        return ops.ceil(this);\n    };\n    Tensor.prototype.floor = function () {\n        this.throwIfDisposed();\n        return ops.floor(this);\n    };\n    Tensor.prototype.sign = function () {\n        this.throwIfDisposed();\n        return ops.sign(this);\n    };\n    Tensor.prototype.exp = function () {\n        this.throwIfDisposed();\n        return ops.exp(this);\n    };\n    Tensor.prototype.expm1 = function () {\n        this.throwIfDisposed();\n        return ops.expm1(this);\n    };\n    Tensor.prototype.log = function () {\n        this.throwIfDisposed();\n        return ops.log(this);\n    };\n    Tensor.prototype.log1p = function () {\n        this.throwIfDisposed();\n        return ops.log1p(this);\n    };\n    Tensor.prototype.sqrt = function () {\n        this.throwIfDisposed();\n        return ops.sqrt(this);\n    };\n    Tensor.prototype.rsqrt = function () {\n        this.throwIfDisposed();\n        return ops.rsqrt(this);\n    };\n    Tensor.prototype.square = function () {\n        this.throwIfDisposed();\n        return ops.square(this);\n    };\n    Tensor.prototype.reciprocal = function () {\n        this.throwIfDisposed();\n        return ops.reciprocal(this);\n    };\n    Tensor.prototype.abs = function () {\n        this.throwIfDisposed();\n        return ops.abs(this);\n    };\n    Tensor.prototype.clipByValue = function (min, max) {\n        this.throwIfDisposed();\n        return ops.clipByValue(this, min, max);\n    };\n    Tensor.prototype.relu = function () {\n        this.throwIfDisposed();\n        return ops.relu(this);\n    };\n    Tensor.prototype.elu = function () {\n        this.throwIfDisposed();\n        return ops.elu(this);\n    };\n    Tensor.prototype.selu = function () {\n        this.throwIfDisposed();\n        return ops.selu(this);\n    };\n    Tensor.prototype.leakyRelu = function (alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        this.throwIfDisposed();\n        return ops.leakyRelu(this, alpha);\n    };\n    Tensor.prototype.prelu = function (alpha) {\n        this.throwIfDisposed();\n        return ops.prelu(this, alpha);\n    };\n    Tensor.prototype.sigmoid = function () {\n        this.throwIfDisposed();\n        return ops.sigmoid(this);\n    };\n    Tensor.prototype.logSigmoid = function () {\n        this.throwIfDisposed();\n        return ops.logSigmoid(this);\n    };\n    Tensor.prototype.softplus = function () {\n        this.throwIfDisposed();\n        return ops.softplus(this);\n    };\n    Tensor.prototype.sin = function () {\n        this.throwIfDisposed();\n        return ops.sin(this);\n    };\n    Tensor.prototype.cos = function () {\n        this.throwIfDisposed();\n        return ops.cos(this);\n    };\n    Tensor.prototype.tan = function () {\n        this.throwIfDisposed();\n        return ops.tan(this);\n    };\n    Tensor.prototype.asin = function () {\n        this.throwIfDisposed();\n        return ops.asin(this);\n    };\n    Tensor.prototype.acos = function () {\n        this.throwIfDisposed();\n        return ops.acos(this);\n    };\n    Tensor.prototype.atan = function () {\n        this.throwIfDisposed();\n        return ops.atan(this);\n    };\n    Tensor.prototype.sinh = function () {\n        this.throwIfDisposed();\n        return ops.sinh(this);\n    };\n    Tensor.prototype.cosh = function () {\n        this.throwIfDisposed();\n        return ops.cosh(this);\n    };\n    Tensor.prototype.tanh = function () {\n        this.throwIfDisposed();\n        return ops.tanh(this);\n    };\n    Tensor.prototype.asinh = function () {\n        this.throwIfDisposed();\n        return ops.asinh(this);\n    };\n    Tensor.prototype.acosh = function () {\n        this.throwIfDisposed();\n        return ops.acosh(this);\n    };\n    Tensor.prototype.atanh = function () {\n        this.throwIfDisposed();\n        return ops.atanh(this);\n    };\n    Tensor.prototype.erf = function () {\n        this.throwIfDisposed();\n        return ops.erf(this);\n    };\n    Tensor.prototype.step = function (alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        this.throwIfDisposed();\n        return ops.step(this, alpha);\n    };\n    Tensor.prototype.softmax = function (dim) {\n        if (dim === void 0) { dim = -1; }\n        this.throwIfDisposed();\n        return ops.softmax(this, dim);\n    };\n    Tensor.prototype.resizeBilinear = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return ops.image.resizeBilinear(this, newShape2D, alignCorners);\n    };\n    Tensor.prototype.resizeNearestNeighbor = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return ops.image.resizeNearestNeighbor(this, newShape2D, alignCorners);\n    };\n    Tensor.prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\n        if (dilation === void 0) { dilation = 1; }\n        this.throwIfDisposed();\n        return ops.conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n    };\n    Tensor.prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return ops.conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.conv2dTranspose = function (filter, outputShape, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.depthwiseConv2D = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return ops.depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.avgPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.maxPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return ops.maxPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.localResponseNormalization = function (radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        return ops.localResponseNormalization(this, radius, bias, alpha, beta);\n    };\n    Tensor.prototype.variable = function (trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        this.throwIfDisposed();\n        return Variable.variable(this, trainable, name, dtype);\n    };\n    Tensor.nextId = 0;\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"flatten\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"asScalar\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as1D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as2D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as3D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"as4D\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"asType\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"buffer\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"data\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"dataSync\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"dispose\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toFloat\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toInt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toBool\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"print\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"reshape\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"reshapeAs\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"expandDims\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"squeeze\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"clone\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor.prototype, \"toString\", null);\n    Tensor = Tensor_1 = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Tensor);\n    return Tensor;\n    var Tensor_1;\n}());\nexports.Tensor = Tensor;\nvar Variable = (function (_super) {\n    __extends(Variable, _super);\n    function Variable(initialValue, trainable, name) {\n        if (trainable === void 0) { trainable = true; }\n        var _this = _super.call(this, initialValue.shape, initialValue.dtype, null, initialValue.dataId) || this;\n        _this.trainable = trainable;\n        _this.name = name;\n        if (_this.name == null) {\n            _this.name = Variable_1.nextVarId.toString();\n            Variable_1.nextVarId++;\n        }\n        environment_1.ENV.engine.registerVariable(_this);\n        return _this;\n    }\n    Variable_1 = Variable;\n    Variable.variable = function (initialValue, trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.asType(dtype);\n        }\n        return new Variable_1(initialValue, trainable, name);\n    };\n    Variable.prototype.assign = function (newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(\"dtype of the new value (\" + newValue.dtype + \") and \" +\n                (\"previous value (\" + this.dtype + \") must match\"));\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(\"shape of the new value (\" + newValue.shape + \") and \" +\n                (\"previous value (\" + this.shape + \") must match\"));\n        }\n        environment_1.ENV.engine.disposeTensor(this);\n        this.dataId = newValue.dataId;\n        environment_1.ENV.engine.registerTensor(this);\n    };\n    Variable.nextVarId = 0;\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Variable.prototype, \"assign\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], Variable, \"variable\", null);\n    Variable = Variable_1 = __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Classes' })\n    ], Variable);\n    return Variable;\n    var Variable_1;\n}(Tensor));\nexports.Variable = Variable;\nvar variable = Variable.variable;\nexports.variable = variable;\nfunction computeStrides(shape) {\n    var rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    var strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (var i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/tensor.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar tex_util = require(\"./tex_util\");\nfunction makeShader(inputsInfo, outputShape, userCode, broadcast) {\n    var sampleSnippet = getSampleSnippet();\n    var setOutputSnippet = getSetOutputSnippet();\n    var inputPrefixSnippet = inputsInfo.map(function (x) { return \"uniform sampler2D \" + x.name + \";\"; }).join('\\n');\n    var inputSamplingSnippet = inputsInfo.map(function (x) { return getInputSamplingSnippet(x, outputShape, broadcast); })\n        .join('\\n');\n    var outTexShape = outputShape.texShape;\n    var outputSamplingSnippet = getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    var source = [\n        SHADER_PREFIX, sampleSnippet, setOutputSnippet, inputPrefixSnippet,\n        outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nexports.makeShader = makeShader;\nfunction getSampleSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SAMPLE_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET;\n}\nfunction getSetOutputSnippet() {\n    return environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED') ?\n        FLOAT_TEXTURE_SETOUTPUT_SNIPPET :\n        UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        default:\n            throw new Error(shape.length + \"-D input sampling\" +\n                \" is not yet supported\");\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, broadcast) {\n    var res = getSamplerFlat(inInfo);\n    res += getSamplerFromInInfo(inInfo);\n    if (broadcast ||\n        util.arraysEqual(inInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape)) {\n        res += getSamplerAtOutputCoords(inInfo, outShapeInfo, broadcast);\n    }\n    return res;\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        default:\n            throw new Error(outShape.length + \"-D output sampling is not yet supported\");\n    }\n}\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 UVfrom1D(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 UVfrom2D(int texNumR, int texNumC, int numC, int row, int col) {\\n  int index = row * numC + col;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 UVfrom3D(int texNumR, int texNumC, int stride0,\\n    int stride1, int row, int col, int depth) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_4D_SNIPPET = \"\\nvec2 UVfrom4D(int texNumR, int texNumC, int stride0,\\n    int stride1, int stride2, int row, int col, int depth,\\n    int depth2) {\\n  // Explicitly use integer operations as dot() only works on floats.\\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2;\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SAMPLE_SNIPPET = \"\\n  uniform float NaN;\\n\\n  const vec4 floatDeltas = vec4(\\n      1.0,\\n      1.0 / 255.0,\\n      1.0 / (255.0 * 255.0),\\n      1.0 / (255.0 * 255.0 * 255.0)\\n  );\\n  const float minValue = \" + tex_util.FLOAT_MIN + \".0;\\n  const float maxValue = \" + tex_util.FLOAT_MAX + \".0;\\n  const float range = (maxValue - minValue) / 255.0;\\n  const vec2 dotRange = vec2(1.0, range);\\n\\n  float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n    vec4 sampleValue = texture2D(textureSampler, uv);\\n    if (all(equal(sampleValue, vec4(\" + tex_util.BYTE_NAN_VALUE + \")))) {\\n      return NaN;\\n    }\\n\\n    vec4 encValue = floor(sampleValue * 255.0 + 0.5);\\n    float decodedValue = dot(encValue, floatDeltas);\\n    return dot(vec2(minValue, decodedValue), dotRange);\\n  }\\n\";\nvar UNSIGNED_BYTE_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  const vec4 floatPowers = vec4(\\n    1.0,\\n    255.0,\\n    255.0 * 255.0,\\n    255.0 * 255.0 * 255.0\\n  );\\n  const vec2 recipRange = vec2(1.0/range);\\n  const vec2 recipRange255 = vec2(1.0/(maxValue - minValue));\\n\\n  void setOutput(float decodedValue) {\\n    if (isNaN(decodedValue)) {\\n      gl_FragColor = vec4(\" + tex_util.BYTE_NAN_VALUE + \");\\n      return;\\n    }\\n\\n    float a = dot(vec2(decodedValue, -minValue), recipRange);\\n    float b = fract(a) * 255.0;\\n    float c = fract(b) * 255.0;\\n    float d = fract(c) * 255.0;\\n    gl_FragColor = floor(vec4(a, b, c, d)) / 255.0;\\n\\n    // TODO(dsmilkov): Version above gets better accuracy but probably slower\\n    // than the version below. Benchmark to determine if the accuracy is worth\\n    // the cost.\\n\\n    // float normValue = dot(vec2(decodedValue, -minValue), recipRange255);\\n    // vec4 f = normValue * floatPowers;\\n    // gl_FragColor = floor(fract(f) * 255.0) / 255.0;\\n  }\\n\";\nvar FLOAT_TEXTURE_SAMPLE_SNIPPET = \"\\n  float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n    return texture2D(textureSampler, uv).r;\\n  }\\n\";\nvar FLOAT_TEXTURE_SETOUTPUT_SNIPPET = \"\\n  void setOutput(float val) {\\n    gl_FragColor = vec4(val, 0, 0, 0);\\n  }\\n\";\nvar SHADER_PREFIX = \"\\n  precision highp float;\\n  precision highp int;\\n  varying vec2 resultUV;\\n  const vec2 halfCR = vec2(0.5, 0.5);\\n\\n  bool isNaN(float val) {\\n    float v1 = val * val;\\n    float v2 = val * val;\\n    return v1 == v2 ? false : true;\\n  }\\n\\n  bool hasNaN(vec4 values) {\\n    vec4 v1 = values * values;\\n    vec4 v2 = values * values;\\n    return any(notEqual(v1, v2));\\n  }\\n\\n  float getNaN(vec4 values) {\\n    return dot(vec4(1), values);\\n  }\\n\\n  int round(float value) {\\n    return int(floor(value + 0.5));\\n  }\\n\\n  int imod(int x, int y) {\\n    return x - y * (x / y);\\n  }\\n\\n  const vec2 randomConst = vec2(\\n    23.14069263277926, // e^pi (Gelfond's constant)\\n     2.665144142690225 // 2^sqrt(2) (Gelfond\\u2013Schneider constant)\\n  );\\n\\n  float random(float seed) {\\n      return fract(cos(dot(resultUV * seed, randomConst)) * 12345.6789);\\n  }\\n\\n  \" + SAMPLE_1D_SNIPPET + \"\\n  \" + SAMPLE_2D_SNIPPET + \"\\n  \" + SAMPLE_3D_SNIPPET + \"\\n  \" + SAMPLE_4D_SNIPPET + \"\\n\";\nfunction getOutputScalarCoords() {\n    return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + texShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (texShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + texShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      return resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n    }\\n  \";\n}\nfunction getOutput3DCoords(shape, texShape) {\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n      int c = index / \" + stride1 + \";\\n      int d = index - c * \" + stride1 + \";\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\nfunction getOutput4DCoords(shape, texShape) {\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      int r = index / \" + stride0 + \";\\n      index -= r * \" + stride0 + \";\\n\\n      int c = index / \" + stride1 + \";\\n      index -= c * \" + stride1 + \";\\n\\n      int d = index / \" + stride2 + \";\\n      int d2 = index - d * \" + stride2 + \";\\n\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      }\\n    \";\n    }\n    if (shape[1] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n    }\n    if (shape[0] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n    }\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + shape[1] + \";\\n      int c = index - r * \" + shape[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"() {\\n      return sampleTexture(\" + texName + \", halfCR);\\n    }\\n  \";\n}\nfunction getSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    return \"\\n    float \" + funcName + \"(int index) {\\n      return \" + funcName + \"Flat(index);\\n    }\\n  \";\n}\nfunction getSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texNumR === 1) {\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      int index = row * \" + shape[1] + \" + col;\\n      vec2 uv = vec2((float(index) + 0.5) / \" + texNumC + \".0, 0.5);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n  float \" + funcName + \"(int row, int col) {\\n    vec2 uv = UVfrom2D(\" + texNumR + \", \" + texNumC + \", \" + shape[1] + \", row, col);\\n    return sampleTexture(\" + texName + \", uv);\\n  }\\n\";\n}\nfunction getSampler3D(inputInfo) {\n    var texShape = inputInfo.shapeInfo.texShape;\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col', 'depth'];\n        return \"\\n        \" + getSamplerFromInInfo(newInputInfo) + \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          int texR = row;\\n          int texC = col * \" + stride1 + \" + depth;\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sampleTexture(\" + texName + \", uv);\\n        }\\n      \";\n    }\n    if (texNumC === stride1) {\n        return \"\\n    float \" + funcName + \"(int row, int col, int depth) {\\n      int texR = row * \" + shape[1] + \" + col;\\n      int texC = depth;\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        vec2 uv = UVfrom3D(\\n            \" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \", row, col, depth);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n  \";\n}\nfunction getSampler4D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (texNumC === stride0) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row;\\n        int texC = col * \" + stride1 + \" + depth * \" + stride2 + \" + depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride2) {\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int texR = row * \" + shape[1] * shape[2] + \" + col * \" + shape[2] + \" + depth;\\n        int texC = depth2;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n      vec2 uv = UVfrom4D(\" + texNumR + \", \" + texNumC + \", \" + stride0 + \", \" + stride1 + \",\\n          \" + stride2 + \", row, col, depth, depth2);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSamplerFlat(inputInfo) {\n    var texName = inputInfo.name;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1) + 'Flat';\n    var tNumR = texShape[0];\n    var tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        return sampleTexture(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    if (tNumC === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index) + 0.5) / \" + tNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2((float(index) + 0.5) / \" + tNumC + \".0, 0.5);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int index) {\\n      vec2 uv = UVfrom1D(\" + tNumR + \", \" + tNumC + \", index);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName) {\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var type = 'int';\n    if (outRank === 2) {\n        type = 'ivec2';\n    }\n    else if (outRank === 3) {\n        type = 'ivec3';\n    }\n    else if (outRank === 4) {\n        type = 'ivec4';\n    }\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords[\" + (d + rankDiff) + \"] = 0;\"; }).join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords[\" + (i + rankDiff) + \"]\"; })\n            .join(', ');\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      return get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n    }\\n  \";\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo, supportsBroadcasting) {\n    var inTexShape = inputInfo.shapeInfo.texShape;\n    var texName = inputInfo.name;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var broadcastDims = broadcast_util.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var doBroadcast = supportsBroadcasting && ((outRank > inRank) || broadcastDims.length > 0);\n    var broadcastOverOuter = broadcast_util.broadcastDimsAreOuter(broadcastDims);\n    if (doBroadcast && !broadcastOverOuter) {\n        return getBroadcastOutputCoordsSampler(inputInfo, outShapeInfo, texFuncSnippet, funcName);\n    }\n    var outTexShape = outShapeInfo.texShape;\n    if (util.arraysEqual(inTexShape, outTexShape)) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sampleTexture(\" + texName + \", resultUV);\\n      }\\n    \";\n    }\n    var inSize = util.sizeFromShape(inTexShape);\n    var broadcastSnippet = '';\n    if (doBroadcast && broadcastOverOuter) {\n        broadcastSnippet = \"\\n        int mainPart = index / \" + inSize + \";\\n        index -= mainPart * \" + inSize + \";\\n      \";\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + outTexShape[0] + \", \" + outTexShape[1] + \"));\\n      int index = resTexRC.x * \" + outTexShape[1] + \" + resTexRC.y;\\n      \" + broadcastSnippet + \"\\n      int texR = index / \" + inTexShape[1] + \";\\n      int texC = index - texR * \" + inTexShape[1] + \";\\n      vec2 uv = (vec2(texC, texR) + halfCR) /\\n                 vec2(\" + inTexShape[1] + \".0, \" + inTexShape[0] + \".0);\\n\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else {\n        throw Error(\"GPU for rank \" + rank + \" is not yet supported\");\n    }\n}\nexports.getCoordsDataType = getCoordsDataType;\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(function (d) { return params[d]; }).join(', ');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/shader_compiler.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getBroadcastDims(inShape, outShape) {\n    var inRank = inShape.length;\n    var dims = [];\n    for (var i = 0; i < inRank; i++) {\n        var dim = inRank - 1 - i;\n        var a = inShape[dim] || 1;\n        var b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\nexports.getBroadcastDims = getBroadcastDims;\nfunction getReductionAxes(inShape, outShape) {\n    var result = [];\n    for (var i = 0; i < outShape.length; i++) {\n        var inDim = inShape[inShape.length - i - 1];\n        var outAxis = outShape.length - i - 1;\n        var outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nexports.getReductionAxes = getReductionAxes;\nfunction broadcastDimsAreOuter(dims) {\n    for (var i = 0; i < dims.length; i++) {\n        if (dims[i] !== i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.broadcastDimsAreOuter = broadcastDimsAreOuter;\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    var result = [];\n    var errMsg = \"Operands could not be broadcast together with shapes \" +\n        (shapeA + \" and \" + shapeB + \".\");\n    var l = Math.max(shapeA.length, shapeB.length);\n    for (var i = 0; i < l; i++) {\n        var a = shapeA[shapeA.length - i - 1] || 1;\n        var b = shapeB[shapeB.length - i - 1] || 1;\n        if (a > 1 && b > 1 && a !== b) {\n            throw Error(errMsg);\n        }\n        result.unshift(Math.max(a, b));\n    }\n    return result;\n}\nexports.assertAndGetBroadcastShape = assertAndGetBroadcastShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar errors_1 = require(\"../errors\");\nfunction isInteger(x) {\n    return x === parseInt(x.toString(), 10);\n}\nexports.isInteger = isInteger;\nfunction arrayProd(array, begin, end) {\n    if (begin == null) {\n        begin = 0;\n    }\n    if (end == null) {\n        end = array.length;\n    }\n    var prod = 1;\n    for (var i = begin; i < end; ++i) {\n        prod *= array[i];\n    }\n    return prod;\n}\nexports.arrayProd = arrayProd;\nfunction toArray1D(array) {\n    array = Array.isArray(array) ? new Float32Array(array) : array;\n    return tfjs_core_1.tensor1d(array);\n}\nfunction min(array) {\n    return tfc.min(toArray1D(array)).dataSync()[0];\n}\nexports.min = min;\nfunction max(array) {\n    return tfc.max(toArray1D(array)).dataSync()[0];\n}\nexports.max = max;\nfunction sum(array) {\n    return tfc.sum(toArray1D(array)).dataSync()[0];\n}\nexports.sum = sum;\nfunction mean(array) {\n    return sum(array) / array.length;\n}\nexports.mean = mean;\nfunction variance(array) {\n    var demeaned = tfc.sub(toArray1D(array), tfjs_core_1.scalar(mean(array)));\n    var sumSquare = tfc.sum(tfc.mulStrict(demeaned, demeaned)).dataSync()[0];\n    return sumSquare / array.length;\n}\nexports.variance = variance;\nfunction range(begin, end) {\n    if (end < begin) {\n        throw new errors_1.ValueError(\"end (\" + end + \") < begin (\" + begin + \") is forbidden.\");\n    }\n    var out = [];\n    for (var i = begin; i < end; ++i) {\n        out.push(i);\n    }\n    return out;\n}\nexports.range = range;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/utils/math_utils.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar globals_1 = require(\"../globals\");\nvar Optimizer = (function () {\n    function Optimizer() {\n    }\n    Optimizer.prototype.minimize = function (f, returnCost, varList) {\n        if (returnCost === void 0) { returnCost = false; }\n        var _a = this.computeGradients(f, varList), value = _a.value, grads = _a.grads;\n        this.applyGradients(grads);\n        var varNames = Object.keys(grads);\n        varNames.forEach(function (varName) { return grads[varName].dispose(); });\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    };\n    Optimizer.prototype.computeGradients = function (f, varList) {\n        return globals_1.variableGrads(f, varList);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers' })\n    ], Optimizer.prototype, \"minimize\", null);\n    Optimizer = __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Classes', namespace: 'train' })\n    ], Optimizer);\n    return Optimizer;\n}());\nexports.Optimizer = Optimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar types_1 = require(\"./types\");\nvar generic_utils_1 = require(\"./utils/generic_utils\");\nfunction calcL2Norms(w, axis) {\n    return K.sqrt(K.sum(K.square(w), axis, true));\n}\nvar Constraint = (function (_super) {\n    __extends(Constraint, _super);\n    function Constraint() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Constraint.prototype.getConfig = function () {\n        return {};\n    };\n    Constraint = __decorate([\n        tfjs_core_1.doc({ heading: 'Constraints', subheading: 'Classes', namespace: 'constraints' })\n    ], Constraint);\n    return Constraint;\n}(types_1.Serializable));\nexports.Constraint = Constraint;\nvar MaxNorm = (function (_super) {\n    __extends(MaxNorm, _super);\n    function MaxNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultMaxValue = 2;\n        _this.defaultAxis = 0;\n        _this.maxValue =\n            config.maxValue != null ? config.maxValue : _this.defaultMaxValue;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    MaxNorm.prototype.apply = function (w) {\n        var norms = calcL2Norms(w, this.axis);\n        var desired = K.clip(norms, 0, this.maxValue);\n        return K.multiply(w, K.divide(desired, K.scalarPlusArray(K.getScalar(K.epsilon()), norms)));\n    };\n    MaxNorm.prototype.getClassName = function () {\n        return 'MaxNorm';\n    };\n    MaxNorm.prototype.getConfig = function () {\n        return { maxValue: this.maxValue, axis: this.axis };\n    };\n    return MaxNorm;\n}(Constraint));\nexports.MaxNorm = MaxNorm;\ngeneric_utils_1.ClassNameMap.register('MaxNorm', MaxNorm);\nvar UnitNorm = (function (_super) {\n    __extends(UnitNorm, _super);\n    function UnitNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultAxis = 0;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    UnitNorm.prototype.apply = function (w) {\n        return K.divide(w, K.scalarPlusArray(K.getScalar(K.epsilon()), calcL2Norms(w, this.axis)));\n    };\n    UnitNorm.prototype.getClassName = function () {\n        return 'UnitNorm';\n    };\n    UnitNorm.prototype.getConfig = function () {\n        return { axis: this.axis };\n    };\n    return UnitNorm;\n}(Constraint));\nexports.UnitNorm = UnitNorm;\ngeneric_utils_1.ClassNameMap.register('UnitNorm', UnitNorm);\nvar NonNeg = (function (_super) {\n    __extends(NonNeg, _super);\n    function NonNeg() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonNeg.prototype.apply = function (w) {\n        return K.relu(w);\n    };\n    NonNeg.prototype.getClassName = function () {\n        return 'NonNeg';\n    };\n    return NonNeg;\n}(Constraint));\nexports.NonNeg = NonNeg;\ngeneric_utils_1.ClassNameMap.register('NonNeg', NonNeg);\nvar MinMaxNorm = (function (_super) {\n    __extends(MinMaxNorm, _super);\n    function MinMaxNorm(config) {\n        var _this = _super.call(this) || this;\n        _this.defaultMinValue = 0.0;\n        _this.defaultMaxValue = 1.0;\n        _this.defaultRate = 1.0;\n        _this.defaultAxis = 0;\n        _this.minValue =\n            config.minValue != null ? config.minValue : _this.defaultMinValue;\n        _this.maxValue =\n            config.maxValue != null ? config.maxValue : _this.defaultMaxValue;\n        _this.rate = config.rate != null ? config.rate : _this.defaultRate;\n        _this.axis = config.axis != null ? config.axis : _this.defaultAxis;\n        return _this;\n    }\n    MinMaxNorm.prototype.apply = function (w) {\n        var norms = calcL2Norms(w, this.axis);\n        var desired = K.add(K.scalarTimesArray(K.getScalar(this.rate), K.clip(norms, this.minValue, this.maxValue)), K.scalarTimesArray(K.getScalar(1.0 - this.rate), norms));\n        return K.multiply(w, K.divide(desired, K.scalarPlusArray(K.getScalar(K.epsilon()), norms)));\n    };\n    MinMaxNorm.prototype.getClassName = function () {\n        return 'MinMaxNorm';\n    };\n    MinMaxNorm.prototype.getConfig = function () {\n        return {\n            minValue: this.minValue,\n            maxValue: this.maxValue,\n            rate: this.rate,\n            axis: this.axis\n        };\n    };\n    return MinMaxNorm;\n}(Constraint));\nexports.MinMaxNorm = MinMaxNorm;\ngeneric_utils_1.ClassNameMap.register('MinMaxNorm', MinMaxNorm);\nexports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'maxNorm': 'MaxNorm',\n    'minMaxNorm': 'MinMaxNorm',\n    'nonNeg': 'NonNeg',\n    'unitNorm': 'UnitNorm'\n};\nfunction serializeConstraint(constraint) {\n    return generic_utils_1.serializeKerasObject(constraint);\n}\nexports.serializeConstraint = serializeConstraint;\nfunction deserializeConstraint(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'constraint');\n}\nexports.deserializeConstraint = deserializeConstraint;\nfunction getConstraint(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeConstraint(config);\n    }\n    else if (identifier instanceof Constraint) {\n        return identifier;\n    }\n    else {\n        return deserializeConstraint(identifier);\n    }\n}\nexports.getConstraint = getConstraint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/constraints.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar common_1 = require(\"./common\");\nvar errors_1 = require(\"./errors\");\nvar types_1 = require(\"./types\");\nvar generic_utils_1 = require(\"./utils/generic_utils\");\nvar math_utils_1 = require(\"./utils/math_utils\");\ngeneric_utils_1.SerializableEnumRegistry.register('mode', { 'fan_in': 'fanIn', 'fan_out': 'fanOut', 'fan_avg': 'fanAvg' });\nexports.VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg', undefined, null];\nfunction checkFanMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_FAN_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid FanMode.  Valid values as \" + exports.VALID_FAN_MODE_VALUES);\n    }\n}\nexports.checkFanMode = checkFanMode;\ngeneric_utils_1.SerializableEnumRegistry.register('distribution', { 'normal': 'normal', 'uniform': 'uniform' });\nexports.VALID_DISTRIBUTION_VALUES = ['normal', 'uniform', undefined, null];\nfunction checkDistribution(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_DISTRIBUTION_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid Distribution.  Valid values as \" + exports.VALID_DISTRIBUTION_VALUES);\n    }\n}\nexports.checkDistribution = checkDistribution;\nvar Initializer = (function (_super) {\n    __extends(Initializer, _super);\n    function Initializer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Initializer.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    Initializer.prototype.fromConfigUsesCustomObjects = function () {\n        return false;\n    };\n    Initializer.prototype.getConfig = function () {\n        return {};\n    };\n    Initializer = __decorate([\n        tfjs_core_1.doc({ heading: 'Initializers', subheading: 'Classes', namespace: 'initializers' })\n    ], Initializer);\n    return Initializer;\n}(types_1.Serializable));\nexports.Initializer = Initializer;\nvar Zeros = (function (_super) {\n    __extends(Zeros, _super);\n    function Zeros() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Zeros.prototype.getClassName = function () {\n        return 'Zeros';\n    };\n    Zeros.prototype.apply = function (shape, dtype) {\n        return K.zeros(shape, dtype);\n    };\n    return Zeros;\n}(Initializer));\nexports.Zeros = Zeros;\ngeneric_utils_1.ClassNameMap.register('Zeros', Zeros);\nvar Ones = (function (_super) {\n    __extends(Ones, _super);\n    function Ones() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Ones.prototype.getClassName = function () {\n        return 'Ones';\n    };\n    Ones.prototype.apply = function (shape, dtype) {\n        return K.ones(shape, dtype);\n    };\n    return Ones;\n}(Initializer));\nexports.Ones = Ones;\ngeneric_utils_1.ClassNameMap.register('Ones', Ones);\nvar Constant = (function (_super) {\n    __extends(Constant, _super);\n    function Constant(config) {\n        var _this = _super.call(this) || this;\n        _this.value = config.value;\n        return _this;\n    }\n    Constant.prototype.apply = function (shape, dtype) {\n        return K.scalarTimesArray(tfjs_core_1.scalar(this.value), K.ones(shape, dtype));\n    };\n    Constant.prototype.getClassName = function () {\n        return 'Constant';\n    };\n    Constant.prototype.getConfig = function () {\n        return {\n            value: this.value,\n        };\n    };\n    return Constant;\n}(Initializer));\nexports.Constant = Constant;\ngeneric_utils_1.ClassNameMap.register('Constant', Constant);\nvar RandomUniform = (function (_super) {\n    __extends(RandomUniform, _super);\n    function RandomUniform(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MINVAL = -0.05;\n        _this.DEFAULT_MAXVAL = 0.05;\n        _this.minval = config.minval || _this.DEFAULT_MINVAL;\n        _this.maxval = config.maxval || _this.DEFAULT_MAXVAL;\n        _this.seed = config.seed;\n        return _this;\n    }\n    RandomUniform.prototype.apply = function (shape, dtype) {\n        return K.randomUniform(shape, this.minval, this.maxval, dtype, this.seed);\n    };\n    RandomUniform.prototype.getClassName = function () {\n        return 'RandomUniform';\n    };\n    RandomUniform.prototype.getConfig = function () {\n        return { minval: this.minval, maxval: this.maxval, seed: this.seed };\n    };\n    return RandomUniform;\n}(Initializer));\nexports.RandomUniform = RandomUniform;\ngeneric_utils_1.ClassNameMap.register('RandomUniform', RandomUniform);\nvar RandomNormal = (function (_super) {\n    __extends(RandomNormal, _super);\n    function RandomNormal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MEAN = 0.;\n        _this.DEFAULT_STDDEV = 0.05;\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\n        _this.seed = config.seed;\n        return _this;\n    }\n    RandomNormal.prototype.apply = function (shape, dtype) {\n        return K.randomNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    };\n    RandomNormal.prototype.getClassName = function () {\n        return 'RandomNormal';\n    };\n    RandomNormal.prototype.getConfig = function () {\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\n    };\n    return RandomNormal;\n}(Initializer));\nexports.RandomNormal = RandomNormal;\ngeneric_utils_1.ClassNameMap.register('RandomNormal', RandomNormal);\nvar TruncatedNormal = (function (_super) {\n    __extends(TruncatedNormal, _super);\n    function TruncatedNormal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_MEAN = 0.;\n        _this.DEFAULT_STDDEV = 0.05;\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\n        _this.seed = config.seed;\n        return _this;\n    }\n    TruncatedNormal.prototype.apply = function (shape, dtype) {\n        return K.truncatedNormal(shape, this.mean, this.stddev, dtype, this.seed);\n    };\n    TruncatedNormal.prototype.getClassName = function () {\n        return 'TruncatedNormal';\n    };\n    TruncatedNormal.prototype.getConfig = function () {\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\n    };\n    return TruncatedNormal;\n}(Initializer));\nexports.TruncatedNormal = TruncatedNormal;\ngeneric_utils_1.ClassNameMap.register('TruncatedNormal', TruncatedNormal);\nvar Identity = (function (_super) {\n    __extends(Identity, _super);\n    function Identity(config) {\n        var _this = _super.call(this) || this;\n        _this.gain = config.gain != null ? tfjs_core_1.scalar(config.gain) : K.getScalar(1.0);\n        return _this;\n    }\n    Identity.prototype.apply = function (shape, dtype) {\n        if (shape.length !== 2 || shape[0] !== shape[1]) {\n            throw new errors_1.ValueError('Identity matrix initializer can only be used for' +\n                ' 2D square matrices.');\n        }\n        else {\n            return K.scalarTimesArray(this.gain, K.eye(shape[0]));\n        }\n    };\n    Identity.prototype.getClassName = function () {\n        return 'Identity';\n    };\n    Identity.prototype.getConfig = function () {\n        return { gain: this.gain.get() };\n    };\n    return Identity;\n}(Initializer));\nexports.Identity = Identity;\ngeneric_utils_1.ClassNameMap.register('Identity', Identity);\nfunction computeFans(shape, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var fanIn;\n    var fanOut;\n    common_1.checkDataFormat(dataFormat);\n    if (shape.length === 2) {\n        fanIn = shape[0];\n        fanOut = shape[1];\n    }\n    else if ([3, 4, 5].indexOf(shape.length) !== -1) {\n        if (dataFormat === 'channelsFirst') {\n            var receptiveFieldSize = math_utils_1.arrayProd(shape, 2);\n            fanIn = shape[1] * receptiveFieldSize;\n            fanOut = shape[0] * receptiveFieldSize;\n        }\n        else if (dataFormat === 'channelsLast') {\n            var receptiveFieldSize = math_utils_1.arrayProd(shape, 0, shape.length - 2);\n            fanIn = shape[shape.length - 2] * receptiveFieldSize;\n            fanOut = shape[shape.length - 1] * receptiveFieldSize;\n        }\n    }\n    else {\n        var shapeProd = math_utils_1.arrayProd(shape);\n        fanIn = Math.sqrt(shapeProd);\n        fanOut = Math.sqrt(shapeProd);\n    }\n    return [fanIn, fanOut];\n}\nvar VarianceScaling = (function (_super) {\n    __extends(VarianceScaling, _super);\n    function VarianceScaling(config) {\n        var _this = _super.call(this) || this;\n        if (config.scale < 0.0) {\n            throw new errors_1.ValueError(\"scale must be a positive float. Got: \" + config.scale);\n        }\n        _this.scale = config.scale == null ? 1.0 : config.scale;\n        _this.mode = config.mode;\n        checkFanMode(_this.mode);\n        _this.distribution = config.distribution;\n        checkDistribution(_this.distribution);\n        _this.seed = config.seed;\n        return _this;\n    }\n    VarianceScaling.prototype.apply = function (shape, dtype) {\n        var fans = computeFans(shape);\n        var fanIn = fans[0];\n        var fanOut = fans[1];\n        var scale = this.scale;\n        if (this.mode === 'fanIn') {\n            scale /= Math.max(1, fanIn);\n        }\n        else if (this.mode === 'fanOut') {\n            scale /= Math.max(1, fanOut);\n        }\n        else {\n            scale /= Math.max(1, (fanIn + fanOut) / 2);\n        }\n        if (this.distribution === 'normal') {\n            var stddev = Math.sqrt(scale);\n            return K.truncatedNormal(shape, 0, stddev, dtype, this.seed);\n        }\n        else {\n            var limit = Math.sqrt(3 * scale);\n            return K.randomUniform(shape, -limit, limit, dtype, this.seed);\n        }\n    };\n    VarianceScaling.prototype.getClassName = function () {\n        return 'VarianceScaling';\n    };\n    VarianceScaling.prototype.getConfig = function () {\n        return {\n            scale: this.scale,\n            mode: this.mode,\n            distribution: this.distribution,\n            seed: this.seed\n        };\n    };\n    return VarianceScaling;\n}(Initializer));\nexports.VarianceScaling = VarianceScaling;\ngeneric_utils_1.ClassNameMap.register('VarianceScaling', VarianceScaling);\nvar GlorotUniform = (function (_super) {\n    __extends(GlorotUniform, _super);\n    function GlorotUniform(config) {\n        return _super.call(this, {\n            scale: 1.0,\n            mode: 'fanAvg',\n            distribution: 'uniform',\n            seed: config.seed\n        }) || this;\n    }\n    return GlorotUniform;\n}(VarianceScaling));\nexports.GlorotUniform = GlorotUniform;\ngeneric_utils_1.ClassNameMap.register('GlorotUniform', GlorotUniform);\nvar GlorotNormal = (function (_super) {\n    __extends(GlorotNormal, _super);\n    function GlorotNormal(config) {\n        return _super.call(this, {\n            scale: 1.0,\n            mode: 'fanAvg',\n            distribution: 'normal',\n            seed: config.seed\n        }) || this;\n    }\n    return GlorotNormal;\n}(VarianceScaling));\nexports.GlorotNormal = GlorotNormal;\ngeneric_utils_1.ClassNameMap.register('GlorotNormal', GlorotNormal);\nvar HeNormal = (function (_super) {\n    __extends(HeNormal, _super);\n    function HeNormal(config) {\n        return _super.call(this, { scale: 2.0, mode: 'fanIn', distribution: 'normal', seed: config.seed }) || this;\n    }\n    return HeNormal;\n}(VarianceScaling));\nexports.HeNormal = HeNormal;\ngeneric_utils_1.ClassNameMap.register('HeNormal', HeNormal);\nvar LeCunNormal = (function (_super) {\n    __extends(LeCunNormal, _super);\n    function LeCunNormal(config) {\n        return _super.call(this, { scale: 1.0, mode: 'fanIn', distribution: 'normal', seed: config.seed }) || this;\n    }\n    return LeCunNormal;\n}(VarianceScaling));\nexports.LeCunNormal = LeCunNormal;\ngeneric_utils_1.ClassNameMap.register('LeCunNormal', LeCunNormal);\nvar Orthogonal = (function (_super) {\n    __extends(Orthogonal, _super);\n    function Orthogonal(config) {\n        var _this = _super.call(this) || this;\n        _this.DEFAULT_GAIN = 1;\n        _this.gain = config.gain == null ? _this.DEFAULT_GAIN : config.gain;\n        _this.seed = config.seed;\n        if (_this.seed != null) {\n            throw new errors_1.NotImplementedError('Random seed is not implemented for Orthogonal Initializer yet.');\n        }\n        return _this;\n    }\n    Orthogonal.prototype.apply = function (shape, dtype) {\n        if (shape.length !== 2) {\n            throw new errors_1.NotImplementedError('The Orthogonal Initializer does not support non-2D shapes yet.');\n        }\n        var normalizedShape = shape[0] >= shape[1] ? shape : [shape[1], shape[0]];\n        var a = K.randomNormal(normalizedShape, 0, 1, types_1.DType.float32);\n        var q = K.qr(a)[0];\n        if (q.shape[1] > normalizedShape[1]) {\n            q = q.slice([0, 0], normalizedShape);\n        }\n        if (shape[0] < shape[1]) {\n            q = q.transpose();\n        }\n        return K.scalarTimesArray(K.getScalar(this.gain), q);\n    };\n    Orthogonal.prototype.getClassName = function () {\n        return 'Orthogonal';\n    };\n    Orthogonal.prototype.getConfig = function () {\n        return {\n            gain: this.gain,\n            seed: this.seed,\n        };\n    };\n    return Orthogonal;\n}(Initializer));\nexports.Orthogonal = Orthogonal;\ngeneric_utils_1.ClassNameMap.register('Orthogonal', Orthogonal);\nexports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'constant': 'Constant',\n    'glorotNormal': 'GlorotNormal',\n    'glorotUniform': 'GlorotUniform',\n    'heNormal': 'HeNormal',\n    'identity': 'Identity',\n    'leCunNormal': 'LeCunNormal',\n    'ones': 'Ones',\n    'orthogonal': 'Orthogonal',\n    'randomNormal': 'RandomNormal',\n    'randomUniform': 'RandomUniform',\n    'truncatedNormal': 'TruncatedNormal',\n    'varianceScaling': 'VarianceScaling',\n    'zeros': 'Zeros'\n};\nfunction deserializeInitializer(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'initializer');\n}\nfunction serializeInitializer(initializer) {\n    return generic_utils_1.serializeKerasObject(initializer);\n}\nexports.serializeInitializer = serializeInitializer;\nfunction getInitializer(identifier) {\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeInitializer(config);\n    }\n    else if (identifier instanceof Initializer) {\n        return identifier;\n    }\n    else {\n        return deserializeInitializer(identifier);\n    }\n}\nexports.getInitializer = getInitializer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/initializers.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar types_1 = require(\"./types\");\nvar generic_utils_1 = require(\"./utils/generic_utils\");\nvar Regularizer = (function (_super) {\n    __extends(Regularizer, _super);\n    function Regularizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Regularizer;\n}(types_1.Serializable));\nexports.Regularizer = Regularizer;\nvar L1L2 = (function (_super) {\n    __extends(L1L2, _super);\n    function L1L2(config) {\n        var _this = _super.call(this) || this;\n        var l1 = config == null || config.l1 == null ? 0.01 : config.l1;\n        var l2 = config == null || config.l2 == null ? 0.01 : config.l2;\n        _this.hasL1 = l1 !== 0;\n        _this.hasL2 = l2 !== 0;\n        _this.l1 = K.getScalar(l1);\n        _this.l2 = K.getScalar(l2);\n        return _this;\n    }\n    L1L2_1 = L1L2;\n    L1L2.prototype.apply = function (x) {\n        var regularization = tfjs_core_1.zeros([1]);\n        if (this.hasL1) {\n            regularization =\n                K.add(regularization, K.sum(K.scalarTimesArray(this.l1, K.abs(x))));\n        }\n        if (this.hasL2) {\n            regularization = K.add(regularization, K.sum(K.scalarTimesArray(this.l2, K.square(x))));\n        }\n        return regularization.asScalar();\n    };\n    L1L2.prototype.getClassName = function () {\n        return 'L1L2';\n    };\n    L1L2.prototype.getConfig = function () {\n        return { 'l1': this.l1.dataSync()[0], 'l2': this.l2.dataSync()[0] };\n    };\n    L1L2.fromConfig = function (cls, config) {\n        return new L1L2_1({ l1: config.l1, l2: config.l2 });\n    };\n    L1L2 = L1L2_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers' })\n    ], L1L2);\n    return L1L2;\n    var L1L2_1;\n}(Regularizer));\nexports.L1L2 = L1L2;\ngeneric_utils_1.ClassNameMap.register('L1L2', L1L2);\nfunction l1(config) {\n    return new L1L2({ l1: config != null ? config.l1 : null, l2: 0 });\n}\nexports.l1 = l1;\nfunction l2(config) {\n    return new L1L2({ l2: config != null ? config.l2 : null, l1: 0 });\n}\nexports.l2 = l2;\nexports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'l1l2': 'L1L2'\n};\nfunction serializeRegularizer(constraint) {\n    return generic_utils_1.serializeKerasObject(constraint);\n}\nexports.serializeRegularizer = serializeRegularizer;\nfunction deserializeRegularizer(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'regularizer');\n}\nexports.deserializeRegularizer = deserializeRegularizer;\nfunction getRegularizer(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeRegularizer(config);\n    }\n    else if (identifier instanceof Regularizer) {\n        return identifier;\n    }\n    else {\n        return deserializeRegularizer(identifier);\n    }\n}\nexports.getRegularizer = getRegularizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/regularizers.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DType;\n(function (DType) {\n    DType[\"float32\"] = \"float32\";\n    DType[\"int32\"] = \"int32\";\n    DType[\"bool\"] = \"bool\";\n})(DType = exports.DType || (exports.DType = {}));\nvar Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n})(Rank = exports.Rank || (exports.Rank = {}));\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar upcastTypeMap = {\n    float32: UpcastFloat32AndMap,\n    int32: UpcastInt32AndMap,\n    bool: UpcastBoolAndMap\n};\nfunction upcastType(typeA, typeB) {\n    return upcastTypeMap[typeA][typeB];\n}\nexports.upcastType = upcastType;\nfunction sumOutType(type) {\n    return upcastType(type, 'int32');\n}\nexports.sumOutType = sumOutType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/types.js\n// module id = 22\n// module chunks = 0","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 23\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"FLOAT\"] = 0] = \"FLOAT\";\n    TextureType[TextureType[\"UNSIGNED_BYTE\"] = 1] = \"UNSIGNED_BYTE\";\n})(TextureType = exports.TextureType || (exports.TextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexports.getUnpackedMatrixTextureShapeWidthHeight = getUnpackedMatrixTextureShapeWidthHeight;\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexports.getUnpackedArraySizeFromMatrixSize = getUnpackedArraySizeFromMatrixSize;\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\nexports.getColorMatrixTextureShapeWidthHeight = getColorMatrixTextureShapeWidthHeight;\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(\"unpackedSize (\" + unpackedSize + \") must be a multiple of \" +\n            (\"\" + channelsPerTexture));\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexports.getMatrixSizeFromUnpackedArraySize = getMatrixSizeFromUnpackedArraySize;\nfunction encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture) {\n    var requiredSize = getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture);\n    if (unpackedArray.length < requiredSize) {\n        throw new Error(\"unpackedArray length (\" + unpackedArray.length + \") must be >= \" +\n            (\"\" + requiredSize));\n    }\n    var dst = 0;\n    for (var src = 0; src < matrix.length; ++src) {\n        unpackedArray[dst] = matrix[src];\n        dst += channelsPerTexture;\n    }\n}\nexports.encodeMatrixToUnpackedArray = encodeMatrixToUnpackedArray;\nexports.FLOAT_MAX = 20000;\nexports.FLOAT_MIN = -exports.FLOAT_MAX;\nvar FLOAT_RANGE = (exports.FLOAT_MAX - exports.FLOAT_MIN) / 255;\nvar FLOAT_DELTAS = [1, 1 / 255, 1 / (255 * 255), 1 / (255 * 255 * 255)];\nvar FLOAT_POWERS = [1, 255, 255 * 255];\nexports.BYTE_NAN_VALUE = 0;\nfunction encodeFloatArray(floatArray) {\n    var uintArray = new Uint8Array(floatArray.length * 4);\n    var _loop_1 = function (i) {\n        var value = floatArray[i / 4];\n        if (isNaN(value)) {\n            uintArray[i] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 1] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 2] = exports.BYTE_NAN_VALUE;\n            uintArray[i + 3] = exports.BYTE_NAN_VALUE;\n            return \"continue\";\n        }\n        var normalizedValue = (value - exports.FLOAT_MIN) / FLOAT_RANGE;\n        var enc = FLOAT_POWERS.map(function (pow) { return pow * normalizedValue; });\n        var buckets = enc.map(function (value) { return Math.floor((value % 1) * 255); });\n        uintArray[i] = Math.floor(normalizedValue);\n        uintArray[i + 1] = buckets[0];\n        uintArray[i + 2] = buckets[1];\n        uintArray[i + 3] = buckets[2];\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_1(i);\n    }\n    return uintArray;\n}\nexports.encodeFloatArray = encodeFloatArray;\nfunction decodeToFloatArray(uintArray) {\n    var floatArray = new Float32Array(uintArray.length / 4);\n    var _loop_2 = function (i) {\n        if (uintArray[i] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 1] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 2] === exports.BYTE_NAN_VALUE &&\n            uintArray[i + 3] === exports.BYTE_NAN_VALUE) {\n            floatArray[i / 4] = NaN;\n            return \"continue\";\n        }\n        var dot = 0;\n        FLOAT_DELTAS.forEach(function (delta, j) {\n            dot += delta * uintArray[i + j];\n        });\n        var value = dot * FLOAT_RANGE + exports.FLOAT_MIN;\n        floatArray[i / 4] = value;\n    };\n    for (var i = 0; i < uintArray.length; i += 4) {\n        _loop_2(i);\n    }\n    return floatArray;\n}\nexports.decodeToFloatArray = decodeToFloatArray;\nfunction decodeMatrixFromUnpackedArray(unpackedArray, matrix, channelsPerTexture) {\n    var requiredSize = getMatrixSizeFromUnpackedArraySize(unpackedArray.length, channelsPerTexture);\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += channelsPerTexture) {\n        matrix[dst++] = unpackedArray[src];\n    }\n}\nexports.decodeMatrixFromUnpackedArray = decodeMatrixFromUnpackedArray;\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    var requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += 4) {\n        for (var c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexports.decodeMatrixFromUnpackedColorRGBAArray = decodeMatrixFromUnpackedColorRGBAArray;\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [Math.ceil(columns / 2), Math.ceil(rows / 2)];\n}\nexports.getPackedMatrixTextureShapeWidthHeight = getPackedMatrixTextureShapeWidthHeight;\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    return w * h * 4;\n}\nexports.getPackedRGBAArraySizeFromMatrixShape = getPackedRGBAArraySizeFromMatrixShape;\nfunction encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA) {\n    var requiredSize = getPackedRGBAArraySizeFromMatrixShape(rows, columns);\n    if (packedRGBA.length < requiredSize) {\n        throw new Error(\"packedRGBA length (\" + packedRGBA.length + \") must be >= \" + requiredSize);\n    }\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    {\n        var dstStride = (oddWidth ? 4 : 0);\n        var oneRow = columns;\n        var dst = 0;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            var matrixSrcRow = (blockY * 2 * columns);\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                var matrixSrcCol = blockX * 2;\n                var src = matrixSrcRow + matrixSrcCol;\n                packedRGBA[dst] = matrix[src];\n                packedRGBA[dst + 1] = matrix[src + 1];\n                packedRGBA[dst + 2] = matrix[src + oneRow];\n                packedRGBA[dst + 3] = matrix[src + oneRow + 1];\n                dst += 4;\n            }\n            dst += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = columns - 1;\n        var dst = (textureWidth - 1) * 4;\n        var srcStride = 2 * columns;\n        var dstStride = textureWidth * 4;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            packedRGBA[dst] = matrix[src];\n            packedRGBA[dst + 2] = matrix[src + columns];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (rows - 1) * columns;\n        var dst = (textureHeight - 1) * textureWidth * 4;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            packedRGBA[dst++] = matrix[src++];\n            packedRGBA[dst++] = matrix[src++];\n            dst += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        packedRGBA[packedRGBA.length - 4] = matrix[matrix.length - 1];\n    }\n    return packedRGBA;\n}\nexports.encodeMatrixToPackedRGBA = encodeMatrixToPackedRGBA;\nfunction decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix) {\n    var requiredSize = rows * columns;\n    if (requiredSize < matrix.length) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var oddWidth = (columns % 2) === 1;\n    var oddHeight = (rows % 2) === 1;\n    var widthInFullBlocks = Math.floor(columns / 2);\n    var heightInFullBlocks = Math.floor(rows / 2);\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), textureWidth = _a[0], textureHeight = _a[1];\n    {\n        var srcStride = oddWidth ? 4 : 0;\n        var dstStride = columns + (oddWidth ? 1 : 0);\n        var src = 0;\n        var dstRow1 = 0;\n        var dstRow2 = columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow1++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n                matrix[dstRow2++] = packedRGBA[src++];\n            }\n            src += srcStride;\n            dstRow1 += dstStride;\n            dstRow2 += dstStride;\n        }\n    }\n    if (oddWidth) {\n        var src = (textureWidth - 1) * 4;\n        var dst = columns - 1;\n        var srcStride = textureWidth * 4;\n        var dstStride = 2 * columns;\n        for (var blockY = 0; blockY < heightInFullBlocks; ++blockY) {\n            matrix[dst] = packedRGBA[src];\n            matrix[dst + columns] = packedRGBA[src + 2];\n            src += srcStride;\n            dst += dstStride;\n        }\n    }\n    if (oddHeight) {\n        var src = (textureHeight - 1) * textureWidth * 4;\n        var dst = (rows - 1) * columns;\n        for (var blockX = 0; blockX < widthInFullBlocks; ++blockX) {\n            matrix[dst++] = packedRGBA[src++];\n            matrix[dst++] = packedRGBA[src++];\n            src += 2;\n        }\n    }\n    if (oddWidth && oddHeight) {\n        matrix[matrix.length - 1] = packedRGBA[packedRGBA.length - 4];\n    }\n    return matrix;\n}\nexports.decodeMatrixFromPackedRGBA = decodeMatrixFromPackedRGBA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/tex_util.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"./errors\");\nvar generic_utils_1 = require(\"./utils/generic_utils\");\nvar nameMap = new Map();\ngeneric_utils_1.SerializableEnumRegistry.register('data_format', { 'channels_first': 'channelsFirst', 'channels_last': 'channelsLast' });\nexports.VALID_DATA_FORMAT_VALUES = ['channelsFirst', 'channelsLast', undefined, null];\nfunction checkDataFormat(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_DATA_FORMAT_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid DataFormat.  Valid values as \" + exports.VALID_DATA_FORMAT_VALUES);\n    }\n}\nexports.checkDataFormat = checkDataFormat;\ngeneric_utils_1.SerializableEnumRegistry.register('padding', { 'valid': 'valid', 'same': 'same', 'casual': 'casual' });\nexports.VALID_PADDING_MODE_VALUES = ['valid', 'same', 'casual', undefined, null];\nfunction checkPaddingMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_PADDING_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid PaddingMode.  Valid values as \" + exports.VALID_PADDING_MODE_VALUES);\n    }\n}\nexports.checkPaddingMode = checkPaddingMode;\nexports.VALID_POOL_MODE_VALUES = ['max', 'avg', undefined, null];\nfunction checkPoolMode(value) {\n    if (value == null) {\n        return;\n    }\n    if (exports.VALID_POOL_MODE_VALUES.indexOf(value) < 0) {\n        throw new errors_1.ValueError(value + \" is not a valid PoolMode.  Valid values as \" + exports.VALID_POOL_MODE_VALUES);\n    }\n}\nexports.checkPoolMode = checkPoolMode;\nvar _nameScopeStack = [];\nvar _nameScopeDivider = '/';\nfunction nameScope(name, fn) {\n    _nameScopeStack.push(name);\n    try {\n        var val = fn();\n        _nameScopeStack.pop();\n        return val;\n    }\n    catch (e) {\n        _nameScopeStack.pop();\n        throw e;\n    }\n}\nexports.nameScope = nameScope;\nfunction currentNameScopePrefix() {\n    if (_nameScopeStack.length === 0) {\n        return '';\n    }\n    else {\n        return _nameScopeStack.join(_nameScopeDivider) + _nameScopeDivider;\n    }\n}\nfunction getScopedTensorName(tensorName) {\n    if (!isValidTensorName(tensorName)) {\n        throw new Error('Not a valid tensor name: \\'' + tensorName + '\\'');\n    }\n    return currentNameScopePrefix() + tensorName;\n}\nexports.getScopedTensorName = getScopedTensorName;\nfunction getUniqueTensorName(scopedName) {\n    if (!isValidTensorName(scopedName)) {\n        throw new Error('Not a valid tensor name: \\'' + scopedName + '\\'');\n    }\n    if (!nameMap.has(scopedName)) {\n        nameMap.set(scopedName, 0);\n    }\n    var index = nameMap.get(scopedName);\n    nameMap.set(scopedName, nameMap.get(scopedName) + 1);\n    if (index > 0) {\n        var result = scopedName + '_' + index;\n        nameMap.set(result, 1);\n        return result;\n    }\n    else {\n        return scopedName;\n    }\n}\nexports.getUniqueTensorName = getUniqueTensorName;\nvar tensorNameRegex = new RegExp(/^[A-Za-z][A-Za-z0-9\\._\\/]*$/);\nfunction isValidTensorName(name) {\n    return name.match(tensorNameRegex) ? true : false;\n}\nexports.isValidTensorName = isValidTensorName;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/common.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = require(\"../../util\");\nvar environment_1 = require(\"../../environment\");\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    var loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        return false;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n    return true;\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexports.getProgramUniformLocation = getProgramUniformLocation;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar tensor_1 = require(\"../tensor\");\nvar tensor_util = require(\"../tensor_util\");\nvar util = require(\"../util\");\nvar axis_util_1 = require(\"./axis_util\");\nvar concat_1 = require(\"./concat\");\nvar operation_1 = require(\"./operation\");\nvar rand_1 = require(\"./rand\");\nvar ArrayOps = (function () {\n    function ArrayOps() {\n    }\n    ArrayOps.tensor = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (shape != null && inferredShape.length !== 1) {\n            util.assertShapesMatch(shape, inferredShape, \"Error creating a new Tensor. \" +\n                (\"Inferred shape (\" + inferredShape + \") does not match the \") +\n                (\"provided shape (\" + shape + \"). \"));\n        }\n        if (!util.isTypedArray(values) && !Array.isArray(values)) {\n            values = [values];\n        }\n        shape = shape || inferredShape;\n        return tensor_1.Tensor.make(shape, { values: toTypedArray(values, dtype) }, dtype);\n    };\n    ArrayOps.scalar = function (value, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        if (util.isTypedArray(value) || Array.isArray(value)) {\n            throw new Error('Error creating a new Scalar: value must be a primitive ' +\n                '(number|boolean)');\n        }\n        return ArrayOps.tensor(value, [], dtype);\n    };\n    ArrayOps.tensor1d = function (values, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 1) {\n            throw new Error('tensor1d() requires values to be a flat/TypedArray');\n        }\n        return ArrayOps.tensor(values, inferredShape, dtype);\n    };\n    ArrayOps.tensor2d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n            throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor2d() requires shape to be provided when `values` ' +\n                'are a flat/TypedArray');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.tensor3d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n            throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor3d() requires shape to be provided when `values` ' +\n                'are a flat array');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.tensor4d = function (values, shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var inferredShape = util.inferShape(values);\n        if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n            throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n        }\n        if (inferredShape.length === 1 && shape == null) {\n            throw new Error('tensor4d() requires shape to be provided when `values` ' +\n                'are a flat array');\n        }\n        shape = shape || inferredShape;\n        return ArrayOps.tensor(values, shape, dtype);\n    };\n    ArrayOps.ones = function (shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = makeOnesTypedArray(util.sizeFromShape(shape), dtype);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.zeros = function (shape, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.fill = function (shape, value, dtype) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        var values = util.getTypedArrayFromDType(dtype, util.sizeFromShape(shape));\n        values.fill(value);\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.onesLike = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'onesLike');\n        return ArrayOps.ones(x.shape, x.dtype);\n    };\n    ArrayOps.zerosLike = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'zerosLike');\n        return ArrayOps.zeros(x.shape, x.dtype);\n    };\n    ArrayOps.clone = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'clone');\n        var der = function (dy) {\n            return { x: function () { return dy.toFloat(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) {\n            return tensor_1.Tensor.make(x.shape, { dataId: x.dataId }, x.dtype);\n        }, { x: x }, der);\n    };\n    ArrayOps.randomNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false, seed);\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = randGauss.nextValue();\n        }\n        return res.toTensor();\n    };\n    ArrayOps.truncatedNormal = function (shape, mean, stdDev, dtype, seed) {\n        if (mean === void 0) { mean = 0; }\n        if (stdDev === void 0) { stdDev = 1; }\n        if (dtype != null && dtype === 'bool') {\n            throw new Error(\"Unsupported data type \" + dtype);\n        }\n        var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true, seed);\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = randGauss.nextValue();\n        }\n        return res.toTensor();\n    };\n    ArrayOps.randomUniform = function (shape, minval, maxval, dtype) {\n        if (minval === void 0) { minval = 0; }\n        if (maxval === void 0) { maxval = 1; }\n        if (dtype === void 0) { dtype = 'float32'; }\n        var res = ArrayOps.buffer(shape, dtype);\n        for (var i = 0; i < res.values.length; i++) {\n            res.values[i] = util.randUniform(minval, maxval);\n        }\n        return res.toTensor();\n    };\n    ArrayOps.rand = function (shape, randFunction, dtype) {\n        var size = util.sizeFromShape(shape);\n        var values = null;\n        if (dtype == null || dtype === 'float32') {\n            values = new Float32Array(size);\n        }\n        else if (dtype === 'int32') {\n            values = new Int32Array(size);\n        }\n        else if (dtype === 'bool') {\n            values = new Uint8Array(size);\n        }\n        else {\n            throw new Error(\"Unknown data type \" + dtype);\n        }\n        for (var i = 0; i < size; i++) {\n            values[i] = randFunction();\n        }\n        return tensor_1.Tensor.make(shape, { values: values }, dtype);\n    };\n    ArrayOps.multinomial = function (logits, numSamples, seed, normalized) {\n        if (normalized === void 0) { normalized = false; }\n        util.assertArgumentsAreTensors({ logits: logits }, 'multinomial');\n        var numOutcomes = logits.size;\n        var origRank = logits.rank;\n        if (numOutcomes < 2) {\n            throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" +\n                (numOutcomes + \".\"));\n        }\n        if (origRank > 2) {\n            throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + origRank);\n        }\n        seed = seed || Math.random();\n        var logits2D = origRank === 1 ? logits.as2D(1, -1) : logits;\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.multinomial(logits2D, normalized, numSamples, seed); }, { logits2D: logits2D });\n        return origRank === 1 ? res.as1D() : res;\n    };\n    ArrayOps.oneHot = function (indices, depth, onValue, offValue) {\n        if (onValue === void 0) { onValue = 1; }\n        if (offValue === void 0) { offValue = 0; }\n        util.assert(indices.dtype === 'int32', 'Indices must be of dtype `int32`');\n        if (depth < 2) {\n            throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + depth);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.oneHot(indices, depth, onValue, offValue); }, { indices: indices });\n    };\n    ArrayOps.fromPixels = function (pixels, numChannels) {\n        if (numChannels === void 0) { numChannels = 3; }\n        if (numChannels > 4) {\n            throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n        }\n        return environment_1.ENV.engine.fromPixels(pixels, numChannels);\n    };\n    ArrayOps.toPixels = function (img, canvas) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, height, width, depth, min, max, data, multiplier, bytes, i, r, g, b, a, j, ctx, imageData;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        util.assertArgumentsAreTensors({ img: img }, 'toPixels');\n                        if (img.rank !== 2 && img.rank !== 3) {\n                            throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \" + img.rank + \".\");\n                        }\n                        _a = img.shape.slice(0, 2), height = _a[0], width = _a[1];\n                        depth = img.rank === 2 ? 1 : img.shape[2];\n                        if (depth > 4 || depth === 2) {\n                            throw new Error(\"toPixels only supports depth of size \" +\n                                (\"1, 3 or 4 but got \" + depth));\n                        }\n                        return [4, img.min().data()];\n                    case 1:\n                        min = (_b.sent())[0];\n                        return [4, img.max().data()];\n                    case 2:\n                        max = (_b.sent())[0];\n                        if (img.dtype === 'float32') {\n                            if (min < 0 || max > 1) {\n                                throw new Error(\"Tensor values for a float32 Tensor must be in the \" +\n                                    (\"range [0 - 1] but got range [\" + min + \" - \" + max + \"].\"));\n                            }\n                        }\n                        else if (img.dtype === 'int32') {\n                            if (min < 0 || max > 255) {\n                                throw new Error(\"Tensor values for a int32 Tensor must be in the \" +\n                                    (\"range [0 - 255] but got range [\" + min + \" - \" + max + \"].\"));\n                            }\n                        }\n                        else {\n                            throw new Error(\"Unsupported type for toPixels: \" + img.dtype + \".\" +\n                                \" Please use float32 or int32 tensors.\");\n                        }\n                        return [4, img.data()];\n                    case 3:\n                        data = _b.sent();\n                        multiplier = img.dtype === 'float32' ? 255 : 1;\n                        bytes = new Uint8ClampedArray(width * height * 4);\n                        for (i = 0; i < height * width; ++i) {\n                            r = void 0, g = void 0, b = void 0, a = void 0;\n                            if (depth === 1) {\n                                r = data[i] * multiplier;\n                                g = data[i] * multiplier;\n                                b = data[i] * multiplier;\n                                a = 255;\n                            }\n                            else if (depth === 3) {\n                                r = data[i * 3] * multiplier;\n                                g = data[i * 3 + 1] * multiplier;\n                                b = data[i * 3 + 2] * multiplier;\n                                a = 255;\n                            }\n                            else if (depth === 4) {\n                                r = data[i * 4] * multiplier;\n                                g = data[i * 4 + 1] * multiplier;\n                                b = data[i * 4 + 2] * multiplier;\n                                a = data[i * 4 + 3] * multiplier;\n                            }\n                            j = i * 4;\n                            bytes[j + 0] = Math.round(r);\n                            bytes[j + 1] = Math.round(g);\n                            bytes[j + 2] = Math.round(b);\n                            bytes[j + 3] = Math.round(a);\n                        }\n                        if (canvas != null) {\n                            canvas.width = width;\n                            canvas.height = height;\n                            ctx = canvas.getContext('2d');\n                            imageData = new ImageData(bytes, width, height);\n                            ctx.putImageData(imageData, 0, 0);\n                        }\n                        return [2, bytes];\n                }\n            });\n        });\n    };\n    ArrayOps.reshape = function (x, shape) {\n        util.assertArgumentsAreTensors({ x: x }, 'reshape');\n        shape = util.inferFromImplicitShape(shape, x.size);\n        util.assert(x.size === util.sizeFromShape(shape), 'new shape and old shape must have the same number of elements.');\n        var grad = function (dy) {\n            return { x: function () { return dy.reshape(x.shape); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.reshape(x, shape); }, { x: x }, grad);\n    };\n    ArrayOps.squeeze = function (x, axis) {\n        util.assertArgumentsAreTensors({ x: x }, 'squeeze');\n        return ArrayOps.reshape(x, util.squeezeShape(x.shape, axis).newShape);\n    };\n    ArrayOps.cast = function (x, dtype) {\n        util.assertArgumentsAreTensors({ x: x }, 'cast');\n        var grad = function (dy) {\n            return { x: function () { return dy.clone(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cast(x, dtype); }, { x: x }, grad);\n    };\n    ArrayOps.tile = function (x, reps) {\n        util.assertArgumentsAreTensors({ x: x }, 'tile');\n        util.assert(x.rank === reps.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of reps \" + reps + \".\"));\n        var grad = function (dy) {\n            var derX = function () {\n                var xGrad = ArrayOps.zerosLike(x);\n                if (x.rank === 1) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        xGrad = xGrad.add(dy.slice([i * x.shape[0]], [x.shape[0]]));\n                    }\n                }\n                else if (x.rank === 2) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            xGrad = xGrad.add(dy.slice([i * x.shape[0], j * x.shape[1]], [x.shape[0], x.shape[1]]));\n                        }\n                    }\n                }\n                else if (x.rank === 3) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            for (var k = 0; k < reps[2]; ++k) {\n                                xGrad = xGrad.add(dy.slice([i * x.shape[0], j * x.shape[1], k * x.shape[2]], [x.shape[0], x.shape[1], x.shape[2]]));\n                            }\n                        }\n                    }\n                }\n                else if (x.rank === 4) {\n                    for (var i = 0; i < reps[0]; ++i) {\n                        for (var j = 0; j < reps[1]; ++j) {\n                            for (var k = 0; k < reps[2]; ++k) {\n                                for (var l = 0; l < reps[3]; ++l) {\n                                    xGrad = xGrad.add(dy.slice([\n                                        i * x.shape[0], j * x.shape[1], k * x.shape[2],\n                                        l * x.shape[3]\n                                    ], [x.shape[0], x.shape[1], x.shape[2], x.shape[3]]));\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    throw new Error(\"Gradient for tile operation is not implemented for rank-\" +\n                        (x.rank + \" tensors yet.\"));\n                }\n                return xGrad;\n            };\n            return { x: derX };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.tile(x, reps); }, { x: x }, grad);\n    };\n    ArrayOps.gather = function (x, indices, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x, indices: indices }, 'gather');\n        util.assert(indices.dtype === 'int32', 'Indices must be of dtype `int32`');\n        var axes = axis_util_1.parseAxisParam(axis, x.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.gather(x, indices, axes[0]); }, { x: x, indices: indices });\n    };\n    ArrayOps.pad1d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 2, 'Invalid number of paddings. Must be length of 2.');\n        return ArrayOps.pad(x, [paddings], constantValue);\n    };\n    ArrayOps.pad2d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 2 && paddings[0].length === 2 &&\n            paddings[1].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad3d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 3 && paddings[0].length === 2 &&\n            paddings[1].length === 2 && paddings[2].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad4d = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assert(paddings.length === 4 && paddings[0].length === 2 &&\n            paddings[1].length === 2 && paddings[2].length === 2 &&\n            paddings[3].length === 2, 'Invalid number of paddings. Must be length of 2 each.');\n        return ArrayOps.pad(x, paddings, constantValue);\n    };\n    ArrayOps.pad = function (x, paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'pad');\n        if (x.rank === 0) {\n            throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n        }\n        var begin = paddings.map(function (p) { return p[0]; });\n        var grad = function (dy) {\n            return { x: function () { return dy.slice(begin, x.shape); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.pad(x, paddings, constantValue); }, { x: x }, grad);\n    };\n    ArrayOps.stack = function (tensors, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ tensors: tensors }, 'stack');\n        util.assert(tensors.length >= 1, 'Pass at least one tensor to tf.stack');\n        if (tensors.length === 1) {\n            return tensors[0].expandDims(axis);\n        }\n        var rank = tensors[0].rank;\n        var shape = tensors[0].shape;\n        var dtype = tensors[0].dtype;\n        util.assert(axis <= rank, 'Axis must be <= rank of the tensor');\n        tensors.forEach(function (t) {\n            util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        });\n        tensors.forEach(function (t) {\n            util.assert(dtype === t.dtype, 'All tensors passed to stack must have matching dtypes');\n        });\n        var expandedTensors = tensors.map(function (t) { return t.expandDims(axis); });\n        return concat_1.ConcatOps.concat(expandedTensors, axis);\n    };\n    ArrayOps.split = function (x, numOrSizeSplits, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'split');\n        axis = axis_util_1.parseAxisParam(axis, x.shape)[0];\n        var splitSizes;\n        if (typeof (numOrSizeSplits) === 'number') {\n            util.assert(x.shape[axis] % numOrSizeSplits === 0, 'Number of splits must evenly divide the axis.');\n            splitSizes = Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n        }\n        else {\n            util.assert(x.shape[axis] === numOrSizeSplits.reduce(function (a, b) { return a + b; }), 'The sum of sizes must match the size of the axis dimension.');\n            splitSizes = numOrSizeSplits;\n        }\n        var begin = Array(x.rank).fill(0);\n        var size = x.shape.slice();\n        return splitSizes.map(function (s) {\n            size[axis] = s;\n            var slice = x.slice(begin, size);\n            begin[axis] += s;\n            return slice;\n        });\n    };\n    ArrayOps.expandDims = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'expandDims');\n        util.assert(axis <= x.rank, 'Axis must be <= rank of the tensor');\n        var newShape = x.shape.slice();\n        newShape.splice(axis, 0, 1);\n        return ArrayOps.reshape(x, newShape);\n    };\n    ArrayOps.linspace = function (start, stop, num) {\n        if (num === 0) {\n            throw new Error('Cannot request zero samples');\n        }\n        var step = (stop - start) / (num - 1);\n        var values = makeZerosTypedArray(num, 'float32');\n        values[0] = start;\n        for (var i = 1; i < values.length; i++) {\n            values[i] = values[i - 1] + step;\n        }\n        return ArrayOps.tensor1d(values, 'float32');\n    };\n    ArrayOps.range = function (start, stop, step, dtype) {\n        if (step === void 0) { step = 1; }\n        if (dtype === void 0) { dtype = 'float32'; }\n        if (step === 0) {\n            throw new Error('Cannot have a step of zero');\n        }\n        var sameStartStop = start === stop;\n        var increasingRangeNegativeStep = start < stop && step < 0;\n        var decreasingRangePositiveStep = stop < start && step > 1;\n        if (sameStartStop || increasingRangeNegativeStep ||\n            decreasingRangePositiveStep) {\n            return ArrayOps.zeros([0], dtype);\n        }\n        var numElements = Math.abs(Math.ceil((stop - start) / step));\n        var values = makeZerosTypedArray(numElements, dtype);\n        if (stop < start && step === 1) {\n            step = -1;\n        }\n        values[0] = start;\n        for (var i = 1; i < values.length; i++) {\n            values[i] = values[i - 1] + step;\n        }\n        return ArrayOps.tensor1d(values, dtype);\n    };\n    ArrayOps.buffer = function (shape, dtype, values) {\n        if (dtype === void 0) { dtype = 'float32'; }\n        return new tensor_1.TensorBuffer(shape, dtype, values);\n    };\n    ArrayOps.print = function (x, verbose) {\n        if (verbose === void 0) { verbose = false; }\n        console.log(tensor_util.tensorToString(x, verbose));\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"scalar\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor1d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor2d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor3d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"tensor4d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"ones\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"zeros\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"fill\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"onesLike\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"zerosLike\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"clone\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"randomNormal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"truncatedNormal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"randomUniform\", null);\n    __decorate([\n        operation_1.operation\n    ], ArrayOps, \"rand\", null);\n    __decorate([\n        operation_1.operation\n    ], ArrayOps, \"multinomial\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"oneHot\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' }),\n        operation_1.operation\n    ], ArrayOps, \"fromPixels\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Visualization' })\n    ], ArrayOps, \"toPixels\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"reshape\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' })\n    ], ArrayOps, \"squeeze\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"cast\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"tile\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"gather\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"pad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"stack\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ArrayOps, \"split\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Transformations' }),\n        operation_1.operation\n    ], ArrayOps, \"expandDims\", null);\n    __decorate([\n        operation_1.operation,\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"linspace\", null);\n    __decorate([\n        operation_1.operation,\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"range\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"buffer\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Creation' })\n    ], ArrayOps, \"print\", null);\n    return ArrayOps;\n}());\nexports.ArrayOps = ArrayOps;\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type $ {dtype}\");\n    }\n}\nfunction makeOnesTypedArray(size, dtype) {\n    var array = makeZerosTypedArray(size, dtype);\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nfunction toTypedArray(a, dtype) {\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        a = util.flatten(a);\n    }\n    return util.copyTypedArray(a, dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/array_ops.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar SGDOptimizer = (function (_super) {\n    __extends(SGDOptimizer, _super);\n    function SGDOptimizer(learningRate) {\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.setLearningRate(learningRate);\n        return _this;\n    }\n    SGDOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var varNames = Object.keys(variableGradients);\n        varNames.forEach(function (varName) {\n            var gradient = variableGradients[varName];\n            var value = environment_1.ENV.engine.registeredVariables[varName];\n            globals_1.tidy(function () {\n                var newValue = _this.c.mul(gradient).add(value);\n                value.assign(newValue);\n            });\n        });\n    };\n    SGDOptimizer.prototype.setLearningRate = function (learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = globals_1.keep(ops_1.scalar(-learningRate));\n    };\n    SGDOptimizer.prototype.dispose = function () {\n        this.c.dispose();\n    };\n    return SGDOptimizer;\n}(optimizer_1.Optimizer));\nexports.SGDOptimizer = SGDOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nfunction getActivation(activationType) {\n    if (activationType == null) {\n        return linear;\n    }\n    else if (activationType.toLowerCase() === 'elu') {\n        return elu;\n    }\n    else if (activationType.toLowerCase() === 'hardsigmoid') {\n        return hardSigmoid;\n    }\n    else if (activationType.toLowerCase() === 'linear') {\n        return linear;\n    }\n    else if (activationType.toLowerCase() === 'relu') {\n        return relu;\n    }\n    else if (activationType.toLowerCase() === 'relu6') {\n        return relu6;\n    }\n    else if (activationType.toLowerCase() === 'selu') {\n        return selu;\n    }\n    else if (activationType.toLowerCase() === 'sigmoid') {\n        return sigmoid;\n    }\n    else if (activationType.toLowerCase() === 'softmax') {\n        return softmax;\n    }\n    else if (activationType.toLowerCase() === 'softplus') {\n        return softplus;\n    }\n    else if (activationType.toLowerCase() === 'softsign') {\n        return softsign;\n    }\n    else if (activationType.toLowerCase() === 'tanh') {\n        return tanh;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupported activation function \" + activationType);\n    }\n}\nexports.getActivation = getActivation;\nfunction elu(x, alpha) {\n    if (alpha === void 0) { alpha = 1; }\n    return K.elu(x, alpha);\n}\nexports.elu = elu;\nfunction selu(x) {\n    return K.selu(x);\n}\nexports.selu = selu;\nfunction relu(x) {\n    return K.relu(x);\n}\nexports.relu = relu;\nfunction relu6(x) {\n    return K.minimum(tfjs_core_1.scalar(6.0), K.relu(x));\n}\nexports.relu6 = relu6;\nfunction linear(x) {\n    return x;\n}\nexports.linear = linear;\nfunction sigmoid(x) {\n    return K.sigmoid(x);\n}\nexports.sigmoid = sigmoid;\nfunction hardSigmoid(x) {\n    return K.hardSigmoid(x);\n}\nexports.hardSigmoid = hardSigmoid;\nfunction softplus(x) {\n    return K.softplus(x);\n}\nexports.softplus = softplus;\nfunction softsign(x) {\n    return K.softsign(x);\n}\nexports.softsign = softsign;\nfunction tanh(x) {\n    return K.tanh(x);\n}\nexports.tanh = tanh;\nfunction softmax(x, axis) {\n    if (axis === void 0) { axis = (-1); }\n    return K.softmax(x, axis);\n}\nexports.softmax = softmax;\nfunction serializeActivation(activation) {\n    return activation.name;\n}\nexports.serializeActivation = serializeActivation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/activations.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nfunction deserialize(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, generic_utils_1.ClassNameMap.getMap().pythonClassNameMap, customObjects, 'layer');\n}\nexports.deserialize = deserialize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/serialization.js\n// module id = 31\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParams(aShape, bShape, axis) {\n    var aRank = aShape.length;\n    var bRank = bShape.length;\n    util.assert(aShape.length === bShape.length, \"Error in concat\" + aRank + \"D: rank of x1 (\" + aRank + \") and x2 (\" + bRank + \") \" +\n        \"must be the same.\");\n    util.assert(axis >= 0 && axis < aRank, \"Error in concat\" + aRank + \"D: axis must be \" +\n        (\"between 0 and \" + (aRank - 1) + \".\"));\n    for (var i = 0; i < aRank; i++) {\n        util.assert((i === axis) || (aShape[i] === bShape[i]), \"Error in concat\" + aRank + \"D: Shape (\" + aShape + \") does not match \" +\n            (\"(\" + bShape + \") along the non-concatenated axis \" + i + \".\"));\n    }\n}\nexports.assertParams = assertParams;\nfunction computeOutShape1D(x1Shape, x2Shape) {\n    util.assert(x1Shape.length === 1 && x2Shape.length === 1, 'x1 and x2 should be 1d array.');\n    var outputShape = x1Shape.slice();\n    outputShape[0] += x2Shape[0];\n    return outputShape;\n}\nexports.computeOutShape1D = computeOutShape1D;\nfunction computeOutShape(x1Shape, x2Shape, axis) {\n    util.assert(x1Shape.length === x2Shape.length, 'x1 and x2 should have the same rank.');\n    var outputShape = x1Shape.slice();\n    outputShape[axis] += x2Shape[axis];\n    return outputShape;\n}\nexports.computeOutShape = computeOutShape;\nfunction computeGradientSliceShapes(aShape, bShape) {\n    return {\n        aBegin: [0, 0],\n        aSize: aShape,\n        bBegin: [0, aShape[1]],\n        bSize: bShape\n    };\n}\nexports.computeGradientSliceShapes = computeGradientSliceShapes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/concat_util.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexports.SELU_SCALE = 1.0507009873554804934193349852946;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/selu_util.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdadeltaOptimizer = (function (_super) {\n    __extends(AdadeltaOptimizer, _super);\n    function AdadeltaOptimizer(learningRate, rho, epsilon) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.accumulatedGrads = {};\n        _this.accumulatedUpdates = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.rho = globals_1.keep(ops_1.scalar(rho));\n        _this.oneMinusRho = globals_1.keep(ops_1.scalar(1 - rho));\n        return _this;\n    }\n    AdadeltaOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedGrads[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedGrads[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedUpdates[variableName] == null) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedUpdates[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            var gradient = variableGradients[variableName];\n            var accumulatedGrad = this_1.accumulatedGrads[variableName];\n            var accumulatedUpdate = this_1.accumulatedUpdates[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = _this.rho.mul(accumulatedGrad)\n                    .add(_this.oneMinusRho.mul(gradient.square()));\n                var updates = accumulatedUpdate.add(_this.epsilon)\n                    .sqrt()\n                    .div(accumulatedGrad.add(_this.epsilon).sqrt())\n                    .mul(gradient);\n                var newAccumulatedUpdate = _this.rho.mul(accumulatedUpdate)\n                    .add(_this.oneMinusRho.mul(updates.square()));\n                _this.accumulatedGrads[variableName].assign(newAccumulatedGrad);\n                _this.accumulatedUpdates[variableName].assign(newAccumulatedUpdate);\n                var newValue = _this.c.mul(updates).add(value);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    AdadeltaOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.rho.dispose();\n        this.oneMinusRho.dispose();\n        if (this.accumulatedUpdates != null) {\n            Object.keys(this.accumulatedUpdates)\n                .forEach(function (name) { return _this.accumulatedUpdates[name].dispose(); });\n            Object.keys(this.accumulatedGrads)\n                .forEach(function (name) { return _this.accumulatedGrads[name].dispose(); });\n        }\n    };\n    return AdadeltaOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdadeltaOptimizer = AdadeltaOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdagradOptimizer = (function (_super) {\n    __extends(AdagradOptimizer, _super);\n    function AdagradOptimizer(learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.initialAccumulatorValue = initialAccumulatorValue;\n        _this.accumulatedGrads = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(1e-8));\n        return _this;\n    }\n    AdagradOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedGrads[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedGrads[variableName] =\n                        ops_1.fill(value.shape, _this.initialAccumulatorValue)\n                            .variable(trainable_1);\n                });\n            }\n            var gradient = variableGradients[variableName];\n            var accumulatedGrad = this_1.accumulatedGrads[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = accumulatedGrad.add(gradient.square());\n                _this.accumulatedGrads[variableName].assign(newAccumulatedGrad);\n                var newValue = _this.c\n                    .mul(gradient.div(newAccumulatedGrad.add(_this.epsilon).sqrt()))\n                    .add(value);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    AdagradOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.epsilon.dispose();\n        this.c.dispose();\n        if (this.accumulatedGrads != null) {\n            Object.keys(this.accumulatedGrads)\n                .forEach(function (name) { return _this.accumulatedGrads[name].dispose(); });\n        }\n    };\n    return AdagradOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdagradOptimizer = AdagradOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamOptimizer = (function (_super) {\n    __extends(AdamOptimizer, _super);\n    function AdamOptimizer(learningRate, beta1, beta2, epsilon) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedFirstMoment = {};\n        _this.accumulatedSecondMoment = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.eps = globals_1.keep(ops_1.scalar(epsilon));\n        _this.beta1 = globals_1.keep(ops_1.scalar(beta1));\n        _this.beta2 = globals_1.keep(ops_1.scalar(beta2));\n        globals_1.tidy(function () {\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n            _this.accBeta2 = ops_1.scalar(beta2).variable();\n        });\n        _this.oneMinusBeta1 = globals_1.keep(ops_1.scalar(1 - beta1));\n        _this.oneMinusBeta2 = globals_1.keep(ops_1.scalar(1 - beta2));\n        _this.one = globals_1.keep(ops_1.scalar(1));\n        return _this;\n    }\n    AdamOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = _this.one.sub(_this.accBeta1);\n            var oneMinusAccBeta2 = _this.one.sub(_this.accBeta2);\n            for (var variableName in variableGradients) {\n                var value = environment_1.ENV.engine.registeredVariables[variableName];\n                if (_this.accumulatedFirstMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedFirstMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                if (_this.accumulatedSecondMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedSecondMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                var gradient = variableGradients[variableName];\n                var firstMoment = _this.accumulatedFirstMoment[variableName];\n                var secondMoment = _this.accumulatedSecondMoment[variableName];\n                var newFirstMoment = _this.beta1.mul(firstMoment).add(_this.oneMinusBeta1.mul(gradient));\n                var newSecondMoment = _this.beta2.mul(secondMoment)\n                    .add(_this.oneMinusBeta2.mul(gradient.square()));\n                var biasCorrectedFirstMoment = newFirstMoment.div(oneMinusAccBeta1);\n                var biasCorrectedSecondMoment = newSecondMoment.div(oneMinusAccBeta2);\n                _this.accumulatedFirstMoment[variableName].assign(newFirstMoment);\n                _this.accumulatedSecondMoment[variableName].assign(newSecondMoment);\n                var newValue = _this.c\n                    .mul(biasCorrectedFirstMoment.div(_this.eps.add(biasCorrectedSecondMoment.sqrt())))\n                    .add(value);\n                value.assign(newValue);\n            }\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n            _this.accBeta2.assign(_this.accBeta2.mul(_this.beta2));\n        });\n    };\n    AdamOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.eps.dispose();\n        this.beta1.dispose();\n        this.beta2.dispose();\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        this.oneMinusBeta1.dispose();\n        this.oneMinusBeta2.dispose();\n        this.one.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            Object.keys(this.accumulatedFirstMoment)\n                .forEach(function (name) { return _this.accumulatedFirstMoment[name].dispose(); });\n        }\n        if (this.accumulatedSecondMoment != null) {\n            Object.keys(this.accumulatedSecondMoment)\n                .forEach(function (name) { return _this.accumulatedSecondMoment[name].dispose(); });\n        }\n    };\n    return AdamOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamOptimizer = AdamOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamaxOptimizer = (function (_super) {\n    __extends(AdamaxOptimizer, _super);\n    function AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay) {\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (decay === void 0) { decay = 0.0; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedFirstMoment = {};\n        _this.accumulatedWeightedInfNorm = {};\n        _this.c = globals_1.keep(ops_1.scalar(-learningRate));\n        _this.eps = globals_1.keep(ops_1.scalar(epsilon));\n        _this.beta1 = globals_1.keep(ops_1.scalar(beta1));\n        _this.beta2 = globals_1.keep(ops_1.scalar(beta2));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        globals_1.tidy(function () {\n            _this.iteration = ops_1.scalar(0).variable();\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n        });\n        _this.oneMinusBeta1 = globals_1.keep(ops_1.scalar(1 - beta1));\n        _this.one = globals_1.keep(ops_1.scalar(1));\n        return _this;\n    }\n    AdamaxOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = _this.one.sub(_this.accBeta1);\n            var lr = _this.c.div(_this.one.add(_this.decay.mul(_this.iteration)));\n            for (var variableName in variableGradients) {\n                var value = environment_1.ENV.engine.registeredVariables[variableName];\n                if (_this.accumulatedFirstMoment[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedFirstMoment[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                if (_this.accumulatedWeightedInfNorm[variableName] == null) {\n                    var trainable = false;\n                    _this.accumulatedWeightedInfNorm[variableName] =\n                        ops_1.zerosLike(value).variable(trainable);\n                }\n                var gradient = variableGradients[variableName];\n                var firstMoment = _this.accumulatedFirstMoment[variableName];\n                var weightedInfNorm = _this.accumulatedWeightedInfNorm[variableName];\n                var newFirstMoment = _this.beta1.mul(firstMoment).add(_this.oneMinusBeta1.mul(gradient));\n                var ut0 = _this.beta2.mul(weightedInfNorm);\n                var ut1 = gradient.abs();\n                var newWeightedInfNorm = ut0.maximum(ut1);\n                _this.accumulatedFirstMoment[variableName].assign(newFirstMoment);\n                _this.accumulatedWeightedInfNorm[variableName].assign(newWeightedInfNorm);\n                var newValue = lr.div(oneMinusAccBeta1)\n                    .mul(newFirstMoment.div(_this.eps.add(newWeightedInfNorm)))\n                    .add(value);\n                value.assign(newValue);\n            }\n            _this.iteration.assign(_this.iteration.add(_this.one));\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n        });\n    };\n    AdamaxOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.eps.dispose();\n        this.accBeta1.dispose();\n        this.beta1.dispose();\n        this.beta2.dispose();\n        this.oneMinusBeta1.dispose();\n        this.decay.dispose();\n        this.iteration.dispose();\n        this.one.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            Object.keys(this.accumulatedFirstMoment)\n                .forEach(function (name) { return _this.accumulatedFirstMoment[name].dispose(); });\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            Object.keys(this.accumulatedWeightedInfNorm)\n                .forEach(function (name) { return _this.accumulatedWeightedInfNorm[name].dispose(); });\n        }\n    };\n    return AdamaxOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamaxOptimizer = AdamaxOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar sgd_optimizer_1 = require(\"./sgd_optimizer\");\nvar MomentumOptimizer = (function (_super) {\n    __extends(MomentumOptimizer, _super);\n    function MomentumOptimizer(learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        var _this = _super.call(this, learningRate) || this;\n        _this.learningRate = learningRate;\n        _this.momentum = momentum;\n        _this.useNesterov = useNesterov;\n        _this.m = ops_1.scalar(_this.momentum);\n        _this.accumulations = {};\n        return _this;\n    }\n    MomentumOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulations[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulations[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            var accumulation = this_1.accumulations[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newValue;\n                var newAccumulation = _this.m.mul(accumulation).add(gradient);\n                if (_this.useNesterov) {\n                    newValue =\n                        _this.c.mul(gradient.add(newAccumulation.mul(_this.m))).add(value);\n                }\n                else {\n                    newValue = _this.c.mul(newAccumulation).add(value);\n                }\n                _this.accumulations[variableName].assign(newAccumulation);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    MomentumOptimizer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.m.dispose();\n        if (this.accumulations != null) {\n            for (var variableName in this.accumulations) {\n                this.accumulations[variableName].dispose();\n            }\n        }\n    };\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\n        this.momentum = momentum;\n    };\n    return MomentumOptimizer;\n}(sgd_optimizer_1.SGDOptimizer));\nexports.MomentumOptimizer = MomentumOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (centered === void 0) { centered = false; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedMeanSquares = {};\n        _this.accumulatedMeanGrads = {};\n        _this.accumulatedMoments = {};\n        _this.c = globals_1.keep(ops_1.scalar(learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        _this.momentum = globals_1.keep(ops_1.scalar(momentum));\n        _this.oneMinusDecay = globals_1.keep(ops_1.scalar(1 - decay));\n        _this.centered = centered;\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedMeanSquares[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanSquares[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedMeanGrads[variableName] == null && this_1.centered) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanGrads[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            if (this_1.accumulatedMoments[variableName] == null) {\n                var trainable_3 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMoments[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_3);\n                });\n            }\n            var accumulatedMeanSquare = this_1.accumulatedMeanSquares[variableName];\n            var accumulatedMeanGrad = this_1.accumulatedMeanGrads[variableName];\n            var accumulatedMoments = this_1.accumulatedMoments[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = _this.decay.mul(accumulatedMeanSquare)\n                    .add(_this.oneMinusDecay.mul(gradient.square()));\n                if (_this.centered) {\n                    var newAccumulatedMeanGrad = _this.decay.mul(accumulatedMeanGrad)\n                        .add(_this.oneMinusDecay.mul(gradient));\n                    var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare.sub(newAccumulatedMeanGrad.square().add(_this.epsilon)).sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare);\n                    _this.accumulatedMeanGrads[variableName].assign(newAccumulatedMeanGrad);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    var newAccumulatedMeanSquare_1 = _this.decay.mul(accumulatedMeanSquare)\n                        .add(_this.oneMinusDecay.mul(gradient.square()));\n                    var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare_1.add(_this.epsilon).sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare_1);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.decay.dispose();\n        this.momentum.dispose();\n        this.oneMinusDecay.dispose();\n        if (this.accumulatedMeanSquares != null) {\n            Object.keys(this.accumulatedMeanSquares)\n                .forEach(function (name) { return _this.accumulatedMeanSquares[name].dispose(); });\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            Object.keys(this.accumulatedMeanGrads)\n                .forEach(function (name) { return _this.accumulatedMeanGrads[name].dispose(); });\n        }\n        if (this.accumulatedMoments != null) {\n            Object.keys(this.accumulatedMoments)\n                .forEach(function (name) { return _this.accumulatedMoments[name].dispose(); });\n        }\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _epsilon = 1e-7;\nfunction epsilon() {\n    return _epsilon;\n}\nexports.epsilon = epsilon;\nfunction setEpsilon(e) {\n    _epsilon = e;\n}\nexports.setEpsilon = setEpsilon;\nfunction imageDataFormat() {\n    return 'channelsLast';\n}\nexports.imageDataFormat = imageDataFormat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/backend/common.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"../backend/tfjs_backend\");\nvar callbacks_1 = require(\"../callbacks\");\nvar errors_1 = require(\"../errors\");\nvar losses = require(\"../losses\");\nvar Metrics = require(\"../metrics\");\nvar optimizers = require(\"../optimizers\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar math_utils_1 = require(\"../utils/math_utils\");\nvar executor_1 = require(\"./executor\");\nvar topology_1 = require(\"./topology\");\nfunction isDataTensor(x) {\n    return x instanceof tfjs_core_1.Tensor;\n}\nexports.isDataTensor = isDataTensor;\nfunction isDataArray(x) {\n    return Array.isArray(x);\n}\nexports.isDataArray = isDataArray;\nfunction isDataDict(x) {\n    return !isDataTensor(x) && !isDataArray(x);\n}\nexports.isDataDict = isDataDict;\nfunction standardizeInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    if (names == null || names.length === 0) {\n        if (data != null) {\n            var gotUnexpectedData = false;\n            if (isDataArray(data) && data.length > 0) {\n                gotUnexpectedData = true;\n            }\n            else if (isDataDict(data)) {\n                for (var key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        gotUnexpectedData = true;\n                        break;\n                    }\n                }\n            }\n            else {\n                gotUnexpectedData = true;\n            }\n            if (gotUnexpectedData) {\n                throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \" expected no data, \" +\n                    (\"but got \" + data));\n            }\n        }\n        return [];\n    }\n    if (data == null) {\n        return names.map(function (name) { return null; });\n    }\n    var arrays;\n    if (isDataDict(data)) {\n        data = data;\n        arrays = [];\n        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n            var name_1 = names_1[_i];\n            if (data[name_1] == null) {\n                throw new errors_1.ValueError(\"No data provided for \\\"\" + name_1 + \"\\\". Need data for each key in: \" +\n                    (\"\" + names));\n            }\n            arrays.push(data[name_1]);\n        }\n    }\n    else if (isDataArray(data)) {\n        data = data;\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"model expected. Expected to see \" + names.length + \" Tensor(s), but \") +\n                (\"instead got the following list of Tensor(s): \" + data));\n        }\n        arrays = data;\n    }\n    else {\n        data = data;\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model \" + exceptionPrefix + \" expects \" + names.length + \" Tensor(s), \" +\n                (\"but only received one Tensor. Found: Tensor with shape \" + data.shape));\n        }\n        arrays = [data];\n    }\n    for (var i = 0; i < names.length; ++i) {\n        var array = arrays[i];\n        if (array.shape.length === 1) {\n            arrays[i] = K.expandDims(array, 1);\n        }\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s). but got array with \") +\n                    (\"shape \" + array.shape));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null && refDim >= 0 && dim !== refDim) {\n                    throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                        (\"to have shape [\" + shapes[i] + \"], but got array with shape \") +\n                        (\"[\" + array.shape + \"].\"));\n                }\n            }\n        }\n    }\n    return arrays;\n}\nexports.standardizeInputData = standardizeInputData;\nfunction checkArrayLengths(inputs, targets, weights) {\n    var setX = generic_utils_1.unique(inputs.map(function (input) { return input.shape[0]; }));\n    setX.sort();\n    var setY = generic_utils_1.unique(targets.map(function (target) { return target.shape[0]; }));\n    setY.sort();\n    if (setX.length > 1) {\n        throw new errors_1.ValueError(\"All input Tensors (x) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(inputs.map(function (input) { return input.shape; }))));\n    }\n    if (setY.length > 1) {\n        throw new errors_1.ValueError(\"All target Tensors (y) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(targets.map(function (target) { return target.shape; }))));\n    }\n    if (setX.length > 0 && setY.length > 0 && !tfjs_core_1.util.arraysEqual(setX, setY)) {\n        throw new errors_1.ValueError(\"Input Tensors should have the same number of samples as target \" +\n            (\"Tensors. Found \" + setX[0] + \" input sample(s) and \" + setY[0] + \" target \") +\n            \"sample(s).\");\n    }\n}\nexports.checkArrayLengths = checkArrayLengths;\nfunction checkLossAndTargetCompatibility(targets, lossFns, outputShapes) {\n    var keyLosses = [\n        losses.meanSquaredError, losses.binaryCrossentropy,\n        losses.categoricalCrossentropy\n    ];\n    for (var i = 0; i < targets.length; ++i) {\n        var y = targets[i];\n        var loss = lossFns[i];\n        var shape = outputShapes[i];\n        if (loss == null) {\n            continue;\n        }\n        if (loss === losses.categoricalCrossentropy) {\n            if (y.shape[y.shape.length - 1] === 1) {\n                throw new errors_1.ValueError(\"You are passing a target array of shape \" + y.shape + \" while using \" +\n                    \"a loss 'categorical_crossentropy'. 'categorical_crossentropy'\" +\n                    \"expects targets to be binary matrices (1s and 0s) of shape \" +\n                    \"[samples, classes].\");\n            }\n        }\n        if (keyLosses.indexOf(loss) !== -1) {\n            var slicedYShape = y.shape.slice(1);\n            var slicedShape = shape.slice(1);\n            for (var j = 0; j < slicedYShape.length; ++j) {\n                var targetDim = slicedYShape[j];\n                var outDim = slicedShape[j];\n                if (outDim != null && targetDim !== outDim) {\n                    throw new errors_1.ValueError(\"A target Tensor with shape \" + y.shape + \" was passed for an \" +\n                        (\"output of shape \" + shape + \", while using a loss function that \") +\n                        \"expects targets to have the same shape as the output.\");\n                }\n            }\n        }\n    }\n}\nfunction makeBatches(size, batchSize) {\n    var output = [];\n    var batchStart = 0;\n    var batchEnd = null;\n    while (batchStart < size) {\n        batchEnd = batchStart + batchSize;\n        if (batchEnd >= size) {\n            batchEnd = size;\n        }\n        output.push([batchStart, batchEnd]);\n        batchStart = batchEnd;\n    }\n    return output;\n}\nexports.makeBatches = makeBatches;\nfunction sliceArrays(arrays, start, stop) {\n    if (arrays == null) {\n        return [null];\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return K.sliceAlongFirstAxis(array, start, stop - start); });\n    }\n    else {\n        return K.sliceAlongFirstAxis(arrays, start, stop - start);\n    }\n}\nfunction sliceArraysByIndices(arrays, indices) {\n    if (arrays == null) {\n        return null;\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return sliceArraysByIndices(array, indices); });\n    }\n    else {\n        return K.gather(arrays, indices.dtype === 'int32' ? indices : indices.toInt());\n    }\n}\nexports.sliceArraysByIndices = sliceArraysByIndices;\nfunction checkInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    var arrays;\n    if (Array.isArray(data)) {\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"the model expected. Expected to see \" + names.length + \" Tensor(s),\") +\n                (\" but instead got \" + data.length + \" Tensors(s).\"));\n        }\n        arrays = data;\n    }\n    else {\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model expects \" + names.length + \" \" + exceptionPrefix + \" Tensors, \" +\n                \"but only received one Tensor. Found: array with shape \" +\n                (JSON.stringify(data.shape) + \".\"));\n        }\n        arrays = [data];\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s), but got array with \") +\n                    (\"shape \" + JSON.stringify(array.shape)));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null) {\n                    if (refDim !== dim) {\n                        throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" +\n                            (names[i] + \" to have shape \" + JSON.stringify(shapes[i]) + \" but \") +\n                            (\"got array with shape \" + JSON.stringify(array.shape) + \".\"));\n                    }\n                }\n            }\n        }\n    }\n}\nfunction collectMetrics(metrics, outputNames) {\n    if (metrics == null || Array.isArray(metrics) && metrics.length === 0) {\n        return outputNames.map(function (name) { return []; });\n    }\n    if (Array.isArray(metrics)) {\n        return outputNames.map(function (name) { return metrics; });\n    }\n    else if (metrics != null) {\n        var nestedMetrics = [];\n        for (var _i = 0, outputNames_1 = outputNames; _i < outputNames_1.length; _i++) {\n            var name_2 = outputNames_1[_i];\n            var outputMetrics = metrics.hasOwnProperty(name_2) ? metrics[name_2] : [];\n            if (!Array.isArray(outputMetrics)) {\n                outputMetrics = [outputMetrics];\n            }\n            nestedMetrics.push(outputMetrics);\n        }\n        return nestedMetrics;\n    }\n    else {\n        throw new TypeError('Type of metrics argument not understood. Expected an Array or ' +\n            'Object, found: ' + metrics);\n    }\n}\nvar ModelLoggingVerbosity;\n(function (ModelLoggingVerbosity) {\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"SILENT\"] = 0] = \"SILENT\";\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"VERBOSE\"] = 1] = \"VERBOSE\";\n})(ModelLoggingVerbosity = exports.ModelLoggingVerbosity || (exports.ModelLoggingVerbosity = {}));\nvar Model = (function (_super) {\n    __extends(Model, _super);\n    function Model(config) {\n        return _super.call(this, config) || this;\n    }\n    Model.prototype.getClassName = function () {\n        return 'Model';\n    };\n    Model.prototype.compile = function (config) {\n        var _this = this;\n        if (config.loss == null) {\n            config.loss = [];\n        }\n        this.loss = config.loss;\n        if (typeof config.optimizer === 'string') {\n            this.optimizer = optimizers.getOptimizer(config.optimizer);\n        }\n        else {\n            if (!(config.optimizer instanceof tfjs_core_1.Optimizer)) {\n                throw new errors_1.ValueError(\"User-defined optimizer must be an instance of tf.Optimizer.\");\n            }\n            this.optimizer = config.optimizer;\n        }\n        var lossFunctions = [];\n        if (!Array.isArray(config.loss) && typeof config.loss !== 'string' &&\n            typeof config.loss !== 'function') {\n            config.loss = config.loss;\n            for (var name_3 in config.loss) {\n                if (this.outputNames.indexOf(name_3) === -1) {\n                    throw new errors_1.ValueError(\"Unknown entry in loss dictionary: \\\"\" + name_3 + \"\\\". Only expect the \" +\n                        (\"following keys: \" + this.outputNames));\n                }\n            }\n            for (var name_4 in this.outputNames) {\n                if (config.loss[name_4] == null) {\n                    console.warn(\"Output \\\"\" + name_4 + \"\\\" is missing from loss dictionary. We assume \" +\n                        \"this was done on purpose, and we will not be expecting data \" +\n                        (\"to be passed to \" + name_4 + \" during training\"));\n                }\n                lossFunctions.push(losses.get(config.loss[name_4]));\n            }\n        }\n        else if (Array.isArray(config.loss)) {\n            if (config.loss.length !== this.outputs.length) {\n                throw new errors_1.ValueError(\"When passing an Array as loss, it should have one entry per \" +\n                    (\"model output. The model has \" + this.outputs.length + \" output(s), \") +\n                    (\"but you passed loss=\" + config.loss + \".\"));\n            }\n            var theLosses = config.loss;\n            lossFunctions = theLosses.map(function (l) { return losses.get(l); });\n        }\n        else {\n            var lossFunction_1 = losses.get(config.loss);\n            this.outputs.map(function (layer) {\n                lossFunctions.push(lossFunction_1);\n            });\n        }\n        this.lossFunctions = lossFunctions;\n        this.feedOutputNames = [];\n        this.feedOutputShapes = [];\n        this.feedLossFns = [];\n        for (var i = 0; i < this.outputs.length; ++i) {\n            var shape = this.internalOutputShapes[i];\n            var name_5 = this.outputNames[i];\n            this.feedOutputNames.push(name_5);\n            this.feedOutputShapes.push(shape);\n            this.feedLossFns.push(this.lossFunctions[i]);\n        }\n        var skipTargetIndices = [];\n        this.metrics = config.metrics;\n        this.metricsNames = ['loss'];\n        this.metricsTensors = [];\n        K.nameScope('loss', function () {\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    continue;\n                }\n                var weightedLoss = _this.lossFunctions[i];\n                if (_this.outputs.length > 1) {\n                    _this.metricsTensors.push([weightedLoss, i]);\n                    _this.metricsNames.push(_this.outputNames[i] + '_loss');\n                }\n            }\n        });\n        var nestedMetrics = collectMetrics(config.metrics, this.outputNames);\n        var appendMetric = function (outputIndex, metricName, metricTensor) {\n            if (_this.outputNames.length > 1) {\n                metricName = _this.outputNames[outputIndex] + '_' + metricName;\n            }\n            _this.metricsNames.push(metricName);\n            _this.metricsTensors.push([metricTensor, outputIndex]);\n        };\n        K.nameScope('metric', function () {\n            var _loop_1 = function (i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    return \"continue\";\n                }\n                var outputMetrics = nestedMetrics[i];\n                var handleMetrics = function (metrics) {\n                    var metricNamePrefix = '';\n                    var metricName;\n                    var accFn;\n                    var weightedMetricFn;\n                    var _loop_2 = function (metric) {\n                        if (['accuracy', 'acc', 'crossentropy', 'ce'].indexOf(metric) !==\n                            -1) {\n                            var outputShape = _this.internalOutputShapes[i];\n                            if (outputShape[outputShape.length - 1] === 1 ||\n                                _this.lossFunctions[i] === losses.binaryCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryCrossentropy;\n                                }\n                            }\n                            else if (_this.lossFunctions[i] ===\n                                losses.sparseCategoricalCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalCrossentropy;\n                                }\n                            }\n                            else {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalCrossentropy;\n                                }\n                            }\n                            var suffix = void 0;\n                            if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                suffix = 'acc';\n                            }\n                            else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                suffix = 'ce';\n                            }\n                            weightedMetricFn = accFn;\n                            metricName = metricNamePrefix + suffix;\n                        }\n                        else {\n                            var metricFn = Metrics.get(metric);\n                            weightedMetricFn = metricFn;\n                            metricName = metricNamePrefix + metric;\n                        }\n                        var metricResult;\n                        K.nameScope(metricName, function () {\n                            metricResult = weightedMetricFn;\n                        });\n                        appendMetric(i, metricName, metricResult);\n                    };\n                    for (var _i = 0, metrics_1 = metrics; _i < metrics_1.length; _i++) {\n                        var metric = metrics_1[_i];\n                        _loop_2(metric);\n                    }\n                };\n                handleMetrics(outputMetrics);\n            };\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                _loop_1(i);\n            }\n        });\n        this.collectedTrainableWeights = this.trainableWeights;\n    };\n    Model.prototype.checkTrainableWeightsConsistency = function () {\n        if (this.collectedTrainableWeights == null) {\n            return;\n        }\n        if (this.trainableWeights.length !==\n            this.collectedTrainableWeights.length) {\n            console.warn('Discrepancy between trainableweights and collected trainable ' +\n                'weights. Did you set `model.trainable` without calling ' +\n                '`model.compile()` afterwards?');\n        }\n    };\n    Model.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        var standardizedOuts = this.standardizeUserData(x, y, true, batchSize);\n        var ins = standardizedOuts[0].concat(standardizedOuts[1]);\n        this.makeTestFunction();\n        var f = this.testFunction;\n        var testOuts = this.testLoop(f, ins, batchSize, config.verbose, config.steps);\n        return generic_utils_1.singletonOrArray(testOuts);\n    };\n    Model.prototype.checkNumSamples = function (ins, batchSize, steps, stepsName) {\n        if (stepsName === void 0) { stepsName = 'steps'; }\n        var numSamples;\n        if (steps != null) {\n            numSamples = null;\n            if (batchSize != null) {\n                throw new errors_1.ValueError(\"If \" + stepsName + \" is set, batchSize must be null or undefined.\" +\n                    (\"Got batchSize = \" + batchSize));\n            }\n        }\n        else if (ins != null) {\n            if (Array.isArray(ins)) {\n                numSamples = ins[0].shape[0];\n            }\n            else {\n                numSamples = ins.shape[0];\n            }\n        }\n        else {\n            throw new errors_1.ValueError(\"Either the input data should have a defined shape, or \" +\n                (stepsName + \" shoud be specified.\"));\n        }\n        return numSamples;\n    };\n    Model.prototype.predictLoop = function (ins, batchSize, verbose) {\n        var _this = this;\n        if (batchSize === void 0) { batchSize = 32; }\n        if (verbose === void 0) { verbose = false; }\n        var numSamples = this.checkNumSamples(ins);\n        if (verbose) {\n            throw new errors_1.NotImplementedError('Verbose predictLoop() is not implemented yet.');\n        }\n        var batches = makeBatches(numSamples, batchSize);\n        var outs = [];\n        var _loop_3 = function (batchIndex) {\n            var batchOuts = tfc.tidy(function () {\n                var batchStart = batches[batchIndex][0];\n                var batchEnd = batches[batchIndex][1];\n                var insBatch = sliceArrays(ins, batchStart, batchEnd);\n                var feeds = [];\n                if (Array.isArray(insBatch)) {\n                    for (var i = 0; i < insBatch.length; ++i) {\n                        feeds.push({ key: _this.inputs[i], value: insBatch[i] });\n                    }\n                }\n                else {\n                    feeds.push({ key: _this.inputs[0], value: insBatch });\n                }\n                var feedDict = new executor_1.FeedDict(feeds);\n                return executor_1.execute(_this.outputs, feedDict);\n            });\n            if (batchIndex === 0) {\n                for (var _i = 0, batchOuts_1 = batchOuts; _i < batchOuts_1.length; _i++) {\n                    var batchOut = batchOuts_1[_i];\n                    outs.push(batchOut);\n                }\n            }\n            else {\n                for (var i = 0; i < batchOuts.length; ++i) {\n                    outs[i] = K.concatAlongFirstAxis(outs[i], batchOuts[i]);\n                }\n            }\n        };\n        for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n            _loop_3(batchIndex);\n        }\n        return generic_utils_1.singletonOrArray(outs);\n    };\n    Model.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        checkInputData(x, this.inputNames, this.feedInputShapes, false);\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        return this.predictLoop(x, batchSize);\n    };\n    Model.prototype.predictOnBatch = function (x) {\n        checkInputData(x, this.inputNames, this.feedInputShapes, true);\n        return this.predictLoop(x, x.shape[0]);\n    };\n    Model.prototype.standardizeUserData = function (x, y, checkBatchAxis, batchSize) {\n        if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n        if (this.optimizer == null) {\n            throw new errors_1.RuntimeError('You must compile a model before training/testing. Use ' +\n                'Model.compile(modelCompileConfig).');\n        }\n        var outputShapes = [];\n        for (var i = 0; i < this.feedOutputShapes.length; ++i) {\n            var outputShape = this.feedOutputShapes[i];\n            var lossFn = this.feedLossFns[i];\n            if (lossFn === losses.sparseCategoricalCrossentropy) {\n                outputShapes.push(outputShape.slice(0, outputShape.length - 1).concat([1]));\n            }\n            else {\n                outputShapes.push(outputShape);\n            }\n        }\n        x = standardizeInputData(x, this.feedInputNames, this.feedInputShapes, false, 'input');\n        y = standardizeInputData(y, this.feedOutputNames, outputShapes, false, 'target');\n        checkArrayLengths(x, y, null);\n        checkLossAndTargetCompatibility(y, this.feedLossFns, this.feedOutputShapes);\n        if (this.stateful && batchSize != null && batchSize > 0) {\n            if (x[0].shape[0] % batchSize !== 0) {\n                throw new errors_1.ValueError(\"In a stateful network, you should only pass inputs with a \" +\n                    \"number of samples that is divisible by the batch size \" +\n                    (batchSize + \". Found: \" + x[0].shape[0] + \" sample(s).\"));\n            }\n        }\n        return [x, y, null];\n    };\n    Model.prototype.fitLoop = function (f, ins, outLabels, batchSize, epochs, verbose, callbacks, valF, valIns, shuffle, callbackMetrics, initialEpoch, stepsPerEpoch, validationSteps) {\n        if (initialEpoch === void 0) { initialEpoch = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var doValidation, numTrainSamples, indexArray, callbackList, _loop_4, epoch;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (batchSize == null) {\n                            batchSize = 32;\n                        }\n                        if (epochs == null) {\n                            epochs = 100;\n                        }\n                        if (shuffle == null) {\n                            shuffle = true;\n                        }\n                        if (initialEpoch == null) {\n                            initialEpoch = 0;\n                        }\n                        doValidation = false;\n                        if (valF != null && valIns != null) {\n                            doValidation = true;\n                        }\n                        if (validationSteps != null) {\n                            doValidation = true;\n                            if (stepsPerEpoch == null) {\n                                throw new errors_1.ValueError('Can only use `validationSteps` when doing step-wise training, ' +\n                                    'i.e., `stepsPerEpoch` must be set.');\n                            }\n                        }\n                        numTrainSamples = this.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n                        if (numTrainSamples != null) {\n                            indexArray = math_utils_1.range(0, numTrainSamples);\n                        }\n                        this.history = new callbacks_1.History();\n                        if (callbacks == null) {\n                            callbacks = [new callbacks_1.BaseLogger()];\n                        }\n                        else {\n                            callbacks = [new callbacks_1.BaseLogger()].concat(callbacks);\n                        }\n                        callbacks = callbacks.concat([this.history]);\n                        if (verbose > 0) {\n                            throw new errors_1.NotImplementedError('Verbose mode is not implemented yet.');\n                        }\n                        callbackList = new callbacks_1.CallbackList(callbacks);\n                        callbackList.setModel(this);\n                        callbackList.setParams({\n                            epochs: epochs,\n                            steps: stepsPerEpoch,\n                            verbose: verbose,\n                            doValidation: doValidation,\n                            metrics: callbackMetrics,\n                        });\n                        return [4, callbackList.onTrainBegin()];\n                    case 1:\n                        _a.sent();\n                        _loop_4 = function (epoch) {\n                            var epochLogs, epochIndexArray1D_1, batches_1, _loop_5, batchIndex;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4, callbackList.onEpochBegin(epoch)];\n                                    case 1:\n                                        _a.sent();\n                                        epochLogs = {};\n                                        if (!(stepsPerEpoch != null)) return [3, 2];\n                                        throw new errors_1.NotImplementedError('stepsPerEpoch mode is not implemented yet.');\n                                    case 2:\n                                        if (shuffle === 'batch') {\n                                            throw new errors_1.NotImplementedError('batch shuffling is not implemneted yet');\n                                        }\n                                        else if (shuffle) {\n                                            tfjs_core_1.util.shuffle(indexArray);\n                                        }\n                                        epochIndexArray1D_1 = tfjs_core_1.tensor1d(indexArray);\n                                        batches_1 = makeBatches(numTrainSamples, batchSize);\n                                        _loop_5 = function (batchIndex) {\n                                            var batchLogs;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        batchLogs = {};\n                                                        return [4, callbackList.onBatchBegin(batchIndex, batchLogs)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        tfc.tidy(function () {\n                                                            var batchStart = batches_1[batchIndex][0];\n                                                            var batchEnd = batches_1[batchIndex][1];\n                                                            var batchIds = K.sliceAlongFirstAxis(epochIndexArray1D_1, batchStart, batchEnd - batchStart);\n                                                            batchLogs['batch'] = batchIndex;\n                                                            batchLogs['size'] = batchEnd - batchStart;\n                                                            var insBatch = sliceArraysByIndices(ins, batchIds);\n                                                            var outs = f(insBatch);\n                                                            for (var i = 0; i < outLabels.length; ++i) {\n                                                                var label = outLabels[i];\n                                                                var out = outs[i];\n                                                                batchLogs[label] = out;\n                                                                K.keep(out);\n                                                            }\n                                                            if (batchIndex === batches_1.length - 1) {\n                                                                if (doValidation) {\n                                                                    var valOuts = _this.testLoop(valF, valIns, batchSize);\n                                                                    for (var i = 0; i < outLabels.length; ++i) {\n                                                                        var label = outLabels[i];\n                                                                        var out = valOuts[i];\n                                                                        K.keep(out);\n                                                                        epochLogs['val_' + label] = out;\n                                                                    }\n                                                                }\n                                                            }\n                                                        });\n                                                        return [4, callbackList.onBatchEnd(batchIndex, batchLogs)];\n                                                    case 2:\n                                                        _a.sent();\n                                                        callbacks_1.disposeTensorsInLogs(batchLogs);\n                                                        return [2];\n                                                }\n                                            });\n                                        };\n                                        batchIndex = 0;\n                                        _a.label = 3;\n                                    case 3:\n                                        if (!(batchIndex < batches_1.length)) return [3, 6];\n                                        return [5, _loop_5(batchIndex)];\n                                    case 4:\n                                        _a.sent();\n                                        _a.label = 5;\n                                    case 5:\n                                        ++batchIndex;\n                                        return [3, 3];\n                                    case 6:\n                                        epochIndexArray1D_1.dispose();\n                                        _a.label = 7;\n                                    case 7: return [4, callbackList.onEpochEnd(epoch, epochLogs)];\n                                    case 8:\n                                        _a.sent();\n                                        return [2];\n                                }\n                            });\n                        };\n                        epoch = initialEpoch;\n                        _a.label = 2;\n                    case 2:\n                        if (!(epoch < epochs)) return [3, 5];\n                        return [5, _loop_4(epoch)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        ++epoch;\n                        return [3, 2];\n                    case 5: return [4, callbackList.onTrainEnd()];\n                    case 6:\n                        _a.sent();\n                        return [4, this.history.syncData()];\n                    case 7:\n                        _a.sent();\n                        return [2, this.history];\n                }\n            });\n        });\n    };\n    Model.prototype.testLoop = function (f, ins, batchSize, verbose, steps) {\n        if (verbose === void 0) { verbose = 0; }\n        var numSamples = this.checkNumSamples(ins, batchSize, steps, 'steps');\n        var outs = [];\n        if (verbose === 1) {\n            throw new errors_1.NotImplementedError('Verbose mode is not implemented yet.');\n        }\n        if (steps != null) {\n            throw new errors_1.NotImplementedError('steps mode in testLoop() is not implemented yet');\n        }\n        else {\n            var batches = makeBatches(numSamples, batchSize);\n            var indexArray = tfjs_core_1.tensor1d(math_utils_1.range(0, numSamples));\n            for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n                var batchStart = batches[batchIndex][0];\n                var batchEnd = batches[batchIndex][1];\n                var batchIds = K.sliceAlongFirstAxis(indexArray, batchStart, batchEnd - batchStart);\n                var insBatch = sliceArraysByIndices(ins, batchIds);\n                var batchOuts = f(insBatch);\n                if (batchIndex === 0) {\n                    for (var i = 0; i < batchOuts.length; ++i) {\n                        outs.push(K.getScalar(0));\n                    }\n                }\n                for (var i = 0; i < batchOuts.length; ++i) {\n                    var batchOut = batchOuts[i];\n                    outs[i] =\n                        K.add(outs[i], K.scalarTimesArray(K.getScalar(batchEnd - batchStart), batchOut));\n                }\n            }\n            for (var i = 0; i < outs.length; ++i) {\n                outs[i] = K.divide(outs[i], K.getScalar(numSamples));\n            }\n        }\n        return outs;\n    };\n    Model.prototype.getDedupedMetricsNames = function () {\n        var outLabels = this.metricsNames;\n        var dedupedOutLabels = [];\n        for (var i = 0; i < outLabels.length; ++i) {\n            var label = outLabels[i];\n            var newLabel = label;\n            if (generic_utils_1.count(outLabels, label) > 1) {\n                var dupIndex = generic_utils_1.count(outLabels.slice(0, i), label);\n                newLabel += \"_\" + dupIndex;\n            }\n            dedupedOutLabels.push(newLabel);\n        }\n        return dedupedOutLabels;\n    };\n    Model.prototype.makeTestFunction = function () {\n        var _this = this;\n        this.testFunction = function (data) {\n            return tfc.tidy(function () {\n                var valOutputs = [];\n                var totalLoss;\n                var inputs = data.slice(0, _this.inputs.length);\n                var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                var feeds = [];\n                for (var i = 0; i < _this.inputs.length; ++i) {\n                    feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                }\n                var feedDict = new executor_1.FeedDict(feeds);\n                var outputs = executor_1.execute(_this.outputs, feedDict);\n                for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                    var lossFunction = _this.lossFunctions[i];\n                    var loss = K.mean(lossFunction(targets[i], outputs[i]));\n                    if (i === 0) {\n                        totalLoss = loss;\n                    }\n                    else {\n                        totalLoss = K.add(totalLoss, loss);\n                    }\n                    valOutputs.push(totalLoss);\n                }\n                for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                    var metric = _this.metricsTensors[i][0];\n                    var outputIndex = _this.metricsTensors[i][1];\n                    var meanMetric = K.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                    valOutputs.push(meanMetric);\n                }\n                return valOutputs;\n            });\n        };\n    };\n    Model.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var batchSize, standardizedOuts, inputs, targets, doValidation, valX, valY, valIns, valStandardized, splitAt, originalBatchSize, ins, trainFunction, outLabels, valFunction, callbackMetrics, callbacks;\n            return __generator(this, function (_a) {\n                batchSize = config.batchSize == null ? 32 : config.batchSize;\n                standardizedOuts = this.standardizeUserData(x, y, false, batchSize);\n                inputs = standardizedOuts[0];\n                targets = standardizedOuts[1];\n                doValidation = false;\n                if (config.validationData != null && config.validationData.length > 0) {\n                    doValidation = true;\n                    if (config.validationData.length === 2) {\n                        valX = config.validationData[0];\n                        valY = config.validationData[1];\n                    }\n                    else if (config.validationData.length === 3) {\n                        throw new errors_1.NotImplementedError('validationData including sample weights is not supported yet.');\n                    }\n                    else {\n                        throw new errors_1.ValueError(\"When passing validation data, it must contain 2 (valX, valY) \" +\n                            \"or 3 (valX, valY, valSampleWeight) items; \" +\n                            (config.validationData + \" is invalid.\"));\n                    }\n                    valStandardized = this.standardizeUserData(valX, valY, true, batchSize);\n                    valX = valStandardized[0];\n                    valY = valStandardized[1];\n                    valIns = valX.concat(valY);\n                }\n                else if (config.validationSplit != null && config.validationSplit > 0 &&\n                    config.validationSplit < 1) {\n                    doValidation = true;\n                    splitAt = Math.floor(inputs[0].shape[0] * (1 - config.validationSplit));\n                    originalBatchSize = inputs[0].shape[0];\n                    valX = sliceArrays(inputs, splitAt, originalBatchSize);\n                    inputs = sliceArrays(inputs, 0, splitAt);\n                    valY = sliceArrays(targets, splitAt, originalBatchSize);\n                    targets = sliceArrays(targets, 0, splitAt);\n                    valIns = valX.concat(valY);\n                }\n                else if (config.validationSteps != null) {\n                    doValidation = true;\n                }\n                ins = inputs.concat(targets);\n                this.checkTrainableWeightsConsistency();\n                trainFunction = function (data) {\n                    var losses = [];\n                    var lossValues = [];\n                    var inputs = data.slice(0, _this.inputs.length);\n                    var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                    var metricsValues = [];\n                    var totalLossFunction = function () {\n                        var feeds = [];\n                        for (var i = 0; i < _this.inputs.length; ++i) {\n                            feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                        }\n                        var feedDict = new executor_1.FeedDict(feeds);\n                        var outputs = executor_1.execute(_this.outputs, feedDict, { 'training': true });\n                        var totalLoss;\n                        for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                            var lossFunction = _this.lossFunctions[i];\n                            var loss = lossFunction(targets[i], outputs[i]);\n                            losses.push(loss);\n                            var meanLoss = K.mean(loss);\n                            lossValues.push(meanLoss);\n                            if (i === 0) {\n                                totalLoss = loss;\n                            }\n                            else {\n                                totalLoss = K.add(totalLoss, loss);\n                            }\n                        }\n                        for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                            var metric = _this.metricsTensors[i][0];\n                            var outputIndex = _this.metricsTensors[i][1];\n                            var meanMetric = K.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                            K.keep(meanMetric);\n                            metricsValues.push(meanMetric);\n                        }\n                        totalLoss = K.mean(totalLoss);\n                        _this.calculateLosses().forEach(function (regularizerLoss) {\n                            totalLoss = K.add(totalLoss, regularizerLoss);\n                        });\n                        return totalLoss;\n                    };\n                    var variables = _this.collectedTrainableWeights.map(function (param) { return param.read(); });\n                    var returnCost = true;\n                    var totalLossValue = _this.optimizer.minimize(totalLossFunction, returnCost, variables);\n                    return [totalLossValue].concat(metricsValues);\n                };\n                outLabels = this.getDedupedMetricsNames();\n                if (doValidation) {\n                    this.makeTestFunction();\n                    valFunction = this.testFunction;\n                    callbackMetrics =\n                        outLabels.slice().concat(outLabels.map(function (n) { return 'val_' + n; }));\n                }\n                else {\n                    valFunction = null;\n                    valIns = [];\n                    callbackMetrics = outLabels.slice();\n                }\n                callbacks = callbacks_1.standardizeCallbacks(config.callbacks);\n                return [2, this.fitLoop(trainFunction, ins, outLabels, batchSize, config.epochs, config.verbose, callbacks, valFunction, valIns, config.shuffle, callbackMetrics, null, null, null)];\n            });\n        });\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [0] })\n    ], Model.prototype, \"compile\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Model.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Model.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Model.prototype, \"predictOnBatch\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Model.prototype, \"fit\", null);\n    Model = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Model);\n    return Model;\n}(topology_1.Container));\nexports.Model = Model;\ngeneric_utils_1.ClassNameMap.register('Model', Model);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/engine/training.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nfunction meanSquaredError(yTrue, yPred) {\n    return K.mean(K.square(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanSquaredError = meanSquaredError;\nfunction meanAbsoluteError(yTrue, yPred) {\n    return K.mean(K.abs(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanAbsoluteError = meanAbsoluteError;\nfunction meanAbsolutePercentageError(yTrue, yPred) {\n    var diff = K.subtract(yTrue, yPred);\n    var clippedTrue = K.clip(K.abs(yTrue), K.epsilon(), Number.MAX_VALUE);\n    var absResult = K.abs(K.divide(diff, clippedTrue));\n    return K.scalarTimesArray(K.getScalar(100.0), K.mean(absResult, -1));\n}\nexports.meanAbsolutePercentageError = meanAbsolutePercentageError;\nfunction meanSquaredLogarithmicError(yTrue, yPred) {\n    var one = K.getScalar(1.0);\n    var clippedPred = K.clip(yPred, K.epsilon(), Number.MAX_VALUE);\n    var firstLog = K.log(K.scalarPlusArray(one, clippedPred));\n    var clippedTrue = K.clip(yTrue, K.epsilon(), Number.MAX_VALUE);\n    var secondLog = K.log(K.scalarPlusArray(one, clippedTrue));\n    return K.mean(K.square(K.subtract(firstLog, secondLog)), -1);\n}\nexports.meanSquaredLogarithmicError = meanSquaredLogarithmicError;\nfunction squaredHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(K.square(maxResult), -1);\n}\nexports.squaredHinge = squaredHinge;\nfunction hinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(maxResult, -1);\n}\nexports.hinge = hinge;\nfunction categoricalHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var pos = K.sum(K.multiply(yTrue, yPred), -1);\n    var neg = K.max(K.multiply(K.subtract(one, yTrue), yPred), -1);\n    return K.maximum(zeroTensor, K.scalarPlusArray(one, K.subtract(neg, pos)));\n}\nexports.categoricalHinge = categoricalHinge;\nfunction logcosh(yTrue, yPred) {\n    var log2 = K.getScalar(Math.log(2.0));\n    var predictionDiff = K.subtract(yPred, yTrue);\n    var logcoshResult = K.subtract(K.add(predictionDiff, K.softplus(K.scalarTimesArray(K.getScalar(-2.0), predictionDiff))), log2);\n    return K.mean(logcoshResult, -1);\n}\nexports.logcosh = logcosh;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    return K.categoricalCrossentropy(yTrue, yPred);\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    return K.sparseCategoricalCrossentropy(yTrue, yPred);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction kullbackLeiblerDivergence(yTrue, yPred) {\n    var clippedTrue = K.clip(yTrue, K.epsilon(), 1);\n    var clippedPred = K.clip(yPred, K.epsilon(), 1);\n    return K.sum(K.multiply(yTrue, K.log(K.divide(clippedTrue, clippedPred))), -1);\n}\nexports.kullbackLeiblerDivergence = kullbackLeiblerDivergence;\nfunction poisson(yTrue, yPred) {\n    var logPred = K.log(K.scalarPlusArray(K.getScalar(K.epsilon()), yPred));\n    return K.mean(K.subtract(yPred, K.multiply(yTrue, logPred)), -1);\n}\nexports.poisson = poisson;\nfunction cosineProximity(yTrue, yPred) {\n    var trueNormalized = K.l2Normalize(yTrue, -1);\n    var predNormalized = K.l2Normalize(yPred, -1);\n    var trueXPred = K.multiply(trueNormalized, predNormalized);\n    return K.neg(K.sum(trueXPred, -1));\n}\nexports.cosineProximity = cosineProximity;\nexports.mse = meanSquaredError;\nexports.MSE = meanSquaredError;\nexports.mae = meanAbsoluteError;\nexports.MAE = meanAbsoluteError;\nexports.mape = meanAbsolutePercentageError;\nexports.MAPE = meanAbsolutePercentageError;\nexports.msle = meanSquaredLogarithmicError;\nexports.MSLE = meanSquaredLogarithmicError;\nexports.kld = kullbackLeiblerDivergence;\nexports.KLD = kullbackLeiblerDivergence;\nexports.cosine = cosineProximity;\nfunction get(identifierOrFn) {\n    var lossesMap = {\n        meanSquaredError: meanSquaredError,\n        meanAbsoluteError: meanAbsoluteError,\n        meanAbsolutePercentageError: meanAbsolutePercentageError,\n        meanSquaredLogarithmicError: meanSquaredLogarithmicError,\n        squaredHinge: squaredHinge,\n        hinge: hinge,\n        categoricalHinge: categoricalHinge,\n        logcosh: logcosh,\n        categoricalCrossentropy: categoricalCrossentropy,\n        sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n        binaryCrossentropy: binaryCrossentropy,\n        kullbackLeiblerDivergence: kullbackLeiblerDivergence,\n        poisson: poisson,\n        cosineProximity: cosineProximity\n    };\n    if (typeof identifierOrFn === 'string') {\n        if (identifierOrFn in lossesMap) {\n            return lossesMap[identifierOrFn];\n        }\n        throw new errors_1.ValueError(\"Unknown loss \" + identifierOrFn);\n    }\n    else {\n        return identifierOrFn;\n    }\n}\nexports.get = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/losses.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar generic_utils_1 = require(\"./generic_utils\");\nvar math_utils_1 = require(\"./math_utils\");\nfunction normalizeArray(value, n, name) {\n    if (typeof value === 'number') {\n        return generic_utils_1.pyListRepeat(value, n);\n    }\n    else {\n        if (value.length !== n) {\n            throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                (value.length + \" elements.\"));\n        }\n        for (var i = 0; i < n; ++i) {\n            var singleValue = value[i];\n            if (!math_utils_1.isInteger(singleValue)) {\n                throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                    (JSON.stringify(value) + \" including a non-integer number \") +\n                    (\"\" + singleValue));\n            }\n        }\n        return value;\n    }\n}\nexports.normalizeArray = normalizeArray;\nfunction convOutputLength(inputLength, fliterSize, padding, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    if (inputLength == null) {\n        return inputLength;\n    }\n    var dilatedFilterSize = fliterSize + (fliterSize - 1) * (dilation - 1);\n    var outputLength;\n    if (padding === 'same') {\n        outputLength = inputLength;\n    }\n    else {\n        outputLength = inputLength - dilatedFilterSize + 1;\n    }\n    return Math.floor((outputLength + stride - 1) / stride);\n}\nexports.convOutputLength = convOutputLength;\nfunction deconvLength(dimSize, strideSize, kernelSize, padding) {\n    if (dimSize == null) {\n        return null;\n    }\n    if (padding === 'valid') {\n        dimSize = dimSize * strideSize + math_utils_1.max([kernelSize - strideSize, 0]);\n    }\n    else if (padding === 'same') {\n        dimSize = dimSize * strideSize;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unsupport padding mode: \" + padding + \".\");\n    }\n    return dimSize;\n}\nexports.deconvLength = deconvLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/utils/conv_utils.js\n// module id = 44\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 45\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 47\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __1 = require(\"..\");\nvar array_ops_1 = require(\"../ops/array_ops\");\nfunction castTensor(x, dtype, backend) {\n    if (!__1.util.hasEncodingLoss(x.dtype, dtype)) {\n        return __1.Tensor.make(x.shape, { dataId: x.dataId }, dtype);\n    }\n    if (dtype === 'int32') {\n        return backend.int(x);\n    }\n    else if (dtype === 'bool') {\n        return backend.notEqual(x, array_ops_1.ArrayOps.scalar(0, x.dtype));\n    }\n    else {\n        throw new Error(\"Error in Cast: unknown dtype argument (\" + dtype + \")\");\n    }\n}\nexports.castTensor = castTensor;\nfunction reshapeTensor(x, shape) {\n    return __1.Tensor.make(shape, { dataId: x.dataId }, x.dtype);\n}\nexports.reshapeTensor = reshapeTensor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/backend_util.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar CHECK_NAN_SNIPPET = \"\\n  if (isNaN(a)) return a;\\n  if (isNaN(b)) return b;\\n\";\nexports.ADD = 'return a + b;';\nexports.SUB = 'return a - b;';\nexports.MUL = 'return a * b;';\nexports.DIV = 'return a / b;';\nexports.INT_DIV = \"\\n  float resultSign = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  int result = ia / ib;\\n  int amodb = ia - ib * result;\\n\\n  if (resultSign < 0.0 && amodb != 0) {\\n    result -= 1;\\n  }\\n  return float(result);\\n\";\nexports.POW = \"\\n  return (round(mod(b, 2.0)) == 0 || round(mod(b, 2.0)) == 2) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nexports.SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexports.EQUAL = \"return float(a == b);\";\nexports.NOT_EQUAL = \"return float(a != b);\";\nexports.LESS = \"return float(a < b);\";\nexports.LESS_EQUAL = \"return float(a <= b);\";\nexports.GREATER = \"return float(a > b);\";\nexports.GREATER_EQUAL = \"return float(a >= b);\";\nexports.LOGICAL_AND = \"return float(a >= 1.0 && b >= 1.0);\";\nexports.LOGICAL_OR = \"return float(a >= 1.0 || b >= 1.0);\";\nexports.MAX = CHECK_NAN_SNIPPET + \"\\n  return max(a, b);\\n\";\nexports.MIN = CHECK_NAN_SNIPPET + \"\\n  return min(a, b);\\n\";\nexports.MOD = \"return mod(a, b);\";\nexports.ATAN2 = CHECK_NAN_SNIPPET + \"\\n  return atan(a, b);\\n\";\nexports.ELU_DER = \"return (b >= 1.0) ? a : a * (b + 1.0);\";\nvar BinaryOpProgram = (function () {\n    function BinaryOpProgram(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n    }\n    return BinaryOpProgram;\n}());\nexports.BinaryOpProgram = BinaryOpProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/binaryop_gpu.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nfunction getWebGLContextAttributes() {\n    return {\n        alpha: false,\n        antialias: false,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false,\n        depth: false,\n        stencil: false,\n        failIfMajorPerformanceCaveat: true\n    };\n}\nexports.getWebGLContextAttributes = getWebGLContextAttributes;\nfunction createWebGLContext(canvas) {\n    var attributes = getWebGLContextAttributes();\n    var gl;\n    if (canvas != null) {\n        gl = webgl_util.createWebGLRenderingContextFromCanvas(canvas, attributes);\n    }\n    else {\n        gl = webgl_util.createWebGLRenderingContext(attributes);\n    }\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DEPTH_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.STENCIL_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.BLEND); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DITHER); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.POLYGON_OFFSET_FILL); });\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.SAMPLE_COVERAGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.SCISSOR_TEST); });\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.CULL_FACE); });\n    webgl_util.callAndCheck(gl, function () { return gl.cullFace(gl.BACK); });\n    return gl;\n}\nexports.createWebGLContext = createWebGLContext;\nfunction createVertexShader(gl) {\n    var vertexShaderSource = \"\\n    precision highp float;\\n    attribute vec3 clipSpacePos;\\n    attribute vec2 uv;\\n    varying vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexports.createVertexShader = createVertexShader;\nfunction createVertexBuffer(gl) {\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexports.createVertexBuffer = createVertexBuffer;\nfunction createIndexBuffer(gl) {\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nexports.createIndexBuffer = createIndexBuffer;\nfunction getTextureInternalFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA32F;\n        }\n        return gl.R32F;\n    }\n    return gl.RGBA;\n}\nfunction getTextureFormat(gl, numChannels) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.RGBA;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        if (numChannels === 4) {\n            return gl.RGBA;\n        }\n        return gl.RED;\n    }\n    return gl.RGBA;\n}\nfunction getTextureType(gl) {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return gl.UNSIGNED_BYTE;\n    }\n    return gl.FLOAT;\n}\nfunction createAndConfigureTexture(gl, width, height, numChannels) {\n    webgl_util.validateTextureSize(gl, width, height);\n    var texture = webgl_util.createTexture(gl);\n    var tex2d = gl.TEXTURE_2D;\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\n    var format = getTextureFormat(gl, numChannels);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), null); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n    return texture;\n}\nfunction createMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 1;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createMatrixTexture = createMatrixTexture;\nfunction createColorMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getColorMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createColorMatrixTexture = createColorMatrixTexture;\nfunction createPackedMatrixTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    var numChannels = 4;\n    return createAndConfigureTexture(gl, width, height, numChannels);\n}\nexports.createPackedMatrixTexture = createPackedMatrixTexture;\nfunction bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\n    var posOffset = 0;\n    var uvOffset = 3 * 4;\n    var stride = (3 * 4) + (2 * 4);\n    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\n    var success = webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n    return success &&\n        webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nexports.bindVertexProgramAttributeStreams = bindVertexProgramAttributeStreams;\nfunction uploadPixelDataToTexture(gl, texture, pixels) {\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadPixelDataToTexture = uploadPixelDataToTexture;\nfunction uploadDataToTexture(gl, texture, width, height, data, numChannels) {\n    var textureFormat = getTextureFormat(gl, numChannels);\n    webgl_util.validateTextureSize(gl, width, height);\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    webgl_util.callAndCheck(gl, function () { return gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, textureFormat, getTextureType(gl), data); });\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nfunction uploadMatrixToTexture(gl, texture, rows, columns, matrix, numChannels) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var unpackedArray;\n    if (environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        var channelsPerTexture = numChannels === 1 ? webgl_util.getChannelsPerTexture() : numChannels;\n        if (channelsPerTexture === 1) {\n            unpackedArray = matrix;\n        }\n        else {\n            unpackedArray =\n                new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture));\n            tex_util.encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture);\n        }\n    }\n    else {\n        unpackedArray = tex_util.encodeFloatArray(matrix);\n    }\n    uploadDataToTexture(gl, texture, w, h, unpackedArray, numChannels);\n}\nexports.uploadMatrixToTexture = uploadMatrixToTexture;\nfunction uploadMatrixToPackedTexture(gl, texture, rows, columns, matrix) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    tex_util.encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA);\n    var numChannels = 4;\n    uploadDataToTexture(gl, texture, w, h, packedRGBA, numChannels);\n}\nexports.uploadMatrixToPackedTexture = uploadMatrixToPackedTexture;\nfunction getDownloadTargetArrayBuffer(rows, columns, channelsPerTexture) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    var downloadTarget;\n    if (isFloatTexture) {\n        downloadTarget =\n            new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, channelsPerTexture));\n    }\n    else {\n        downloadTarget = new Uint8Array(rows * columns * channelsPerTexture);\n    }\n    return downloadTarget;\n}\nfunction decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel) {\n    var isFloatTexture = environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n    if (isFloatTexture) {\n        var matrix = new Float32Array(rows * columns);\n        tex_util.decodeMatrixFromUnpackedArray(downloadTarget, matrix, channelsPerPixel);\n        return matrix;\n    }\n    else {\n        return tex_util.decodeToFloatArray(downloadTarget);\n    }\n}\nfunction downloadMatrixFromOutputTextureAsync(gl, getBufferSubDataAsyncExtension, rows, columns) {\n    return __awaiter(this, void 0, void 0, function () {\n        var gl2, channelsPerPixel, downloadTarget, bufferSizeBytes, buffer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    gl2 = gl;\n                    channelsPerPixel = 4;\n                    downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n                    bufferSizeBytes = downloadTarget instanceof Float32Array ?\n                        downloadTarget.length * 4 :\n                        downloadTarget;\n                    buffer = gl.createBuffer();\n                    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\n                    webgl_util.callAndCheck(gl, function () { return gl.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl.STATIC_DRAW); });\n                    webgl_util.callAndCheck(gl, function () {\n                        return gl2.readPixels(0, 0, columns, rows, gl.RGBA, getTextureType(gl), 0);\n                    });\n                    return [4, getBufferSubDataAsyncExtension.getBufferSubDataAsync(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget)];\n                case 1:\n                    _a.sent();\n                    return [2, decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel)];\n            }\n        });\n    });\n}\nexports.downloadMatrixFromOutputTextureAsync = downloadMatrixFromOutputTextureAsync;\nfunction downloadMatrixFromOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var channelsPerPixel = 4;\n    var downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), downloadTarget); });\n    return decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel);\n}\nexports.downloadMatrixFromOutputTexture = downloadMatrixFromOutputTexture;\nfunction downloadMatrixFromRGBAColorTexture(gl, rows, columns, channels) {\n    var size = rows * columns * 4;\n    var downloadTarget = new Uint8Array(size);\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, columns, rows, gl.RGBA, gl.UNSIGNED_BYTE, downloadTarget); });\n    var packedRGBA = new Float32Array(size);\n    for (var i = 0; i < downloadTarget.length; i++) {\n        packedRGBA[i] = downloadTarget[i];\n    }\n    var matrix = new Float32Array(rows * columns * channels);\n    tex_util.decodeMatrixFromUnpackedColorRGBAArray(packedRGBA, matrix, channels);\n    return matrix;\n}\nexports.downloadMatrixFromRGBAColorTexture = downloadMatrixFromRGBAColorTexture;\nfunction downloadMatrixFromPackedOutputTexture(gl, rows, columns) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), packedRGBA); });\n    var matrix = new Float32Array(rows * columns);\n    return tex_util.decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix);\n}\nexports.downloadMatrixFromPackedOutputTexture = downloadMatrixFromPackedOutputTexture;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_util.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar selu_util = require(\"../../ops/selu_util\");\nvar erf_util = require(\"../../ops/erf_util\");\nvar UnaryOpProgram = (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nvar CHECK_NAN_SNIPPET = \"if (isNaN(x)) return x;\";\nexports.ABS = \"return abs(x);\";\nexports.RELU = \"return (x < 0.0) ? 0.0 : x;\";\nexports.ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \" + selu_util.SELU_SCALEALPHA + \";\\n  float scale = \" + selu_util.SELU_SCALE + \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return CHECK_NAN_SNIPPET + (\"\\n    return x > 0.0 ? 1.0 : float(\" + alpha + \");\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"return -x;\";\nexports.CEIL = \"return ceil(x);\";\nexports.FLOOR = \"return floor(x);\";\nexports.SIGN = \"return sign(x);\";\nexports.ROUND = \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\";\nexports.EXP = \"return exp(x);\";\nexports.EXPM1 = \"return exp(x) - 1.0;\";\nexports.LOG = \"return log(x);\";\nexports.LOG1P = \"return log(1.0 + x);\";\nexports.SQRT = \"return sqrt(x);\";\nexports.RSQRT = \"return inversesqrt(x);\";\nexports.SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";\nexports.SOFTPLUS = \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\";\nexports.SIN = \"return sin(x);\";\nexports.COS = \"return cos(x);\";\nexports.TAN = \"return tan(x);\";\nexports.ASIN = \"return asin(x);\";\nexports.ACOS = \"return acos(x);\";\nexports.ATAN = CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.ASINH = \"return log(x + sqrt(x * x + 1.0));\";\nexports.ACOSH = \"return log(x + sqrt(x * x - 1.0));\";\nexports.ATANH = \"return (log(1.0 + x) - log(1.0 - x)) / 2.0;\";\nexports.ERF = \"\\n  // Error function is calculated approximately with elementary function.\\n  // See \\\"Handbook of Mathematical Functions with Formulas, \\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\n  float p = \" + erf_util.ERF_P + \";\\n  float a1 = \" + erf_util.ERF_A1 + \";\\n  float a2 = \" + erf_util.ERF_A2 + \";\\n  float a3 = \" + erf_util.ERF_A3 + \";\\n  float a4 = \" + erf_util.ERF_A4 + \";\\n  float a5 = \" + erf_util.ERF_A5 + \";\\n  \\n  float t = 1.0 / (1.0 + p * x);\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\n\";\nexports.SQUARE = \"return x * x;\";\nexports.RECIPROCAL = \"return 1.0 / x;\";\nexports.LOGICAL_NOT = \"return float(!(x >= 1.0));\";\nexports.TO_INT = \"return float(int(x));\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/unaryop_gpu.js\n// module id = 51\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar types_1 = require(\"../types\");\nvar util = require(\"../util\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar ops_1 = require(\"./ops\");\nvar BinaryOps = (function () {\n    function BinaryOps() {\n    }\n    BinaryOps.add = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'add');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.add(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.addStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in addStrict: ');\n        return a.add(b);\n    };\n    BinaryOps.sub = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'sub');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var res = dy;\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.neg().reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.subtract(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.subStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in subStrict: ');\n        return a.sub(b);\n    };\n    BinaryOps.pow = function (base, exp) {\n        util.assertArgumentsAreTensors({ base: base, exp: exp }, 'pow');\n        var outShape = broadcast_util.assertAndGetBroadcastShape(base.shape, exp.shape);\n        base = base.cast(types_1.upcastType(base.dtype, exp.dtype));\n        exp = exp.cast(types_1.upcastType(base.dtype, exp.dtype));\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            var derBase = function () {\n                var res = dy.mul(exp.toFloat().mul(y.div(base)));\n                var reduceAxes = broadcast_util.getReductionAxes(base.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(base.shape);\n            };\n            var derExp = function () {\n                var res = dy.mul(y.mul(base.log()).toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(exp.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(exp.shape);\n            };\n            return { base: derBase, exp: derExp };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.pow(base, exp)); }, { base: base, exp: exp }, grad);\n    };\n    BinaryOps.powStrict = function (base, exp) {\n        util.assertShapesMatch(base.shape, exp.shape, 'Error in powStrict: ');\n        return base.pow(exp);\n    };\n    BinaryOps.mul = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'mul');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy.mul(b.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(a.shape);\n                }\n                return res;\n            };\n            var derB = function () {\n                var res = dy.mul(a.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(b.shape);\n                }\n                return res;\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.multiply(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.mulStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in multiplyStrict: ');\n        return a.mul(b);\n    };\n    BinaryOps.div = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'div');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var res = dy.div(b.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(a.shape);\n                }\n                return res;\n            };\n            var derB = function () {\n                var res = dy.mul(a.toFloat());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes).reshape(b.shape);\n                }\n                var tmp = b.square();\n                return res.div(tmp.toFloat()).neg();\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.divide(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.divStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in divideStrict: ');\n        return a.div(b);\n    };\n    BinaryOps.mod = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'mod');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return dy.sum(reduceAxes).reshape(a.shape);\n                }\n                return dy;\n            };\n            var derB = function () {\n                var res = dy.mul(a.div(b).floor().neg());\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    return res.sum(reduceAxes).reshape(b.shape);\n                }\n                return res;\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.mod(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.modStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in modStrict: ');\n        return a.mod(b);\n    };\n    BinaryOps.minimum = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'minimum');\n        util.assertTypesMatch(a, b);\n        if (a.dtype === 'bool') {\n            a = a.toInt();\n        }\n        if (b.dtype === 'bool') {\n            b = b.toInt();\n        }\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () { return dy.mul(a.lessEqual(b).toFloat()); };\n            var derB = function () { return dy.mul(a.greater(b).toFloat()); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.minimum(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.minimumStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in minimumStrict: ');\n        return a.minimum(b);\n    };\n    BinaryOps.maximum = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'maximum');\n        util.assertTypesMatch(a, b);\n        if (a.dtype === 'bool') {\n            a = a.toInt();\n        }\n        if (b.dtype === 'bool') {\n            b = b.toInt();\n        }\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () { return dy.mul(a.greaterEqual(b).toFloat()); };\n            var derB = function () { return dy.mul(a.less(b).toFloat()); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.maximum(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.maximumStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in minimumStrict: ');\n        return a.maximum(b);\n    };\n    BinaryOps.squaredDifference = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'squaredDifference');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var two = ops_1.scalar(2);\n            var derA = function () { return dy.mul(a.sub(b).mul(two)); };\n            var derB = function () { return dy.mul(b.sub(a).mul(two)); };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.squaredDifference(a, b); }, { a: a, b: b }, der);\n    };\n    BinaryOps.squaredDifferenceStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in squaredDifferenceStrict: ');\n        return a.squaredDifference(b);\n    };\n    BinaryOps.atan2 = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'atan2');\n        util.assertTypesMatch(a, b);\n        var outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var der = function (dy) {\n            var derA = function () {\n                var d = BinaryOps.add(ops_1.square(a), ops_1.square(b));\n                var res = dy.mul(b.div(d));\n                var reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(a.shape);\n            };\n            var derB = function () {\n                var d = BinaryOps.add(ops_1.square(a), ops_1.square(b));\n                var res = ops_1.neg(dy.mul(a.div(d)));\n                var reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape(b.shape);\n            };\n            return { a: derA, b: derB };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atan2(a, b); }, { a: a, b: b }, der);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"add\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"addStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"sub\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"subStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"pow\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"powStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"mul\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"mulStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"div\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"divStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"mod\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"modStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"minimum\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"minimumStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"maximum\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"maximumStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Arithmetic' }),\n        operation_1.operation\n    ], BinaryOps, \"squaredDifference\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"squaredDifferenceStrict\", null);\n    __decorate([\n        operation_1.operation\n    ], BinaryOps, \"atan2\", null);\n    return BinaryOps;\n}());\nexports.BinaryOps = BinaryOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/binary_ops.js\n// module id = 52\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar axis_util_1 = require(\"./axis_util\");\nvar concat_util = require(\"./concat_util\");\nvar operation_1 = require(\"./operation\");\nvar ConcatOps = (function () {\n    function ConcatOps() {\n    }\n    ConcatOps.concat1d = function (tensors) {\n        return ConcatOps.concat(tensors, 0);\n    };\n    ConcatOps.concat2d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat3d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat4d = function (tensors, axis) {\n        return ConcatOps.concat(tensors, axis);\n    };\n    ConcatOps.concat = function (tensors, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assert(tensors.length >= 1, 'Pass at least one tensor to concat');\n        util.assertArgumentsAreTensors({ tensors: tensors }, 'concat');\n        var result = tensors[0];\n        if (tensors.length === 1) {\n            return result;\n        }\n        var axes = axis_util_1.parseAxisParam(axis, result.shape);\n        for (var i = 1; i < tensors.length; ++i) {\n            result = concat2Tensors(result, tensors[i], axes[0]);\n        }\n        return result;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ConcatOps, \"concat\", null);\n    return ConcatOps;\n}());\nexports.ConcatOps = ConcatOps;\nfunction concat2Tensors(a, b, axis) {\n    concat_util.assertParams(a.shape, b.shape, axis);\n    var outShape = concat_util.computeOutShape(a.shape, b.shape, axis);\n    var a2D = a.as2D(-1, util.sizeFromShape(a.shape.slice(axis)));\n    var b2D = b.as2D(-1, util.sizeFromShape(b.shape.slice(axis)));\n    var _a = concat_util.computeGradientSliceShapes(a2D.shape, b2D.shape), aBegin = _a.aBegin, aSize = _a.aSize, bBegin = _a.bBegin, bSize = _a.bSize;\n    var der = function (dy) {\n        return { a: function () { return dy.slice(aBegin, aSize); }, b: function () { return dy.slice(bBegin, bSize); } };\n    };\n    var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.concat(a2D, b2D); }, { a: a2D, b: b2D }, der);\n    return res.reshape(outShape);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/concat.js\n// module id = 53\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction computePool2DInfo(inShape, filterSize, strides, pad, roundingMode, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = parseTupleParam(filterSize), filterHeight = _a[0], filterWidth = _a[1];\n    var filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var dilations = 1;\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\nexports.computePool2DInfo = computePool2DInfo;\nfunction computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise, dataFormat) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1], batchSize = _a[0], inHeight = _a[1], inWidth = _a[2], inChannels = _a[3];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inHeight = inShape[1], inWidth = inShape[2], inChannels = inShape[3];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inHeight = inShape[2], inWidth = inShape[3];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterHeight = filterShape[0], filterWidth = filterShape[1], filterChannels = filterShape[3];\n    var _b = parseTupleParam(strides), strideHeight = _b[0], strideWidth = _b[1];\n    var _c = parseTupleParam(dilations), dilationHeight = _c[0], dilationWidth = _c[1];\n    var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    var _d = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode), padInfo = _d.padInfo, outHeight = _d.outHeight, outWidth = _d.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        dilationHeight: dilationHeight,\n        dilationWidth: dilationWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv2DInfo = computeConv2DInfo;\nfunction computeOutputShape3D(inShape, fieldSize, outDepth, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputRows = inShape[0];\n    var inputCols = inShape[1];\n    var outputRows = conditionalRound((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputRows), \"The output # of rows (\" + outputRows + \") must be an integer. Change the \" +\n        \"stride and/or zero pad parameters\");\n    var outputCols = conditionalRound((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputCols), \"The output # of columns (\" + outputCols + \") must be an integer. Change \" +\n        \"the stride and/or zero pad parameters\");\n    return [outputRows, outputCols, outDepth];\n}\nfunction computeDefaultPad(inputShape, fieldSize, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    var effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nexports.computeDefaultPad = computeDefaultPad;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode) {\n    var padInfo;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        var padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        var outShape = computeOutputShape3D([inHeight, inWidth, 1], filterHeight, 1, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        var top_1 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_1;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_1, bottom: bottom, left: left, right: right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outHeight: outHeight, outWidth: outWidth };\n}\nfunction conditionalRound(value, roundingMode) {\n    if (!roundingMode) {\n        return value;\n    }\n    switch (roundingMode) {\n        case 'round':\n            return Math.round(value);\n        case 'ceil':\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(\"Unknown roundingMode \" + roundingMode);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/conv_util.js\n// module id = 54\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERF_P = 0.3275911;\nexports.ERF_A1 = 0.254829592;\nexports.ERF_A2 = -0.284496736;\nexports.ERF_A3 = 1.421413741;\nexports.ERF_A4 = -1.453152027;\nexports.ERF_A5 = 1.061405429;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/erf_util.js\n// module id = 55\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction = exports.Reduction || (exports.Reduction = {}));\nvar LossOps = (function () {\n    function LossOps() {\n    }\n    LossOps.computeWeightedLoss = function (losses, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ losses: losses }, 'computeWeightedLoss');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'computeWeightedLoss');\n        }\n        var weightedLoss = (weights == null) ? losses : losses.mul(weights);\n        if (reduction === Reduction.NONE) {\n            return weightedLoss;\n        }\n        if (reduction === Reduction.SUM) {\n            return weightedLoss.sum();\n        }\n        if (reduction === Reduction.MEAN) {\n            return (weights == null) ? weightedLoss.mean() :\n                weightedLoss.sum().div(weights.sum());\n        }\n        if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n            if (weights == null) {\n                return weightedLoss.sum().div(ops.scalar(losses.size));\n            }\n            else {\n                var numNonZeros = weights.notEqual(ops.scalar(0)).sum().toFloat();\n                return weightedLoss.sum().div(numNonZeros);\n            }\n        }\n        throw Error(\"Unknown reduction: \" + reduction);\n    };\n    LossOps.absoluteDifference = function (labels, predictions, weights, reduction) {\n        if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n        util.assertArgumentsAreTensors({ labels: labels, predictions: predictions }, 'absoluteDifference');\n        if (weights != null) {\n            util.assertArgumentsAreTensors({ weights: weights }, 'absoluteDifference');\n        }\n        util.assertShapesMatch(labels.shape, predictions.shape, 'Error in absoluteDifference: ');\n        var losses = labels.sub(predictions).abs();\n        return LossOps.computeWeightedLoss(losses, weights, reduction);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"computeWeightedLoss\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], LossOps, \"absoluteDifference\", null);\n    return LossOps;\n}());\nexports.LossOps = LossOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/loss_ops.js\n// module id = 56\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar FORMAT_LIMIT_NUM_VALS = 20;\nvar FORMAT_NUM_FIRST_LAST_VALS = 3;\nvar FORMAT_NUM_SIG_DIGITS = 7;\nfunction tensorToString(t, verbose) {\n    var vals = t.dataSync();\n    var padPerCol = computeMaxSizePerColumn(t);\n    var valsLines = subTensorToString(vals, t.shape, t.strides, padPerCol);\n    var lines = ['Tensor'];\n    if (verbose) {\n        lines.push(\"  dtype: \" + t.dtype);\n        lines.push(\"  rank: \" + t.rank);\n        lines.push(\"  shape: [\" + t.shape + \"]\");\n        lines.push(\"  values:\");\n    }\n    lines.push(valsLines.map(function (l) { return '    ' + l; }).join('\\n'));\n    return lines.join('\\n');\n}\nexports.tensorToString = tensorToString;\nfunction computeMaxSizePerColumn(t) {\n    var vals = t.dataSync();\n    var n = t.size;\n    var numCols = t.strides[t.strides.length - 1];\n    var padPerCol = new Array(numCols).fill(0);\n    if (t.rank > 1) {\n        for (var row = 0; row < n / numCols; row++) {\n            var offset = row * numCols;\n            for (var j = 0; j < numCols; j++) {\n                padPerCol[j] =\n                    Math.max(padPerCol[j], valToString(vals[offset + j], 0).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad) {\n    return util.rightPad(parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(), pad);\n}\nfunction subTensorToString(vals, shape, strides, padPerCol, isLast) {\n    if (isLast === void 0) { isLast = true; }\n    var size = shape[0];\n    var rank = shape.length;\n    if (rank === 0) {\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            var firstVals = Array.from(vals.subarray(0, FORMAT_NUM_FIRST_LAST_VALS));\n            var lastVals = Array.from(vals.subarray(size - FORMAT_NUM_FIRST_LAST_VALS, size));\n            return [\n                '[' + firstVals.map(function (x, i) { return valToString(x, padPerCol[i]); }).join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map(function (x, i) { return valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i]); })\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        return [\n            '[' +\n                Array.from(vals).map(function (x, i) { return valToString(x, padPerCol[i]); }).join(', ') +\n                ']'\n        ];\n    }\n    var subshape = shape.slice(1);\n    var substrides = strides.slice(1);\n    var stride = strides[0];\n    var lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (var i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, false));\n        }\n        lines.push('...');\n        for (var i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, i === size - 1));\n        }\n    }\n    else {\n        for (var i = 0; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.subarray(start, end), subshape, substrides, padPerCol, i === size - 1));\n        }\n    }\n    var sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (var i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    var newLineSep = ',\\n';\n    for (var i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/tensor_util.js\n// module id = 57\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar generic_utils = require(\"./utils/generic_utils\");\nvar Callback = (function () {\n    function Callback() {\n        this.validationData = null;\n        this.model = null;\n    }\n    Callback.prototype.setParams = function (params) {\n        this.params = params;\n    };\n    Callback.prototype.setModel = function (model) {\n        this.model = model;\n    };\n    Callback.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    Callback.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2];\n        }); });\n    };\n    return Callback;\n}());\nexports.Callback = Callback;\nvar CallbackList = (function () {\n    function CallbackList(callbacks, queueLength) {\n        if (queueLength === void 0) { queueLength = 10; }\n        if (callbacks == null) {\n            callbacks = [];\n        }\n        this.callbacks = callbacks;\n        this.queueLength = queueLength;\n    }\n    CallbackList.prototype.append = function (callback) {\n        this.callbacks.push(callback);\n    };\n    CallbackList.prototype.setParams = function (params) {\n        for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n            var callback = _a[_i];\n            callback.setParams(params);\n        }\n    };\n    CallbackList.prototype.setModel = function (model) {\n        for (var _i = 0, _a = this.callbacks; _i < _a.length; _i++) {\n            var callback = _a[_i];\n            callback.setModel(model);\n        }\n    };\n    CallbackList.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onEpochBegin(epoch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onEpochEnd(epoch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onBatchBegin(batch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onBatchEnd(batch, logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onTrainBegin(logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    CallbackList.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, callback;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (logs == null) {\n                            logs = {};\n                        }\n                        _i = 0, _a = this.callbacks;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3, 4];\n                        callback = _a[_i];\n                        return [4, callback.onTrainEnd(logs)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3, 1];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    return CallbackList;\n}());\nexports.CallbackList = CallbackList;\nvar BaseLogger = (function (_super) {\n    __extends(BaseLogger, _super);\n    function BaseLogger() {\n        return _super.call(this) || this;\n    }\n    BaseLogger.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.seen = 0;\n                this.totals = {};\n                return [2];\n            });\n        });\n    };\n    BaseLogger.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var batchSize, _loop_1, this_1, key;\n            return __generator(this, function (_a) {\n                if (logs == null) {\n                    logs = {};\n                }\n                batchSize = logs['size'] == null ? 0 : logs['size'];\n                this.seen += batchSize;\n                _loop_1 = function (key) {\n                    var value = logs[key];\n                    if (typeof value === 'number') {\n                        if (!this_1.totals.hasOwnProperty(key)) {\n                            this_1.totals[key] = 0;\n                        }\n                        this_1.totals[key] = this_1.totals[key] + value * batchSize;\n                    }\n                    else {\n                        if (!this_1.totals.hasOwnProperty(key)) {\n                            this_1.totals[key] = K.getScalar(0);\n                        }\n                        tfjs_core_1.tidy(function () {\n                            _this.totals[key] =\n                                K.scalarPlusArray(_this.totals[key], K.multiply(value, K.getScalar(batchSize)));\n                            K.keep(_this.totals[key]);\n                        });\n                    }\n                };\n                this_1 = this;\n                for (key in logs) {\n                    _loop_1(key);\n                }\n                return [2];\n            });\n        });\n    };\n    BaseLogger.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _loop_2, this_2, _i, _a, key;\n            return __generator(this, function (_b) {\n                if (logs != null) {\n                    _loop_2 = function (key) {\n                        if (this_2.totals[key] == null) {\n                            return \"continue\";\n                        }\n                        if (typeof this_2.totals[key] === 'number') {\n                            logs[key] = this_2.totals[key] / this_2.seen;\n                        }\n                        else {\n                            tfjs_core_1.tidy(function () {\n                                logs[key] =\n                                    K.scalarTimesArray(K.divide(K.getScalar(1), K.getScalar(_this.seen)), _this.totals[key]);\n                                K.keep(logs[key]);\n                            });\n                        }\n                    };\n                    this_2 = this;\n                    for (_i = 0, _a = this.params['metrics']; _i < _a.length; _i++) {\n                        key = _a[_i];\n                        _loop_2(key);\n                    }\n                }\n                return [2];\n            });\n        });\n    };\n    return BaseLogger;\n}(Callback));\nexports.BaseLogger = BaseLogger;\nfunction resolveScalarsInLogs(logs) {\n    return __awaiter(this, void 0, void 0, function () {\n        var promises, keys, key, value, valueScalar, values, i;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (logs == null) {\n                        return [2];\n                    }\n                    promises = [];\n                    keys = [];\n                    for (key in logs) {\n                        value = logs[key];\n                        if (typeof value !== 'number') {\n                            valueScalar = value;\n                            promises.push(valueScalar.data());\n                            keys.push(key);\n                        }\n                    }\n                    return [4, Promise.all(promises)];\n                case 1:\n                    values = _a.sent();\n                    for (i = 0; i < values.length; ++i) {\n                        logs[keys[i]] = values[i][0];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.resolveScalarsInLogs = resolveScalarsInLogs;\nfunction disposeTensorsInLogs(logs) {\n    if (logs == null) {\n        return;\n    }\n    for (var key in logs) {\n        var value = logs[key];\n        if (typeof value !== 'number') {\n            value.dispose();\n        }\n    }\n}\nexports.disposeTensorsInLogs = disposeTensorsInLogs;\nvar History = (function (_super) {\n    __extends(History, _super);\n    function History() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    History.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.epoch = [];\n                this.history = {};\n                return [2];\n            });\n        });\n    };\n    History.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key;\n            return __generator(this, function (_a) {\n                if (logs == null) {\n                    logs = {};\n                }\n                this.epoch.push(epoch);\n                for (key in logs) {\n                    if (this.history[key] == null) {\n                        this.history[key] = [];\n                    }\n                    this.history[key].push(logs[key]);\n                }\n                return [2];\n            });\n        });\n    };\n    History.prototype.syncData = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises, keys, indices, key, valueArray, i, valueScalar, values, n;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = [];\n                        keys = [];\n                        indices = [];\n                        for (key in this.history) {\n                            valueArray = this.history[key];\n                            for (i = 0; i < valueArray.length; ++i) {\n                                if (typeof valueArray[i] !== 'number') {\n                                    valueScalar = valueArray[i];\n                                    promises.push(valueScalar.data());\n                                    keys.push(key);\n                                    indices.push(i);\n                                }\n                            }\n                        }\n                        return [4, Promise.all(promises)];\n                    case 1:\n                        values = _a.sent();\n                        for (n = 0; n < values.length; ++n) {\n                            this.history[keys[n]][indices[n]].dispose();\n                            this.history[keys[n]][indices[n]] = values[n][0];\n                        }\n                        return [2];\n                }\n            });\n        });\n    };\n    return History;\n}(Callback));\nexports.History = History;\nvar CustomCallback = (function (_super) {\n    __extends(CustomCallback, _super);\n    function CustomCallback(config) {\n        var _this = _super.call(this) || this;\n        _this.trainBegin = config.onTrainBegin;\n        _this.trainEnd = config.onTrainEnd;\n        _this.epochBegin = config.onEpochBegin;\n        _this.epochEnd = config.onEpochEnd;\n        _this.batchBegin = config.onBatchBegin;\n        _this.batchEnd = config.onBatchEnd;\n        return _this;\n    }\n    CustomCallback.prototype.onEpochBegin = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.epochBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.epochBegin(epoch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onEpochEnd = function (epoch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.epochEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.epochEnd(epoch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onBatchBegin = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.batchBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.batchBegin(batch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onBatchEnd = function (batch, logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.batchEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.batchEnd(batch, logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onTrainBegin = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.trainBegin != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.trainBegin(logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    CustomCallback.prototype.onTrainEnd = function (logs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.trainEnd != null)) return [3, 3];\n                        return [4, resolveScalarsInLogs(logs)];\n                    case 1:\n                        _a.sent();\n                        return [4, this.trainEnd(logs)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    return CustomCallback;\n}(Callback));\nexports.CustomCallback = CustomCallback;\nfunction standardizeCallbacks(callbacks) {\n    if (callbacks == null) {\n        return null;\n    }\n    if (callbacks instanceof Callback) {\n        return [callbacks];\n    }\n    if (Array.isArray(callbacks) && callbacks[0] instanceof Callback) {\n        return callbacks;\n    }\n    var callbackConfigs = generic_utils.toList(callbacks);\n    return callbackConfigs.map(function (callbackConfig) { return new CustomCallback(callbackConfig); });\n}\nexports.standardizeCallbacks = standardizeCallbacks;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/callbacks.js\n// module id = 58\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar backend = require(\"./backend/tfjs_backend\");\nexports.backend = backend;\nvar exports_1 = require(\"./exports\");\nvar callbacks_1 = require(\"./callbacks\");\nexports.Callback = callbacks_1.Callback;\nexports.CallbackList = callbacks_1.CallbackList;\nexports.CustomCallback = callbacks_1.CustomCallback;\nvar training_1 = require(\"./engine/training\");\nexports.Model = training_1.Model;\nvar recurrent_1 = require(\"./layers/recurrent\");\nexports.RNN = recurrent_1.RNN;\nvar models_1 = require(\"./models\");\nexports.Sequential = models_1.Sequential;\nvar types_1 = require(\"./types\");\nexports.SymbolicTensor = types_1.SymbolicTensor;\nvar version_1 = require(\"./version\");\nexports.version_layers = version_1.version;\nexports.model = exports_1.ModelExports.model;\nexports.sequential = exports_1.ModelExports.sequential;\nexports.loadModel = exports_1.ModelExports.loadModel;\nexports.input = exports_1.ModelExports.input;\nexports.layers = exports_1.LayerExports;\nexports.constraints = exports_1.ConstraintExports;\nexports.initializers = exports_1.InitializerExports;\nexports.metrics = exports_1.MetricExports;\nexports.regularizers = exports_1.RegularizerExports;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/index.js\n// module id = 59\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar activations_1 = require(\"../activations\");\nvar K = require(\"../backend/tfjs_backend\");\nvar common_1 = require(\"../common\");\nvar constraints_1 = require(\"../constraints\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar types_1 = require(\"../types\");\nvar conv_utils_1 = require(\"../utils/conv_utils\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar Conv = (function (_super) {\n    __extends(Conv, _super);\n    function Conv(rank, config) {\n        var _this = _super.call(this, config) || this;\n        _this.kernel = null;\n        _this.bias = null;\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.rank = rank;\n        if (_this.rank !== 1 && _this.rank !== 2) {\n            throw new errors_1.NotImplementedError(\"Convolution layer for rank other than 1 or 2 (\" + _this.rank + \") is \" +\n                \"not implemented yet.\");\n        }\n        _this.filters = config.filters;\n        _this.kernelSize = conv_utils_1.normalizeArray(config.kernelSize, rank, 'kernelSize');\n        _this.strides = conv_utils_1.normalizeArray(config.strides == null ? 1 : config.strides, rank, 'strides');\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        common_1.checkPaddingMode(_this.padding);\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        _this.dilationRate = config.dilationRate == null ? 1 : config.dilationRate;\n        if (_this.rank === 1 &&\n            (Array.isArray(_this.dilationRate) &&\n                _this.dilationRate.length !== 1)) {\n            throw new errors_1.ValueError(\"dilationRate must be a number or an array of a single number \" +\n                \"for 1D convolution, but received \" +\n                (\"\" + JSON.stringify(_this.dilationRate)));\n        }\n        if (_this.rank === 2) {\n            if (typeof _this.dilationRate === 'number') {\n                _this.dilationRate = [_this.dilationRate, _this.dilationRate];\n            }\n            else if (_this.dilationRate.length !== 2) {\n                throw new errors_1.ValueError(\"dilationRate must be a number or array of two numbers for 2D \" +\n                    (\"convolution, but received \" + JSON.stringify(_this.dilationRate)));\n            }\n        }\n        _this.activation = activations_1.getActivation(config.activation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        return _this;\n    }\n    Conv.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null) {\n            throw new errors_1.ValueError(\"The channel dimension of the input should be defined. \" +\n                (\"Found \" + inputShape[channelAxis]));\n        }\n        var inputDim = inputShape[channelAxis];\n        var kernelShape = this.kernelSize.concat([inputDim, this.filters]);\n        this.kernel = this.addWeight('kernel', kernelShape, null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        this.inputSpec = [{ ndim: this.rank + 2, axes: (_a = {}, _a[channelAxis] = inputDim, _a) }];\n        this.built = true;\n        var _a;\n    };\n    Conv.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var outputs;\n        var biasValue = this.bias == null ? null : this.bias.read();\n        if (this.rank === 1) {\n            outputs = K.conv1dWithBias(inputs, this.kernel.read(), biasValue, this.strides[0], this.padding, this.dataFormat, this.dilationRate);\n        }\n        else if (this.rank === 2) {\n            outputs = K.conv2dWithBias(inputs, this.kernel.read(), biasValue, this.strides, this.padding, this.dataFormat, this.dilationRate);\n        }\n        else if (this.rank === 3) {\n            throw new errors_1.NotImplementedError('3D convolution is not implemented yet.');\n        }\n        if (this.activation != null) {\n            outputs = this.activation(outputs);\n        }\n        return outputs;\n    };\n    Conv.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var newSpace = [];\n        var space = (this.dataFormat === 'channelsLast') ?\n            inputShape.slice(1, inputShape.length - 1) :\n            inputShape.slice(2);\n        for (var i = 0; i < space.length; ++i) {\n            var newDim = conv_utils_1.convOutputLength(space[i], this.kernelSize[i], this.padding, this.strides[i], typeof this.dilationRate === 'number' ? this.dilationRate :\n                this.dilationRate[i]);\n            newSpace.push(newDim);\n        }\n        var outputShape = [inputShape[0]];\n        if (this.dataFormat === 'channelsLast') {\n            outputShape = outputShape.concat(newSpace);\n            outputShape.push(this.filters);\n        }\n        else {\n            outputShape.push(this.filters);\n            outputShape = outputShape.concat(newSpace);\n        }\n        return outputShape;\n    };\n    Conv.prototype.getConfig = function () {\n        var config = {\n            rank: this.rank,\n            filters: this.filters,\n            kernelSize: this.kernelSize,\n            strides: this.strides,\n            padding: this.padding,\n            dataFormat: this.dataFormat,\n            dilationRate: this.dilationRate,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Conv;\n}(topology_1.Layer));\nexports.Conv = Conv;\nvar Conv2D = (function (_super) {\n    __extends(Conv2D, _super);\n    function Conv2D(config) {\n        return _super.call(this, 2, config) || this;\n    }\n    Conv2D.prototype.getClassName = function () {\n        return 'Conv2D';\n    };\n    Conv2D.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        return config;\n    };\n    return Conv2D;\n}(Conv));\nexports.Conv2D = Conv2D;\ngeneric_utils.ClassNameMap.register('Conv2D', Conv2D);\nvar Conv2DTranspose = (function (_super) {\n    __extends(Conv2DTranspose, _super);\n    function Conv2DTranspose(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        if (_this.padding !== 'same' && _this.padding !== 'valid') {\n            throw new errors_1.ValueError(\"Conv2DTranspose currently supports only padding modes 'same' \" +\n                (\"and 'valid', but received padding mode \" + _this.padding));\n        }\n        return _this;\n    }\n    Conv2DTranspose.prototype.getClassName = function () {\n        return 'Conv2DTranspose';\n    };\n    Conv2DTranspose.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length !== 4) {\n            throw new errors_1.ValueError('Input should have rank 4; Received input shape: ' +\n                JSON.stringify(inputShape));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null) {\n            throw new errors_1.ValueError('The channel dimension of the inputs should be defined. ' +\n                'Found `None`.');\n        }\n        var inputDim = inputShape[channelAxis];\n        var kernelShape = this.kernelSize.concat([this.filters, inputDim]);\n        this.kernel = this.addWeight('kernel', kernelShape, types_1.DType.float32, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], types_1.DType.float32, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: 4, axes: (_a = {}, _a[channelAxis] = inputDim, _a) })];\n        this.built = true;\n        var _a;\n    };\n    Conv2DTranspose.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            if (input.shape.length !== 4) {\n                throw new errors_1.ValueError(\"Conv2DTranspose.call() expects input tensor to be rank-4, but \" +\n                    (\"received a tensor of rank-\" + input.shape.length));\n            }\n            var inputShape = input.shape;\n            var batchSize = inputShape[0];\n            var hAxis;\n            var wAxis;\n            if (_this.dataFormat === 'channelsFirst') {\n                hAxis = 2;\n                wAxis = 3;\n            }\n            else {\n                hAxis = 1;\n                wAxis = 2;\n            }\n            var height = inputShape[hAxis];\n            var width = inputShape[wAxis];\n            var kernelH = _this.kernelSize[0];\n            var kernelW = _this.kernelSize[1];\n            var strideH = _this.strides[0];\n            var strideW = _this.strides[1];\n            var outHeight = conv_utils_1.deconvLength(height, strideH, kernelH, _this.padding);\n            var outWidth = conv_utils_1.deconvLength(width, strideW, kernelW, _this.padding);\n            var outputShape = [batchSize, outHeight, outWidth, _this.filters];\n            if (_this.dataFormat !== 'channelsLast') {\n                input = K.transpose(input, [0, 2, 3, 1]);\n            }\n            var outputs = tfjs_core_1.conv2dTranspose(input, _this.kernel.read(), outputShape, _this.strides, _this.padding);\n            if (_this.dataFormat !== 'channelsLast') {\n                outputs = K.transpose(outputs, [0, 3, 1, 2]);\n            }\n            if (_this.bias != null) {\n                outputs =\n                    K.biasAdd(outputs, _this.bias.read(), _this.dataFormat);\n            }\n            if (_this.activation != null) {\n                outputs = _this.activation(outputs);\n            }\n            return outputs;\n        });\n    };\n    Conv2DTranspose.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var outputShape = inputShape.slice();\n        var channelAxis;\n        var heightAxis;\n        var widthAxis;\n        if (this.dataFormat === 'channelsFirst') {\n            channelAxis = 1;\n            heightAxis = 2;\n            widthAxis = 3;\n        }\n        else {\n            channelAxis = 3;\n            heightAxis = 1;\n            widthAxis = 2;\n        }\n        var kernelH = this.kernelSize[0];\n        var kernelW = this.kernelSize[1];\n        var strideH = this.strides[0];\n        var strideW = this.strides[1];\n        outputShape[channelAxis] = this.filters;\n        outputShape[heightAxis] =\n            conv_utils_1.deconvLength(outputShape[heightAxis], strideH, kernelH, this.padding);\n        outputShape[widthAxis] =\n            conv_utils_1.deconvLength(outputShape[widthAxis], strideW, kernelW, this.padding);\n        return outputShape;\n    };\n    Conv2DTranspose.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['dilationRate'];\n        return config;\n    };\n    return Conv2DTranspose;\n}(Conv2D));\nexports.Conv2DTranspose = Conv2DTranspose;\ngeneric_utils.ClassNameMap.register('Conv2DTranspose', Conv2DTranspose);\nvar SeparableConv = (function (_super) {\n    __extends(SeparableConv, _super);\n    function SeparableConv(rank, config) {\n        var _this = _super.call(this, rank, config) || this;\n        _this.DEFAULT_DEPTHWISE_INITIALIZER = 'glorotUniform';\n        _this.DEFAULT_POINTWISE_INITIALIZER = 'glorotUniform';\n        _this.depthwiseKernel = null;\n        _this.pointwiseKernel = null;\n        if (config.filters == null) {\n            throw new errors_1.ValueError('The `filters` configuration field is required by SeparableConv, ' +\n                'but is unspecified.');\n        }\n        if (config.kernelInitializer != null || config.kernelRegularizer != null ||\n            config.kernelConstraint != null) {\n            throw new errors_1.ValueError('Fields kernelInitializer, kernelRegularizer and kernelConstraint ' +\n                'are invalid for SeparableConv2D. Use depthwiseInitializer, ' +\n                'depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, ' +\n                'pointwiseRegularizer and pointwiseConstraint instead.');\n        }\n        if (config.padding != null && config.padding !== 'same' &&\n            config.padding !== 'valid') {\n            throw new errors_1.ValueError(\"SeparableConv\" + _this.rank + \"D supports only padding modes: \" +\n                (\"'same' and 'valid', but received \" + JSON.stringify(config.padding)));\n        }\n        _this.depthMultiplier =\n            config.depthMultiplier == null ? 1 : config.depthMultiplier;\n        _this.depthwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_DEPTHWISE_INITIALIZER);\n        _this.depthwiseRegularizer = regularizers_1.getRegularizer(config.depthwiseRegularizer);\n        _this.depthwiseConstraint = constraints_1.getConstraint(config.depthwiseConstraint);\n        _this.pointwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_POINTWISE_INITIALIZER);\n        _this.pointwiseRegularizer = regularizers_1.getRegularizer(config.pointwiseRegularizer);\n        _this.pointwiseConstraint = constraints_1.getConstraint(config.pointwiseConstraint);\n        return _this;\n    }\n    SeparableConv.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < this.rank + 2) {\n            throw new errors_1.ValueError(\"Inputs to SeparableConv\" + this.rank + \"D should have rank \" +\n                (this.rank + 2 + \", but received input shape: \") +\n                (\"\" + JSON.stringify(inputShape)));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : inputShape.length - 1;\n        if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n            throw new errors_1.ValueError(\"The channel dimension of the inputs should be defined, \" +\n                (\"but found \" + JSON.stringify(inputShape[channelAxis])));\n        }\n        var inputDim = inputShape[channelAxis];\n        var depthwiseKernelShape = this.kernelSize.concat([inputDim, this.depthMultiplier]);\n        var pointwiseKernelShape = [];\n        for (var i = 0; i < this.rank; ++i) {\n            pointwiseKernelShape.push(1);\n        }\n        pointwiseKernelShape.push(inputDim * this.depthMultiplier, this.filters);\n        var trainable = true;\n        this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, types_1.DType.float32, this.depthwiseInitializer, this.depthwiseRegularizer, trainable, this.depthwiseConstraint);\n        this.pointwiseKernel = this.addWeight('pointwise_kernel', pointwiseKernelShape, types_1.DType.float32, this.pointwiseInitializer, this.pointwiseRegularizer, trainable, this.pointwiseConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.filters], types_1.DType.float32, this.biasInitializer, this.biasRegularizer, trainable, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: this.rank + 2, axes: (_a = {}, _a[channelAxis] = inputDim, _a) })];\n        this.built = true;\n        var _a;\n    };\n    SeparableConv.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var output;\n        if (this.rank === 1) {\n            throw new errors_1.NotImplementedError('1D separable convolution is not implemented yet.');\n        }\n        else if (this.rank === 2) {\n            if (this.dataFormat === 'channelsFirst') {\n                inputs = K.transpose(inputs, [0, 2, 3, 1]);\n            }\n            output = tfjs_core_1.separableConv2d(inputs, this.depthwiseKernel.read(), this.pointwiseKernel.read(), this.strides, this.padding, this.dilationRate, 'NHWC');\n        }\n        if (this.useBias) {\n            output = K.biasAdd(output, this.bias.read(), this.dataFormat);\n        }\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        if (this.dataFormat === 'channelsFirst') {\n            output = K.transpose(output, [0, 3, 1, 2]);\n        }\n        return output;\n    };\n    SeparableConv.prototype.getClassName = function () {\n        return 'SeparableConv';\n    };\n    SeparableConv.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        delete config['kernelInitializer'];\n        delete config['kernelRegularizer'];\n        delete config['kernelConstraint'];\n        config['depthwiseInitializer'] =\n            initializers_1.serializeInitializer(this.depthwiseInitializer);\n        config['pointwiseInitializer'] =\n            initializers_1.serializeInitializer(this.pointwiseInitializer);\n        config['depthwiseRegularizer'] =\n            regularizers_1.serializeRegularizer(this.depthwiseRegularizer);\n        config['pointwiseRegularizer'] =\n            regularizers_1.serializeRegularizer(this.pointwiseRegularizer);\n        config['depthwiseConstraint'] =\n            constraints_1.serializeConstraint(this.depthwiseConstraint);\n        config['pointwiseConstraint'] =\n            constraints_1.serializeConstraint(this.pointwiseConstraint);\n        return config;\n    };\n    return SeparableConv;\n}(Conv));\nexports.SeparableConv = SeparableConv;\nvar SeparableConv2D = (function (_super) {\n    __extends(SeparableConv2D, _super);\n    function SeparableConv2D(config) {\n        return _super.call(this, 2, config) || this;\n    }\n    SeparableConv2D.prototype.getClassName = function () {\n        return 'SeparableConv2D';\n    };\n    return SeparableConv2D;\n}(SeparableConv));\nexports.SeparableConv2D = SeparableConv2D;\ngeneric_utils.ClassNameMap.register('SeparableConv2D', SeparableConv2D);\nvar Conv1D = (function (_super) {\n    __extends(Conv1D, _super);\n    function Conv1D(config) {\n        var _this = _super.call(this, 1, config) || this;\n        _this.inputSpec = [{ ndim: 3 }];\n        return _this;\n    }\n    Conv1D.prototype.getClassName = function () {\n        return 'Conv1D';\n    };\n    Conv1D.prototype.getConfig = function () {\n        var config = _super.prototype.getConfig.call(this);\n        delete config['rank'];\n        delete config['dataFormat'];\n        return config;\n    };\n    return Conv1D;\n}(Conv));\nexports.Conv1D = Conv1D;\ngeneric_utils.ClassNameMap.register('Conv1D', Conv1D);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/convolutional.js\n// module id = 60\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar activations_1 = require(\"../activations\");\nvar K = require(\"../backend/tfjs_backend\");\nvar constraints_1 = require(\"../constraints\");\nvar topology_1 = require(\"../engine/topology\");\nvar topology_2 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar types_1 = require(\"../types\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar math_utils = require(\"../utils/math_utils\");\nvar serialization_1 = require(\"./serialization\");\nvar RNN = (function (_super) {\n    __extends(RNN, _super);\n    function RNN(config) {\n        var _this = _super.call(this, config) || this;\n        var cell;\n        if (config.cell == null) {\n            throw new errors_1.ValueError('cell property is missing for the constructor of RNN.');\n        }\n        else if (Array.isArray(config.cell)) {\n            cell = new StackedRNNCells({ cells: config.cell });\n        }\n        else {\n            cell = config.cell;\n        }\n        if (cell.stateSize == null) {\n            throw new errors_1.ValueError('The RNN cell should have an attribute `stateSize` (tuple of ' +\n                'integers, one integer per RNN state).');\n        }\n        _this.cell = cell;\n        _this.returnSequences =\n            config.returnSequences == null ? false : config.returnSequences;\n        _this.returnState = config.returnState == null ? false : config.returnState;\n        _this.goBackwards = config.goBackwards == null ? false : config.goBackwards;\n        _this._stateful = config.stateful == null ? false : config.stateful;\n        _this.unroll = config.unroll == null ? false : config.unroll;\n        _this.supportsMasking = true;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        _this.stateSpec = null;\n        _this.states = null;\n        _this.numConstants = null;\n        return _this;\n    }\n    RNN.prototype.getStates = function () {\n        if (this.states == null) {\n            var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n            return math_utils.range(0, numStates).map(function (x) { return null; });\n        }\n        else {\n            return this.states;\n        }\n    };\n    RNN.prototype.setStates = function (states) {\n        this.states = states;\n    };\n    RNN.prototype.computeOutputShape = function (inputShape) {\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var stateSize = this.cell.stateSize;\n        if (!Array.isArray(stateSize)) {\n            stateSize = [stateSize];\n        }\n        var outputDim = stateSize[0];\n        var outputShape;\n        if (this.returnSequences) {\n            outputShape = [inputShape[0], inputShape[1], outputDim];\n        }\n        else {\n            outputShape = [inputShape[0], outputDim];\n        }\n        if (this.returnState) {\n            var stateShape = [];\n            for (var _i = 0, stateSize_1 = stateSize; _i < stateSize_1.length; _i++) {\n                var dim = stateSize_1[_i];\n                stateShape.push([inputShape[0], dim]);\n            }\n            return [outputShape].concat(stateShape);\n        }\n        else {\n            return outputShape;\n        }\n    };\n    RNN.prototype.computeMask = function (inputs, mask) {\n        throw new errors_1.NotImplementedError('computeMask has not been implemented for RNN yet');\n    };\n    RNN.prototype.build = function (inputShape) {\n        var constantShape = null;\n        if (this.numConstants != null) {\n            throw new errors_1.NotImplementedError('Constants support is not implemented in RNN yet.');\n        }\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var batchSize = this.stateful ? inputShape[0] : null;\n        var inputDim = inputShape[inputShape.length - 1];\n        this.inputSpec[0] = new topology_1.InputSpec({ shape: [batchSize, null, inputDim] });\n        var stepInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (constantShape != null) {\n            throw new errors_1.NotImplementedError('Constants support is not implemented in RNN yet.');\n        }\n        else {\n            this.cell.build(stepInputShape);\n        }\n        var stateSize;\n        if (Array.isArray(this.cell.stateSize)) {\n            stateSize = this.cell.stateSize;\n        }\n        else {\n            stateSize = [this.cell.stateSize];\n        }\n        if (this.stateSpec != null) {\n            if (!tfjs_core_1.util.arraysEqual(this.stateSpec.map(function (spec) { return spec.shape[spec.shape.length - 1]; }), stateSize)) {\n                throw new errors_1.ValueError(\"An initialState was passed that is not compatible with \" +\n                    (\"cell.stateSize. Received stateSpec=\" + this.stateSpec + \"; \") +\n                    (\"However cell.stateSize is \" + this.cell.stateSize));\n            }\n        }\n        else {\n            this.stateSpec =\n                stateSize.map(function (dim) { return new topology_1.InputSpec({ shape: [null, dim] }); });\n        }\n        if (this.stateful) {\n            throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet');\n        }\n    };\n    RNN.prototype.resetStates = function (states) {\n        if (!this.stateful) {\n            throw new errors_1.AttributeError('Cannot call resetState() on an RNN Layer that is not stateful.');\n        }\n        var batchSize = this.inputSpec[0].shape[0];\n        if (batchSize == null) {\n            throw new errors_1.ValueError('If an RNN is stateful, it needs to know its batch size. Specify ' +\n                'the batch size of your input tensors: \\n' +\n                '- If using a Sequential model, specify the batch size by passing ' +\n                'a `batchInputShape` option to your first layer.\\n' +\n                '- If using the functional API, specify the batch size by ' +\n                'passing a `batchShape` option to your Input layer.');\n        }\n        if (this.states == null) {\n            if (Array.isArray(this.cell.stateSize)) {\n                this.states = this.cell.stateSize.map(function (dim) { return K.zeros([batchSize, dim]); });\n            }\n            else {\n                this.states = [K.zeros([batchSize, this.cell.stateSize])];\n            }\n        }\n        else if (states == null) {\n            if (Array.isArray(this.cell.stateSize)) {\n                this.states = this.cell.stateSize.map(function (dim) { return K.zeros([batchSize, dim]); });\n            }\n            else {\n                this.states[0] = K.zeros([batchSize, this.cell.stateSize]);\n            }\n        }\n        else {\n            if (!Array.isArray(states)) {\n                states = [states];\n            }\n            if (states.length !== this.states.length) {\n                throw new errors_1.ValueError(\"Layer \" + this.name + \" expects \" + this.states.length + \" state(s), \" +\n                    (\"but it received \" + states.length + \" state value(s). Input \") +\n                    (\"received: \" + states));\n            }\n            for (var index = 0; index < this.states.length; ++index) {\n                var value = states[index];\n                var dim = Array.isArray(this.cell.stateSize) ?\n                    this.cell.stateSize[index] :\n                    this.cell.stateSize;\n                var expectedShape = [batchSize, dim];\n                if (!tfjs_core_1.util.arraysEqual(value.shape, expectedShape)) {\n                    throw new errors_1.ValueError(\"State \" + index + \" is incompatible with layer \" + this.name + \": \" +\n                        (\"expected shape=\" + expectedShape + \", received shape=\" + value.shape));\n                }\n                this.states[index] = value;\n            }\n        }\n    };\n    RNN.prototype.standardizeArgs = function (inputs, initialState, constants) {\n        if (Array.isArray(inputs)) {\n            if (initialState != null || constants != null) {\n                throw new errors_1.ValueError('When inputs is an array, neither initialState or constants ' +\n                    'should be provided');\n            }\n            if (this.numConstants != null) {\n                constants =\n                    inputs.slice(inputs.length - this.numConstants, inputs.length);\n                inputs = inputs.slice(0, inputs.length - this.numConstants);\n            }\n            if (inputs.length > 1) {\n                initialState = inputs.slice(1, inputs.length);\n            }\n            inputs = inputs[0];\n        }\n        function toListOrNull(x) {\n            if (x == null || Array.isArray(x)) {\n                return x;\n            }\n            else {\n                return [x];\n            }\n        }\n        initialState = toListOrNull(initialState);\n        constants = toListOrNull(constants);\n        return { inputs: inputs, initialState: initialState, constants: constants };\n    };\n    RNN.prototype.apply = function (inputs, kwargs) {\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        var constants = kwargs == null ? null : kwargs['constants'];\n        if (kwargs == null) {\n            kwargs = {};\n        }\n        var standardized = this.standardizeArgs(inputs, initialState, constants);\n        inputs = standardized.inputs;\n        initialState = standardized.initialState;\n        constants = standardized.constants;\n        var additionalInputs = [];\n        var additionalSpecs = [];\n        if (initialState != null) {\n            kwargs['initialState'] = initialState;\n            additionalInputs = additionalInputs.concat(initialState);\n            this.stateSpec = [];\n            for (var _i = 0, initialState_1 = initialState; _i < initialState_1.length; _i++) {\n                var state = initialState_1[_i];\n                this.stateSpec.push(new topology_1.InputSpec({ shape: state.shape }));\n            }\n            additionalSpecs = additionalSpecs.concat(this.stateSpec);\n        }\n        if (constants != null) {\n            kwargs['constants'] = constants;\n            additionalInputs = additionalInputs.concat(constants);\n            this.numConstants = constants.length;\n        }\n        var isTensor = additionalInputs[0] instanceof types_1.SymbolicTensor;\n        if (isTensor) {\n            var fullInput = [inputs].concat(additionalInputs);\n            var fullInputSpec = this.inputSpec.concat(additionalSpecs);\n            var originalInputSpec = this.inputSpec;\n            this.inputSpec = fullInputSpec;\n            var output = _super.prototype.apply.call(this, fullInput, kwargs);\n            this.inputSpec = originalInputSpec;\n            return output;\n        }\n        else {\n            return _super.prototype.apply.call(this, inputs, kwargs);\n        }\n    };\n    RNN.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        if (initialState == null) {\n            if (this.stateful) {\n                throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet.');\n            }\n            else {\n                initialState = this.getInitialState(inputs);\n            }\n        }\n        if (mask != null) {\n            throw new errors_1.NotImplementedError('Masking is not implemented for RNN yet');\n        }\n        var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\n        if (initialState.length !== numStates) {\n            throw new errors_1.ValueError(\"RNN Layer has \" + numStates + \" state(s) but was passed \" +\n                (initialState.length + \" initial state(s).\"));\n        }\n        var inputShape = inputs.shape;\n        var timesteps = inputShape[1];\n        if (this.unroll) {\n            console.warn('Ignoring unroll = true for RNN layer, due to imperative backend.');\n        }\n        var cellCallKwargs = { training: training };\n        var step = function (inputs, states) {\n            var outputs = _this.cell.call([inputs].concat(states), cellCallKwargs);\n            return [outputs[0], outputs.slice(1)];\n        };\n        var rnnOutputs = K.rnn(step, inputs, initialState, this.goBackwards, null, null, this.unroll, timesteps);\n        var lastOutput = rnnOutputs[0];\n        var outputs = rnnOutputs[1];\n        var states = rnnOutputs[2];\n        if (this.stateful) {\n            throw new errors_1.NotImplementedError('stateful RNN layer is not implemented yet');\n        }\n        var output = this.returnSequences ? outputs : lastOutput;\n        if (this.returnState) {\n            return [output].concat(states);\n        }\n        else {\n            return output;\n        }\n    };\n    RNN.prototype.getInitialState = function (inputs) {\n        var initialState = K.zeros(inputs.shape);\n        initialState = K.sum(initialState, [1, 2]);\n        initialState = K.expandDims(initialState);\n        if (Array.isArray(this.cell.stateSize)) {\n            return this.cell.stateSize.map(function (dim) { return dim > 1 ? K.tile(initialState, [1, dim]) : initialState; });\n        }\n        else {\n            return this.cell.stateSize > 1 ?\n                [K.tile(initialState, [1, this.cell.stateSize])] :\n                [initialState];\n        }\n    };\n    Object.defineProperty(RNN.prototype, \"trainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return [];\n            }\n            return this.cell.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RNN.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return this.cell.weights;\n            }\n            return this.cell.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RNN.prototype.getClassName = function () {\n        return 'RNN';\n    };\n    RNN.prototype.getConfig = function () {\n        var config = {\n            returnSequences: this.returnSequences,\n            returnState: this.returnState,\n            goBackwards: this.goBackwards,\n            stateful: this.stateful,\n            unroll: this.unroll,\n        };\n        if (this.numConstants != null) {\n            config.numConstants = this.numConstants;\n        }\n        var cellConfig = this.cell.getConfig();\n        config.cell = {\n            className: this.cell.getClassName(),\n            config: cellConfig,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return RNN;\n}(topology_2.Layer));\nexports.RNN = RNN;\ngeneric_utils.ClassNameMap.register('RNN', RNN);\nvar RNNCell = (function (_super) {\n    __extends(RNNCell, _super);\n    function RNNCell() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RNNCell = __decorate([\n        tfjs_core_1.doc({ heading: 'Layers', subheading: 'Classes' })\n    ], RNNCell);\n    return RNNCell;\n}(topology_2.Layer));\nexports.RNNCell = RNNCell;\nvar SimpleRNNCell = (function (_super) {\n    __extends(SimpleRNNCell, _super);\n    function SimpleRNNCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation == null ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.stateSize = _this.units;\n        return _this;\n    }\n    SimpleRNNCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        this.kernel = this.addWeight('kernel', [inputShape[inputShape.length - 1], this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    SimpleRNNCell.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        if (inputs.length !== 2) {\n            throw new errors_1.ValueError(\"SimpleRNNCell expects 2 input Tensors, got \" + inputs.length + \".\");\n        }\n        var prevOutput = inputs[1];\n        inputs = inputs[0];\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for SimpleRNNCell yet');\n        }\n        var h = K.dot(inputs, this.kernel.read());\n        if (this.bias != null) {\n            h = K.biasAdd(h, this.bias.read());\n        }\n        var output = K.add(h, K.dot(prevOutput, this.recurrentKernel.read()));\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        return [output, output];\n    };\n    SimpleRNNCell.prototype.getClassName = function () {\n        return 'SimpleRNNCell';\n    };\n    SimpleRNNCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return SimpleRNNCell;\n}(RNNCell));\nexports.SimpleRNNCell = SimpleRNNCell;\ngeneric_utils.ClassNameMap.register('SimpleRNNCell', SimpleRNNCell);\nvar SimpleRNN = (function (_super) {\n    __extends(SimpleRNN, _super);\n    function SimpleRNN(config) {\n        var _this = this;\n        config.cell = new SimpleRNNCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    SimpleRNN.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(SimpleRNN.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SimpleRNN.prototype.getClassName = function () {\n        return 'SimpleRNN';\n    };\n    SimpleRNN.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return SimpleRNN;\n}(RNN));\nexports.SimpleRNN = SimpleRNN;\ngeneric_utils.ClassNameMap.register('SimpleRNN', SimpleRNN);\nvar GRUCell = (function (_super) {\n    __extends(GRUCell, _super);\n    function GRUCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.recurrentActivation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\n            config.recurrentActivation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.implementation = config.implementation;\n        _this.stateSize = _this.units;\n        return _this;\n    }\n    GRUCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputDim = inputShape[inputShape.length - 1];\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 3], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 3], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [this.units * 3], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    GRUCell.prototype.call = function (inputs, kwargs) {\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for GRUCell yet');\n        }\n        inputs = inputs;\n        if (inputs.length !== 2) {\n            throw new errors_1.ValueError(\"GRUCell expects 2 input Tensors (inputs, h, c), got \" +\n                (inputs.length + \".\"));\n        }\n        var hTMinus1 = inputs[1];\n        inputs = inputs[0];\n        var z;\n        var r;\n        var hh;\n        if (this.implementation === 1) {\n            var kernelZ = K.sliceAlongLastAxis(this.kernel.read(), 0, this.units);\n            var kernelR = K.sliceAlongLastAxis(this.kernel.read(), this.units, this.units);\n            var kernelH = K.sliceAlongLastAxis(this.kernel.read(), this.units * 2, this.units);\n            var recurrentKernelZ = K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, this.units);\n            var recurrentKernelR = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units, this.units);\n            var recurrentKernelH = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 2, this.units);\n            var inputsZ = inputs;\n            var inputsR = inputs;\n            var inputsH = inputs;\n            var xZ = K.dot(inputsZ, kernelZ);\n            var xR = K.dot(inputsR, kernelR);\n            var xH = K.dot(inputsH, kernelH);\n            if (this.useBias) {\n                var biasZ = K.sliceAlongFirstAxis(this.bias.read(), 0, this.units);\n                var biasR = K.sliceAlongFirstAxis(this.bias.read(), this.units, this.units);\n                var biasH = K.sliceAlongFirstAxis(this.bias.read(), this.units * 2, this.units);\n                xZ = K.biasAdd(xZ, biasZ);\n                xR = K.biasAdd(xR, biasR);\n                xH = K.biasAdd(xH, biasH);\n            }\n            var hTMinus1Z = hTMinus1;\n            var hTMinus1R = hTMinus1;\n            var hTMinus1H = hTMinus1;\n            z = this.recurrentActivation(K.add(xZ, K.dot(hTMinus1Z, recurrentKernelZ)));\n            r = this.recurrentActivation(K.add(xR, K.dot(hTMinus1R, recurrentKernelR)));\n            hh = this.activation(K.add(xH, K.dot(K.multiply(r, hTMinus1H), recurrentKernelH)));\n        }\n        else {\n            var matrixX = K.dot(inputs, this.kernel.read());\n            if (this.useBias) {\n                matrixX = K.biasAdd(matrixX, this.bias.read());\n            }\n            var matrixInner = K.dot(hTMinus1, K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, 2 * this.units));\n            var xZ = K.sliceAlongLastAxis(matrixX, 0, this.units);\n            var xR = K.sliceAlongLastAxis(matrixX, this.units, this.units);\n            var recurrentZ = K.sliceAlongLastAxis(matrixInner, 0, this.units);\n            var recurrentR = K.sliceAlongLastAxis(matrixInner, this.units, this.units);\n            z = this.recurrentActivation(K.add(xZ, recurrentZ));\n            r = this.recurrentActivation(K.add(xR, recurrentR));\n            var xH = K.sliceAlongLastAxis(matrixX, 2 * this.units, this.units);\n            var recurrentH = K.dot(K.multiply(r, hTMinus1), K.sliceAlongLastAxis(this.recurrentKernel.read(), 2 * this.units, this.units));\n            hh = this.activation(K.add(xH, recurrentH));\n        }\n        var h = K.add(K.multiply(z, hTMinus1), K.multiply(K.scalarPlusArray(K.getScalar(1), K.neg(z)), hh));\n        return [h, h];\n    };\n    GRUCell.prototype.getClassName = function () {\n        return 'GRUCell';\n    };\n    GRUCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GRUCell;\n}(RNNCell));\nexports.GRUCell = GRUCell;\ngeneric_utils.ClassNameMap.register('GRUCell', GRUCell);\nvar GRU = (function (_super) {\n    __extends(GRU, _super);\n    function GRU(config) {\n        var _this = this;\n        if (config.implementation === 0) {\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\n                '`implementation=1`. Please update your layer call.');\n        }\n        config.cell = new GRUCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    GRU.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(GRU.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GRU.prototype, \"implementation\", {\n        get: function () {\n            return this.cell.implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GRU.prototype.getClassName = function () {\n        return 'GRU';\n    };\n    GRU.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    GRU.fromConfig = function (cls, config) {\n        if (config['implmentation'] === 0) {\n            config['implementation'] = 1;\n        }\n        return new cls(config);\n    };\n    return GRU;\n}(RNN));\nexports.GRU = GRU;\ngeneric_utils.ClassNameMap.register('GRU', GRU);\nvar LSTMCell = (function (_super) {\n    __extends(LSTMCell, _super);\n    function LSTMCell(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_ACTIVATION = 'tanh';\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\n            config.activation);\n        _this.recurrentActivation = activations_1.getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\n            config.recurrentActivation);\n        _this.useBias = config.useBias == null ? true : config.useBias;\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.recurrentInitializer = initializers_1.getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.unitForgetBias = config.unitForgetBias;\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.recurrentRegularizer = regularizers_1.getRegularizer(config.recurrentRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.recurrentConstraint = constraints_1.getConstraint(config.recurrentConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\n        _this.recurrentDropout = math_utils.min([\n            1,\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\n        ]);\n        _this.implementation = config.implementation;\n        _this.stateSize = [_this.units, _this.units];\n        return _this;\n    }\n    LSTMCell.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputDim = inputShape[inputShape.length - 1];\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 4], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 4], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\n        var biasInitializer;\n        if (this.useBias) {\n            if (this.unitForgetBias) {\n                var capturedBiasInit_1 = this.biasInitializer;\n                var capturedUnits_1 = this.units;\n                biasInitializer = new ((function (_super) {\n                    __extends(CustomInit, _super);\n                    function CustomInit() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    CustomInit.prototype.apply = function (shape, dtype) {\n                        var bI = capturedBiasInit_1.apply([capturedUnits_1]);\n                        var bF = (new initializers_1.Ones()).apply([capturedUnits_1]);\n                        var bCAndH = capturedBiasInit_1.apply([capturedUnits_1 * 2]);\n                        return K.concatAlongFirstAxis(K.concatAlongFirstAxis(bI, bF), bCAndH);\n                    };\n                    CustomInit.prototype.getClassName = function () {\n                        return 'CustomInit';\n                    };\n                    return CustomInit;\n                }(initializers_1.Initializer)))();\n            }\n            else {\n                biasInitializer = this.biasInitializer;\n            }\n            this.bias = this.addWeight('bias', [this.units * 4], null, biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    LSTMCell.prototype.call = function (inputs, kwargs) {\n        if (this.dropout !== 0 || this.recurrentDropout !== 0) {\n            throw new errors_1.NotImplementedError('Dropout is not implemented for LSTMCell yet');\n        }\n        inputs = inputs;\n        if (inputs.length !== 3) {\n            throw new errors_1.ValueError(\"LSTMCell expects 3 input Tensors (inputs, h, c), got \" +\n                (inputs.length + \".\"));\n        }\n        var hTMinus1 = inputs[1];\n        var cTMinus1 = inputs[2];\n        inputs = inputs[0];\n        var i;\n        var f;\n        var c;\n        var o;\n        if (this.implementation === 1) {\n            var kernelI = K.sliceAlongLastAxis(this.kernel.read(), 0, this.units);\n            var kernelF = K.sliceAlongLastAxis(this.kernel.read(), this.units, this.units);\n            var kernelC = K.sliceAlongLastAxis(this.kernel.read(), this.units * 2, this.units);\n            var kernelO = K.sliceAlongLastAxis(this.kernel.read(), this.units * 3, this.units);\n            var recurrentKernelI = K.sliceAlongLastAxis(this.recurrentKernel.read(), 0, this.units);\n            var recurrentKernelF = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units, this.units);\n            var recurrentKernelC = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 2, this.units);\n            var recurrentKernelO = K.sliceAlongLastAxis(this.recurrentKernel.read(), this.units * 3, this.units);\n            var inputsI = inputs;\n            var inputsF = inputs;\n            var inputsC = inputs;\n            var inputsO = inputs;\n            var xI = K.dot(inputsI, kernelI);\n            var xF = K.dot(inputsF, kernelF);\n            var xC = K.dot(inputsC, kernelC);\n            var xO = K.dot(inputsO, kernelO);\n            if (this.useBias) {\n                var biasI = K.sliceAlongFirstAxis(this.bias.read(), 0, this.units);\n                var biasF = K.sliceAlongFirstAxis(this.bias.read(), this.units, this.units);\n                var biasC = K.sliceAlongFirstAxis(this.bias.read(), this.units * 2, this.units);\n                var biasO = K.sliceAlongFirstAxis(this.bias.read(), this.units * 3, this.units);\n                xI = K.biasAdd(xI, biasI);\n                xF = K.biasAdd(xF, biasF);\n                xC = K.biasAdd(xC, biasC);\n                xO = K.biasAdd(xO, biasO);\n            }\n            var hTMinus1I = hTMinus1;\n            var hTMinus1F = hTMinus1;\n            var hTMinus1C = hTMinus1;\n            var hTMinus1O = hTMinus1;\n            i = this.recurrentActivation(K.add(xI, K.dot(hTMinus1I, recurrentKernelI)));\n            f = this.recurrentActivation(K.add(xF, K.dot(hTMinus1F, recurrentKernelF)));\n            c = K.add(K.multiply(f, cTMinus1), K.multiply(i, this.activation(K.add(xC, K.dot(hTMinus1C, recurrentKernelC)))));\n            o = this.recurrentActivation(K.add(xO, K.dot(hTMinus1O, recurrentKernelO)));\n        }\n        else {\n            var z = K.dot(inputs, this.kernel.read());\n            z = K.add(z, K.dot(hTMinus1, this.recurrentKernel.read()));\n            if (this.useBias) {\n                z = K.biasAdd(z, this.bias.read());\n            }\n            var z0 = K.sliceAlongLastAxis(z, 0, this.units);\n            var z1 = K.sliceAlongLastAxis(z, this.units, this.units);\n            var z2 = K.sliceAlongLastAxis(z, this.units * 2, this.units);\n            var z3 = K.sliceAlongLastAxis(z, this.units * 3, this.units);\n            i = this.recurrentActivation(z0);\n            f = this.recurrentActivation(z1);\n            c = K.add(K.multiply(f, cTMinus1), K.multiply(i, this.activation(z2)));\n            o = this.recurrentActivation(z3);\n        }\n        var h = K.multiply(o, this.activation(c));\n        return [h, h, c];\n    };\n    LSTMCell.prototype.getClassName = function () {\n        return 'LSTMCell';\n    };\n    LSTMCell.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            unitForgetBias: this.unitForgetBias,\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return LSTMCell;\n}(RNNCell));\nexports.LSTMCell = LSTMCell;\ngeneric_utils.ClassNameMap.register('LSTMCell', LSTMCell);\nvar LSTM = (function (_super) {\n    __extends(LSTM, _super);\n    function LSTM(config) {\n        var _this = this;\n        if (config.implementation === 0) {\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\n                '`implementation=1`. Please update your layer call.');\n        }\n        config.cell = new LSTMCell(config);\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    LSTM.prototype.call = function (inputs, kwargs) {\n        var mask = kwargs == null ? null : kwargs['mask'];\n        var training = kwargs == null ? null : kwargs['training'];\n        var initialState = kwargs == null ? null : kwargs['initialState'];\n        return _super.prototype.call.call(this, inputs, { mask: mask, training: training, initialState: initialState });\n    };\n    Object.defineProperty(LSTM.prototype, \"units\", {\n        get: function () {\n            return this.cell.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"activation\", {\n        get: function () {\n            return this.cell.activation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"useBias\", {\n        get: function () {\n            return this.cell.useBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelInitializer\", {\n        get: function () {\n            return this.cell.kernelInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentInitializer\", {\n        get: function () {\n            return this.cell.recurrentInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasInitializer\", {\n        get: function () {\n            return this.cell.biasInitializer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"unitForgetBias\", {\n        get: function () {\n            return this.cell.unitForgetBias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelRegularizer\", {\n        get: function () {\n            return this.cell.kernelRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentRegularizer\", {\n        get: function () {\n            return this.cell.recurrentRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasRegularizer\", {\n        get: function () {\n            return this.cell.biasRegularizer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"kernelConstraint\", {\n        get: function () {\n            return this.cell.kernelConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentConstraint\", {\n        get: function () {\n            return this.cell.recurrentConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"biasConstraint\", {\n        get: function () {\n            return this.cell.biasConstraint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"dropout\", {\n        get: function () {\n            return this.cell.dropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"recurrentDropout\", {\n        get: function () {\n            return this.cell.recurrentDropout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LSTM.prototype, \"implementation\", {\n        get: function () {\n            return this.cell.implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LSTM.prototype.getClassName = function () {\n        return 'LSTM';\n    };\n    LSTM.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            recurrentInitializer: initializers_1.serializeInitializer(this.recurrentInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            unitForgetBias: this.unitForgetBias,\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            recurrentRegularizer: regularizers_1.serializeRegularizer(this.recurrentRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            recurrentConstraint: constraints_1.serializeConstraint(this.recurrentConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint),\n            dropout: this.dropout,\n            recurrentDropout: this.recurrentDropout,\n            implementation: this.implementation,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    LSTM.fromConfig = function (cls, config) {\n        if (config['implmentation'] === 0) {\n            config['implementation'] = 1;\n        }\n        return new cls(config);\n    };\n    return LSTM;\n}(RNN));\nexports.LSTM = LSTM;\ngeneric_utils.ClassNameMap.register('LSTM', LSTM);\nvar StackedRNNCells = (function (_super) {\n    __extends(StackedRNNCells, _super);\n    function StackedRNNCells(config) {\n        var _this = _super.call(this, config) || this;\n        _this.cells = config.cells;\n        return _this;\n    }\n    Object.defineProperty(StackedRNNCells.prototype, \"stateSize\", {\n        get: function () {\n            var stateSize = [];\n            for (var _i = 0, _a = this.cells.slice().reverse(); _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (Array.isArray(cell.stateSize)) {\n                    stateSize.push.apply(stateSize, cell.stateSize);\n                }\n                else {\n                    stateSize.push(cell.stateSize);\n                }\n            }\n            return stateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackedRNNCells.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        var states = inputs.slice(1);\n        var nestedStates = [];\n        for (var _i = 0, _a = this.cells.slice().reverse(); _i < _a.length; _i++) {\n            var cell = _a[_i];\n            if (Array.isArray(cell.stateSize)) {\n                nestedStates.push(states.splice(0, cell.stateSize.length));\n            }\n            else {\n                nestedStates.push(states.splice(0, 1));\n            }\n        }\n        nestedStates.reverse();\n        var newNestedStates = [];\n        var callInputs;\n        for (var i = 0; i < this.cells.length; ++i) {\n            var cell = this.cells[i];\n            states = nestedStates[i];\n            if (i === 0) {\n                callInputs = [inputs[0]].concat(states);\n            }\n            else {\n                callInputs = [callInputs[0]].concat(states);\n            }\n            callInputs = cell.call(callInputs, kwargs);\n            newNestedStates.push(callInputs.slice(1));\n        }\n        states = [];\n        for (var _b = 0, _c = newNestedStates.slice().reverse(); _b < _c.length; _b++) {\n            var cellStates = _c[_b];\n            states.push.apply(states, cellStates);\n        }\n        return [callInputs[0]].concat(states);\n    };\n    StackedRNNCells.prototype.build = function (inputShape) {\n        if (generic_utils.isArrayOfShapes(inputShape)) {\n            inputShape = inputShape[0];\n        }\n        inputShape = inputShape;\n        var outputDim;\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            cell.build(inputShape);\n            if (Array.isArray(cell.stateSize)) {\n                outputDim = cell.stateSize[0];\n            }\n            else {\n                outputDim = cell.stateSize;\n            }\n            inputShape = [inputShape[0], outputDim];\n        }\n        this.built = true;\n    };\n    StackedRNNCells.prototype.getClassName = function () {\n        return 'StackedRNNCells';\n    };\n    StackedRNNCells.prototype.getConfig = function () {\n        var cellConfigs = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            cellConfigs.push({\n                'className': this.getClassName(),\n                'config': cell.getConfig(),\n            });\n        }\n        var config = { 'cells': cellConfigs };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    StackedRNNCells.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var cells = [];\n        for (var _i = 0, _a = config['cells']; _i < _a.length; _i++) {\n            var cellConfig = _a[_i];\n            cells.push(serialization_1.deserialize(cellConfig, customObjects));\n        }\n        return new cls({ cells: cells });\n    };\n    Object.defineProperty(StackedRNNCells.prototype, \"trainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return [];\n            }\n            var weights = [];\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                weights.push.apply(weights, cell.trainableWeights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StackedRNNCells.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            var weights = [];\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                weights.push.apply(weights, cell.nonTrainableWeights);\n            }\n            if (!this.trainable) {\n                var trainableWeights = [];\n                for (var _b = 0, _c = this.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    trainableWeights.push.apply(trainableWeights, cell.trainableWeights);\n                }\n                return trainableWeights.concat(weights);\n            }\n            return weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackedRNNCells.prototype.getWeights = function () {\n        var weights = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            weights.push.apply(weights, cell.weights);\n        }\n        return K.batchGetValue(weights);\n    };\n    StackedRNNCells.prototype.setWeights = function (weights) {\n        var tuples = [];\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            var numParams = cell.weights.length;\n            var inputWeights = weights.splice(numParams);\n            for (var i = 0; i < cell.weights.length; ++i) {\n                tuples.push([cell.weights[i], inputWeights[i]]);\n            }\n        }\n        K.batchSetValue(tuples);\n    };\n    return StackedRNNCells;\n}(RNNCell));\nexports.StackedRNNCells = StackedRNNCells;\ngeneric_utils.ClassNameMap.register('StackedRNNCells', StackedRNNCells);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/recurrent.js\n// module id = 61\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nvar losses_1 = require(\"./losses\");\nfunction binaryAccuracy(yTrue, yPred) {\n    var threshold = K.scalarTimesArray(K.getScalar(0.5), tfjs_core_1.onesLike(yPred));\n    var yPredThresholded = K.cast(K.greater(yPred, threshold), yTrue.dtype);\n    return K.mean(K.equal(yTrue, yPredThresholded), -1);\n}\nexports.binaryAccuracy = binaryAccuracy;\nfunction categoricalAccuracy(yTrue, yPred) {\n    return K.cast(K.equal(K.argmax(yTrue, -1), K.argmax(yPred, -1)), 'float32');\n}\nexports.categoricalAccuracy = categoricalAccuracy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\nfunction topKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.topKCategoricalAccuracy = topKCategoricalAccuracy;\nfunction sparseTopKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseTopKCategoricalAccuracy = sparseTopKCategoricalAccuracy;\nexports.mse = losses_1.meanSquaredError;\nexports.MSE = losses_1.meanSquaredError;\nexports.mae = losses_1.meanAbsoluteError;\nexports.MAE = losses_1.meanAbsoluteError;\nexports.mape = losses_1.meanAbsolutePercentageError;\nexports.MAPE = losses_1.meanAbsolutePercentageError;\nexports.categoricalCrossentropy = losses_1.categoricalCrossentropy;\nexports.cosine = losses_1.cosineProximity;\nexports.sparseCategoricalCrossentropy = losses_1.sparseCategoricalCrossentropy;\nfunction get(identifier) {\n    var metricsMap = {\n        binaryAccuracy: binaryAccuracy,\n        categoricalAccuracy: categoricalAccuracy,\n        categoricalCrossentropy: exports.categoricalCrossentropy,\n        sparseCategoricalCrossentropy: exports.sparseCategoricalCrossentropy,\n        mse: exports.mse,\n        MSE: exports.MSE,\n        mae: exports.mae,\n        MAE: exports.MAE,\n        mape: exports.mape,\n        MAPE: exports.MAPE,\n        cosine: exports.cosine,\n    };\n    if (typeof identifier === 'string' && identifier in metricsMap) {\n        return metricsMap[identifier];\n    }\n    else if (typeof identifier !== 'string' && identifier != null) {\n        return identifier;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unknown metric \" + identifier);\n    }\n}\nexports.get = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/metrics.js\n// module id = 62\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar topology_1 = require(\"./engine/topology\");\nvar training_1 = require(\"./engine/training\");\nvar errors_1 = require(\"./errors\");\nvar serialization_1 = require(\"./layers/serialization\");\nvar generic_utils = require(\"./utils/generic_utils\");\nvar serialization_utils_1 = require(\"./utils/serialization_utils\");\nfunction modelFromJSON(modelAndWeightsConfig, customObjects) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelTopology, tsConfig, model, weightValues, uniqueWeightValues, _i, _a, weight, skipMismatches, isNamedTensorMap;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    modelTopology = modelAndWeightsConfig.modelTopology;\n                    if (modelTopology['model_config'] != null) {\n                        modelTopology = modelTopology['model_config'];\n                    }\n                    tsConfig = serialization_utils_1.convertPythonicToTs(modelTopology);\n                    model = serialization_1.deserialize(tsConfig, customObjects);\n                    if (!(modelAndWeightsConfig.weightsManifest != null)) return [3, 2];\n                    return [4, tfjs_core_1.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) { return weight.originalName; }))];\n                case 1:\n                    weightValues = _b.sent();\n                    uniqueWeightValues = {};\n                    for (_i = 0, _a = model.weights; _i < _a.length; _i++) {\n                        weight = _a[_i];\n                        uniqueWeightValues[weight.name] = weightValues[weight.originalName];\n                    }\n                    skipMismatches = null;\n                    isNamedTensorMap = true;\n                    model.loadWeights(uniqueWeightValues, skipMismatches, isNamedTensorMap);\n                    _b.label = 2;\n                case 2: return [2, model];\n            }\n        });\n    });\n}\nexports.modelFromJSON = modelFromJSON;\nfunction loadModelInternal(modelConfigPath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelConfigRequest, modelConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, fetch(modelConfigPath)];\n                case 1:\n                    modelConfigRequest = _a.sent();\n                    return [4, modelConfigRequest.json()];\n                case 2:\n                    modelConfig = _a.sent();\n                    if (modelConfig['modelTopology'] == null) {\n                        throw new errors_1.ValueError('Missing field \"modelTopology\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    if (modelConfig['weightsManifest'] == null) {\n                        throw new errors_1.ValueError('Missing field \"weightsManifest\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    modelConfig.pathPrefix =\n                        modelConfigPath.substring(0, modelConfigPath.lastIndexOf('/'));\n                    return [2, modelFromJSON(modelConfig)];\n            }\n        });\n    });\n}\nexports.loadModelInternal = loadModelInternal;\nvar Sequential = (function (_super) {\n    __extends(Sequential, _super);\n    function Sequential(config) {\n        var _this = _super.call(this, { inputs: [], outputs: [] }) || this;\n        config = config || {};\n        _this.trainable = true;\n        _this._updatable = true;\n        _this.built = false;\n        _this.name = (config.name != null) ? config.name : K.getUid('sequential_');\n        if (config.layers != null) {\n            for (var _i = 0, _a = config.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                _this.add(layer);\n            }\n        }\n        return _this;\n    }\n    Sequential_1 = Sequential;\n    Sequential.prototype.getClassName = function () {\n        return 'Sequential';\n    };\n    Sequential.prototype.add = function (layer) {\n        if (this.outputs.length === 0) {\n            if (layer.inboundNodes.length === 0) {\n                if (layer.batchInputShape == null) {\n                    throw new errors_1.ValueError('The first layer in a Sequential model must ' +\n                        'get an `inputShape` or `batchInputShape` argument.');\n                }\n                var x = topology_1.Input({\n                    batchShape: layer.batchInputShape,\n                    dtype: layer.dtype,\n                    name: layer.name + '_input'\n                });\n                layer.apply(x);\n            }\n            if (layer.inboundNodes.length !== 1) {\n                throw new errors_1.ValueError('A layer added to a Sequential model must not already be ' +\n                    (\"connected somewhere else. Model received layer \" + layer.name + \" \") +\n                    (\"which has \" + layer.inboundNodes.length + \" pre-existing inbound \") +\n                    'connections.');\n            }\n            if (layer.inboundNodes[0].outputTensors.length !== 1) {\n                throw new errors_1.ValueError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n            this.inputs = topology_1.getSourceInputs(this.outputs[0]);\n            new topology_1.Node({\n                outboundLayer: this,\n                inboundLayers: [],\n                nodeIndices: [],\n                tensorIndices: [],\n                inputTensors: this.inputs,\n                outputTensors: this.outputs,\n                inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n                outputMasks: [null],\n                inputShapes: this.inputs.map(function (x) { return x.shape; }),\n                outputShapes: this.outputs[0].shape\n            });\n        }\n        else {\n            var outputTensor = layer.apply(this.outputs[0]);\n            if (Array.isArray(outputTensor)) {\n                throw new TypeError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [outputTensor];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n        this.layers.push(layer);\n        this.built = false;\n    };\n    Sequential.prototype.pop = function () {\n        if (this.layers.length === 0) {\n            throw new TypeError('There are no layers in the model.');\n        }\n        this.layers.pop();\n        if (this.layers.length === 0) {\n            this.outputs = [];\n            this.inboundNodes = [];\n            this.outboundNodes = [];\n        }\n        else {\n            var lastLayerIndex = this.layers.length - 1;\n            this.layers[lastLayerIndex].outboundNodes = [];\n            this.outputs = [this.layers[lastLayerIndex].output];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n    };\n    Sequential.prototype.call = function (inputs, kwargs) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.call(inputs, kwargs);\n    };\n    Sequential.prototype.build = function (inputShape) {\n        if (this.inputs.length === 0 || this.outputs.length === 0) {\n            throw new TypeError('Sequential model cannot be built: model is empty.' +\n                ' Add some layers first.');\n        }\n        this.model = new training_1.Model({\n            inputs: this.inputs,\n            outputs: this.outputs[0],\n            name: this.name + '_model'\n        });\n        this.model.trainable = this.trainable;\n        this.model.updatable = this.updatable;\n        this.supportsMasking = this.model.supportsMasking;\n        this.inputLayers = this.model.inputLayers;\n        this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n        this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n        this.outputLayers = this.model.outputLayers;\n        this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n        this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n        this.nodesByDepth = this.model.nodesByDepth;\n        this.containerNodes = this.model.containerNodes;\n        this.outputNames = this.model.outputNames;\n        this.inputNames = this.model.inputNames;\n        this.built = true;\n    };\n    Sequential.prototype.setWeights = function (weights) {\n        if (this.model == null) {\n            this.build();\n        }\n        this.model.setWeights(weights);\n    };\n    Object.defineProperty(Sequential.prototype, \"updatable\", {\n        get: function () {\n            return this._updatable;\n        },\n        set: function (value) {\n            if (this.built) {\n                this.model.updatable = value;\n            }\n            this._updatable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sequential.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        if (!this.built) {\n            throw new errors_1.RuntimeError('The model needs to be compiled before being used.');\n        }\n        return this.model.evaluate(x, y, config);\n    };\n    Sequential.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predict(x, config);\n    };\n    Sequential.prototype.predictOnBatch = function (x) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predictOnBatch(x);\n    };\n    Sequential.prototype.compile = function (config) {\n        this.build();\n        this.model.compile(config);\n        this.optimizer = this.model.optimizer;\n        this.loss = this.model.loss;\n        this.metrics = this.model.metrics;\n        this.metricsTensors = this.model.metricsTensors;\n        this.metricsNames = this.model.metricsNames;\n    };\n    Sequential.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.built) {\n                    throw new errors_1.RuntimeError('The model needs to be compiled before ' +\n                        'being used.');\n                }\n                return [2, this.model.fit(x, y, config)];\n            });\n        });\n    };\n    Sequential.fromConfig = function (cls, config) {\n        var model = new cls({});\n        if (!(model instanceof Sequential_1)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called on non-Sequential input: \" + model);\n        }\n        if (!(config instanceof Array)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called without an array of configs\");\n        }\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\n            throw new errors_1.ValueError('Legacy serialization format not supported yet.');\n        }\n        for (var _i = 0, _a = config; _i < _a.length; _i++) {\n            var conf = _a[_i];\n            var layer = serialization_1.deserialize(conf);\n            model.add(layer);\n        }\n        return model;\n    };\n    Sequential.prototype.getConfig = function () {\n        var config = [];\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            config.push({\n                className: layer.getClassName(),\n                config: layer.getConfig(),\n            });\n        }\n        return config;\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential.prototype, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Sequential.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"fit\", null);\n    Sequential = Sequential_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential);\n    return Sequential;\n    var Sequential_1;\n}(training_1.Model));\nexports.Sequential = Sequential;\ngeneric_utils.ClassNameMap.register('Sequential', Sequential);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/models.js\n// module id = 63\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nfunction isArrayItemInputOrOutputName(key, index, value) {\n    return (key === 'inboundNodes' || key === 'outputLayers' ||\n        key === 'inputLayers') &&\n        index === 0 && typeof value === 'string';\n}\nfunction convertPythonicToTs(pythonicConfig, key) {\n    if (pythonicConfig === null) {\n        return null;\n    }\n    else if (typeof pythonicConfig === 'string') {\n        return generic_utils.toCamelCase(pythonicConfig);\n    }\n    else if ((typeof pythonicConfig === 'number') ||\n        (typeof pythonicConfig === 'boolean')) {\n        return pythonicConfig;\n    }\n    else if (pythonicConfig instanceof Array) {\n        var tsArray = [];\n        var arrayLength = pythonicConfig.length;\n        for (var i = 0; i < arrayLength; ++i) {\n            var item = pythonicConfig[i];\n            if (isArrayItemInputOrOutputName(key, i, item)) {\n                tsArray.push(item);\n            }\n            else {\n                tsArray.push(convertPythonicToTs(item, key));\n            }\n        }\n        return tsArray;\n    }\n    else {\n        var tsDict = {};\n        for (var _i = 0, _a = Object.keys(pythonicConfig); _i < _a.length; _i++) {\n            var pythonicKey = _a[_i];\n            var pythonicValue = pythonicConfig[pythonicKey];\n            if (pythonicKey === 'name' && typeof pythonicValue === 'string') {\n                tsDict[pythonicKey] = pythonicValue;\n            }\n            else {\n                var tsKey = generic_utils.toCamelCase(pythonicKey);\n                if (generic_utils.SerializableEnumRegistry.contains(pythonicKey) &&\n                    (typeof pythonicValue === 'string' || pythonicValue == null)) {\n                    var enumValue = generic_utils.SerializableEnumRegistry.lookup(pythonicKey, pythonicValue);\n                    if (enumValue != null) {\n                        tsDict[tsKey] = enumValue;\n                    }\n                    else {\n                        throw new errors_1.ValueError(\"Unkown value \" + pythonicValue + \" for \" + pythonicKey + \" Enum\");\n                    }\n                }\n                else {\n                    tsDict[tsKey] = convertPythonicToTs(pythonicValue, tsKey);\n                }\n            }\n        }\n        return tsDict;\n    }\n}\nexports.convertPythonicToTs = convertPythonicToTs;\nfunction convertTsToPythonic(tsConfig, key) {\n    if (tsConfig === null || tsConfig === undefined) {\n        return null;\n    }\n    else if (typeof tsConfig === 'string') {\n        return generic_utils.toSnakeCase(tsConfig);\n    }\n    else if ((typeof tsConfig === 'number') || (typeof tsConfig === 'boolean')) {\n        return tsConfig;\n    }\n    else if (tsConfig instanceof Array) {\n        var pyArray = [];\n        var arrayLength = tsConfig.length;\n        for (var i = 0; i < arrayLength; ++i) {\n            var item = tsConfig[i];\n            if (isArrayItemInputOrOutputName(key, i, item)) {\n                pyArray.push(item);\n            }\n            else {\n                pyArray.push(convertTsToPythonic(item, key));\n            }\n        }\n        return pyArray;\n    }\n    else {\n        var pyDict = {};\n        for (var _i = 0, _a = Object.keys(tsConfig); _i < _a.length; _i++) {\n            var tsKey = _a[_i];\n            var tsValue = tsConfig[tsKey];\n            var pyKey = generic_utils.toSnakeCase(tsKey);\n            if ((tsKey === 'name' || tsKey === 'className') &&\n                typeof tsValue === 'string') {\n                pyDict[pyKey] = tsValue;\n            }\n            else {\n                if (generic_utils.SerializableEnumRegistry.contains(pyKey) &&\n                    (typeof tsValue === 'string' || tsValue == null)) {\n                    var enumString = generic_utils.SerializableEnumRegistry.reverseLookup(pyKey, tsValue);\n                    pyDict[pyKey] = enumString;\n                }\n                else {\n                    pyDict[pyKey] = convertTsToPythonic(tsValue, tsKey);\n                }\n            }\n        }\n        return pyDict;\n    }\n}\nexports.convertTsToPythonic = convertTsToPythonic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/utils/serialization_utils.js\n// module id = 64\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 65\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 66\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 67\n// module chunks = 0","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/index.js\n// module id = 68\n// module chunks = 0","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport DrawableCanvas from './drawable-canvas';\nimport './style.css';\n\nconst CANVAS_WIDTH = 400;\nconst CANVAS_HEIGHT = 400;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n    this.predict = this.predict.bind(this);\n    this.clear = this.clear.bind(this);\n    this.loadModel();\n  }\n\n  async loadModel(){\n    this.model = await tf.loadModel('./assets/model.json');\n  }\n\n  async predict(imageData) {\n    if(!this.model){\n        return;\n    }\n\n    await tf.tidy(() => {\n      let maxProb = 0;\n      let number;\n      let img = tf.fromPixels(imageData, 1);\n      img = img.reshape([1, 28, 28, 1]);\n      img = tf.cast(img, 'float32');\n    \n      const output = this.model.predict(img);\n      const predictions = Array.from(output.dataSync());\n        \n      predictions.forEach((prob, num) => {\n        if(prob > maxProb){\n            maxProb = prob;\n            number = num;\n        }\n      });\n      this.setState({ number, clear: false });\n    });\n  }\n\n  clear(){\n    this.setState({\n      clear: true,\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ textAlign: 'center'}}>\n        <h4>\n           Using a trained MNIST Keras model, with Tensorflow.js and React.js\n        </h4>\n        <h5>Draw a number (0-9) here:</h5>\n        <div>\n          <DrawableCanvas \n            clear={this.state.clear}\n            width={CANVAS_WIDTH}\n            height={CANVAS_HEIGHT}\n            brushColor={'grey'}\n            lineWidth={25}\n            onGetImage={this.predict}\n          />\n        </div>\n        <button onClick={this.clear}>Clear</button>\n        <h1>{this.state.number}</h1>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 70\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"./doc\");\nvar BrowserUtil = (function () {\n    function BrowserUtil() {\n    }\n    BrowserUtil.nextFrame = function () {\n        return new Promise(function (resolve) { return requestAnimationFrame(function () { return resolve(); }); });\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Timing' })\n    ], BrowserUtil, \"nextFrame\", null);\n    return BrowserUtil;\n}());\nexports.BrowserUtil = BrowserUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/browser_util.js\n// module id = 71\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    var a = navigator.userAgent || navigator.vendor || window.opera;\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n        .test(a) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n}\nexports.isMobile = isMobile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/device_util.js\n// module id = 72\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"./environment\");\nvar globals_1 = require(\"./globals\");\nvar ops = require(\"./ops/ops\");\nvar profiler_1 = require(\"./profiler\");\nvar tape_1 = require(\"./tape\");\nvar tensor_1 = require(\"./tensor\");\nvar util = require(\"./util\");\nvar Engine = (function () {\n    function Engine(backend, safeMode) {\n        this.backend = backend;\n        this.safeMode = safeMode;\n        this.registeredVariables = {};\n        this.refCounter = new WeakMap();\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numDataBuffers = 0;\n        this.gradientScopeCount = 0;\n        this.customGradientDepth = 0;\n        this.activeScope = { keep: [], track: [] };\n        this.scopeStack = [this.activeScope];\n        this.profiler = new profiler_1.Profiler(backend);\n    }\n    Engine.prototype.runKernel = function (forwardFunc, inputs, backwardsFunc) {\n        var _this = this;\n        var result;\n        var saved = [];\n        var saveFunc = function (x) {\n            saved.push(x);\n            return x;\n        };\n        var scopeName = this.activeScope.name;\n        this.customGradientDepth++;\n        if (!environment_1.ENV.get('DEBUG')) {\n            result = forwardFunc(this.backend, saveFunc);\n        }\n        else {\n            result = this.profiler.profileKernel(scopeName, function () { return forwardFunc(_this.backend, saveFunc); });\n        }\n        this.customGradientDepth--;\n        if (this.shouldRecord()) {\n            var tapeNode = {\n                id: this.nextTapeNodeId++,\n                name: scopeName,\n                inputs: inputs,\n                output: result,\n            };\n            if (backwardsFunc != null) {\n                tapeNode.gradient = function (dy) { return backwardsFunc(dy, saved); };\n            }\n            this.activeTape.push(tapeNode);\n        }\n        return result;\n    };\n    Engine.prototype.registerTensor = function (a) {\n        var refCount = this.refCounter.has(a.dataId) ? this.refCounter.get(a.dataId) : 0;\n        this.numTensors++;\n        if (refCount === 0) {\n            this.numDataBuffers++;\n            this.numBytes +=\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\n            this.backend.register(a.dataId, a.shape, a.dtype);\n        }\n        this.refCounter.set(a.dataId, refCount + 1);\n        if (!(a instanceof tensor_1.Variable)) {\n            this.track(a);\n        }\n    };\n    Engine.prototype.registerVariable = function (v) {\n        if (this.registeredVariables[v.name] != null) {\n            throw new Error(\"Variable with name \" + v.name + \" was already registered\");\n        }\n        this.registeredVariables[v.name] = v;\n    };\n    Engine.prototype.disposeTensor = function (a) {\n        if (!this.refCounter.has(a.dataId)) {\n            return;\n        }\n        this.numTensors--;\n        var refCount = this.refCounter.get(a.dataId);\n        if (refCount <= 1) {\n            this.refCounter.delete(a.dataId);\n            this.backend.disposeData(a.dataId);\n            this.numDataBuffers--;\n            this.numBytes -=\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\n        }\n        else {\n            this.refCounter.set(a.dataId, refCount - 1);\n        }\n    };\n    Engine.prototype.memory = function () {\n        var info = this.backend.memory();\n        info.numTensors = this.numTensors;\n        info.numDataBuffers = this.numDataBuffers;\n        info.numBytes = this.numBytes;\n        return info;\n    };\n    Engine.prototype.shouldRecord = function () {\n        return this.activeTape != null && this.customGradientDepth === 0;\n    };\n    Engine.prototype.addTapeNode = function (inputs, result, gradientsFunc) {\n        var inputsMap = {};\n        inputs.forEach(function (input, idx) {\n            inputsMap[idx] = input;\n        });\n        var gradient = function (dy) {\n            var res = gradientsFunc(dy);\n            var resMap = {};\n            res.forEach(function (r, idx) {\n                resMap[idx] = function () { return r; };\n            });\n            return resMap;\n        };\n        var tapeNode = {\n            id: this.nextTapeNodeId++,\n            name: this.activeScope.name,\n            inputs: inputsMap,\n            output: result,\n            gradient: gradient\n        };\n        this.activeTape.push(tapeNode);\n    };\n    Engine.prototype.keep = function (result) {\n        if (this.scopeStack.length === 1 && environment_1.ENV.engine.safeMode) {\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\n                'tf.tidy(() => {...}) to avoid memory leaks.');\n        }\n        this.activeScope.keep.push(result);\n        return result;\n    };\n    Engine.prototype.startScope = function (name, gradientsMode) {\n        if (gradientsMode === void 0) { gradientsMode = false; }\n        if (gradientsMode && this.gradientScopeCount === 0) {\n            this.activeTape = [];\n        }\n        if (gradientsMode) {\n            this.gradientScopeCount++;\n        }\n        var scopeInfo = { keep: [], track: [] };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.scopeStack.push(scopeInfo);\n        this.activeScope = scopeInfo;\n    };\n    Engine.prototype.endScope = function (result, gradientsMode) {\n        var _this = this;\n        if (gradientsMode === void 0) { gradientsMode = false; }\n        if (gradientsMode) {\n            this.gradientScopeCount--;\n            if (this.gradientScopeCount === 0) {\n                this.activeTape = null;\n            }\n        }\n        var tensorsToKeep = this.activeScope.keep;\n        var tensorsToTrackInParent = util.extractTensorsFromContainer(result);\n        tensorsToKeep = tensorsToKeep.concat(tensorsToTrackInParent);\n        for (var i = 0; i < this.activeScope.track.length; i++) {\n            var tensor = this.activeScope.track[i];\n            if (util.isTensorInList(tensor, tensorsToKeep)) {\n                continue;\n            }\n            if (this.activeTape != null) {\n                tensorsToTrackInParent.push(tensor);\n            }\n            else {\n                tensor.dispose();\n            }\n        }\n        this.scopeStack.pop();\n        this.activeScope = this.scopeStack.length === 0 ?\n            { keep: [], track: [] } :\n            this.scopeStack[this.scopeStack.length - 1];\n        tensorsToTrackInParent.forEach(function (tensor) {\n            if (!util.isTensorInList(tensor, _this.activeScope.keep)) {\n                _this.track(tensor);\n            }\n        });\n    };\n    Engine.prototype.dispose = function () { };\n    Engine.prototype.gradients = function (f, xs, dy, allowNoGradients) {\n        var _this = this;\n        if (allowNoGradients === void 0) { allowNoGradients = false; }\n        util.assert(xs.length > 0, 'gradients() received an empty list of xs.');\n        return globals_1.tidy('gradients', function () {\n            var y = f();\n            util.assert(y instanceof tensor_1.Tensor, 'The result y returned by f() must be a tensor.');\n            var filteredTape = tape_1.getFilteredNodesXToY(_this.activeTape, xs, y);\n            if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n                throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                    'that the f you passed encloses all operations that lead from x ' +\n                    'to y.');\n            }\n            var accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ops.ones(y.shape) : dy;\n            tape_1.backpropagateGradients(accumulatedGradientMap, filteredTape);\n            var grads = xs.map(function (x) { return accumulatedGradientMap[x.id]; });\n            return { value: y, grads: grads };\n        }, true);\n    };\n    Engine.prototype.customGrad = function (f) {\n        var _this = this;\n        util.assert(util.isFunction(f), 'The f passed in customGrad(f) must be a function.');\n        return function () {\n            var inputs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                inputs[_i] = arguments[_i];\n            }\n            util.assert(inputs.every(function (t) { return t instanceof tensor_1.Tensor; }), 'The args passed in customGrad(f)(x1, x2,...) must all be tensors');\n            _this.customGradientDepth++;\n            var gradientsFunc;\n            var gradientsMode = true;\n            var result = globals_1.tidy(f.name, function () {\n                var _a = f.apply(void 0, inputs), value = _a.value, gradFunc = _a.gradFunc;\n                util.assert(value instanceof tensor_1.Tensor, 'The function f passed in customGrad(f) must return an object ' +\n                    'where `obj.value` is a tensor');\n                util.assert(util.isFunction(gradFunc), 'The function f passed in customGrad(f) must return an object ' +\n                    'where `obj.gradFunc` is a function.');\n                gradientsFunc = gradFunc;\n                return value;\n            }, gradientsMode);\n            _this.customGradientDepth--;\n            if (_this.shouldRecord()) {\n                var gradFunc = function (dy) {\n                    var res = gradientsFunc(dy);\n                    var grads = Array.isArray(res) ? res : [res];\n                    util.assert(grads.length === inputs.length, 'The function f passed in customGrad(f) must return an object ' +\n                        'where `obj.gradFunc` is a function that returns the same ' +\n                        'number of tensors as inputs passed to f(...).');\n                    util.assert(grads.every(function (t) { return t instanceof tensor_1.Tensor; }), 'The function f passed in customGrad(f) must return an object ' +\n                        'where `obj.gradFunc` is a function that returns a list of ' +\n                        'only tensors.');\n                    return grads;\n                };\n                _this.addTapeNode(inputs, result, gradFunc);\n            }\n            return result;\n        };\n    };\n    Engine.prototype.write = function (dataId, values) {\n        this.backend.write(dataId, values);\n    };\n    Engine.prototype.readSync = function (dataId) {\n        return this.backend.readSync(dataId);\n    };\n    Engine.prototype.read = function (dataId) {\n        return this.backend.read(dataId);\n    };\n    Engine.prototype.fromPixels = function (pixels, numChannels) {\n        return this.backend.fromPixels(pixels, numChannels);\n    };\n    Engine.prototype.time = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, timingInfo;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        start = performance.now();\n                        return [4, this.backend.time(query)];\n                    case 1:\n                        timingInfo = _a.sent();\n                        timingInfo.wallMs = performance.now() - start;\n                        return [2, timingInfo];\n                }\n            });\n        });\n    };\n    Engine.prototype.track = function (result) {\n        if (this.scopeStack.length === 1 && this.safeMode) {\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\n                'tf.tidy(() => {op();...}); to avoid memory leaks.');\n        }\n        this.activeScope.track.push(result);\n        return result;\n    };\n    return Engine;\n}());\nexports.Engine = Engine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/engine.js\n// module id = 73\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"./doc\");\nvar environment_1 = require(\"./environment\");\nvar globals_1 = require(\"./globals\");\nvar tensor_1 = require(\"./tensor\");\nvar util = require(\"./util\");\nvar Gradients = (function () {\n    function Gradients() {\n    }\n    Gradients.gradScope = function (nameOrScopeFn, scopeFn) {\n        return globals_1.tidy(nameOrScopeFn, scopeFn, true);\n    };\n    Gradients.grad = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in grad(f) must be a function');\n        return function (x, dy) {\n            util.assert(x instanceof tensor_1.Tensor, 'The x passed in grad(f)(x) must be a tensor');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in grad(f)(x, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f(x); }, [x], dy), value = _a.value, grads = _a.grads;\n            if (dy != null) {\n                util.assertShapesMatch(value.shape, dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            value.dispose();\n            checkGrads(grads);\n            return grads[0];\n        };\n    };\n    Gradients.grads = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in grads(f) must be a function');\n        return function (args, dy) {\n            util.assert(Array.isArray(args) && args.every(function (arg) { return arg instanceof tensor_1.Tensor; }), 'The args passed in grads(f)(args) must be an array of tensors');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in grads(f)(args, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f.apply(void 0, args); }, args, dy), value = _a.value, grads = _a.grads;\n            if (dy != null) {\n                util.assertShapesMatch(value.shape, dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must match the ' +\n                    'shape returned by f([x1,...])');\n            }\n            value.dispose();\n            checkGrads(grads);\n            return grads;\n        };\n    };\n    Gradients.valueAndGrad = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in valueAndGrad(f) must be a function');\n        return function (x, dy) {\n            util.assert(x instanceof tensor_1.Tensor, 'The x passed in valueAndGrad(f)(x) must be a tensor');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n            var _a = environment_1.ENV.engine.gradients(function () { return f(x); }, [x], dy), grads = _a.grads, value = _a.value;\n            checkGrads(grads);\n            return { grad: grads[0], value: value };\n        };\n    };\n    Gradients.valueAndGrads = function (f) {\n        util.assert(util.isFunction(f), 'The f passed in valueAndGrads(f) must be a function');\n        return function (args, dy) {\n            util.assert(Array.isArray(args) && args.every(function (arg) { return arg instanceof tensor_1.Tensor; }), 'The args passed in valueAndGrads(f)(args) must be array of tensors');\n            util.assert(dy == null || dy instanceof tensor_1.Tensor, 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n            var res = environment_1.ENV.engine.gradients(function () { return f.apply(void 0, args); }, args, dy);\n            if (dy != null) {\n                util.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(res.grads);\n            return res;\n        };\n    };\n    Gradients.variableGrads = function (f, varList) {\n        util.assert(util.isFunction(f), 'The f passed in variableGrads(f) must be a function');\n        util.assert(varList == null ||\n            Array.isArray(varList) && varList.every(function (v) { return v instanceof tensor_1.Variable; }), 'The varList passed in variableGrads(f, varList) must be an array ' +\n            'of variables');\n        if (varList == null) {\n            varList = [];\n            for (var varName in environment_1.ENV.engine.registeredVariables) {\n                varList.push(environment_1.ENV.engine.registeredVariables[varName]);\n            }\n        }\n        var originalVarCount = varList.length;\n        varList = varList.filter(function (variable) { return variable.trainable; });\n        util.assert(varList.length > 0, \"variableGrads() expects at least one of the input variables to be \" +\n            (\"trainable, but none of the \" + originalVarCount + \" variables is \") +\n            \"trainable.\");\n        var allowNoGradients = true;\n        var _a = environment_1.ENV.engine.gradients(f, varList, null, allowNoGradients), value = _a.value, grads = _a.grads;\n        util.assert(grads.some(function (g) { return g != null; }), 'Cannot find a connection between any variable and the result of the ' +\n            'loss function y=f(x). Please make sure the operations that use ' +\n            'variables are inside the function f passed to minimize().');\n        util.assert(value.rank === 0, \"The f passed in variableGrads(f) must return a scalar, but it \" +\n            (\"returned a rank-\" + value.rank + \" tensor\"));\n        var namedGrads = {};\n        varList.forEach(function (v, i) {\n            if (grads[i] != null) {\n                namedGrads[v.name] = grads[i];\n            }\n        });\n        return { value: value, grads: namedGrads };\n    };\n    Gradients.customGrad = function (f) {\n        return environment_1.ENV.engine.customGrad(f);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"grad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"grads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"valueAndGrad\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"valueAndGrads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"variableGrads\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Gradients' })\n    ], Gradients, \"customGrad\", null);\n    return Gradients;\n}());\nexports.Gradients = Gradients;\nfunction checkGrads(grads) {\n    var numNullGradients = grads.filter(function (g) { return g == null; }).length;\n    if (numNullGradients > 0) {\n        throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\");\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/gradients.js\n// module id = 74\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\nvar environment_1 = require(\"../environment\");\nvar axis_util = require(\"../ops/axis_util\");\nvar broadcast_util = require(\"../ops/broadcast_util\");\nvar concat_util = require(\"../ops/concat_util\");\nvar ops = require(\"../ops/ops\");\nvar ops_1 = require(\"../ops/ops\");\nvar selu_util = require(\"../ops/selu_util\");\nvar erf_util = require(\"../ops/erf_util\");\nvar tensor_1 = require(\"../tensor\");\nvar types = require(\"../types\");\nvar util = require(\"../util\");\nvar backend_util = require(\"./backend_util\");\nvar MathBackendCPU = (function () {\n    function MathBackendCPU() {\n        this.data = new WeakMap();\n        if (typeof document !== 'undefined') {\n            this.canvas = document.createElement('canvas');\n        }\n    }\n    MathBackendCPU.prototype.register = function (dataId, shape, dtype) {\n        if (this.data.has(dataId)) {\n            throw new Error(\"Data buffer is already registered\");\n        }\n        this.data.set(dataId, null);\n    };\n    MathBackendCPU.prototype.write = function (dataId, values) {\n        if (values == null) {\n            throw new Error('MathBackendCPU.write(): values can not be null');\n        }\n        this.throwIfNoData(dataId);\n        this.data.set(dataId, values);\n    };\n    MathBackendCPU.prototype.fromPixels = function (pixels, numChannels) {\n        if (pixels == null) {\n            throw new Error('MathBackendCPU.writePixels(): pixels can not be null');\n        }\n        var vals;\n        if (pixels instanceof ImageData) {\n            vals = pixels.data;\n        }\n        else if (pixels instanceof HTMLCanvasElement) {\n            vals = pixels.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else if (pixels instanceof HTMLImageElement ||\n            pixels instanceof HTMLVideoElement) {\n            if (this.canvas == null) {\n                throw new Error('Can\\'t read pixels from HTMLImageElement outside ' +\n                    'the browser.');\n            }\n            this.canvas.width = pixels.width;\n            this.canvas.height = pixels.height;\n            this.canvas.getContext('2d').drawImage(pixels, 0, 0, pixels.width, pixels.height);\n            vals = this.canvas.getContext('2d')\n                .getImageData(0, 0, pixels.width, pixels.height)\n                .data;\n        }\n        else {\n            throw new Error(\"pixels is of unknown type: \" + pixels.constructor.name);\n        }\n        var values;\n        if (numChannels === 4) {\n            values = new Int32Array(vals);\n        }\n        else {\n            var numPixels = pixels.width * pixels.height;\n            values = new Int32Array(numPixels * numChannels);\n            for (var i = 0; i < numPixels; i++) {\n                for (var channel = 0; channel < numChannels; ++channel) {\n                    values[i * numChannels + channel] = vals[i * 4 + channel];\n                }\n            }\n        }\n        var outShape = [pixels.height, pixels.width, numChannels];\n        return ops_1.tensor3d(values, outShape, 'int32');\n    };\n    MathBackendCPU.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2, this.readSync(dataId)];\n            });\n        });\n    };\n    MathBackendCPU.prototype.readSync = function (dataId) {\n        this.throwIfNoData(dataId);\n        return this.data.get(dataId);\n    };\n    MathBackendCPU.prototype.disposeData = function (dataId) {\n        if (this.data.has(dataId)) {\n            this.data.delete(dataId);\n        }\n    };\n    MathBackendCPU.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, kernelMs;\n            return __generator(this, function (_a) {\n                start = performance.now();\n                f();\n                kernelMs = performance.now() - start;\n                return [2, { kernelMs: kernelMs }];\n            });\n        });\n    };\n    MathBackendCPU.prototype.memory = function () {\n        return {\n            unreliable: true\n        };\n    };\n    MathBackendCPU.prototype.throwIfNoData = function (dataId) {\n        if (!this.data.has(dataId)) {\n            throw new Error(\"CPU backend: No data found for this tensor. \" +\n                \"Did you change your backend in the middle of the program? \" +\n                \"New backends can't use Tensors created with previous backends\");\n        }\n    };\n    MathBackendCPU.prototype.slice = function (x, begin, size) {\n        var buffer = ops.buffer(size, x.dtype);\n        for (var i = 0; i < buffer.size; ++i) {\n            var loc = buffer.indexToLoc(i);\n            var xLoc = loc.map(function (idx, j) { return idx + begin[j]; });\n            buffer.set.apply(buffer, [x.get.apply(x, xLoc)].concat(loc));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.reverse = function (x, axis) {\n        var buffer = ops.buffer(x.shape, x.dtype);\n        var xBuffer = x.buffer();\n        var _loop_1 = function (i) {\n            var outLoc = buffer.indexToLoc(i);\n            var inLoc = outLoc.slice();\n            axis.forEach(function (ax) { return inLoc[ax] = x.shape[ax] - 1 - inLoc[ax]; });\n            buffer.set.apply(buffer, [xBuffer.get.apply(xBuffer, inLoc)].concat(outLoc));\n        };\n        for (var i = 0; i < buffer.size; i++) {\n            _loop_1(i);\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.concat = function (a, b) {\n        var outShape = concat_util.computeOutShape(a.shape, b.shape, 1);\n        var buffer = ops.buffer(outShape, a.dtype);\n        if (a.shape[0] === 1 && b.shape[0] === 1) {\n            var aVals = a.dataSync();\n            var bVals = b.dataSync();\n            var vals = buffer.values;\n            vals.set(aVals, 0);\n            vals.set(bVals, a.size);\n            return buffer.toTensor();\n        }\n        for (var i = 0; i < outShape[0]; ++i) {\n            for (var j = 0; j < a.shape[1]; ++j) {\n                buffer.set(a.get(i, j), i, j);\n            }\n            for (var j = 0; j < b.shape[1]; ++j) {\n                buffer.set(b.get(i, j), i, j + a.shape[1]);\n            }\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.neg = function (x) {\n        return this.multiply(ops.scalar(-1), x);\n    };\n    MathBackendCPU.prototype.add = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue + bValue; });\n    };\n    MathBackendCPU.prototype.subtract = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue - bValue; });\n    };\n    MathBackendCPU.prototype.pow = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.pow(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.matMul = function (a, b, transposeA, transposeB) {\n        var sharedDim = transposeA ? a.shape[0] : a.shape[1];\n        var leftDim = transposeA ? a.shape[1] : a.shape[0];\n        var rightDim = transposeB ? b.shape[0] : b.shape[1];\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var _a = transposeA ? [1, a.strides[0]] : [a.strides[0], 1], aOuterStep = _a[0], aInnerStep = _a[1];\n        var _b = transposeB ? [b.strides[0], 1] : [1, b.strides[0]], bOuterStep = _b[0], bInnerStep = _b[1];\n        var aOuterEnd = leftDim * aOuterStep;\n        var bOuterEnd = rightDim * bOuterStep;\n        var result = new Float32Array(leftDim * rightDim);\n        var resultIndex = 0;\n        for (var aOuter = 0; aOuter < aOuterEnd; aOuter += aOuterStep) {\n            for (var bOuter = 0; bOuter < bOuterEnd; bOuter += bOuterStep) {\n                var aInner = aOuter;\n                var bInner = bOuter;\n                var sum = 0;\n                for (var k = 0; k < sharedDim; ++k) {\n                    sum += aValues[aInner] * bValues[bInner];\n                    aInner += aInnerStep;\n                    bInner += bInnerStep;\n                }\n                result[resultIndex++] = sum;\n            }\n        }\n        return ops.tensor2d(result, [leftDim, rightDim]);\n    };\n    MathBackendCPU.prototype.multiply = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, types.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue * bValue; });\n    };\n    MathBackendCPU.prototype.divide = function (a, b) {\n        var op;\n        var outputDtype;\n        if (a.dtype === 'int32' && b.dtype === 'int32') {\n            outputDtype = 'int32';\n            op = function (a, b) { return Math.floor(a / b); };\n        }\n        else {\n            outputDtype = 'float32';\n            op = function (a, b) { return a / b; };\n        }\n        return this.broadcastedBinaryOp(a, b, outputDtype, op);\n    };\n    MathBackendCPU.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types.upcastType(x.dtype, 'int32');\n        var result = ops.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var sum = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                sum += aVals[offset + j];\n            }\n            vals[i] = sum;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMin = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            var minIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                    minIndex = j;\n                }\n            }\n            vals[i] = minIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMax = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            var maxIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                    maxIndex = j;\n                }\n            }\n            vals[i] = maxIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.equal = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal === bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.notEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal !== bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.less = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal < bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.lessEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal <= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greater = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal > bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greaterEqual = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal >= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.logicalNot = function (x) {\n        var values = x.dataSync();\n        var newValues = new Int32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = values[i] ? 0 : 1;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues }, 'bool');\n    };\n    MathBackendCPU.prototype.logicalAnd = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal && bVal;\n        });\n    };\n    MathBackendCPU.prototype.logicalOr = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal || bVal;\n        });\n    };\n    MathBackendCPU.prototype.where = function (condition, a, b, dtype) {\n        var values = condition.dataSync();\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var result = ops.zeros(a.shape, dtype);\n        var newValues = result.dataSync();\n        var index = 0;\n        var offset = condition.rank === 0 || condition.rank > 1 || a.rank === 1 ?\n            1 :\n            a.shape[1];\n        for (var i = 0; i < values.length; i++) {\n            for (var j = 0; j < offset; j++) {\n                if (values[i] === 1) {\n                    newValues[index++] = aValues[i];\n                }\n                else {\n                    newValues[index++] = bValues[i];\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.topKValues = function (x, k) {\n        return this.topK(x, k).values;\n    };\n    MathBackendCPU.prototype.topKIndices = function (x, k) {\n        return this.topK(x, k).indices;\n    };\n    MathBackendCPU.prototype.topK = function (x, k) {\n        var values = x.dataSync();\n        var valuesAndIndices = [];\n        for (var i = 0; i < values.length; i++) {\n            valuesAndIndices.push({ value: values[i], index: i });\n        }\n        valuesAndIndices.sort(function (a, b) {\n            return b.value - a.value;\n        });\n        var topkValues = util.getTypedArrayFromDType(x.dtype, k);\n        var topkIndices = new Int32Array(k);\n        for (var i = 0; i < k; i++) {\n            topkValues[i] = valuesAndIndices[i].value;\n            topkIndices[i] = valuesAndIndices[i].index;\n        }\n        return {\n            values: ops.tensor1d(topkValues, x.dtype),\n            indices: ops.tensor1d(topkIndices, 'int32')\n        };\n    };\n    MathBackendCPU.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[0];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                }\n            }\n            vals[i] = min;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.minimum = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.min(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.mod = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var rem = aVal % bVal;\n            if ((aVal < 0 && bVal < 0) || (aVal >= 0 && bVal >= 0)) {\n                return rem;\n            }\n            else {\n                return (rem + bVal) % bVal;\n            }\n        });\n    };\n    MathBackendCPU.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = result.dataSync();\n        var aVals = x.dataSync();\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                }\n            }\n            vals[i] = max;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.maximum = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.max(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.squaredDifference = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var diff = aVal - bVal;\n            return diff * diff;\n        });\n    };\n    MathBackendCPU.prototype.ceil = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.ceil(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.floor = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.floor(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sign = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] < 0) {\n                newValues[i] = -1;\n            }\n            else if (values[i] > 0) {\n                newValues[i] = 1;\n            }\n            else {\n                newValues[i] = 0;\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.round = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var base = Math.floor(values[i]);\n            if (values[i] - base < 0.5) {\n                newValues[i] = Math.floor(values[i]);\n            }\n            else if (values[i] - base > 0.5) {\n                newValues[i] = Math.ceil(values[i]);\n            }\n            else {\n                if (base % 2.0 === 0.0) {\n                    newValues[i] = base;\n                }\n                else {\n                    newValues[i] = base + 1.0;\n                }\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.exp = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.exp(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.expm1 = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.expm1(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.log1p = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log1p(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.sqrt = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.sqrt(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.rsqrt = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = 1 / Math.sqrt(value);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.square = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = value * value;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.reciprocal = function (x) {\n        var values = x.dataSync();\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = 1 / values[i];\n        }\n        return tensor_1.Tensor.make(x.shape, { values: newValues });\n    };\n    MathBackendCPU.prototype.relu = function (x) {\n        var res = ops.zeros(x.shape, x.dtype);\n        var resVals = res.dataSync();\n        var inVals = x.dataSync();\n        for (var i = 0; i < inVals.length; ++i) {\n            resVals[i] = Math.max(0, inVals[i]);\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.elu = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = (Math.exp(v) - 1);\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.eluDer = function (dy, y) {\n        var resultValues = new Float32Array(y.size);\n        var values = y.dataSync();\n        var dyValues = dy.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 1) {\n                resultValues[i] = dyValues[i];\n            }\n            else {\n                resultValues[i] = dyValues[i] * (v + 1);\n            }\n        }\n        return tensor_1.Tensor.make(y.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.selu = function (x) {\n        var scaleAlpha = selu_util.SELU_SCALEALPHA;\n        var scale = selu_util.SELU_SCALE;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = scale * v;\n            }\n            else {\n                resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.clip = function (x, min, max) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.min(max, Math.max(min, values[i]));\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.abs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.abs(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.int = function (x) {\n        var resultValues = new Int32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = values[i];\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues }, 'int32');\n    };\n    MathBackendCPU.prototype.sigmoid = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.softplus = function (x) {\n        var epsilon = 1.1920928955078125e-7;\n        var threshold = Math.log(epsilon) + 2.0;\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var tooLarge = values[i] > -threshold;\n            var tooSmall = values[i] < threshold;\n            var expX = Math.exp(values[i]);\n            var result = void 0;\n            if (tooSmall) {\n                result = expX;\n            }\n            else if (tooLarge) {\n                result = values[i];\n            }\n            else {\n                result = Math.log(1.0 + expX);\n            }\n            resultValues[i] = result;\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.sin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sin(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cos(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.tan(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asin = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asin(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acos = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acos(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atan(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atan2 = function (a, b) {\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.atan2(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.sinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sinh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.cosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cosh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.tanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = util.tanh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.asinh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asinh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.acosh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acosh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.atanh = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atanh(values[i]);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.erf = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        var p = erf_util.ERF_P;\n        var a1 = erf_util.ERF_A1;\n        var a2 = erf_util.ERF_A2;\n        var a3 = erf_util.ERF_A3;\n        var a4 = erf_util.ERF_A4;\n        var a5 = erf_util.ERF_A5;\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            var t = 1.0 / (1.0 + p * v);\n            resultValues[i]\n                = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-v * v);\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0; }\n        var resultValues = new Float32Array(x.size);\n        var values = x.dataSync();\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            if (isNaN(value)) {\n                resultValues[i] = NaN;\n            }\n            else {\n                resultValues[i] = value > 0 ? 1 : alpha;\n            }\n        }\n        return tensor_1.Tensor.make(x.shape, { values: resultValues });\n    };\n    MathBackendCPU.prototype.conv2d = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; wR++) {\n                            var xR = xRCorner + wR * dilationHeight;\n                            if (xR < 0 || xR >= convInfo.inHeight) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; wC++) {\n                                var xC = xCCorner + wC * dilationWidth;\n                                if (xC < 0 || xC >= convInfo.inWidth) {\n                                    continue;\n                                }\n                                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        y.set(dotProd, b, yR, yC, d2);\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dx = ops.buffer(convInfo.inShape, 'float32');\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var xR = 0; xR < convInfo.inHeight; ++xR) {\n                    var xRCorner = xR - leftPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(convInfo.outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < convInfo.inWidth; ++xC) {\n                        var xCCorner = xC - topPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(convInfo.outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                    var pixel = dy.get(b, yR, yC, d2);\n                                    var weight = filter.get(filterHeight - 1 - wR, filterWidth - 1 - wC, d1, d2);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        dx.set(dotProd, b, xR, xC, d1);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dW = ops.buffer(convInfo.filterShape, 'float32');\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        var dotProd = 0;\n                        for (var b = 0; b < convInfo.batchSize; ++b) {\n                            for (var yR = yRMin; yR < yRMax; ++yR) {\n                                var xR = wR + yR * strideHeight - topPad;\n                                for (var yC = yCMin; yC < yCMax; ++yC) {\n                                    var xC = wC + yC * strideWidth - leftPad;\n                                    dotProd += x.get(b, xR, xC, d1) * dy.get(b, yR, yC, d2);\n                                }\n                            }\n                        }\n                        dW.set(dotProd, wR, wC, d1, d2);\n                    }\n                }\n            }\n        }\n        return dW.toTensor();\n    };\n    MathBackendCPU.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * convInfo.strideHeight - padLeft;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        for (var q = 0; q < chMul; ++q) {\n                            var dotProd = 0;\n                            for (var wR = 0; wR < filterHeight; ++wR) {\n                                var xR = xRCorner + wR * dilationHeight;\n                                if (xR < 0 || xR >= convInfo.inHeight) {\n                                    continue;\n                                }\n                                for (var wC = 0; wC < filterWidth; ++wC) {\n                                    var xC = xCCorner + wC * dilationWidth;\n                                    if (xC < 0 || xC >= convInfo.inWidth) {\n                                        continue;\n                                    }\n                                    var pixel = x.get(b, xR, xC, d1);\n                                    var weight = filter.get(wR, wC, d1, q);\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                            y.set(dotProd, b, yR, yC, d1 * chMul + q);\n                        }\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.tile = function (x, reps) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[i] * reps[i];\n        }\n        var result = ops.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < result.values.length; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = new Array(x.rank);\n            for (var i_1 = 0; i_1 < originalLoc.length; i_1++) {\n                originalLoc[i_1] = newLoc[i_1] % x.shape[i_1];\n            }\n            var originalIndex = xBuf.locToIndex(originalLoc);\n            result.values[i] = xBuf.values[originalIndex];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.pad = function (x, paddings, constantValue) {\n        var outShape = paddings.map(function (p, i) { return p[0] + x.shape[i] + p[1]; });\n        var start = paddings.map(function (p) { return p[0]; });\n        var xBuffer = x.buffer();\n        var buffer = ops.buffer(outShape, x.dtype);\n        if (constantValue !== 0) {\n            buffer.values.fill(constantValue);\n        }\n        for (var i = 0; i < x.size; i++) {\n            var coords = xBuffer.indexToLoc(i);\n            var outCoords = coords.map(function (c, i) { return c + start[i]; });\n            buffer.set.apply(buffer, [x.get.apply(x, coords)].concat(outCoords));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.transpose = function (x, perm) {\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[perm[i]];\n        }\n        var values = x.dataSync();\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < x.size; ++i) {\n            var loc = xBuf.indexToLoc(i);\n            var newLoc = new Array(loc.length);\n            for (var i_2 = 0; i_2 < newLoc.length; i_2++) {\n                newLoc[i_2] = loc[perm[i_2]];\n            }\n            var newIndex = result.locToIndex(newLoc);\n            result.values[newIndex] = values[i];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.gather = function (x, indices, axis) {\n        var newShape = x.shape.slice();\n        var indicesValues = indices.dataSync();\n        newShape[axis] = indicesValues.length;\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = x.buffer();\n        for (var i = 0; i < result.size; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = newLoc.slice();\n            originalLoc[axis] = indicesValues[newLoc[axis]];\n            var originalIndex = xBuf.locToIndex(originalLoc);\n            result.values[i] = xBuf.values[originalIndex];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.pool = function (x, convInfo, poolType) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var y = ops.buffer(convInfo.outShape, 'float32');\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var minMaxValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n                        var avgValue = 0;\n                        var count = 0;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var pixel = x.get(b, xR, xC, d);\n                                if ((poolType === 'max' && pixel > minMaxValue)) {\n                                    minMaxValue = pixel;\n                                }\n                                else if (poolType === 'avg') {\n                                    avgValue += pixel;\n                                    count++;\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        y.set(poolType === 'avg' ? avgValue / count : minMaxValue, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.maxPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'max');\n    };\n    MathBackendCPU.prototype.maxPoolPositions = function (x, convInfo) {\n        var maxPositions = ops.buffer(convInfo.outShape, 'int32');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, filterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, filterWidth + xCCorner);\n                        var maxValue = Number.NEGATIVE_INFINITY;\n                        var maxPosition = -1;\n                        for (var xR = xRMin; xR < xRMax; ++xR) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; ++xC) {\n                                var wC = xC - xCCorner;\n                                var pixel = x.get(b, xR, xC, d);\n                                if (pixel > maxValue) {\n                                    maxValue = pixel;\n                                    maxPosition = wR * filterWidth + wC;\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return maxPositions.toTensor();\n    };\n    MathBackendCPU.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        var maxPositions = this.maxPoolPositions(x, convInfo);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var maxPos = filterHeight * filterWidth - 1 -\n                                    maxPositions.get(b, dyR, dyC, d);\n                                var curPos = wR * filterWidth + wC;\n                                var mask = maxPos === curPos ? 1 : 0;\n                                if (mask === 0) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel * mask;\n                            }\n                        }\n                        dx.set(dotProd, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < filterHeight; ++wR) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < filterWidth; ++wC) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var pixel = dy.get(b, dyR, dyC, d);\n                                dotProd += pixel;\n                            }\n                        }\n                        dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendCPU.prototype.reshape = function (x, shape) {\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendCPU.prototype.avgPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'avg').toFloat();\n    };\n    MathBackendCPU.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var output = ops.buffer([batch, newHeight, newWidth, numChannels], x.dtype);\n        var effectiveInputSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutputSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        for (var b = 0; b < batch; b++) {\n            for (var r = 0; r < newHeight; r++) {\n                for (var c = 0; c < newWidth; c++) {\n                    for (var d = 0; d < numChannels; d++) {\n                        var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                        var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                        var sourceRowFloor = Math.floor(sourceFracRow);\n                        var sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n                        var sourceColFloor = Math.floor(sourceFracCol);\n                        var sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n                        var topLeft = x.get(b, sourceRowFloor, sourceColFloor, d);\n                        var bottomLeft = x.get(b, sourceRowCeil, sourceColFloor, d);\n                        var topRight = x.get(b, sourceRowFloor, sourceColCeil, d);\n                        var bottomRight = x.get(b, sourceRowCeil, sourceColCeil, d);\n                        var rowFrac = sourceFracRow - sourceRowFloor;\n                        var colFrac = sourceFracCol - sourceColFloor;\n                        var top_1 = topLeft + (topRight - topLeft) * colFrac;\n                        var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                        var newValue = top_1 + (bottom - top_1) * rowFrac;\n                        output.set(newValue, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var output = ops.buffer([batch, newHeight, newWidth, numChannels], x.dtype);\n        var effectiveInputSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutputSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        for (var b = 0; b < batch; b++) {\n            for (var r = 0; r < newHeight; r++) {\n                for (var c = 0; c < newWidth; c++) {\n                    for (var d = 0; d < numChannels; d++) {\n                        var sourceFracRow = (effectiveInputSize[0]) * r / (effectiveOutputSize[0]);\n                        var sourceFracCol = (effectiveInputSize[1]) * c / (effectiveOutputSize[1]);\n                        var sourceNearestRow = Math.min(oldHeight - 1, Math.round(sourceFracRow));\n                        var sourceNearestCol = Math.min(oldWidth - 1, Math.round(sourceFracCol));\n                        var newValue = x.get(b, sourceNearestRow, sourceNearestCol, d);\n                        output.set(newValue, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var xValues = x.dataSync();\n        var meanValues = mean.dataSync();\n        var varianceValues = variance.dataSync();\n        var scaleValues = scale ? scale.dataSync() : new Float32Array([1]);\n        var offsetValues = offset ? offset.dataSync() : new Float32Array([0]);\n        var outValues = new Float32Array(xValues.length);\n        for (var i = 0; i < xValues.length; i++) {\n            outValues[i] = offsetValues[i % offsetValues.length] +\n                (xValues[i] - meanValues[i % meanValues.length]) *\n                    scaleValues[i % scaleValues.length] /\n                    Math.sqrt(varianceValues[i % varianceValues.length] + varianceEpsilon);\n        }\n        return ops_1.tensor4d(outValues, x.shape);\n    };\n    MathBackendCPU.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        var output = ops.buffer(x.shape, 'float32');\n        var rad = radius;\n        var maxD = output.shape[3] - 1;\n        function sumAcrossChannels(b, r, c, d) {\n            var sum = 0.0;\n            for (var j = Math.max(0, d - rad); j <= Math.min(d + rad, maxD); j++) {\n                var z = x.get(b, r, c, j);\n                sum += z * z;\n            }\n            return sum;\n        }\n        for (var b = 0; b < output.shape[0]; b++) {\n            for (var r = 0; r <= output.shape[1]; r++) {\n                for (var c = 0; c < output.shape[2]; c++) {\n                    for (var d = 0; d < output.shape[3]; d++) {\n                        var sum = sumAcrossChannels(b, r, c, d);\n                        var val = x.get(b, r, c, d) * Math.pow(bias + alpha * sum, -beta);\n                        output.set(val, b, r, c, d);\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        var probabilities = normalized ? logits : ops.softmax(logits);\n        var batchSize = probabilities.shape[0];\n        var numEvents = probabilities.shape[1];\n        var res = ops.zeros([batchSize, numSamples], 'int32');\n        var resVals = res.dataSync();\n        var probVals = probabilities.dataSync();\n        for (var b = 0; b < batchSize; ++b) {\n            var offset = b * numEvents;\n            var cdf = new Float32Array(numEvents - 1);\n            cdf[0] = probVals[offset];\n            for (var event_1 = 1; event_1 < cdf.length; ++event_1) {\n                cdf[event_1] = cdf[event_1 - 1] + probVals[offset + event_1];\n            }\n            var random = seedrandom.alea(seed.toString());\n            var outOffset = b * numSamples;\n            for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n                var r = random();\n                resVals[outOffset + sampleId] = cdf.length;\n                for (var event_2 = 0; event_2 < cdf.length; event_2++) {\n                    if (r < cdf[event_2]) {\n                        resVals[outOffset + sampleId] = event_2;\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var res = new Float32Array(indices.size * depth);\n        res.fill(offValue);\n        for (var event_3 = 0; event_3 < indices.size; ++event_3) {\n            res[event_3 * depth + indices.get(event_3)] = onValue;\n        }\n        return ops.tensor2d(res, [indices.size, depth]);\n    };\n    MathBackendCPU.prototype.broadcastedBinaryOp = function (a, b, dtype, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var result = ops.buffer(newShape, dtype);\n        var aValues = a.dataSync();\n        var bValues = b.dataSync();\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var aBuf = a.buffer();\n        var bBuf = b.buffer();\n        var _loop_2 = function (i) {\n            var loc = result.indexToLoc(i);\n            var aLoc = loc.slice(-a.rank);\n            aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n            var aIndex = aBuf.locToIndex(aLoc);\n            var bLoc = loc.slice(-b.rank);\n            bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n            var bIndex = bBuf.locToIndex(bLoc);\n            result.values[i] = op(aValues[aIndex], bValues[bIndex]);\n        };\n        for (var i = 0; i < result.values.length; ++i) {\n            _loop_2(i);\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.dispose = function () { };\n    return MathBackendCPU;\n}());\nexports.MathBackendCPU = MathBackendCPU;\nenvironment_1.ENV.registerBackend('cpu', function () { return new MathBackendCPU(); }, 1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/backend_cpu.js\n// module id = 75\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar axis_util = require(\"../ops/axis_util\");\nvar ops = require(\"../ops/ops\");\nvar reduce_util = require(\"../ops/reduce_util\");\nvar tensor_1 = require(\"../tensor\");\nvar types = require(\"../types\");\nvar util = require(\"../util\");\nvar backend_util = require(\"./backend_util\");\nvar argminmax_gpu_1 = require(\"./webgl/argminmax_gpu\");\nvar avg_pool_backprop_gpu_1 = require(\"./webgl/avg_pool_backprop_gpu\");\nvar batchnorm_gpu_1 = require(\"./webgl/batchnorm_gpu\");\nvar binaryop_gpu = require(\"./webgl/binaryop_gpu\");\nvar binaryop_gpu_1 = require(\"./webgl/binaryop_gpu\");\nvar clip_gpu_1 = require(\"./webgl/clip_gpu\");\nvar concat_gpu_1 = require(\"./webgl/concat_gpu\");\nvar conv_backprop_gpu_1 = require(\"./webgl/conv_backprop_gpu\");\nvar conv_gpu_1 = require(\"./webgl/conv_gpu\");\nvar conv_gpu_depthwise_1 = require(\"./webgl/conv_gpu_depthwise\");\nvar from_pixels_gpu_1 = require(\"./webgl/from_pixels_gpu\");\nvar gather_gpu_1 = require(\"./webgl/gather_gpu\");\nvar gpgpu_context_1 = require(\"./webgl/gpgpu_context\");\nvar gpgpu_math = require(\"./webgl/gpgpu_math\");\nvar logical_gpu_1 = require(\"./webgl/logical_gpu\");\nvar lrn_gpu_1 = require(\"./webgl/lrn_gpu\");\nvar max_pool_backprop_gpu_1 = require(\"./webgl/max_pool_backprop_gpu\");\nvar mulmat_gpu_1 = require(\"./webgl/mulmat_gpu\");\nvar multinomial_gpu_1 = require(\"./webgl/multinomial_gpu\");\nvar onehot_gpu_1 = require(\"./webgl/onehot_gpu\");\nvar pad_gpu_1 = require(\"./webgl/pad_gpu\");\nvar pool_gpu_1 = require(\"./webgl/pool_gpu\");\nvar reduce_gpu_1 = require(\"./webgl/reduce_gpu\");\nvar resize_bilinear_gpu_1 = require(\"./webgl/resize_bilinear_gpu\");\nvar resize_nearest_neighbor_gpu_1 = require(\"./webgl/resize_nearest_neighbor_gpu\");\nvar reverse_gpu_1 = require(\"./webgl/reverse_gpu\");\nvar slice_gpu_1 = require(\"./webgl/slice_gpu\");\nvar tex_util_1 = require(\"./webgl/tex_util\");\nvar texture_manager_1 = require(\"./webgl/texture_manager\");\nvar tile_gpu_1 = require(\"./webgl/tile_gpu\");\nvar transpose_gpu_1 = require(\"./webgl/transpose_gpu\");\nvar unary_op = require(\"./webgl/unaryop_gpu\");\nvar unaryop_gpu_1 = require(\"./webgl/unaryop_gpu\");\nvar webgl_util = require(\"./webgl/webgl_util\");\nvar MathBackendWebGL = (function () {\n    function MathBackendWebGL(gpgpu, delayedStorage) {\n        if (delayedStorage === void 0) { delayedStorage = true; }\n        this.gpgpu = gpgpu;\n        this.delayedStorage = delayedStorage;\n        this.texData = new WeakMap();\n        this.uploadWaitMs = 0;\n        this.downloadWaitMs = 0;\n        this.binaryCache = {};\n        this.disposed = false;\n        if (environment_1.ENV.get('WEBGL_VERSION') < 1) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            this.gpgpu = new gpgpu_context_1.GPGPUContext();\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpuCreatedLocally = false;\n        }\n        if (typeof document !== 'undefined') {\n            this.canvas = document.createElement('canvas');\n        }\n        this.textureManager = new texture_manager_1.TextureManager(this.gpgpu);\n    }\n    MathBackendWebGL.prototype.register = function (dataId, shape, dtype) {\n        if (this.texData.has(dataId)) {\n            throw new Error('Data buffer is already registered');\n        }\n        this.texData.set(dataId, {\n            shape: shape,\n            dtype: dtype,\n            values: null,\n            texture: null,\n            texShape: null,\n            texType: tex_util_1.TextureType.FLOAT\n        });\n    };\n    MathBackendWebGL.prototype.fromPixels = function (pixels, numChannels) {\n        if (pixels == null) {\n            throw new Error('MathBackendWebGL.writePixels(): pixels can not be null');\n        }\n        var texShape = [pixels.height, pixels.width];\n        var outShape = [pixels.height, pixels.width, numChannels];\n        if (pixels instanceof HTMLVideoElement) {\n            if (this.canvas == null) {\n                throw new Error('Can\\'t read pixels from HTMLImageElement outside ' +\n                    'the browser.');\n            }\n            this.canvas.width = pixels.width;\n            this.canvas.height = pixels.height;\n            this.canvas.getContext('2d').drawImage(pixels, 0, 0, pixels.width, pixels.height);\n            pixels = this.canvas;\n        }\n        var tempPixelArray = tensor_1.Tensor.make(texShape, {}, 'int32');\n        this.texData.get(tempPixelArray.dataId).texType = tex_util_1.TextureType.UNSIGNED_BYTE;\n        this.gpgpu.uploadPixelDataToTexture(this.getTexture(tempPixelArray.dataId), pixels);\n        var program = new from_pixels_gpu_1.FromPixelsProgram(outShape);\n        var res = this.compileAndRun(program, [tempPixelArray]);\n        tempPixelArray.dispose();\n        return res;\n    };\n    MathBackendWebGL.prototype.write = function (dataId, values) {\n        if (values == null) {\n            throw new Error('MathBackendWebGL.write(): values can not be null');\n        }\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, texShape = texData.texShape, texType = texData.texType;\n        if (texture != null) {\n            this.textureManager.releaseTexture(texture, texShape, texType);\n            texData.texture = null;\n            texData.texShape = null;\n        }\n        texData.values = values;\n        if (!this.delayedStorage) {\n            this.uploadToGPU(dataId);\n        }\n    };\n    MathBackendWebGL.prototype.readSync = function (dataId) {\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, values = texData.values, texShape = texData.texShape;\n        if (values != null) {\n            this.cacheOnCPU(dataId);\n            return values;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = performance.now();\n        }\n        var float32Values = this.gpgpu.downloadMatrixFromTexture(texture, texShape[0], texShape[1]);\n        if (shouldTimeProgram) {\n            this.downloadWaitMs += performance.now() - start;\n        }\n        this.cacheOnCPU(dataId, float32Values);\n        return texData.values;\n    };\n    MathBackendWebGL.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var texData, texture, values, texShape, float32Values;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfNoData(dataId);\n                        texData = this.texData.get(dataId);\n                        texture = texData.texture, values = texData.values, texShape = texData.texShape;\n                        if (values != null) {\n                            this.cacheOnCPU(dataId);\n                            return [2, values];\n                        }\n                        if (!environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) return [3, 2];\n                        return [4, this.gpgpu.downloadMatrixFromTextureAsync(texture, texShape[0], texShape[1])];\n                    case 1:\n                        float32Values = _a.sent();\n                        this.cacheOnCPU(dataId, float32Values);\n                        return [2, texData.values];\n                    case 2:\n                        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 0) {\n                            return [2, this.readSync(dataId)];\n                        }\n                        return [4, this.gpgpu.runQuery(function () { })];\n                    case 3:\n                        _a.sent();\n                        return [2, this.readSync(dataId)];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldActiveTimers, newActiveTimers, outerMostTime, flattenedActiveTimers, kernelMs, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        oldActiveTimers = this.activeTimers;\n                        newActiveTimers = [];\n                        outerMostTime = false;\n                        if (this.programTimersStack == null) {\n                            this.programTimersStack = newActiveTimers;\n                            outerMostTime = true;\n                        }\n                        else {\n                            this.activeTimers.push(newActiveTimers);\n                        }\n                        this.activeTimers = newActiveTimers;\n                        f();\n                        flattenedActiveTimers = util.flatten(this.activeTimers);\n                        this.activeTimers = oldActiveTimers;\n                        if (outerMostTime) {\n                            this.programTimersStack = null;\n                        }\n                        return [4, Promise.all(flattenedActiveTimers).then(function (results) {\n                                var sum = 0;\n                                results.forEach(function (result) { return sum += result; });\n                                return sum;\n                            })];\n                    case 1:\n                        kernelMs = _a.sent();\n                        res = {\n                            uploadWaitMs: this.uploadWaitMs,\n                            downloadWaitMs: this.downloadWaitMs,\n                            kernelMs: kernelMs,\n                            wallMs: null\n                        };\n                        this.uploadWaitMs = 0;\n                        this.downloadWaitMs = 0;\n                        return [2, res];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.memory = function () {\n        return { unreliable: false };\n    };\n    MathBackendWebGL.prototype.startTimer = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            return this.gpgpu.beginQuery();\n        }\n        return { startMs: performance.now(), endMs: null };\n    };\n    MathBackendWebGL.prototype.endTimer = function (query) {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            this.gpgpu.endQuery();\n            return query;\n        }\n        query.endMs = performance.now();\n        return query;\n    };\n    MathBackendWebGL.prototype.getQueryTime = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var timerQuery;\n            return __generator(this, function (_a) {\n                if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n                    return [2, this.gpgpu.pollQueryTime(query)];\n                }\n                timerQuery = query;\n                return [2, timerQuery.endMs - timerQuery.startMs];\n            });\n        });\n    };\n    MathBackendWebGL.prototype.disposeData = function (dataId) {\n        if (this.texData.has(dataId)) {\n            var _a = this.texData.get(dataId), texture = _a.texture, texShape = _a.texShape, texType = _a.texType;\n            if (texture != null) {\n                this.textureManager.releaseTexture(texture, texShape, texType);\n            }\n            this.texData.delete(dataId);\n        }\n    };\n    MathBackendWebGL.prototype.getTexture = function (dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId).texture;\n    };\n    MathBackendWebGL.prototype.getTextureData = function (dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId);\n    };\n    MathBackendWebGL.prototype.getGPGPUContext = function () {\n        return this.gpgpu;\n    };\n    MathBackendWebGL.prototype.slice = function (x, begin, size) {\n        var program = new slice_gpu_1.SliceProgram(size);\n        var customSetup = program.getCustomSetupFunc(begin);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.reverse = function (x, axis) {\n        var program = new reverse_gpu_1.ReverseProgram(x.shape, axis);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.concat = function (a, b) {\n        var program = new concat_gpu_1.ConcatProgram(a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.neg = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.NEG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.matMul = function (a, b, transposeA, transposeB) {\n        var program = new mulmat_gpu_1.MatMulProgram(a.shape, b.shape, transposeA, transposeB);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.multiply = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        var program = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        var program = new lrn_gpu_1.LRNProgram(x.shape, radius, bias, alpha, beta);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tile = function (x, reps) {\n        var program = new tile_gpu_1.TileProgram(x.shape, reps);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.pad = function (x, paddings, constantValue) {\n        var program = new pad_gpu_1.PadProgram(x.shape, paddings, constantValue);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.transpose = function (x, perm) {\n        var program = new transpose_gpu_1.TransposeProgram(x.shape, perm);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.gather = function (x, indices, axis) {\n        var program = new gather_gpu_1.GatherProgram(x.shape, indices.size, axis);\n        return this.compileAndRun(program, [x, indices]);\n    };\n    MathBackendWebGL.prototype.reduce = function (x, reduceType, dtype) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new reduce_gpu_1.ReduceProgram(reduceInfo, reduceType);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray([rows, cols], dtype);\n        this.compileAndRun(program, [x], output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.reduce(output, reduceType, dtype);\n    };\n    MathBackendWebGL.prototype.argReduce = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        if (bestIndicesA != null) {\n            batchSize = bestIndicesA.shape[0];\n            inSize = bestIndicesA.shape[1];\n        }\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new argminmax_gpu_1.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n        var _a = program.outputShape, rows = _a[0], cols = _a[1];\n        var output = this.makeOutputArray([rows, cols], 'int32');\n        var inputs = [x];\n        if (bestIndicesA != null) {\n            inputs.push(bestIndicesA);\n        }\n        this.compileAndRun(program, inputs, output);\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.argReduce(x, reduceType, output);\n    };\n    MathBackendWebGL.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types.sumOutType(x.dtype);\n        return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMin = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'min').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.argMax = function (x, axis) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.argReduce(a2D, 'max').reshape(outShape);\n    };\n    MathBackendWebGL.prototype.equal = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.notEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.NOT_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.less = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.lessEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.greater = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.greaterEqual = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER_EQUAL, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.logicalNot = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOGICAL_NOT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.logicalAnd = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_AND, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.logicalOr = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_OR, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, 'bool');\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.where = function (condition, a, b, dtype) {\n        var program = new logical_gpu_1.WhereProgram(condition.rank, a.shape, a.rank);\n        var output = this.makeOutputArray(program.outputShape, dtype);\n        return this.compileAndRun(program, [condition, a, b], output);\n    };\n    MathBackendWebGL.prototype.topKValues = function (x, k) {\n        throw new Error('topKValues GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.topKIndices = function (x, k) {\n        throw new Error('topKIndices GPU not yet implemented!');\n    };\n    MathBackendWebGL.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.minimum = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MIN, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.mod = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MOD, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.max = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.maximum = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MAX, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.squaredDifference = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.divide = function (a, b) {\n        var op;\n        var outputDtype;\n        if (a.dtype === 'int32' && b.dtype === 'int32') {\n            op = binaryop_gpu.INT_DIV;\n            outputDtype = 'int32';\n        }\n        else {\n            op = binaryop_gpu.DIV;\n            outputDtype = 'float32';\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(op, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, outputDtype);\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.add = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.subtract = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.pow = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n        var output = this.makeOutputArray(program.outputShape, types.upcastType(a.dtype, b.dtype));\n        return this.compileAndRun(program, [a, b], output);\n    };\n    MathBackendWebGL.prototype.ceil = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.CEIL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.floor = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.FLOOR);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sign = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.round = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ROUND);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.exp = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXP);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.expm1 = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXPM1);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log1p = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG1P);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.rsqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RSQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.square = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQUARE);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reciprocal = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RECIPROCAL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.elu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.eluDer = function (dy, y) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ELU_DER, dy.shape, y.shape);\n        return this.compileAndRun(program, [dy, y]);\n    };\n    MathBackendWebGL.prototype.selu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.int = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TO_INT);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.clip = function (x, min, max) {\n        var program = new clip_gpu_1.ClipProgram(x.shape, min, max);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.abs = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sigmoid = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGMOID);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.softplus = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SOFTPLUS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan2 = function (a, b) {\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ATAN2, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.sinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.erf = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ERF);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.step = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.conv2d = function (x, filter, convInfo) {\n        var program = new conv_gpu_1.Conv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.maxPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'max', false);\n        var output = this.makeOutputArray(program.outputShape, x.dtype);\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.avgPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'avg', false);\n        var output = this.makeOutputArray(program.outputShape, 'float32');\n        return this.compileAndRun(program, [x], output);\n    };\n    MathBackendWebGL.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        var getPositions = true;\n        var maxPoolPositionsProgram = new pool_gpu_1.Pool2DProgram(convInfo, 'max', getPositions);\n        var maxPoolPositions = this.compileAndRun(maxPoolPositionsProgram, [x]);\n        var maxPoolBackPropProgram = new max_pool_backprop_gpu_1.MaxPool2DBackpropProgram(convInfo);\n        var output = this.makeOutputArray(maxPoolBackPropProgram.outputShape, x.dtype);\n        var result = this.compileAndRun(maxPoolBackPropProgram, [dy, maxPoolPositions], output);\n        maxPoolPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        var avgPoolBackpropProgram = new avg_pool_backprop_gpu_1.AvgPool2DBackpropProgram(convInfo);\n        var output = this.makeOutputArray(avgPoolBackpropProgram.outputShape, x.dtype);\n        return this.compileAndRun(avgPoolBackpropProgram, [dy], output);\n    };\n    MathBackendWebGL.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendWebGL.prototype.reshape = function (x, shape) {\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendWebGL.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        var program = new resize_bilinear_gpu_1.ResizeBilinearProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        var program = new resize_nearest_neighbor_gpu_1.ResizeNearestNeighborProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        var probs = normalized ? logits : ops.softmax(logits);\n        var batchSize = probs.shape[0];\n        var numOutcomes = probs.shape[1];\n        var program = new multinomial_gpu_1.MultinomialProgram(batchSize, numOutcomes, numSamples);\n        var output = this.makeOutputArray(program.outputShape, 'int32');\n        var customSetup = program.getCustomSetupFunc(seed);\n        return this.compileAndRun(program, [probs], output, customSetup);\n    };\n    MathBackendWebGL.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var program = new onehot_gpu_1.OneHotProgram(indices.size, depth, onValue, offValue);\n        return this.compileAndRun(program, [indices]);\n    };\n    MathBackendWebGL.prototype.makeOutputArray = function (shape, dtype) {\n        return tensor_1.Tensor.make(shape, {}, dtype);\n    };\n    MathBackendWebGL.prototype.compileAndRun = function (program, inputs, output, customSetup) {\n        var _this = this;\n        if (output == null) {\n            output = this.makeOutputArray(program.outputShape, inputs[0].dtype);\n        }\n        var inputsData = inputs.map(function (input) {\n            _this.uploadToGPU(input.dataId);\n            return { tensor: input, texData: _this.texData.get(input.dataId) };\n        });\n        this.uploadToGPU(output.dataId);\n        var outputData = {\n            tensor: output,\n            texData: this.texData.get(output.dataId)\n        };\n        var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        var binary = this.getAndSaveBinary(key, function () {\n            return gpgpu_math.compileProgram(_this.gpgpu, program, inputsData, outputData);\n        });\n        var shouldTimeProgram = this.activeTimers != null;\n        var query;\n        if (shouldTimeProgram) {\n            query = this.startTimer();\n        }\n        gpgpu_math.runProgram(binary, inputsData, outputData, customSetup);\n        if (shouldTimeProgram) {\n            query = this.endTimer(query);\n            this.activeTimers.push(this.getQueryTime(query));\n        }\n        return output;\n    };\n    MathBackendWebGL.prototype.getAndSaveBinary = function (key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    };\n    MathBackendWebGL.prototype.getTextureManager = function () {\n        return this.textureManager;\n    };\n    MathBackendWebGL.prototype.dispose = function () {\n        if (this.disposed) {\n            return;\n        }\n        for (var key in this.binaryCache) {\n            this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n        }\n        this.textureManager.dispose();\n        this.canvas.remove();\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.dispose();\n        }\n        this.disposed = true;\n    };\n    MathBackendWebGL.prototype.throwIfNoData = function (dataId) {\n        if (!this.texData.has(dataId)) {\n            throw new Error(\"WebGL backend: No data found for this tensor. \" +\n                \"Did you change your backend in the middle of the program? \" +\n                \"New backends can't use Tensors created with previous backends\");\n        }\n    };\n    MathBackendWebGL.prototype.uploadToGPU = function (dataId) {\n        this.throwIfNoData(dataId);\n        var texData = this.texData.get(dataId);\n        var shape = texData.shape, values = texData.values, texture = texData.texture, dtype = texData.dtype, texType = texData.texType;\n        if (texture != null) {\n            return;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = performance.now();\n        }\n        var texShape = webgl_util.getTextureShapeFromLogicalShape(this.gpgpu.gl, shape);\n        texData.texShape = texShape;\n        var newTexture = this.textureManager.acquireTexture(texShape, texType);\n        texData.texture = newTexture;\n        if (values != null) {\n            this.gpgpu.uploadMatrixToTexture(newTexture, texShape[0], texShape[1], typedArrayToFloat32(values, dtype));\n            texData.values = null;\n            if (shouldTimeProgram) {\n                this.uploadWaitMs += performance.now() - start;\n            }\n        }\n    };\n    MathBackendWebGL.prototype.cacheOnCPU = function (dataId, float32Values) {\n        var dontKeepCopyOnGPU = this.delayedStorage;\n        var texData = this.texData.get(dataId);\n        var texture = texData.texture, texShape = texData.texShape, dtype = texData.dtype, texType = texData.texType;\n        if (dontKeepCopyOnGPU && texture != null) {\n            this.textureManager.releaseTexture(texture, texShape, texType);\n            texData.texture = null;\n            texData.texShape = null;\n        }\n        if (float32Values != null) {\n            texData.values = float32ToTypedArray(float32Values, dtype);\n        }\n    };\n    return MathBackendWebGL;\n}());\nexports.MathBackendWebGL = MathBackendWebGL;\nenvironment_1.ENV.registerBackend('webgl', function () { return new MathBackendWebGL(); }, 2);\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        var result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (var i = 0; i < result.length; ++i) {\n            result[i] = Math.round(a[i]);\n        }\n        return result;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\nfunction typedArrayToFloat32(a, dtype) {\n    return (a instanceof Float32Array) ? a : new Float32Array(a);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/backend_webgl.js\n// module id = 76\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArgMinMaxProgram = (function () {\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        var compOp = (op === 'max') ? '>' : '<';\n        var indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = 0;\\n        float bestValue = getA(batch, inOffset);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n    }\n    return ArgMinMaxProgram;\n}());\nexports.ArgMinMaxProgram = ArgMinMaxProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/argminmax_gpu.js\n// module id = 77\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AvgPool2DBackpropProgram = (function () {\n    function AvgPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float avgMultiplier = float(\" + avgMultiplier + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return AvgPool2DBackpropProgram;\n}());\nexports.AvgPool2DBackpropProgram = AvgPool2DBackpropProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/avg_pool_backprop_gpu.js\n// module id = 78\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar BatchNormProgram = (function () {\n    function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.supportsBroadcasting = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + offsetSnippet + \";\\n        float scale = \" + scaleSnippet + \";\\n        float inv = scale * inversesqrt(variance + float(\" + varianceEpsilon + \"));\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n    }\n    return BatchNormProgram;\n}());\nexports.BatchNormProgram = BatchNormProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/batchnorm_gpu.js\n// module id = 79\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/clip_gpu.js\n// module id = 80\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = require(\"../../ops/concat_util\");\nvar ConcatProgram = (function () {\n    function ConcatProgram(aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = [];\n        this.outputShape =\n            concat_util.computeOutShape(aShape, bShape, 1);\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        float value = 0.0;\\n        if (yC < \" + aShape[1] + \") {\\n          value = getA(yR, yC);\\n        } else {\\n          yC -= \" + aShape[1] + \";\\n          value = getB(yR, yC);\\n        }\\n\\n        setOutput(value);\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}());\nexports.ConcatProgram = ConcatProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/concat_gpu.js\n// module id = 81\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DDerFilterProgram = (function () {\n    function Conv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerFilterProgram;\n}());\nexports.Conv2DDerFilterProgram = Conv2DDerFilterProgram;\nvar Conv2DDerInputProgram = (function () {\n    function Conv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerInputProgram;\n}());\nexports.Conv2DDerInputProgram = Conv2DDerInputProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/conv_backprop_gpu.js\n// module id = 82\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DProgram = (function () {\n    function Conv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n              vec4 xValues = vec4(\\n                getX(batch, xR, xC, d1),\\n                getX(batch, xR, xC, d1 + 1),\\n                getX(batch, xR, xC, d1 + 2),\\n                getX(batch, xR, xC, d1 + 3)\\n              );\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              dotProd += dot(xValues, wValues);\\n            }\\n\\n            if (\" + (inputDepthVec4Remainder === 1) + \") {\\n              dotProd +=\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n            } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n              vec2 xValues = vec2(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n              );\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n              vec3 xValues = vec3(\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n              );\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n              );\\n              dotProd += dot(xValues, wValues);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DProgram;\n}());\nexports.Conv2DProgram = Conv2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/conv_gpu.js\n// module id = 83\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DProgram = (function () {\n    function DepthwiseConv2DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + channelMul + \";\\n        int q = d2 - d1 * \" + channelMul + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + xNumRows + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + xNumCols + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DProgram;\n}());\nexports.DepthwiseConv2DProgram = DepthwiseConv2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/conv_gpu_depthwise.js\n// module id = 84\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromPixelsProgram = (function () {\n    function FromPixelsProgram(outputShape) {\n        this.variableNames = ['A'];\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = texture2D(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n    }\n    return FromPixelsProgram;\n}());\nexports.FromPixelsProgram = FromPixelsProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/from_pixels_gpu.js\n// module id = 85\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar GatherProgram = (function () {\n    function GatherProgram(aShape, indicesLength, axis) {\n        this.variableNames = ['A', 'indices'];\n        var outputShape = aShape.slice();\n        outputShape[axis] = indicesLength;\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape, axis);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return GatherProgram;\n}());\nexports.GatherProgram = GatherProgram;\nfunction getSourceCoords(aShape, axis) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Gather for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"int(getIndices(resRC))\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        if (i === axis) {\n            sourceCoords.push(\"int(getIndices(\" + currentCoords[i] + \"))\");\n        }\n        else {\n            sourceCoords.push(\"\" + currentCoords[i]);\n        }\n    }\n    return sourceCoords.join();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/gather_gpu.js\n// module id = 86\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar gpgpu_util = require(\"./gpgpu_util\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nvar GPGPUContext = (function () {\n    function GPGPUContext(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.autoDebugValidate = false;\n        this.vertexAttrsAreBound = false;\n        if (gl != null) {\n            this.gl = gl;\n        }\n        else {\n            this.gl = gpgpu_util.createWebGLContext();\n        }\n        if (environment_1.ENV.get('WEBGL_VERSION') === 1) {\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'OES_texture_float');\n            this.colorBufferFloatExtension =\n                this.gl.getExtension('WEBGL_color_buffer_float');\n        }\n        else {\n            this.colorBufferFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, 'EXT_color_buffer_float');\n        }\n        this.loseContextExtension =\n            webgl_util.getExtensionOrThrow(this.gl, 'WEBGL_lose_context');\n        if (environment_1.ENV.get('WEBGL_GET_BUFFER_SUB_DATA_ASYNC_EXTENSION_ENABLED')) {\n            this.getBufferSubDataAsyncExtension =\n                this.gl.getExtension('WEBGL_get_buffer_sub_data_async');\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl);\n    }\n    GPGPUContext.prototype.dispose = function () {\n        var _this = this;\n        if (this.disposed) {\n            return;\n        }\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        var gl = this.gl;\n        webgl_util.callAndCheck(gl, function () { return gl.finish(); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteFramebuffer(_this.framebuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.vertexBuffer); });\n        webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, function () { return gl.deleteBuffer(_this.indexBuffer); });\n        this.loseContextExtension.loseContext();\n        this.disposed = true;\n    };\n    GPGPUContext.prototype.enableAutomaticDebugValidation = function (enabled) {\n        this.autoDebugValidate = enabled;\n        webgl_util.enableDebugWebGLErrorChecking(enabled);\n    };\n    GPGPUContext.prototype.createMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.uploadPixelDataToTexture = function (texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    };\n    GPGPUContext.prototype.createPackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns);\n    };\n    GPGPUContext.prototype.deleteMatrixTexture = function (texture) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteTexture(texture); });\n    };\n    GPGPUContext.prototype.uploadMatrixToTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        var numChannels = 1;\n        return gpgpu_util.uploadMatrixToTexture(this.gl, texture, rows, columns, matrix, numChannels);\n    };\n    GPGPUContext.prototype.uploadMatrixToPackedTexture = function (texture, rows, columns, matrix) {\n        this.throwIfDisposed();\n        return gpgpu_util.uploadMatrixToPackedTexture(this.gl, texture, rows, columns, matrix);\n    };\n    GPGPUContext.prototype.downloadMatrixFromTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () {\n            return gpgpu_util.downloadMatrixFromOutputTexture(_this.gl, rows, columns);\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromTextureAsync = function (texture, rows, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.getBufferSubDataAsyncExtension == null) {\n                    throw new Error(\"Cannot download matrix from output texture asynchronously, \" +\n                        \"WEBGL_get_buffer_sub_data_async is not enabled.\");\n                }\n                return [2, this.downloadMatrixDriverAsync(texture, function () { return gpgpu_util.downloadMatrixFromOutputTextureAsync(_this.gl, _this.getBufferSubDataAsyncExtension, rows, columns); })];\n            });\n        });\n    };\n    GPGPUContext.prototype.downloadMatrixFromRGBAColorTexture = function (texture, rows, columns, channels) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromRGBAColorTexture(_this.gl, rows, columns, channels); });\n    };\n    GPGPUContext.prototype.downloadMatrixFromPackedTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this.gl, rows, columns); });\n    };\n    GPGPUContext.prototype.createProgram = function (fragmentShaderSource) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        var fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n        var vertexShader = gpgpu_util.createVertexShader(gl);\n        var program = webgl_util.createProgram(gl);\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, vertexShader); });\n        webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, fragmentShader); });\n        webgl_util.linkProgram(gl, program);\n        if (this.autoDebugValidate) {\n            webgl_util.validateProgram(gl, program);\n        }\n        if (!this.vertexAttrsAreBound) {\n            this.setProgram(program);\n            this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer);\n        }\n        return program;\n    };\n    GPGPUContext.prototype.deleteProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, function () { return _this.gl.deleteProgram(program); });\n        }\n    };\n    GPGPUContext.prototype.setProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.autoDebugValidate) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.useProgram(program); });\n    };\n    GPGPUContext.prototype.getUniformLocation = function (program, uniformName, shouldThrow) {\n        if (shouldThrow === void 0) { shouldThrow = true; }\n        this.throwIfDisposed();\n        if (shouldThrow) {\n            return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n        }\n        else {\n            return webgl_util.getProgramUniformLocation(this.gl, program, uniformName);\n        }\n    };\n    GPGPUContext.prototype.getAttributeLocation = function (program, attribute) {\n        var _this = this;\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, function () { return _this.gl.getAttribLocation(program, attribute); });\n    };\n    GPGPUContext.prototype.getUniformLocationNoThrow = function (program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    };\n    GPGPUContext.prototype.setInputMatrixTexture = function (inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, this.program, inputMatrixTexture, uniformLocation, textureUnit);\n    };\n    GPGPUContext.prototype.setOutputMatrixTexture = function (outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixTexture = function (outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    };\n    GPGPUContext.prototype.debugValidate = function () {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    };\n    GPGPUContext.prototype.executeProgram = function () {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        var gl = this.gl;\n        if (this.autoDebugValidate) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, function () { return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); });\n    };\n    GPGPUContext.prototype.blockUntilAllProgramsCompleted = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.finish(); });\n    };\n    GPGPUContext.prototype.getQueryTimerExtension = function () {\n        if (this.disjointQueryTimerExtension == null) {\n            this.disjointQueryTimerExtension =\n                webgl_util.getExtensionOrThrow(this.gl, environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ?\n                    'EXT_disjoint_timer_query_webgl2' :\n                    'EXT_disjoint_timer_query');\n        }\n        return this.disjointQueryTimerExtension;\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL2 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL1 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.runQuery = function (queryFn) {\n        var query = this.beginQuery();\n        queryFn();\n        this.endQuery();\n        return this.pollQueryTime(query);\n    };\n    GPGPUContext.prototype.beginQuery = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_1 = this.getQueryTimerExtensionWebGL2();\n            var query_1 = gl2.createQuery();\n            gl2.beginQuery(ext_1.TIME_ELAPSED_EXT, query_1);\n            return query_1;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        var query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        return query;\n    };\n    GPGPUContext.prototype.endQuery = function () {\n        if (environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_2 = this.getQueryTimerExtensionWebGL2();\n            gl2.endQuery(ext_2.TIME_ELAPSED_EXT);\n            return;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    };\n    GPGPUContext.prototype.isQueryAvailable = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return true;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var ext = this.getQueryTimerExtensionWebGL2();\n            var available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n            var disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            return available && !disjoint;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            var disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            return available && !disjoint;\n        }\n    };\n    GPGPUContext.prototype.pollQueryTime = function (query) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var resolveWithWarning = function () {\n                console.warn('Disjoint query timer never available.');\n                resolve(-1);\n            };\n            var queryTimerVersion = environment_1.ENV.get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION');\n            util.repeatedTry(function () { return _this.isQueryAvailable(query, queryTimerVersion); })\n                .then(function () { return resolve(_this.getQueryTime(query, queryTimerVersion)); })\n                .catch(resolveWithWarning);\n        });\n    };\n    GPGPUContext.prototype.getQueryTime = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return null;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n            return timeElapsedNanos / 1000000;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n            return timeElapsedNanos / 1000000;\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverSetup = function (texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriverTeardown = function () {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.autoDebugValidate) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriver = function (texture, downloadAndDecode) {\n        this.downloadMatrixDriverSetup(texture);\n        var result = downloadAndDecode();\n        this.downloadMatrixDriverTeardown();\n        return result;\n    };\n    GPGPUContext.prototype.downloadMatrixDriverAsync = function (texture, downloadAndDecode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.downloadMatrixDriverSetup(texture);\n                        return [4, downloadAndDecode()];\n                    case 1:\n                        result = _a.sent();\n                        this.downloadMatrixDriverTeardown();\n                        return [2, result];\n                }\n            });\n        });\n    };\n    GPGPUContext.prototype.setOutputMatrixTextureDriver = function (outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.autoDebugValidate) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, function () { return gl.viewport(0, 0, width, height); });\n        webgl_util.callAndCheck(gl, function () { return gl.scissor(0, 0, width, height); });\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegionDriver = function (x, y, width, height) {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, function () { return _this.gl.scissor(x, y, width, height); });\n    };\n    GPGPUContext.prototype.throwIfDisposed = function () {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    };\n    GPGPUContext.prototype.throwIfNoProgram = function () {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    };\n    return GPGPUContext;\n}());\nexports.GPGPUContext = GPGPUContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_context.js\n// module id = 87\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar shader_compiler = require(\"./shader_compiler\");\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.tensor.shape,\n            texShape: input.texData.texShape\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.tensor.shape,\n        texShape: output.texData.texShape\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    if (shouldUploadNaNUniform()) {\n        var throwIfNaNUniformIsNotUsed = false;\n        uniformLocations[NAN_UNIFORM_NAME] = gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME, throwIfNaNUniformIsNotUsed);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].tensor.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.tensor.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js\n// module id = 88\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar WhereProgram = (function () {\n    function WhereProgram(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.outputShape = shape;\n        var cCoords;\n        var abCoords;\n        if (rank > 4) {\n            throw Error(\"Where for rank \" + rank + \" is not yet supported\");\n        }\n        if (rank === 1) {\n            abCoords = \"resRC\";\n            cCoords = \"resRC\";\n        }\n        else {\n            var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            var cCoordVars = [];\n            var abCoordVars = [];\n            for (var i = 0; i < shape.length; i++) {\n                abCoordVars.push(\"\" + currentCoords[i]);\n                if (i < cRank) {\n                    cCoordVars.push(\"\" + currentCoords[i]);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        float cVal = getC(\" + cCoords + \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\" + abCoords + \"));\\n        } else {\\n          setOutput(getB(\" + abCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return WhereProgram;\n}());\nexports.WhereProgram = WhereProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/logical_gpu.js\n// module id = 89\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRNProgram = (function () {\n    function LRNProgram(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        var rad = radius;\n        var maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        var powOperator;\n        var basis = \"float(\" + bias + \") + float(\" + alpha + \") * sum\";\n        if (beta === 0.5) {\n            powOperator = \"inversesqrt(\" + basis + \")\";\n        }\n        else if (beta === 1.0) {\n            powOperator = \"1.0/(\" + basis + \")\";\n        }\n        else {\n            powOperator = \"exp(log(\" + basis + \") * float(-\" + beta + \"));\";\n        }\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\" + rad + \"; j <= \" + rad + \"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \" + maxD + \") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \" + powOperator + \";\\n        setOutput(val);\\n      }\\n    \";\n    }\n    return LRNProgram;\n}());\nexports.LRNProgram = LRNProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/lrn_gpu.js\n// module id = 90\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MaxPool2DBackpropProgram = (function () {\n    function MaxPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = filterHeight * filterWidth - 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + lastIndex + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + filterWidth + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool2DBackpropProgram;\n}());\nexports.MaxPool2DBackpropProgram = MaxPool2DBackpropProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/max_pool_backprop_gpu.js\n// module id = 91\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MatMulProgram = (function () {\n    function MatMulProgram(aShape, bShape, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        this.variableNames = ['matrixA', 'matrixB'];\n        var outerShapeA = transposeA ? aShape[1] : aShape[0];\n        var outerShapeB = transposeB ? bShape[0] : bShape[1];\n        var sharedDim = transposeA ? aShape[0] : aShape[1];\n        this.outputShape = [outerShapeA, outerShapeB];\n        var aSnippetFromOffset = function (vec4Offset, indexVar) {\n            return transposeA ? indexVar + \" + \" + vec4Offset + \", aRow\" :\n                \"aRow, \" + indexVar + \" + \" + vec4Offset;\n        };\n        var bSnippetFromOffset = function (vec4Offset, indexVar) {\n            return transposeB ? \"bCol, \" + indexVar + \" + \" + vec4Offset :\n                indexVar + \" + \" + vec4Offset + \", bCol\";\n        };\n        var sharedDimNearestVec4 = Math.floor(sharedDim / 4) * 4;\n        var sharedDimVec4Remainder = sharedDim % 4;\n        this.userCode = \" float dotARowBCol(int aRow, int bCol) {\\n      float result = 0.0;\\n      for (int i = 0; i < \" + sharedDimNearestVec4 + \"; i += 4) {\\n        vec4 a = vec4(\\n          getMatrixA(\" + aSnippetFromOffset(0, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, 'i') + \"),\\n          getMatrixA(\" + aSnippetFromOffset(3, 'i') + \")\\n        );\\n        vec4 b = vec4(\\n          getMatrixB(\" + bSnippetFromOffset(0, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, 'i') + \"),\\n          getMatrixB(\" + bSnippetFromOffset(3, 'i') + \")\\n        );\\n\\n        result += dot(a, b);\\n      }\\n\\n      if (\" + (sharedDimVec4Remainder === 1) + \") {\\n        result += getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \") *\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \");\\n      } else if (\" + (sharedDimVec4Remainder === 2) + \") {\\n        vec2 a = vec2(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        vec2 b = vec2(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      } else if (\" + (sharedDimVec4Remainder === 3) + \") {\\n        vec3 a = vec3(\\n          getMatrixA(\" + aSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixA(\" + aSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        vec3 b = vec3(\\n          getMatrixB(\" + bSnippetFromOffset(0, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(1, sharedDimNearestVec4) + \"),\\n          getMatrixB(\" + bSnippetFromOffset(2, sharedDimNearestVec4) + \")\\n        );\\n        result += dot(a, b);\\n      }\\n\\n      return result;\\n    }\\n\\n    void main() {\\n      ivec2 resRC = getOutputCoords();\\n      setOutput(dotARowBCol(resRC.x, resRC.y));\\n    }\\n    \";\n    }\n    return MatMulProgram;\n}());\nexports.MatMulProgram = MatMulProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/mulmat_gpu.js\n// module id = 92\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MultinomialProgram = (function () {\n    function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (numOutcomes - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (numOutcomes - 1) + \"));\\n      }\\n    \";\n    }\n    MultinomialProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return MultinomialProgram;\n}());\nexports.MultinomialProgram = MultinomialProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/multinomial_gpu.js\n// module id = 93\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneHotProgram = (function () {\n    function OneHotProgram(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + offValue + \"), float(\" + onValue + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n    }\n    return OneHotProgram;\n}());\nexports.OneHotProgram = OneHotProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/onehot_gpu.js\n// module id = 94\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar PadProgram = (function () {\n    function PadProgram(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map(function (p, i) { return p[0] + xShape[i] + p[1]; });\n        var rank = xShape.length;\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        var start = paddings.map(function (p) { return p[0]; }).join(',');\n        var end = paddings.map(function (p, i) { return p[0] + xShape[i]; }).join(',');\n        var unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        if (rank === 1) {\n            this.userCode = \"\\n        int start = \" + start + \";\\n        int end = \" + end + \";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(\" + constantValue + \"));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \";\n            return;\n        }\n        this.userCode = \"\\n      \" + type + \" start = \" + type + \"(\" + start + \");\\n      \" + type + \" end = \" + type + \"(\" + end + \");\\n\\n      void main() {\\n        \" + type + \" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(\" + constantValue + \"));\\n        } else {\\n          \" + type + \" coords = outC - start;\\n          setOutput(getX(\" + unpackedCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return PadProgram;\n}());\nexports.PadProgram = PadProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/pad_gpu.js\n// module id = 95\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = (function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            initializationValue = '-1.0 / 0.0';\n        }\n        if (computePositions) {\n            var compareOp_1 = '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + filterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / count\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC;\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              getValue(batch, xR, xC + 3, d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + 1, d),\\n              getValue(batch, xR, xC + 2, d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}());\nexports.Pool2DProgram = Pool2DProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/pool_gpu.js\n// module id = 96\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReduceProgram = (function () {\n    function ReduceProgram(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var isReduceSum = reduceType === 'sum';\n        var initializationValue = '0.0';\n        if (!isReduceSum) {\n            if (reduceType === 'min') {\n                initializationValue = '1.0 / 0.0';\n            }\n            else {\n                initializationValue = '-1.0 / 0.0';\n            }\n        }\n        var compareOp = reduceType === 'min' ? 'min' : 'max';\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = \"sumValue\";\n        }\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n      if (\" + isReduceSum + \") {\\n        sumValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        var checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return ReduceProgram;\n}());\nexports.ReduceProgram = ReduceProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/reduce_gpu.js\n// module id = 97\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinearProgram = (function () {\n    function ResizeBilinearProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinearProgram;\n}());\nexports.ResizeBilinearProgram = ResizeBilinearProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/resize_bilinear_gpu.js\n// module id = 98\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeNearestNeighborProgram = (function () {\n    function ResizeNearestNeighborProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = alignCorners ? [oldHeight - 1, oldWidth - 1] : [oldHeight, oldWidth];\n        var effectiveOutSize = alignCorners ? [newHeight - 1, newWidth - 1] : [newHeight, newWidth];\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + 0.5)));\\n\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeNearestNeighborProgram;\n}());\nexports.ResizeNearestNeighborProgram = ResizeNearestNeighborProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/resize_nearest_neighbor_gpu.js\n// module id = 99\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ReverseProgram = (function () {\n    function ReverseProgram(xShape, axis) {\n        this.variableNames = ['x'];\n        var rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(\"WebGL backend: Reverse of rank-\" + rank + \" tensor is not yet supported\");\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\" + xShape[0] + \" - coord - 1));\\n        }\\n      \";\n            return;\n        }\n        var getInCoord = function (i) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return xShape[i] + \" - coords[\" + i + \"] - 1\";\n            }\n            return \"coords[\" + i + \"]\";\n        };\n        var inCoords = xShape.map(function (_, i) { return getInCoord(i); }).join(',');\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + type + \" coords = getOutputCoords();\\n        setOutput(getX(\" + inCoords + \"));\\n      }\\n    \";\n    }\n    return ReverseProgram;\n}());\nexports.ReverseProgram = ReverseProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/reverse_gpu.js\n// module id = 100\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar SliceProgram = (function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getCoords(this.rank);\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            if (_this.rank === 1) {\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n            }\n            else if (_this.rank === 2) {\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n            }\n            else if (_this.rank === 3) {\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n            }\n            else if (_this.rank === 4) {\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n            }\n            else {\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n            }\n        };\n    };\n    return SliceProgram;\n}());\nexports.SliceProgram = SliceProgram;\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank === 2) {\n        return 'sourceLoc.x, sourceLoc.y';\n    }\n    else if (rank === 3) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n    }\n    else if (rank === 4) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n    }\n    else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/slice_gpu.js\n// module id = 101\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tex_util_1 = require(\"./tex_util\");\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.allocatedTextures = [];\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shapeRC, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture = this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n        this.allocatedTextures.push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shape, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        if (this.allocatedTextures == null) {\n            return;\n        }\n        this.allocatedTextures.forEach(function (texture) {\n            _this.gpgpu.deleteMatrixTexture(texture);\n        });\n        this.freeTextures = null;\n        this.allocatedTextures = null;\n        this.usedTextureCount = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol, texType) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1] + \"_\" + texType;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js\n// module id = 102\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TileProgram = (function () {\n    function TileProgram(aShape, reps) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return TileProgram;\n}());\nexports.TileProgram = TileProgram;\nfunction getSourceCoords(aShape) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"imod(resRC, \" + aShape[0] + \")\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n    }\n    return sourceCoords.join();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/tile_gpu.js\n// module id = 103\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TransposeProgram = (function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}());\nexports.TransposeProgram = TransposeProgram;\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 4) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/kernels/webgl/transpose_gpu.js\n// module id = 104\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar broadcast_util_1 = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar ops_1 = require(\"./ops\");\nvar BatchNormOps = (function () {\n    function BatchNormOps() {\n    }\n    BatchNormOps.batchNormalization2d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 2, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 2 || mean.rank === 1, \"Error in batchNormalization2D: mean must be rank 2 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 2 || variance.rank === 1, \"Error in batchNormalization2D: variance must be rank 2 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 2 || scale.rank === 1, \"Error in batchNormalization2D: scale must be rank 2 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 2 || offset.rank === 1, \"Error in batchNormalization2D: offset must be rank 2 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization3d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 3, \"Error in batchNormalization3D: x must be rank 3 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 3 || mean.rank === 1, \"Error in batchNormalization3D: mean must be rank 3 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 3 || variance.rank === 1, \"Error in batchNormalization3D: variance must be rank 3 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 3 || scale.rank === 1, \"Error in batchNormalization3D: scale must be rank 3 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 3 || offset.rank === 1, \"Error in batchNormalization3D: offset must be rank 3 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization4d = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assert(x.rank === 4, \"Error in batchNormalization4D: x must be rank 4 but got rank \" +\n            (x.rank + \".\"));\n        util.assert(mean.rank === 4 || mean.rank === 1, \"Error in batchNormalization4D: mean must be rank 4 or rank 1 but \" +\n            (\"got rank \" + mean.rank + \".\"));\n        util.assert(variance.rank === 4 || variance.rank === 1, \"Error in batchNormalization4D: variance must be rank 4 or rank 1 \" +\n            (\"but got rank \" + variance.rank + \".\"));\n        if (scale != null) {\n            util.assert(scale.rank === 4 || scale.rank === 1, \"Error in batchNormalization4D: scale must be rank 4 or rank 1 \" +\n                (\"but got rank \" + scale.rank + \".\"));\n        }\n        if (offset != null) {\n            util.assert(offset.rank === 4 || offset.rank === 1, \"Error in batchNormalization4D: offset must be rank 4 or rank 1 \" +\n                (\"but got rank \" + offset.rank + \".\"));\n        }\n        return BatchNormOps.batchNormalization(x, mean, variance, varianceEpsilon, scale, offset);\n    };\n    BatchNormOps.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        util.assertArgumentsAreTensors({ x: x, mean: mean, variance: variance }, 'batchNormalization');\n        if (scale != null) {\n            util.assertArgumentsAreTensors({ scale: scale }, 'batchNormalization');\n        }\n        if (offset != null) {\n            util.assertArgumentsAreTensors({ offset: offset }, 'batchNormalization');\n        }\n        util.assert(mean.rank === variance.rank, 'Batch normalization gradient requires mean and variance to have ' +\n            'equal ranks.');\n        util.assert(offset == null || mean.rank === offset.rank, 'Batch normalization gradient requires mean and offset to have ' +\n            'equal ranks.');\n        util.assert(scale == null || mean.rank === scale.rank, 'Batch normalization gradient requires mean and scale to have ' +\n            'equal ranks.');\n        var x4D;\n        if (x.rank === 0 || x.rank === 1) {\n            x4D = x.as4D(1, 1, 1, x.size);\n        }\n        else if (x.rank === 2) {\n            x4D = x.as4D(1, 1, x.shape[0], x.shape[1]);\n        }\n        else if (x.rank === 3) {\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        else {\n            x4D = x;\n        }\n        var der = function (dy) {\n            var scaleValue = scale == null ? array_ops_1.ArrayOps.scalar(1) : scale;\n            var reductionAxes = broadcast_util_1.getReductionAxes(mean.shape, x4D.shape);\n            var tileShape = [];\n            if (mean.rank === 1) {\n                for (var i = 0; i < x4D.shape.length - 1; ++i) {\n                    tileShape.push(x4D.shape[i]);\n                }\n                tileShape.push(1);\n            }\n            var xMinusMean = x.sub(mean);\n            var dyTimesScaleValue = dy.mul(scaleValue);\n            var oneOverSqrtVariance = ops_1.rsqrt(variance.add(array_ops_1.ArrayOps.scalar(varianceEpsilon)));\n            var minusHalfRCube = oneOverSqrtVariance.mul(oneOverSqrtVariance)\n                .mul(oneOverSqrtVariance)\n                .mul(array_ops_1.ArrayOps.scalar(-0.5));\n            var derX = function () {\n                if (mean.rank === 1) {\n                    return dy\n                        .mul(array_ops_1.ArrayOps.tile(oneOverSqrtVariance.as4D(1, 1, 1, mean.shape[0]), tileShape))\n                        .mul(scaleValue)\n                        .reshape(x.shape);\n                }\n                else {\n                    return dy.mul(oneOverSqrtVariance).mul(scaleValue).reshape(x.shape);\n                }\n            };\n            var derMean = function () {\n                var meanDer = oneOverSqrtVariance.mul(array_ops_1.ArrayOps.scalar(-1)).mul(dyTimesScaleValue);\n                if (mean.rank === 1) {\n                    meanDer = meanDer.sum(reductionAxes);\n                }\n                return meanDer.reshape(mean.shape);\n            };\n            var derVariance = function () {\n                var varianceDer = minusHalfRCube.mul(xMinusMean).mul(dyTimesScaleValue);\n                if (mean.rank === 1) {\n                    varianceDer = varianceDer.sum(reductionAxes);\n                }\n                return varianceDer.reshape(mean.shape);\n            };\n            var derScale = function () {\n                var xMinusMean2TimesRsqrt = xMinusMean.mul(oneOverSqrtVariance);\n                var scaleDer = dy.mul(xMinusMean2TimesRsqrt);\n                if (mean.rank === 1) {\n                    scaleDer = scaleDer.sum(reductionAxes);\n                }\n                return scaleDer.reshape(mean.shape);\n            };\n            var derOffset = function () {\n                var offsetDer = dy;\n                if (mean.rank === 1) {\n                    offsetDer = offsetDer.sum(reductionAxes);\n                }\n                return offsetDer.reshape(mean.shape);\n            };\n            return {\n                x: derX,\n                mean: derMean,\n                variance: derVariance,\n                scale: derScale,\n                offset: derOffset\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.batchNormalization(x4D, batchnormReshape4D(mean), batchnormReshape4D(variance), varianceEpsilon, batchnormReshape4D(scale), batchnormReshape4D(offset)); }, { x: x, mean: mean, variance: variance, scale: scale, offset: offset }, der);\n        return res.reshape(x.shape);\n    };\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization2d\", null);\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization3d\", null);\n    __decorate([\n        operation_1.operation\n    ], BatchNormOps, \"batchNormalization4d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' })\n    ], BatchNormOps, \"batchNormalization\", null);\n    return BatchNormOps;\n}());\nexports.BatchNormOps = BatchNormOps;\nfunction batchnormReshape4D(x) {\n    if (x == null) {\n        return null;\n    }\n    if (x.rank === 0) {\n        return x.as1D();\n    }\n    else if (x.rank === 1) {\n        return x;\n    }\n    else if (x.rank === 2) {\n        return x.as4D(1, 1, x.shape[0], x.shape[1]);\n    }\n    else if (x.rank === 3) {\n        return x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    return x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/batchnorm.js\n// module id = 105\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar CompareOps = (function () {\n    function CompareOps() {\n    }\n    CompareOps.notEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'notEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.notEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.notEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in notEqualStrict: ');\n        return a.notEqual(b);\n    };\n    CompareOps.less = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'less');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.less(a, b); }, { a: a, b: b });\n    };\n    CompareOps.lessStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in lessStrict: ');\n        return a.less(b);\n    };\n    CompareOps.equal = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'equal');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.equal(a, b); }, { a: a, b: b });\n    };\n    CompareOps.equalStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in equalStrict: ');\n        return a.equal(b);\n    };\n    CompareOps.lessEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'lessEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.lessEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.lessEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in lessEqualStrict: ');\n        return a.lessEqual(b);\n    };\n    CompareOps.greater = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'greater');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.greater(a, b); }, { a: a, b: b });\n    };\n    CompareOps.greaterStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in greaterStrict: ');\n        return a.greater(b);\n    };\n    CompareOps.greaterEqual = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'greaterEqual');\n        util.assertTypesMatch(a, b);\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.greaterEqual(a, b); }, { a: a, b: b });\n    };\n    CompareOps.greaterEqualStrict = function (a, b) {\n        util.assertShapesMatch(a.shape, b.shape, 'Error in greaterEqualStrict: ');\n        return a.greaterEqual(b);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"notEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"notEqualStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"less\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"lessStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"equal\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"equalStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"lessEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"lessEqualStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"greater\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"greaterStrict\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], CompareOps, \"greaterEqual\", null);\n    __decorate([\n        operation_1.operation\n    ], CompareOps, \"greaterEqualStrict\", null);\n    return CompareOps;\n}());\nexports.CompareOps = CompareOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/compare.js\n// module id = 106\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar conv_util = require(\"./conv_util\");\nvar operation_1 = require(\"./operation\");\nvar ConvOps = (function () {\n    function ConvOps() {\n    }\n    ConvOps.conv1d = function (x, filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\n        if (dilation === void 0) { dilation = 1; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv1d');\n        var x3D = x;\n        var reshapedTo3D = false;\n        if (x.rank === 2) {\n            reshapedTo3D = true;\n            x3D = x.as3D(1, x.shape[0], x.shape[1]);\n        }\n        util.assert(x3D.rank === 3, \"Error in conv1d: input must be rank 3, but got rank \" + x3D.rank + \".\");\n        util.assert(filter.rank === 3, \"Error in conv1d: filter must be rank 3, but got rank \" +\n            (filter.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv1d: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        util.assert(x3D.shape[2] === filter.shape[1], \"Error in conv1d: depth of input (\" + x3D.shape[2] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[1] + \".\"));\n        util.assert(eitherStridesOrDilationsAreOne(stride, dilation), 'Error in conv1D: Either stride or dilation must be 1.' +\n            (\"Got stride \" + stride + \" and dilation '\" + dilation + \"'\"));\n        util.assert(dataFormat === 'NWC', \"Error in conv1d: got dataFormat of \" + dataFormat + \" but only NWC is currently supported.\");\n        var filter4D = filter.as4D(1, filter.shape[0], filter.shape[1], filter.shape[2]);\n        var input4D = x3D.as4D(x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]);\n        var strides = [1, stride];\n        var dilations = [1, dilation];\n        var conv2dDataFormat = 'NHWC';\n        var res = ConvOps.conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n        if (reshapedTo3D) {\n            return res.as2D(res.shape[2], res.shape[3]);\n        }\n        return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\n    };\n    ConvOps.conv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in conv2d: input must be rank 4, but got rank \" + x4D.rank + \".\");\n        util.assert(filter.rank === 4, \"Error in conv2d: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2d: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in conv2d: depth of input (\" + x4D.shape[3] + \") must match  \" +\n            (\"input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in conv2D: Either strides or dilations must be 1.' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\n        util.assert(dataFormat === 'NHWC', \"Error in conv2d: got dataFormat of \" + dataFormat + \" but only NHWC is currently supported.\");\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n        var grad = function (dy) {\n            util.assert(tupleValuesAreOne(dilations), 'Error in gradient of conv2D: dilation rates greater than 1 are not' +\n                (\"yet supported in gradients. Got dilations '\" + dilations + \"'\"));\n            return {\n                x: function () { return ConvOps.conv2dDerInput(x4D.shape, dy, filter, strides, pad); },\n                filter: function () {\n                    return ConvOps.conv2dDerFilter(x4D, dy, filter.shape, strides, pad);\n                }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2d(x4D, filter, convInfo); }, { x: x4D, filter: filter }, grad);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.conv2dDerInput = function (xShape, dy, filter, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ dy: dy, filter: filter }, 'conv2dDerInput');\n        util.assert(xShape.length === dy.rank, \"Length of inShape \" +\n            (\"(\" + xShape.length + \") and rank of dy (\" + dy.rank + \") must match\"));\n        var xShape4D = xShape;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (dy.rank === 3) {\n            reshapedTo4D = true;\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n            xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n        }\n        var inDepth = xShape4D[3];\n        var outDepth = dy4D.shape[3];\n        util.assert(xShape4D.length === 4, \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\n            (xShape4D.length + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerInput: dy must be rank 4, but got \" +\n            (\"rank \" + dy4D.rank));\n        util.assert(filter.rank === 4, \"Error in conv2dDerInput: filter must be rank 4, but got \" +\n            (\"rank \" + filter.rank));\n        util.assert(inDepth === filter.shape[2], \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\n            (\"match input depth for filter \" + filter.shape[2] + \".\"));\n        util.assert(outDepth === filter.shape[3], \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must\" +\n            (\"match output depth for filter \" + filter.shape[3] + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2dDerInput: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var dilations = 1;\n        var convInfo = conv_util.computeConv2DInfo(xShape4D, filter.shape, strides, dilations, pad, dimRoundingMode);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2dDerInput(dy4D, filter, convInfo); }, { dy4D: dy4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.conv2dDerFilter = function (x, dy, filterShape, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x, dy: dy }, 'conv2dDerFilter');\n        var x4D = x;\n        if (x.rank === 3) {\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        var dy4D = dy;\n        if (dy4D.rank === 3) {\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\n            (x4D.shape + \".\"));\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\n            (dy4D.shape + \".\"));\n        util.assert(filterShape.length === 4, \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\n            (filterShape + \".\"));\n        util.assert(x4D.shape[3] === filterShape[2], \"Error in conv2dDerFilter: depth of input \" + x4D.shape[3] + \") must \" +\n            (\"match input depth in filter (\" + filterShape[2] + \".\"));\n        util.assert(dy4D.shape[3] === filterShape[3], \"Error in conv2dDerFilter: depth of dy (\" + dy4D.shape[3] + \") must \" +\n            (\"match output depth for filter (\" + filterShape[3] + \").\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in conv2dDerFilter: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var dilations = 1;\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filterShape, strides, dilations, pad, dimRoundingMode);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.conv2dDerFilter(x4D, dy4D, convInfo); }, { x4D: x4D, dy4D: dy4D });\n    };\n    ConvOps.conv2dTranspose = function (x, filter, outputShape, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2dTranspose');\n        return ConvOps.conv2dDerInput(outputShape, x, filter, strides, pad, dimRoundingMode);\n    };\n    ConvOps.depthwiseConv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'depthwiseConv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in depthwiseConv2D: input must be rank 4, but got \" +\n            (\"rank \" + x4D.rank + \".\"));\n        util.assert(filter.rank === 4, \"Error in depthwiseConv2D: filter must be rank 4, but got rank \" +\n            (filter.rank + \".\"));\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in depthwiseConv2D: number of input channels \" +\n            (\"(\" + x4D.shape[3] + \") must match the inChannels dimension in \") +\n            (\"filter \" + filter.shape[2] + \".\"));\n        if (dilations == null) {\n            dilations = [1, 1];\n        }\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in depthwiseConv2d: Either strides or dilations must be 1.' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in depthwiseConv2D: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode, true);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.depthwiseConv2D(x4D, filter, convInfo); }, { x4D: x4D, filter: filter });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ConvOps.separableConv2d = function (x, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n        if (dilation === void 0) { dilation = [1, 1]; }\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        util.assertArgumentsAreTensors({ x: x, depthwiseFilter: depthwiseFilter, pointwiseFilter: pointwiseFilter }, 'separableConv2d');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        if (dataFormat === 'NCHW') {\n            throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n                'NHWC is supported');\n        }\n        util.assert(x4D.rank === 4, \"Error in separableConv2d: input must be rank 4, but got \" +\n            (\"rank \" + x4D.rank + \".\"));\n        util.assert(depthwiseFilter.rank === 4, \"Error in separableConv2d: depthwise filter must be rank 4, but got \" +\n            (\"rank \" + depthwiseFilter.rank + \".\"));\n        util.assert(pointwiseFilter.rank === 4, \"Error in separableConv2d: pointwise filter must be rank 4, but got \" +\n            (\"rank \" + depthwiseFilter.rank + \".\"));\n        util.assert(pointwiseFilter.shape[0] === 1, \"Error in separableConv2d: the first dimension of pointwise filter \" +\n            (\" must be 1, but got \" + pointwiseFilter.shape[0] + \".\"));\n        util.assert(pointwiseFilter.shape[1] === 1, \"Error in separableConv2d: the second dimension of pointwise filter \" +\n            (\" must be 1, but got \" + pointwiseFilter.shape[1] + \".\"));\n        var inChannels = depthwiseFilter.shape[2];\n        var channelMultiplier = depthwiseFilter.shape[3];\n        util.assert(pointwiseFilter.shape[2] === inChannels * channelMultiplier, \"Error in separableConv2d: the third dimension of pointwise filter \" +\n            (\"must be \" + inChannels * channelMultiplier + \", \") +\n            (\"but got \" + pointwiseFilter.shape[2] + \".\"));\n        var depthwise = ConvOps.depthwiseConv2d(x4D, depthwiseFilter, strides, pad, dataFormat, dilation);\n        var pointwiseStride = 1;\n        var res = ConvOps.conv2d(depthwise, pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv1d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv2d\", null);\n    __decorate([\n        operation_1.operation\n    ], ConvOps, \"conv2dDerInput\", null);\n    __decorate([\n        operation_1.operation\n    ], ConvOps, \"conv2dDerFilter\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"conv2dTranspose\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"depthwiseConv2d\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], ConvOps, \"separableConv2d\", null);\n    return ConvOps;\n}());\nexports.ConvOps = ConvOps;\nfunction parseTupleParam(param) {\n    return typeof param === 'number' ? [param, param] : param;\n}\nfunction tupleValuesAreOne(param) {\n    var _a = parseTupleParam(param), dimA = _a[0], dimB = _a[1];\n    return dimA === 1 && dimB === 1;\n}\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/conv.js\n// module id = 107\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar ImageOps = (function () {\n    function ImageOps() {\n    }\n    ImageOps.resizeBilinear = function (images, size, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeBilinear');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeBilinear: x must be rank 3 or 4, but got \" +\n            (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeBilinear: new shape must 2D, but got shape \" +\n            (size + \".\"));\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages =\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0], newWidth = size[1];\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.resizeBilinear(batchImages, newHeight, newWidth, alignCorners); }, { batchImages: batchImages });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ImageOps.resizeNearestNeighbor = function (images, size, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeNearestNeighbor');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" +\n            (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" +\n            (size + \".\"));\n        util.assert(images.dtype === 'float32' || images.dtype === 'int32', '`images` must have `int32` or `float32` as dtype');\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages =\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0], newWidth = size[1];\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.resizeNearestNeighbor(batchImages, newHeight, newWidth, alignCorners); }, { batchImages: batchImages });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\n        operation_1.operation\n    ], ImageOps, \"resizeBilinear\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\n        operation_1.operation\n    ], ImageOps, \"resizeNearestNeighbor\", null);\n    return ImageOps;\n}());\nexports.ImageOps = ImageOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/image_ops.js\n// module id = 108\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar types = require(\"../types\");\nvar util = require(\"../util\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar LogicalOps = (function () {\n    function LogicalOps() {\n    }\n    LogicalOps.logicalNot = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'logicalNot');\n        util.assert(x.dtype === 'bool', 'Error Array must be of type bool.');\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalNot(x); }, { x: x });\n    };\n    LogicalOps.logicalAnd = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalAnd');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalAnd(a, b); }, { a: a, b: b });\n    };\n    LogicalOps.logicalOr = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalOr');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.logicalOr(a, b); }, { a: a, b: b });\n    };\n    LogicalOps.logicalXor = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalXor');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return LogicalOps.logicalOr(a, b).logicalAnd(LogicalOps.logicalAnd(a, b).logicalNot());\n    };\n    LogicalOps.where = function (condition, a, b) {\n        util.assertArgumentsAreTensors({ condition: condition, a: a, b: b }, 'where');\n        util.assert(condition.dtype === 'bool' || a.dtype === 'bool' || b.dtype === 'bool', 'Error Array must be of type bool.');\n        util.assertShapesMatch(a.shape, b.shape, 'Error in where: ');\n        if (condition.rank === 1) {\n            util.assert(condition.shape[0] === a.shape[0], 'The first dimension of `a` must match the size of `condition`.');\n        }\n        else {\n            util.assertShapesMatch(condition.shape, b.shape, 'Error in where: ');\n        }\n        var dtype = types.upcastType(a.dtype, b.dtype);\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.where(condition, a, b, dtype); }, { condition: condition, a: a, b: b });\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalNot\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalAnd\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalOr\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"logicalXor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Logical' }),\n        operation_1.operation\n    ], LogicalOps, \"where\", null);\n    return LogicalOps;\n}());\nexports.LogicalOps = LogicalOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/logical_ops.js\n// module id = 109\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar LRNOps = (function () {\n    function LRNOps() {\n    }\n    LRNOps.localResponseNormalization = function (x, radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        util.assertArgumentsAreTensors({ x: x }, 'localResponseNormalization');\n        util.assert(x.rank === 4 || x.rank === 3, \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \" + x.rank + \".\");\n        util.assert(util.isInt(radius), \"Error in localResponseNormalization3D: radius must be an integer\\n                     but got radius \" + radius + \".\");\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.localResponseNormalization4D(x4D, radius, bias, alpha, beta); }, { x4D: x4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        else {\n            return res;\n        }\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], LRNOps, \"localResponseNormalization\", null);\n    return LRNOps;\n}());\nexports.LRNOps = LRNOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/lrn.js\n// module id = 110\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar LSTMOps = (function () {\n    function LSTMOps() {\n    }\n    LSTMOps.multiRNNCell = function (lstmCells, data, c, h) {\n        util.assertArgumentsAreTensors({ data: data, c: c, h: h }, 'multiRNNCell');\n        var input = data;\n        var newStates = [];\n        for (var i = 0; i < lstmCells.length; i++) {\n            var output = lstmCells[i](input, c[i], h[i]);\n            newStates.push(output[0]);\n            newStates.push(output[1]);\n            input = output[1];\n        }\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < newStates.length; i += 2) {\n            newC.push(newStates[i]);\n            newH.push(newStates[i + 1]);\n        }\n        return [newC, newH];\n    };\n    LSTMOps.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        util.assertArgumentsAreTensors({ forgetBias: forgetBias, lstmKernel: lstmKernel, lstmBias: lstmBias, data: data, c: c, h: h }, 'basicLSTMCell');\n        var combined = data.concat(h, 1);\n        var weighted = combined.matMul(lstmKernel);\n        var res = weighted.add(lstmBias);\n        var batchSize = res.shape[0];\n        var sliceCols = res.shape[1] / 4;\n        var sliceSize = [batchSize, sliceCols];\n        var i = res.slice([0, 0], sliceSize);\n        var j = res.slice([0, sliceCols], sliceSize);\n        var f = res.slice([0, sliceCols * 2], sliceSize);\n        var o = res.slice([0, sliceCols * 3], sliceSize);\n        var newC = i.sigmoid().mulStrict(j.tanh()).addStrict(c.mulStrict(forgetBias.add(f).sigmoid()));\n        var newH = newC.tanh().mulStrict(o.sigmoid());\n        return [newC, newH];\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"multiRNNCell\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"basicLSTMCell\", null);\n    return LSTMOps;\n}());\nexports.LSTMOps = LSTMOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/lstm.js\n// module id = 111\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar MatmulOps = (function () {\n    function MatmulOps() {\n    }\n    MatmulOps.matMul = function (a, b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'matMul');\n        var innerShapeA = transposeA ? a.shape[0] : a.shape[1];\n        var innerShapeB = transposeB ? b.shape[1] : b.shape[0];\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\n            (\" and \" + b.rank + \".\"));\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n            (innerShapeB + \") of Tensors with shapes \" + a.shape + \" and \") +\n            (b.shape + \" and transposeA=\" + transposeA) +\n            (\" and transposeB=\" + transposeB + \" must match.\"));\n        var grad = function (dy) {\n            if (!transposeA && !transposeB) {\n                return {\n                    a: function () { return dy.matMul(b.toFloat(), false, true); },\n                    b: function () { return a.toFloat().matMul(dy, true, false); }\n                };\n            }\n            else if (!transposeA && transposeB) {\n                return {\n                    a: function () { return dy.matMul(b.toFloat(), false, false); },\n                    b: function () { return dy.matMul(a.toFloat(), true, false); }\n                };\n            }\n            else if (transposeA && !transposeB) {\n                return {\n                    a: function () { return b.toFloat().matMul(dy, false, true); },\n                    b: function () { return a.toFloat().matMul(dy, false, false); }\n                };\n            }\n            else {\n                return {\n                    a: function () { return b.toFloat().matMul(dy, true, true); },\n                    b: function () { return dy.matMul(a.toFloat(), true, true); }\n                };\n            }\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.matMul(a, b, transposeA, transposeB); }, { a: a, b: b }, grad);\n    };\n    MatmulOps.vectorTimesMatrix = function (v, matrix) {\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\n        return v.as2D(1, -1).matMul(matrix).as1D();\n    };\n    MatmulOps.matrixTimesVector = function (matrix, v) {\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\n            \"must match inner dimension of second rank 2 input, but got \" +\n            (\"shape \" + matrix.shape + \".\"));\n        return matrix.matMul(v.as2D(-1, 1)).as1D();\n    };\n    MatmulOps.dotProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\n            (v2.size + \") must match.\"));\n        return v1.as2D(1, -1).matMul(v2.as2D(-1, 1)).asScalar();\n    };\n    MatmulOps.outerProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        return v1.as2D(-1, 1).matMul(v2.as2D(1, -1));\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"matMul\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"vectorTimesMatrix\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"matrixTimesVector\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"dotProduct\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"outerProduct\", null);\n    return MatmulOps;\n}());\nexports.MatmulOps = MatmulOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/matmul.js\n// module id = 112\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar operation_1 = require(\"./operation\");\nvar MovingAverageOps = (function () {\n    function MovingAverageOps() {\n    }\n    MovingAverageOps.movingAverage = function (v, x, decay, step, zeroDebias) {\n        if (zeroDebias === void 0) { zeroDebias = true; }\n        util.assertArgumentsAreTensors({ v: v, x: x }, 'movingAverage');\n        util.assertTypesMatch(v, x);\n        util.assert(util.arraysEqual(v.shape, x.shape), 'Shape mismatch in v and x');\n        var one = array_ops_1.ArrayOps.scalar(1);\n        decay = typeof decay === 'number' ? array_ops_1.ArrayOps.scalar(decay) : decay;\n        var oneMinusDecay = one.sub(decay);\n        var update = x.sub(v).mul(oneMinusDecay);\n        if (zeroDebias) {\n            util.assert(step != null, 'When using zeroDebias: true, step is required.');\n            step = typeof step === 'number' ? array_ops_1.ArrayOps.scalar(step) : step;\n            update = update.div(one.sub(binary_ops_1.BinaryOps.pow(decay, step)));\n        }\n        return v.add(update);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Moving Average' }),\n        operation_1.operation\n    ], MovingAverageOps, \"movingAverage\", null);\n    return MovingAverageOps;\n}());\nexports.MovingAverageOps = MovingAverageOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/moving_average.js\n// module id = 113\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar NormOps = (function () {\n    function NormOps() {\n    }\n    NormOps.norm = function (x, ord, axis, keepDims) {\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'norm');\n        var norm = normImpl(x, ord, axis);\n        var keepDimsShape = norm.shape;\n        if (keepDims) {\n            var axes = axis_util.parseAxisParam(axis, x.shape);\n            keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n        }\n        return norm.reshape(keepDimsShape);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], NormOps, \"norm\", null);\n    return NormOps;\n}());\nexports.NormOps = NormOps;\nfunction normImpl(x, p, axis) {\n    if (axis === void 0) { axis = null; }\n    if (x.rank === 0) {\n        return x.abs();\n    }\n    if (x.rank !== 1 && axis === null) {\n        return normImpl(x.reshape([-1]), p, axis);\n    }\n    if (x.rank === 1 || typeof axis === 'number' ||\n        axis instanceof Array && axis.length === 1) {\n        if (p === 1) {\n            return x.abs().sum(axis);\n        }\n        if (p === Infinity) {\n            return x.abs().max(axis);\n        }\n        if (p === -Infinity) {\n            return x.abs().min(axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            return x.abs().pow(ops.scalar(2, 'int32')).sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    if (axis instanceof Array && axis.length === 2) {\n        if (p === 1) {\n            return x.abs().sum(axis[0]).max(axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return x.abs().sum(axis[1]).max(axis[0]);\n        }\n        if (p === -Infinity) {\n            return x.abs().sum(axis[1]).min(axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            return x.square().sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    throw new Error(\"Error in norm: invalid axis: \" + axis);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/norm.js\n// module id = 114\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar conv_util = require(\"./conv_util\");\nvar operation_1 = require(\"./operation\");\nvar PoolOps = (function () {\n    function PoolOps() {\n    }\n    PoolOps.maxPool = function (x, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x }, 'maxPool');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in maxPool: input must be rank 4 but got rank \" + x4D.rank + \".\");\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in maxPool: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, pad, dimRoundingMode);\n        var grad = function (dy, saved) {\n            var y4D = saved[0];\n            return {\n                x: function () { return PoolOps.maxPoolBackprop(dy, x4D, y4D, filterSize, strides, pad); }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.maxPool(x4D, convInfo)); }, { x: x4D }, grad);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    PoolOps.maxPoolBackprop = function (dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ dy: dy, input: input, output: output }, 'maxPoolBackprop');\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        util.assert(dy.rank === 4, \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy.rank + \".\"));\n        util.assert(input.rank === 4, \"Error in maxPoolBackprop: input must be rank 4 but got rank \" +\n            (input.rank + \".\"));\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in maxPoolBackprop: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(input.shape, filterSize, strides, pad, dimRoundingMode);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.maxPoolBackprop(dy, input, output, convInfo); }, { dy: dy, input: input });\n        return res;\n    };\n    PoolOps.avgPool = function (x, filterSize, strides, pad, dimRoundingMode) {\n        util.assertArgumentsAreTensors({ x: x }, 'avgPool');\n        util.assert(x.dtype === 'float32', 'The input dtype to avgPool must be float32');\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        util.assert(x4D.rank === 4, \"Error in avgPool: x must be rank 4 but got rank \" + x4D.rank + \".\");\n        if (dimRoundingMode != null) {\n            util.assert(util.isInt(pad), \"Error in avgPool: pad must be an integer when using, \" +\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\n        }\n        var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, pad);\n        var grad = function (dy) {\n            return {\n                x: function () { return PoolOps.avgPoolBackprop(dy, x4D, filterSize, strides, pad); }\n            };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.avgPool(x4D, convInfo); }, { x: x4D }, grad);\n        res = res.cast(x.dtype);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    PoolOps.avgPoolBackprop = function (dy, input, filterSize, strides, pad) {\n        util.assertArgumentsAreTensors({ dy: dy, input: input }, 'avgPoolBackprop');\n        util.assert(input.rank === dy.rank, \"Rank of input (\" + input.rank + \") does not match rank of dy (\" + dy.rank + \")\");\n        var input4D = input;\n        var dy4D = dy;\n        var reshapedTo4D = false;\n        if (input.rank === 3) {\n            reshapedTo4D = true;\n            input4D = input.as4D(1, input.shape[0], input.shape[1], input.shape[2]);\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        }\n        util.assert(dy4D.rank === 4, \"Error in avgPoolBackprop: dy must be rank 4 but got rank \" +\n            (dy4D.rank + \".\"));\n        util.assert(input4D.rank === 4, \"Error in avgPoolBackprop: input must be rank 4 but got rank \" +\n            (input4D.rank + \".\"));\n        var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, pad);\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.avgPoolBackprop(dy4D, input4D, convInfo); }, { dy4D: dy4D, input4D: input4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], PoolOps, \"maxPool\", null);\n    __decorate([\n        operation_1.operation\n    ], PoolOps, \"maxPoolBackprop\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Convolution' }),\n        operation_1.operation\n    ], PoolOps, \"avgPool\", null);\n    __decorate([\n        operation_1.operation\n    ], PoolOps, \"avgPoolBackprop\", null);\n    return PoolOps;\n}());\nexports.PoolOps = PoolOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/pool.js\n// module id = 115\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\nvar MPRandGauss = (function () {\n    function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        var seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    MPRandGauss.prototype.nextValue = function () {\n        if (!isNaN(this.nextVal)) {\n            var value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        var resultX, resultY;\n        var isValid = false;\n        while (!isValid) {\n            var v1 = void 0, v2 = void 0, s = void 0;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    };\n    MPRandGauss.prototype.convertValue = function (value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    MPRandGauss.prototype.isValidTruncated = function (value) {\n        return value <= this.upper && value >= this.lower;\n    };\n    return MPRandGauss;\n}());\nexports.MPRandGauss = MPRandGauss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/rand.js\n// module id = 116\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/reduce_util.js\n// module id = 117\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar ReductionOps = (function () {\n    function ReductionOps() {\n    }\n    ReductionOps.logSumExp = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'logSumExp');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var xMax = x.max(axes, true);\n        var a = x.sub(xMax);\n        var b = a.exp();\n        var c = b.sum(axes);\n        var d = c.log();\n        var res = xMax.reshape(d.shape).add(d);\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.sum = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'sum');\n        if (x.dtype === 'bool') {\n            x = x.toInt();\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var customOp = globals_1.customGrad(function (x) {\n            var permutation = axis_util.getAxesPermutation(axes, x.rank);\n            var reductionAxes = axes;\n            var permutedX = x;\n            if (permutation != null) {\n                permutedX = x.transpose(permutation);\n                reductionAxes =\n                    axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\n            }\n            var value = environment_1.ENV.engine.runKernel(function (backend) { return backend.sum(permutedX, reductionAxes); }, { permutedX: permutedX });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n                value = value.reshape(newShape);\n            }\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32'));\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.mean = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'mean');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\n        var reduceShape = shapes[1];\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var customOp = globals_1.customGrad(function (x) {\n            var reduceSizeScalar = ops.scalar(reduceSize);\n            var xReduce = reduceSizeScalar.dtype === x.dtype ?\n                x :\n                x.cast(reduceSizeScalar.dtype);\n            var res = xReduce.div(reduceSizeScalar);\n            var value = res.sum(axis, keepDims);\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32')).div(reduceSizeScalar);\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.min = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'min');\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.min(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.max = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'max');\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.max(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.argMin = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'argMin');\n        if (axis == null) {\n            axis = 0;\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMin(x, axes[0]); }, { x: x });\n    };\n    ReductionOps.argMax = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        util.assertArgumentsAreTensors({ x: x }, 'argMax');\n        if (axis == null) {\n            axis = 0;\n        }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMax(x, axes[0]); }, { x: x });\n    };\n    ReductionOps.moments = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        util.assertArgumentsAreTensors({ x: x }, 'moments');\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var mean = x.mean(axes, keepDims);\n        var keepDimsShape = mean.shape;\n        if (!keepDims) {\n            keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n        }\n        var devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\n        var variance = devSquared.mean(axes, keepDims);\n        return { mean: mean, variance: variance };\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"logSumExp\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"sum\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"mean\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"min\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"max\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], ReductionOps, \"moments\", null);\n    return ReductionOps;\n}());\nexports.ReductionOps = ReductionOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/reduction_ops.js\n// module id = 118\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar axis_util_1 = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar ReverseOps = (function () {\n    function ReverseOps() {\n    }\n    ReverseOps.reverse1d = function (x) {\n        util.assert(x.rank === 1, \"Error in reverse1D: x must be rank 1 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, 0);\n    };\n    ReverseOps.reverse2d = function (x, axis) {\n        util.assert(x.rank === 2, \"Error in reverse2D: x must be rank 2 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse3d = function (x, axis) {\n        util.assert(x.rank === 3, \"Error in reverse3D: x must be rank 3 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse4d = function (x, axis) {\n        util.assert(x.rank === 4, \"Error in reverse4D: x must be rank 4 but got\\n             rank \" + x.rank + \".\");\n        return ReverseOps.reverse(x, axis);\n    };\n    ReverseOps.reverse = function (x, axis) {\n        util.assertArgumentsAreTensors({ x: x }, 'reverse');\n        if (x.rank === 0) {\n            return x.clone();\n        }\n        var axes = axis_util_1.parseAxisParam(axis, x.shape);\n        var grad = function (dy) {\n            return { x: function () { return dy.reverse(axes); } };\n        };\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.reverse(x, axes); }, { x: x }, grad);\n        return res.reshapeAs(x);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], ReverseOps, \"reverse\", null);\n    return ReverseOps;\n}());\nexports.ReverseOps = ReverseOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/reverse.js\n// module id = 119\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar slice_util = require(\"./slice_util\");\nvar SliceOps = (function () {\n    function SliceOps() {\n    }\n    SliceOps.slice1d = function (x, begin, size) {\n        util.assert(x.rank === 1, \"slice1d expects a rank-1 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, [begin], [size]);\n    };\n    SliceOps.slice2d = function (x, begin, size) {\n        util.assert(x.rank === 2, \"slice1d expects a rank-2 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice3d = function (x, begin, size) {\n        util.assert(x.rank === 3, \"slice1d expects a rank-3 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice4d = function (x, begin, size) {\n        util.assert(x.rank === 4, \"slice1d expects a rank-4 tensor, but got a rank-\" + x.rank + \" tensor\");\n        return SliceOps.slice(x, begin, size);\n    };\n    SliceOps.slice = function (x, begin, size) {\n        util.assertArgumentsAreTensors({ x: x }, 'slice');\n        if (x.rank === 0) {\n            throw new Error('Slicing scalar is not possible');\n        }\n        var begin_;\n        if (typeof begin === 'number') {\n            begin_ = [begin].concat(new Array(x.rank - 1).fill(0));\n        }\n        else if (begin.length < x.rank) {\n            begin_ = begin.concat(new Array(x.rank - begin.length).fill(0));\n        }\n        else {\n            begin_ = begin;\n        }\n        var size_;\n        if (size == null) {\n            size_ = new Array(x.rank).fill(-1);\n        }\n        else if (typeof size === 'number') {\n            size_ = [size].concat(new Array(x.rank - 1).fill(-1));\n        }\n        else if (size.length < x.rank) {\n            size_ = size.concat(new Array(x.rank - size.length).fill(-1));\n        }\n        else {\n            size_ = size;\n        }\n        size_ = size_.map(function (d, i) {\n            if (d >= 0) {\n                return d;\n            }\n            else {\n                util.assert(d === -1, 'Bad value in size');\n                return x.shape[i] - begin_[i];\n            }\n        });\n        slice_util.assertParamsValid(x, begin_, size_);\n        var inputShape = x.shape;\n        var grad = function (dy) {\n            var paddings = [];\n            for (var i = 0; i < dy.rank; i++) {\n                paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n            }\n            return { x: function () { return dy.pad(paddings); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.slice(x, begin_, size_); }, { x: x }, grad);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\n        operation_1.operation\n    ], SliceOps, \"slice\", null);\n    return SliceOps;\n}());\nexports.SliceOps = SliceOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/slice.js\n// module id = 120\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    util.assert(input.rank === size.length, \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    for (var i = 0; i < input.rank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"));\n    }\n}\nexports.assertParamsValid = assertParamsValid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/slice_util.js\n// module id = 121\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar globals_1 = require(\"../globals\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar SoftmaxOps = (function () {\n    function SoftmaxOps() {\n    }\n    SoftmaxOps.softmax = function (logits, dim) {\n        if (dim === void 0) { dim = -1; }\n        util.assertArgumentsAreTensors({ logits: logits }, 'softmax');\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error('Softmax along a non-last dimension is not yet supported. ' +\n                (\"Logits was rank \" + logits.rank + \" and dim was \" + dim));\n        }\n        var customOp = globals_1.customGrad(function (logits) {\n            var keepDims = true;\n            var lse = logits.logSumExp([dim], keepDims);\n            var logResult = logits.toFloat().sub(lse);\n            var y = logResult.exp();\n            var gradFunc = function (dy) {\n                var dyTimesY = dy.mul(y);\n                var keepDims = true;\n                return dyTimesY.sub(dyTimesY.sum([dim], keepDims).mul(y));\n            };\n            return { value: y, gradFunc: gradFunc };\n        });\n        return customOp(logits);\n    };\n    SoftmaxOps.softmaxCrossEntropy = function (labels, logits, dim) {\n        if (dim === void 0) { dim = -1; }\n        util.assertArgumentsAreTensors({ labels: labels, logits: logits }, 'softmaxCrossEntropy');\n        util.assertShapesMatch(labels.shape, logits.shape, 'Error in softmaxCrossEntropy: ');\n        if (dim === -1) {\n            dim = logits.rank - 1;\n        }\n        if (dim !== logits.rank - 1) {\n            throw Error(\"Softmax cross entropy along a non-last dimension is not yet \" +\n                (\"supported. Labels / logits was rank \" + logits.rank + \" \") +\n                (\"and dim was \" + dim));\n        }\n        var customOp = globals_1.customGrad(function (labels, logits) {\n            var predictedProbs = logits.softmax(dim);\n            var costVector = ops.scalar(1e-5).add(predictedProbs).log().mul(labels).neg();\n            var value = costVector.sum([dim]);\n            var gradFunc = function (dy) {\n                var dyShape = axis_util.expandShapeToKeepDim(dy.shape, [dim]);\n                return [\n                    dy.reshape(dyShape).mul(labels.toFloat().sub(predictedProbs)),\n                    dy.reshape(dyShape).mul(predictedProbs.sub(labels.toFloat())),\n                ];\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(labels, logits);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], SoftmaxOps, \"softmax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Losses', namespace: 'losses' }),\n        operation_1.operation\n    ], SoftmaxOps, \"softmaxCrossEntropy\", null);\n    return SoftmaxOps;\n}());\nexports.SoftmaxOps = SoftmaxOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/softmax.js\n// module id = 122\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar TransposeOps = (function () {\n    function TransposeOps() {\n    }\n    TransposeOps.transpose = function (x, perm) {\n        util.assertArgumentsAreTensors({ x: x }, 'transpose');\n        if (perm == null) {\n            perm = x.shape.map(function (s, i) { return i; }).reverse();\n        }\n        var der = function (dy) {\n            var undoPerm = axis_util.getUndoAxesPermutation(perm);\n            return { x: function () { return dy.transpose(undoPerm); } };\n        };\n        util.assert(x.rank === perm.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\n            (\"must match length of perm \" + perm + \".\"));\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.transpose(x, perm); }, { x: x }, der);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], TransposeOps, \"transpose\", null);\n    return TransposeOps;\n}());\nexports.TransposeOps = TransposeOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/transpose.js\n// module id = 123\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar ops_1 = require(\"./ops\");\nvar selu_util = require(\"./selu_util\");\nvar UnaryOps = (function () {\n    function UnaryOps() {\n    }\n    UnaryOps.neg = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'neg');\n        var grad = function (dy) {\n            return { x: function () { return dy.neg(); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.neg(x); }, { x: x }, grad);\n    };\n    UnaryOps.ceil = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'ceil');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.ceil(x); }, { x: x }, grad);\n    };\n    UnaryOps.floor = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'floor');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.floor(x); }, { x: x }, grad);\n    };\n    UnaryOps.sign = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sign');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sign(x); }, { x: x }, grad);\n    };\n    UnaryOps.round = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'round');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.round(x); }, { x: x }, grad);\n    };\n    UnaryOps.exp = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'exp');\n        var bck = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return dy.mulStrict(y); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.exp(x)); }, { x: x }, bck);\n    };\n    UnaryOps.expm1 = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'expm1');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.exp()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.expm1(x); }, { x: x }, grad);\n    };\n    UnaryOps.log = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'log');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.toFloat()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.log(x); }, { x: x }, grad);\n    };\n    UnaryOps.log1p = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'log1p');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.add(ops.scalar(1))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.log1p(x); }, { x: x }, grad);\n    };\n    UnaryOps.sqrt = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sqrt');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.toFloat().sqrt().mul(ops.scalar(2))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sqrt(x); }, { x: x }, grad);\n    };\n    UnaryOps.rsqrt = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'rsqrt');\n        var grad = function (dy) {\n            return {\n                x: function () { return dy.divStrict(x.pow(ops.scalar(1.5)).mul(ops.scalar(2))).neg(); }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.rsqrt(x); }, { x: x }, grad);\n    };\n    UnaryOps.square = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'square');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.toFloat().mul(ops.scalar(2))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.square(x); }, { x: x }, grad);\n    };\n    UnaryOps.reciprocal = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'reciprocal');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.square().neg()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.reciprocal(x); }, { x: x }, grad);\n    };\n    UnaryOps.abs = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'abs');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.toFloat().step(-1)); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.abs(x); }, { x: x }, grad);\n    };\n    UnaryOps.clipByValue = function (x, clipValueMin, clipValueMax) {\n        util.assertArgumentsAreTensors({ x: x }, 'clipByValue');\n        util.assert((clipValueMin <= clipValueMax), \"Error in clip: min (\" + clipValueMin + \") must be \" +\n            (\"less than or equal to max (\" + clipValueMax + \").\"));\n        var grad = function (dy) {\n            return {\n                x: function () { return dy.where(x.greater(ops.scalar(clipValueMin))\n                    .logicalAnd(x.less(ops.scalar(clipValueMax))), ops_1.zerosLike(dy)); },\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.clip(x, clipValueMin, clipValueMax); }, { x: x }, grad);\n    };\n    UnaryOps.relu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'relu');\n        if (x.dtype === 'bool') {\n            return x.toInt();\n        }\n        var grad = function (dy) {\n            var stepRes = x.step();\n            return { x: function () { return dy.mulStrict(stepRes.toFloat()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.relu(x); }, { x: x }, grad);\n    };\n    UnaryOps.elu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'elu');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return {\n                x: function () {\n                    return environment_1.ENV.engine.runKernel(function (backend) { return backend.eluDer(dy, y); }, { dy: dy, y: y });\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.elu(x)); }, { x: x }, grad);\n    };\n    UnaryOps.selu = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'selu');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    var mask = x.greater(ops.scalar(0));\n                    var scaleAlpha = ops.scalar(selu_util.SELU_SCALEALPHA);\n                    var scale = ops.scalar(selu_util.SELU_SCALE);\n                    var greaterThanZeroDer = dy.mul(scale);\n                    var lessEqualZeroDer = dy.mul(scaleAlpha).mul(x.toFloat().exp());\n                    return ops.where(mask, greaterThanZeroDer, lessEqualZeroDer);\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.selu(x); }, { x: x }, grad);\n    };\n    UnaryOps.leakyRelu = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        util.assertArgumentsAreTensors({ x: x }, 'leakyRelu');\n        return ops.maximum(ops.scalar(alpha).mul(x), x);\n    };\n    UnaryOps.prelu = function (x, alpha) {\n        util.assertArgumentsAreTensors({ x: x, alpha: alpha }, 'prelu');\n        var zero = ops.scalar(0);\n        return ops.maximum(zero, x).add(alpha.mul(ops.minimum(zero, x)));\n    };\n    UnaryOps.sigmoid = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sigmoid');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return dy.mulStrict(y.mul(ops.scalar(1).sub(y))); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.sigmoid(x)); }, { x: x }, grad);\n    };\n    UnaryOps.logSigmoid = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'logSigmoid');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.neg().sigmoid()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.softplus(x.neg()).neg(); }, { x: x }, grad);\n    };\n    UnaryOps.softplus = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'softplus');\n        var grad = function (dy) {\n            return { x: function () { return dy.mulStrict(x.sigmoid()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.softplus(x); }, { x: x }, grad);\n    };\n    UnaryOps.sin = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sin');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().cos().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sin(x); }, { x: x }, grad);\n    };\n    UnaryOps.cos = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'cos');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().sin().neg().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cos(x); }, { x: x }, grad);\n    };\n    UnaryOps.tan = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'tan');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(x.cos().square()); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.tan(x); }, { x: x }, grad);\n    };\n    UnaryOps.asin = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'asin');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.asin(x); }, { x: x }, grad);\n    };\n    UnaryOps.acos = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'acos');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())))\n                        .neg();\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.acos(x); }, { x: x }, grad);\n    };\n    UnaryOps.atan = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'atan');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(ops.scalar(1).add(x.toFloat().square())); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atan(x); }, { x: x }, grad);\n    };\n    UnaryOps.sinh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'sinh');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().cosh().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.sinh(x); }, { x: x }, grad);\n    };\n    UnaryOps.cosh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'cosh');\n        var grad = function (dy) {\n            return { x: function () { return x.toFloat().sinh().mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.cosh(x); }, { x: x }, grad);\n    };\n    UnaryOps.tanh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'tanh');\n        var grad = function (dy, saved) {\n            var y = saved[0];\n            return { x: function () { return ops.scalar(1).sub(y.square()).mulStrict(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend, save) { return save(backend.tanh(x)); }, { x: x }, grad);\n    };\n    UnaryOps.asinh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'asinh');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).add(x.toFloat().square())));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.asinh(x); }, { x: x }, grad);\n    };\n    UnaryOps.acosh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'acosh');\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.divStrict(UnaryOps.sqrt(x.toFloat().square().sub(ops.scalar(1))));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.acosh(x); }, { x: x }, grad);\n    };\n    UnaryOps.atanh = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'atanh');\n        var grad = function (dy) {\n            return { x: function () { return dy.divStrict(ops.scalar(1).sub(x.toFloat().square())); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.atanh(x); }, { x: x }, grad);\n    };\n    UnaryOps.erf = function (x) {\n        util.assert(x.dtype === 'int32' || x.dtype === 'float32', 'Input dtype must be `int32` or `float32`.');\n        if (x.dtype === 'int32') {\n            x = x.toFloat();\n        }\n        var grad = function (dy) {\n            return {\n                x: function () {\n                    return dy.mulStrict(ops.scalar(2 / Math.sqrt(Math.PI))\n                        .mul(x.square().neg().exp()));\n                }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.erf(x); }, { x: x }, grad);\n    };\n    UnaryOps.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        util.assertArgumentsAreTensors({ x: x }, 'step');\n        var grad = function (dy) {\n            return { x: function () { return ops.zerosLike(dy); } };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.step(x, alpha); }, { x: x }, grad);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"neg\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"ceil\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"floor\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sign\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"round\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"exp\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"expm1\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"log\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"log1p\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sqrt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"rsqrt\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"square\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"reciprocal\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"abs\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"clipByValue\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"relu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"elu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"selu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"leakyRelu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"prelu\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sigmoid\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"logSigmoid\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"softplus\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"cos\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"tan\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"asin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"acos\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"atan\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"sinh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"cosh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"tanh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"asinh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"acosh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"atanh\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"erf\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Basic math' }),\n        operation_1.operation\n    ], UnaryOps, \"step\", null);\n    return UnaryOps;\n}());\nexports.UnaryOps = UnaryOps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/ops/unary_ops.js\n// module id = 124\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar adadelta_optimizer_1 = require(\"./adadelta_optimizer\");\nvar adagrad_optimizer_1 = require(\"./adagrad_optimizer\");\nvar adam_optimizer_1 = require(\"./adam_optimizer\");\nvar adamax_optimizer_1 = require(\"./adamax_optimizer\");\nvar momentum_optimizer_1 = require(\"./momentum_optimizer\");\nvar rmsprop_optimizer_1 = require(\"./rmsprop_optimizer\");\nvar sgd_optimizer_1 = require(\"./sgd_optimizer\");\nvar OptimizerConstructors = (function () {\n    function OptimizerConstructors() {\n    }\n    OptimizerConstructors.sgd = function (learningRate) {\n        return new sgd_optimizer_1.SGDOptimizer(learningRate);\n    };\n    OptimizerConstructors.momentum = function (learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        return new momentum_optimizer_1.MomentumOptimizer(learningRate, momentum, useNesterov);\n    };\n    OptimizerConstructors.rmsprop = function (learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = .9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (centered === void 0) { centered = false; }\n        return new rmsprop_optimizer_1.RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    };\n    OptimizerConstructors.adam = function (learningRate, beta1, beta2, epsilon) {\n        if (learningRate === void 0) { learningRate = 0.001; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        return new adam_optimizer_1.AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    };\n    OptimizerConstructors.adadelta = function (learningRate, rho, epsilon) {\n        if (learningRate === void 0) { learningRate = .001; }\n        if (rho === void 0) { rho = .95; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        return new adadelta_optimizer_1.AdadeltaOptimizer(learningRate, rho, epsilon);\n    };\n    OptimizerConstructors.adamax = function (learningRate, beta1, beta2, epsilon, decay) {\n        if (learningRate === void 0) { learningRate = 0.002; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (decay === void 0) { decay = 0.0; }\n        return new adamax_optimizer_1.AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    };\n    OptimizerConstructors.adagrad = function (learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        return new adagrad_optimizer_1.AdagradOptimizer(learningRate, initialAccumulatorValue);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"sgd\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"momentum\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"rmsprop\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adam\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adadelta\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adamax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Training', subheading: 'Optimizers', namespace: 'train' })\n    ], OptimizerConstructors, \"adagrad\", null);\n    return OptimizerConstructors;\n}());\nexports.OptimizerConstructors = OptimizerConstructors;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js\n// module id = 125\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Profiler = (function () {\n    function Profiler(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    Profiler.prototype.profileKernel = function (name, f) {\n        var _this = this;\n        var result;\n        var holdResultWrapperFn = function () {\n            result = f();\n        };\n        var timer = this.backendTimer.time(holdResultWrapperFn);\n        var vals = result.dataSync();\n        util.checkForNaN(vals, result.dtype, name);\n        timer.then(function (timing) {\n            _this.logger.logKernelProfile(name, result, vals, timing.kernelMs);\n        });\n        return result;\n    };\n    return Profiler;\n}());\nexports.Profiler = Profiler;\nvar Logger = (function () {\n    function Logger() {\n    }\n    Logger.prototype.logKernelProfile = function (name, result, vals, timeMs) {\n        var time = util.rightPad(timeMs + \"ms\", 9);\n        var paddedName = util.rightPad(name, 25);\n        var rank = result.rank;\n        var size = result.size;\n        var shape = util.rightPad(result.shape.toString(), 14);\n        console.log(\"%c\" + paddedName + \"\\t%c\" + time + \"\\t%c\" + rank + \"D \" + shape + \"\\t%c\" + size, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange');\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/profiler.js\n// module id = 126\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nfunction getFilteredNodesXToY(tape, xs, y) {\n    var tensorsFromX = {};\n    var nodesFromX = {};\n    for (var i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        for (var inputName in nodeInputs) {\n            var input = nodeInputs[inputName];\n            var anyInputFromX = false;\n            for (var j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    tensorsFromX[node.output.id] = true;\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    var tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    var nodesToY = {};\n    for (var i = tape.length - 1; i >= 0; i--) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        var outputs = [];\n        outputs.push(node.output);\n        for (var j = 0; j < outputs.length; j++) {\n            if (tensorsLeadToY[outputs[j].id]) {\n                for (var inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    var filteredTape = [];\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            var prunedInputs = {};\n            for (var inputName in node.inputs) {\n                var nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            var prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.output = node.output;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\nexports.getFilteredNodesXToY = getFilteredNodesXToY;\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape) {\n    for (var i = filteredTape.length - 1; i >= 0; i--) {\n        var node = filteredTape[i];\n        var dy = tensorAccumulatedGradientMap[node.output.id];\n        if (node.gradient == null) {\n            throw new Error(\"Cannot compute gradient: gradient function not found \" +\n                (\"for \" + node.name + \".\"));\n        }\n        var inputGradients = node.gradient(dy);\n        for (var inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(\"Cannot backprop through input \" + inputName + \". \" +\n                    (\"Available gradients found: \" + Object.keys(inputGradients) + \".\"));\n            }\n            var dx = inputGradients[inputName]();\n            var x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(\"Error in gradient for op \" + node.name + \". The gradient of input \" +\n                    (\"'\" + inputName + \"' has shape '\" + dx.shape + \"', which does not match \") +\n                    (\"the shape of the input '\" + x.shape + \"'\"));\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                var curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = curGradient.add(dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\nexports.backpropagateGradients = backpropagateGradients;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/tape.js\n// module id = 127\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"./tensor\");\nvar util = require(\"./util\");\nexports.WEBGL_ENVS = {\n    'BACKEND': 'test-webgl'\n};\nexports.CPU_ENVS = {\n    'BACKEND': 'test-cpu'\n};\nexports.ALL_ENVS = {};\nexports.TEST_EPSILON = 1e-3;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!(actual instanceof tensor_1.Tensor) && !(expected instanceof tensor_1.Tensor)) {\n        var aType = actual.constructor.name;\n        var bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(\"Arrays are of different type actual: \" + aType + \" \" +\n                (\"vs expected: \" + bType));\n        }\n    }\n    else if (actual instanceof tensor_1.Tensor && expected instanceof tensor_1.Tensor) {\n        if (actual.dtype !== expected.dtype) {\n            throw new Error(\"Arrays are of different type actual: \" + actual.dtype + \" \" +\n                (\"vs expected: \" + expected.dtype + \".\"));\n        }\n        if (!util.arraysEqual(actual.shape, expected.shape)) {\n            throw new Error(\"Arrays are of different shape actual: \" + actual.shape + \" \" +\n                (\"vs expected: \" + expected.shape + \".\"));\n        }\n    }\n    var actualValues;\n    var expectedValues;\n    if (actual instanceof tensor_1.Tensor) {\n        actualValues = actual.dataSync();\n    }\n    else {\n        actualValues = actual;\n    }\n    if (expected instanceof tensor_1.Tensor) {\n        expectedValues = expected.dataSync();\n    }\n    else {\n        expectedValues = expected;\n    }\n    if (actualValues.length !== expectedValues.length) {\n        throw new Error(\"Arrays have different lengths actual: \" + actualValues.length + \" vs \" +\n            (\"expected: \" + expectedValues.length + \".\\n\") +\n            (\"Actual:   \" + actualValues + \".\\n\") +\n            (\"Expected: \" + expectedValues + \".\"));\n    }\n    for (var i = 0; i < expectedValues.length; ++i) {\n        var a = actualValues[i];\n        var e = expectedValues[i];\n        if (!areClose(a, Number(e), epsilon)) {\n            throw new Error(\"Arrays differ: actual[\" + i + \"] = \" + a + \", expected[\" + i + \"] = \" + e + \".\\n\" +\n                (\"Actual:   \" + actualValues + \".\\n\") +\n                (\"Expected: \" + expectedValues + \".\"));\n        }\n    }\n}\nexports.expectArraysClose = expectArraysClose;\nfunction expectPromiseToFail(fn, done) {\n    fn().then(function () { return done.fail(); }, function () { return done(); });\n}\nexports.expectPromiseToFail = expectPromiseToFail;\nfunction expectArraysEqual(actual, expected) {\n    return expectArraysClose(actual, expected, 0);\n}\nexports.expectArraysEqual = expectArraysEqual;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (isNaN(a) && isNaN(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    var actualVals;\n    if (actual instanceof tensor_1.Tensor) {\n        actualVals = actual.dataSync();\n    }\n    else {\n        actualVals = actual;\n    }\n    for (var i = 0; i < actualVals.length; i++) {\n        if (actualVals[i] < low || actualVals[i] > high) {\n            throw new Error(\"Value out of range:\" + actualVals[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/test_util.js\n// module id = 128\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"./doc\");\nvar environment_1 = require(\"./environment\");\nvar util_1 = require(\"./util\");\nvar Tracking = (function () {\n    function Tracking() {\n    }\n    Tracking.tidy = function (nameOrFn, fn, gradMode) {\n        if (gradMode === void 0) { gradMode = false; }\n        var name = null;\n        if (fn == null) {\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n        }\n        environment_1.ENV.engine.startScope(name, gradMode);\n        var result = fn();\n        if (result instanceof Promise) {\n            console.error('Cannot return a Promise inside of tidy.');\n        }\n        environment_1.ENV.engine.endScope(result, gradMode);\n        return result;\n    };\n    Tracking.dispose = function (container) {\n        var tensors = util_1.extractTensorsFromAny(container);\n        tensors.forEach(function (tensor) { return tensor.dispose(); });\n    };\n    Tracking.keep = function (result) {\n        return environment_1.ENV.engine.keep(result);\n    };\n    Tracking.time = function (f) {\n        return environment_1.ENV.engine.time(f);\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Tracking, \"tidy\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Memory' })\n    ], Tracking, \"keep\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Performance', subheading: 'Timing' })\n    ], Tracking, \"time\", null);\n    return Tracking;\n}());\nexports.Tracking = Tracking;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/tracking.js\n// module id = 129\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar adadelta_optimizer_1 = require(\"./optimizers/adadelta_optimizer\");\nvar adagrad_optimizer_1 = require(\"./optimizers/adagrad_optimizer\");\nvar adam_optimizer_1 = require(\"./optimizers/adam_optimizer\");\nvar adamax_optimizer_1 = require(\"./optimizers/adamax_optimizer\");\nvar momentum_optimizer_1 = require(\"./optimizers/momentum_optimizer\");\nvar optimizer_constructors_1 = require(\"./optimizers/optimizer_constructors\");\nvar rmsprop_optimizer_1 = require(\"./optimizers/rmsprop_optimizer\");\nvar sgd_optimizer_1 = require(\"./optimizers/sgd_optimizer\");\n[momentum_optimizer_1.MomentumOptimizer, sgd_optimizer_1.SGDOptimizer, adadelta_optimizer_1.AdadeltaOptimizer, adagrad_optimizer_1.AdagradOptimizer,\n    rmsprop_optimizer_1.RMSPropOptimizer, adamax_optimizer_1.AdamaxOptimizer, adam_optimizer_1.AdamOptimizer];\nexports.train = {\n    sgd: optimizer_constructors_1.OptimizerConstructors.sgd,\n    momentum: optimizer_constructors_1.OptimizerConstructors.momentum,\n    adadelta: optimizer_constructors_1.OptimizerConstructors.adadelta,\n    adagrad: optimizer_constructors_1.OptimizerConstructors.adagrad,\n    rmsprop: optimizer_constructors_1.OptimizerConstructors.rmsprop,\n    adamax: optimizer_constructors_1.OptimizerConstructors.adamax,\n    adam: optimizer_constructors_1.OptimizerConstructors.adam\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/train.js\n// module id = 130\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.8.4';\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/version.js\n// module id = 131\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ops_1 = require(\"./ops/ops\");\nvar util = require(\"./util\");\nvar DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'int32': 4\n};\nfunction loadWeights(manifest, filePathPrefix, weightNames, requestOptions) {\n    if (filePathPrefix === void 0) { filePathPrefix = ''; }\n    return __awaiter(this, void 0, void 0, function () {\n        var groupIndicesToFetchMap, groupWeightsToFetch, weightsFound, allManifestWeightNames, weightsNotFound, groupIndicesToFetch, requests, responses, buffers, weightsTensorMap, bufferIndexOffset;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    groupIndicesToFetchMap = manifest.map(function () { return false; });\n                    groupWeightsToFetch = {};\n                    weightsFound = weightNames != null ? weightNames.map(function () { return false; }) : [];\n                    allManifestWeightNames = [];\n                    manifest.forEach(function (manifestGroupConfig, groupIndex) {\n                        var groupOffset = 0;\n                        manifestGroupConfig.weights.forEach(function (weightsEntry) {\n                            var weightsBytes = DTYPE_VALUE_SIZE_MAP[weightsEntry.dtype] *\n                                util.sizeFromShape(weightsEntry.shape);\n                            var enqueueWeightsForFetchingFn = function () {\n                                groupIndicesToFetchMap[groupIndex] = true;\n                                if (groupWeightsToFetch[groupIndex] == null) {\n                                    groupWeightsToFetch[groupIndex] = [];\n                                }\n                                groupWeightsToFetch[groupIndex].push({\n                                    manifestEntry: weightsEntry,\n                                    groupOffset: groupOffset,\n                                    sizeBytes: weightsBytes\n                                });\n                            };\n                            if (weightNames != null) {\n                                weightNames.forEach(function (weightName, weightIndex) {\n                                    if (weightName === weightsEntry.name) {\n                                        enqueueWeightsForFetchingFn();\n                                        weightsFound[weightIndex] = true;\n                                    }\n                                });\n                            }\n                            else {\n                                enqueueWeightsForFetchingFn();\n                            }\n                            allManifestWeightNames.push(weightsEntry.name);\n                            groupOffset += weightsBytes;\n                        });\n                    });\n                    if (!weightsFound.every(function (found) { return found; })) {\n                        weightsNotFound = weightNames.filter(function (weight, i) { return !weightsFound[i]; });\n                        throw new Error(\"Could not find weights in manifest with names: \" +\n                            (weightsNotFound.join(', ') + \". \\n\") +\n                            \"Manifest JSON has weights with names: \" +\n                            (allManifestWeightNames.join(', ') + \".\"));\n                    }\n                    groupIndicesToFetch = groupIndicesToFetchMap.reduce(function (accumulator, shouldFetch, i) {\n                        if (shouldFetch) {\n                            accumulator.push(i);\n                        }\n                        return accumulator;\n                    }, []);\n                    requests = [];\n                    groupIndicesToFetch.forEach(function (i) {\n                        manifest[i].paths.forEach(function (filepath) {\n                            var fetchUrl = filePathPrefix +\n                                (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                            requests.push(fetch(fetchUrl, requestOptions));\n                        });\n                    });\n                    return [4, Promise.all(requests)];\n                case 1:\n                    responses = _a.sent();\n                    return [4, Promise.all(responses.map(function (response) { return response.arrayBuffer(); }))];\n                case 2:\n                    buffers = _a.sent();\n                    weightsTensorMap = {};\n                    bufferIndexOffset = 0;\n                    groupIndicesToFetch.forEach(function (i) {\n                        var numBuffers = manifest[i].paths.length;\n                        var groupBytes = 0;\n                        for (var i_1 = 0; i_1 < numBuffers; i_1++) {\n                            groupBytes += buffers[bufferIndexOffset + i_1].byteLength;\n                        }\n                        var groupBuffer = new ArrayBuffer(groupBytes);\n                        var groupByteBuffer = new Uint8Array(groupBuffer);\n                        var groupBufferOffset = 0;\n                        for (var i_2 = 0; i_2 < numBuffers; i_2++) {\n                            var buffer = new Uint8Array(buffers[bufferIndexOffset + i_2]);\n                            groupByteBuffer.set(buffer, groupBufferOffset);\n                            groupBufferOffset += buffer.byteLength;\n                        }\n                        var weightsEntries = groupWeightsToFetch[i];\n                        weightsEntries.forEach(function (weightsEntry) {\n                            var byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                            var typedArray;\n                            if (weightsEntry.manifestEntry.dtype === 'float32') {\n                                typedArray = new Float32Array(byteBuffer);\n                            }\n                            else if (weightsEntry.manifestEntry.dtype === 'int32') {\n                                typedArray = new Int32Array(byteBuffer);\n                            }\n                            else {\n                                throw new Error(\"Weight \" + weightsEntry.manifestEntry.name + \" has unknown dtype \" +\n                                    (weightsEntry.manifestEntry.dtype + \".\"));\n                            }\n                            var weightName = weightsEntry.manifestEntry.name;\n                            if (weightsTensorMap[weightName] != null) {\n                                throw new Error(\"Duplicate weight with name \" + weightName + \". \" +\n                                    \"Please make sure weights names are unique in the manifest JSON.\");\n                            }\n                            weightsTensorMap[weightName] = ops_1.tensor(typedArray, weightsEntry.manifestEntry.shape, weightsEntry.manifestEntry.dtype);\n                        });\n                        bufferIndexOffset += numBuffers;\n                    });\n                    return [2, weightsTensorMap];\n            }\n        });\n    });\n}\nexports.loadWeights = loadWeights;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-core/dist/weights_loader.js\n// module id = 132\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar topology_1 = require(\"./topology\");\nfunction assertFeedCompatibility(key, val) {\n    if (key.dtype != null && key.dtype !== val.dtype) {\n        throw new errors_1.ValueError(\"The dtype of the feed (\" + val.dtype + \") is incompatible with that of \" +\n            (\"the key '\" + key.name + \"' (\" + key.dtype + \").\"));\n    }\n    if (key.shape != null) {\n        if (key.shape.length !== val.shape.length) {\n            throw new errors_1.ValueError(\"The rank of feed (\" + val.shape.length + \") does not match the rank of \" +\n                (\"the key (\" + key.shape.length + \").\"));\n        }\n        for (var i = 0; i < key.shape.length; ++i) {\n            if (key.shape[i] != null && key.shape[i] !== val.shape[i]) {\n                throw new errors_1.ValueError(\"The \" + i + \"-th dimension of the feed (\" + val.shape[i] + \") is \" +\n                    (\"incompatible with that of the key (\" + key.shape[i] + \").\"));\n            }\n        }\n    }\n}\nvar FeedDict = (function () {\n    function FeedDict(feeds) {\n        this.id2Value = {};\n        if (feeds instanceof FeedDict) {\n            for (var id in feeds.id2Value) {\n                this.id2Value[id] = feeds.id2Value[id];\n            }\n        }\n        else {\n            if (feeds == null) {\n                return;\n            }\n            for (var _i = 0, feeds_1 = feeds; _i < feeds_1.length; _i++) {\n                var feed = feeds_1[_i];\n                this.add(feed.key, feed.value);\n            }\n        }\n    }\n    FeedDict.prototype.add = function (key, value) {\n        assertFeedCompatibility(key, value);\n        if (this.id2Value[key.id] == null) {\n            this.id2Value[key.id] = value;\n        }\n        else {\n            throw new errors_1.ValueError(\"Duplicate key: name=\" + key.name + \", id=\" + key.id);\n        }\n        return this;\n    };\n    FeedDict.prototype.addFeed = function (feed) {\n        this.add(feed.key, feed.value);\n    };\n    FeedDict.prototype.hasKey = function (key) {\n        return this.id2Value[key.id] != null;\n    };\n    FeedDict.prototype.getValue = function (key) {\n        if (this.id2Value[key.id] == null) {\n            throw new errors_1.ValueError(\"Nonexistent key: \" + JSON.stringify(key));\n        }\n        else {\n            return this.id2Value[key.id];\n        }\n    };\n    return FeedDict;\n}());\nexports.FeedDict = FeedDict;\nfunction execute(fetches, feedDict, kwargs) {\n    var arrayFetches = Array.isArray(fetches);\n    var fetchArray = arrayFetches ? fetches : [fetches];\n    var outputs = [];\n    var internalFeedDict = new FeedDict(feedDict);\n    for (var _i = 0, fetchArray_1 = fetchArray; _i < fetchArray_1.length; _i++) {\n        var fetch_1 = fetchArray_1[_i];\n        outputs.push(executeInternal(fetch_1, internalFeedDict, kwargs));\n    }\n    return arrayFetches ? outputs : outputs[0];\n}\nexports.execute = execute;\nfunction executeInternal(fetch, internalFeedDict, kwargs) {\n    if (internalFeedDict.hasKey(fetch)) {\n        return internalFeedDict.getValue(fetch);\n    }\n    if (fetch.sourceLayer instanceof topology_1.InputLayer) {\n        throw new errors_1.ValueError(\"Missing a feed value for SymbolicTensor from InputLayer \" +\n            (\"'\" + topology_1.InputLayer.name + \"'\"));\n    }\n    var inputs = fetch.inputs;\n    var inputValues = [];\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        var inputVal = executeInternal(input, internalFeedDict, kwargs);\n        inputValues.push(inputVal);\n    }\n    var output = fetch.sourceLayer.apply(inputValues, kwargs);\n    if (!Array.isArray(output)) {\n        output = [output];\n    }\n    var layerOutputs = getNodeOutputs(fetch);\n    var outputSymbolicTensors = Array.isArray(layerOutputs) ? layerOutputs : [layerOutputs];\n    for (var i = 0; i < outputSymbolicTensors.length; ++i) {\n        internalFeedDict.add(outputSymbolicTensors[i], output[i]);\n    }\n    return output.length === 1 ? output[0] : output[fetch.outputTensorIndex];\n}\nfunction getNodeOutputs(fetch) {\n    var layerOutputs;\n    if (fetch.sourceLayer.inboundNodes.length === 1) {\n        layerOutputs = fetch.sourceLayer.output;\n    }\n    else {\n        var nodeIndex = null;\n        for (var i = 0; i < fetch.sourceLayer.inboundNodes.length; ++i) {\n            for (var _i = 0, _a = fetch.sourceLayer.inboundNodes[i]\n                .outputTensors; _i < _a.length; _i++) {\n                var outputTensor = _a[_i];\n                if (outputTensor.id === fetch.id) {\n                    nodeIndex = i;\n                    break;\n                }\n            }\n        }\n        layerOutputs = fetch.sourceLayer.getOutputAt(nodeIndex);\n    }\n    return layerOutputs;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/engine/executor.js\n// module id = 133\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar constraints_1 = require(\"./constraints\");\nvar topology_1 = require(\"./engine/topology\");\nvar training_1 = require(\"./engine/training\");\nvar initializers_1 = require(\"./initializers\");\nvar advanced_activations_1 = require(\"./layers/advanced_activations\");\nvar convolutional_1 = require(\"./layers/convolutional\");\nvar convolutional_depthwise_1 = require(\"./layers/convolutional_depthwise\");\nvar core_1 = require(\"./layers/core\");\nvar embeddings_1 = require(\"./layers/embeddings\");\nvar merge_1 = require(\"./layers/merge\");\nvar normalization_1 = require(\"./layers/normalization\");\nvar padding_1 = require(\"./layers/padding\");\nvar pooling_1 = require(\"./layers/pooling\");\nvar recurrent_1 = require(\"./layers/recurrent\");\nvar wrappers_1 = require(\"./layers/wrappers\");\nvar losses_1 = require(\"./losses\");\nvar metrics_1 = require(\"./metrics\");\nvar models_1 = require(\"./models\");\nvar regularizers_1 = require(\"./regularizers\");\nvar ModelExports = (function () {\n    function ModelExports() {\n    }\n    ModelExports.model = function (config) {\n        return new training_1.Model(config);\n    };\n    ModelExports.sequential = function (config) {\n        return new models_1.Sequential(config);\n    };\n    ModelExports.loadModel = function (modelConfigPath) {\n        return models_1.loadModelInternal(modelConfigPath);\n    };\n    ModelExports.input = function (config) {\n        return topology_1.Input(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\n    ], ModelExports, \"model\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\n    ], ModelExports, \"sequential\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Models',\n            subheading: 'Loading',\n            useDocsFrom: 'loadModelInternal'\n        })\n    ], ModelExports, \"loadModel\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Models',\n            subheading: 'Inputs',\n            useDocsFrom: 'Input',\n            configParamIndices: [0]\n        })\n    ], ModelExports, \"input\", null);\n    return ModelExports;\n}());\nexports.ModelExports = ModelExports;\nvar LayerExports = (function () {\n    function LayerExports() {\n    }\n    LayerExports.inputLayer = function (config) {\n        return new topology_1.InputLayer(config);\n    };\n    LayerExports.elu = function (config) {\n        return new advanced_activations_1.ELU(config);\n    };\n    LayerExports.leakyReLU = function (config) {\n        return new advanced_activations_1.LeakyReLU(config);\n    };\n    LayerExports.softmax = function (config) {\n        return new advanced_activations_1.Softmax(config);\n    };\n    LayerExports.thresholdedReLU = function (config) {\n        return new advanced_activations_1.ThresholdedReLU(config);\n    };\n    LayerExports.conv1d = function (config) {\n        return new convolutional_1.Conv1D(config);\n    };\n    LayerExports.conv2d = function (config) {\n        return new convolutional_1.Conv2D(config);\n    };\n    LayerExports.conv2dTranspose = function (config) {\n        return new convolutional_1.Conv2DTranspose(config);\n    };\n    LayerExports.separableConv2d = function (config) {\n        return new convolutional_1.SeparableConv2D(config);\n    };\n    LayerExports.depthwiseConv2d = function (config) {\n        return new convolutional_depthwise_1.DepthwiseConv2D(config);\n    };\n    LayerExports.activation = function (config) {\n        return new core_1.Activation(config);\n    };\n    LayerExports.dense = function (config) {\n        return new core_1.Dense(config);\n    };\n    LayerExports.dropout = function (config) {\n        return new core_1.Dropout(config);\n    };\n    LayerExports.flatten = function (config) {\n        return new core_1.Flatten(config);\n    };\n    LayerExports.repeatVector = function (config) {\n        return new core_1.RepeatVector(config);\n    };\n    LayerExports.reshape = function (config) {\n        return new core_1.Reshape(config);\n    };\n    LayerExports.embedding = function (config) {\n        return new embeddings_1.Embedding(config);\n    };\n    LayerExports.add = function (config) {\n        return new merge_1.Add(config);\n    };\n    LayerExports.average = function (config) {\n        return new merge_1.Average(config);\n    };\n    LayerExports.concatenate = function (config) {\n        return new merge_1.Concatenate(config);\n    };\n    LayerExports.maximum = function (config) {\n        return new merge_1.Maximum(config);\n    };\n    LayerExports.minimum = function (config) {\n        return new merge_1.Minimum(config);\n    };\n    LayerExports.multiply = function (config) {\n        return new merge_1.Multiply(config);\n    };\n    LayerExports.batchNormalization = function (config) {\n        return new normalization_1.BatchNormalization(config);\n    };\n    LayerExports.zeroPadding2d = function (config) {\n        return new padding_1.ZeroPadding2D(config);\n    };\n    LayerExports.averagePooling1d = function (config) {\n        return new pooling_1.AveragePooling1D(config);\n    };\n    LayerExports.avgPool1d = function (config) {\n        return LayerExports.averagePooling1d(config);\n    };\n    LayerExports.avgPooling1d = function (config) {\n        return LayerExports.averagePooling1d(config);\n    };\n    LayerExports.averagePooling2d = function (config) {\n        return new pooling_1.AveragePooling2D(config);\n    };\n    LayerExports.avgPool2d = function (config) {\n        return LayerExports.averagePooling2d(config);\n    };\n    LayerExports.avgPooling2d = function (config) {\n        return LayerExports.averagePooling2d(config);\n    };\n    LayerExports.globalAveragePooling1d = function (config) {\n        return new pooling_1.GlobalAveragePooling1D(config);\n    };\n    LayerExports.globalAveragePooling2d = function (config) {\n        return new pooling_1.GlobalAveragePooling2D(config);\n    };\n    LayerExports.globalMaxPooling1d = function (config) {\n        return new pooling_1.GlobalMaxPooling1D(config);\n    };\n    LayerExports.globalMaxPooling2d = function (config) {\n        return new pooling_1.GlobalMaxPooling2D(config);\n    };\n    LayerExports.maxPooling1d = function (config) {\n        return new pooling_1.MaxPooling1D(config);\n    };\n    LayerExports.maxPooling2d = function (config) {\n        return new pooling_1.MaxPooling2D(config);\n    };\n    LayerExports.gru = function (config) {\n        return new recurrent_1.GRU(config);\n    };\n    LayerExports.gruCell = function (config) {\n        return new recurrent_1.GRUCell(config);\n    };\n    LayerExports.lstm = function (config) {\n        return new recurrent_1.LSTM(config);\n    };\n    LayerExports.lstmCell = function (config) {\n        return new recurrent_1.LSTMCell(config);\n    };\n    LayerExports.simpleRNN = function (config) {\n        return new recurrent_1.SimpleRNN(config);\n    };\n    LayerExports.simpleRNNCell = function (config) {\n        return new recurrent_1.SimpleRNNCell(config);\n    };\n    LayerExports.rnn = function (config) {\n        return new recurrent_1.RNN(config);\n    };\n    LayerExports.stackedRNNCells = function (config) {\n        return new recurrent_1.StackedRNNCells(config);\n    };\n    LayerExports.bidirectional = function (config) {\n        return new wrappers_1.Bidirectional(config);\n    };\n    LayerExports.timeDistributed = function (config) {\n        return new wrappers_1.TimeDistributed(config);\n    };\n    LayerExports.Layer = topology_1.Layer;\n    LayerExports.RNNCell = recurrent_1.RNNCell;\n    LayerExports.input = ModelExports.input;\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Inputs',\n            namespace: 'layers',\n            useDocsFrom: 'InputLayer',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"inputLayer\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'ELU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"elu\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'LeakyReLU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"leakyReLU\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'Softmax',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"softmax\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Advanced Activation',\n            namespace: 'layers',\n            useDocsFrom: 'ThresholdedReLU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"thresholdedReLU\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'Conv2DTranspose',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"conv2dTranspose\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'SeparableConv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"separableConv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Convolutional',\n            namespace: 'layers',\n            useDocsFrom: 'DepthwiseConv2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"depthwiseConv2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Activation',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"activation\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Dense',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"dense\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Dropout',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"dropout\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Flatten',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"flatten\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'RepeatVector',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"repeatVector\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Reshape',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"reshape\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Basic',\n            namespace: 'layers',\n            useDocsFrom: 'Embedding',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"embedding\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Add',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Average',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"average\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Concatenate',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"concatenate\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Maximum',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maximum\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Minimum',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"minimum\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Merge',\n            namespace: 'layers',\n            useDocsFrom: 'Multiply',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"multiply\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Normalization',\n            namespace: 'layers',\n            useDocsFrom: 'BatchNormalization',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"batchNormalization\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Padding',\n            namespace: 'layers',\n            useDocsFrom: 'ZeroPadding2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"zeroPadding2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'AveragePooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"averagePooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'AveragePooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"averagePooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalAveragePooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalAveragePooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalAveragePooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalAveragePooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalMaxPooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalMaxPooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'GlobalMaxPooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"globalMaxPooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'MaxPooling1D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maxPooling1d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Pooling',\n            namespace: 'layers',\n            useDocsFrom: 'MaxPooling2D',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"maxPooling2d\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'GRU',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"gru\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'GRUCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"gruCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'LSTM',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"lstm\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'LSTMCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"lstmCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'SimpleRNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"simpleRNN\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'SimpleRNNCell',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"simpleRNNCell\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'RNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"rnn\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Recurrent',\n            namespace: 'layers',\n            useDocsFrom: 'RNN',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"stackedRNNCells\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Wrapper',\n            namespace: 'layers',\n            useDocsFrom: 'Bidirectional',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"bidirectional\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Layers',\n            subheading: 'Wrapper',\n            namespace: 'layers',\n            useDocsFrom: 'TimeDistributed',\n            configParamIndices: [0]\n        })\n    ], LayerExports, \"timeDistributed\", null);\n    return LayerExports;\n}());\nexports.LayerExports = LayerExports;\nvar ConstraintExports = (function () {\n    function ConstraintExports() {\n    }\n    ConstraintExports.maxNorm = function (config) {\n        return new constraints_1.MaxNorm(config);\n    };\n    ConstraintExports.unitNorm = function (config) {\n        return new constraints_1.UnitNorm(config);\n    };\n    ConstraintExports.nonNeg = function () {\n        return new constraints_1.NonNeg();\n    };\n    ConstraintExports.minMaxNorm = function (config) {\n        return new constraints_1.MinMaxNorm(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'MaxNorm',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"maxNorm\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'UnitNorm',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"unitNorm\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Constraints', namespace: 'constraints', useDocsFrom: 'NonNeg' })\n    ], ConstraintExports, \"nonNeg\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Constraints',\n            namespace: 'constraints',\n            useDocsFrom: 'MinMaxNormConfig',\n            configParamIndices: [0]\n        })\n    ], ConstraintExports, \"minMaxNorm\", null);\n    return ConstraintExports;\n}());\nexports.ConstraintExports = ConstraintExports;\nvar InitializerExports = (function () {\n    function InitializerExports() {\n    }\n    InitializerExports.zeros = function () {\n        return new initializers_1.Zeros();\n    };\n    InitializerExports.ones = function () {\n        return new initializers_1.Ones();\n    };\n    InitializerExports.constant = function (config) {\n        return new initializers_1.Constant(config);\n    };\n    InitializerExports.randomUniform = function (config) {\n        return new initializers_1.RandomUniform(config);\n    };\n    InitializerExports.randomNormal = function (config) {\n        return new initializers_1.RandomNormal(config);\n    };\n    InitializerExports.truncatedNormal = function (config) {\n        return new initializers_1.TruncatedNormal(config);\n    };\n    InitializerExports.identity = function (config) {\n        return new initializers_1.Identity(config);\n    };\n    InitializerExports.varianceScaling = function (config) {\n        return new initializers_1.VarianceScaling(config);\n    };\n    InitializerExports.glorotUniform = function (config) {\n        return new initializers_1.GlorotUniform(config);\n    };\n    InitializerExports.glorotNormal = function (config) {\n        return new initializers_1.GlorotNormal(config);\n    };\n    InitializerExports.heNormal = function (config) {\n        return new initializers_1.HeNormal(config);\n    };\n    InitializerExports.leCunNormal = function (config) {\n        return new initializers_1.LeCunNormal(config);\n    };\n    InitializerExports.orthogonal = function (config) {\n        return new initializers_1.Orthogonal(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Zeros'\n        })\n    ], InitializerExports, \"zeros\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Initializers', namespace: 'initializers', useDocsFrom: 'Ones' })\n    ], InitializerExports, \"ones\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Constant',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"constant\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'RandomUniform',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"randomUniform\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'RandomNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"randomNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'TruncatedNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"truncatedNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Identity',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"identity\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'VarianceScaling',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"varianceScaling\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'GlorotUniform',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"glorotUniform\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'GlorotNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"glorotNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'HeNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"heNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'LeCunNormal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"leCunNormal\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Initializers',\n            namespace: 'initializers',\n            useDocsFrom: 'Orthogonal',\n            configParamIndices: [0]\n        })\n    ], InitializerExports, \"orthogonal\", null);\n    return InitializerExports;\n}());\nexports.InitializerExports = InitializerExports;\nvar MetricExports = (function () {\n    function MetricExports() {\n    }\n    MetricExports.binaryAccuracy = function (yTrue, yPred) {\n        return metrics_1.binaryAccuracy(yTrue, yPred);\n    };\n    MetricExports.binaryCrossentropy = function (yTrue, yPred) {\n        return metrics_1.binaryCrossentropy(yTrue, yPred);\n    };\n    MetricExports.categoricalAccuracy = function (yTrue, yPred) {\n        return metrics_1.categoricalAccuracy(yTrue, yPred);\n    };\n    MetricExports.categoricalCrossentropy = function (yTrue, yPred) {\n        return losses_1.categoricalCrossentropy(yTrue, yPred);\n    };\n    MetricExports.cosineProximity = function (yTrue, yPred) {\n        return losses_1.cosineProximity(yTrue, yPred);\n    };\n    MetricExports.prototype.meanAbsoluteError = function (yTrue, yPred) {\n        return losses_1.meanAbsoluteError(yTrue, yPred);\n    };\n    MetricExports.prototype.meanAbsolutePercentageError = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.prototype.MAPE = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.prototype.mape = function (yTrue, yPred) {\n        return losses_1.meanAbsolutePercentageError(yTrue, yPred);\n    };\n    MetricExports.meanSquaredError = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    MetricExports.MSE = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    MetricExports.mse = function (yTrue, yPred) {\n        return losses_1.meanSquaredError(yTrue, yPred);\n    };\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanAbsoluteError'\n        })\n    ], MetricExports.prototype, \"meanAbsoluteError\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanAbsolutePercentageError'\n        })\n    ], MetricExports.prototype, \"meanAbsolutePercentageError\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Metrics', namespace: 'metrics', useDocsFrom: 'binaryAccuracy' })\n    ], MetricExports, \"binaryAccuracy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'binaryCrossentropy'\n        })\n    ], MetricExports, \"binaryCrossentropy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'categoricalAccuracy'\n        })\n    ], MetricExports, \"categoricalAccuracy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'categoricalCrossentropy'\n        })\n    ], MetricExports, \"categoricalCrossentropy\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'cosineProximity'\n        })\n    ], MetricExports, \"cosineProximity\", null);\n    __decorate([\n        tfjs_core_1.doc({\n            heading: 'Metrics',\n            namespace: 'metrics',\n            useDocsFrom: 'meanSquaredError'\n        })\n    ], MetricExports, \"meanSquaredError\", null);\n    return MetricExports;\n}());\nexports.MetricExports = MetricExports;\nvar RegularizerExports = (function () {\n    function RegularizerExports() {\n    }\n    RegularizerExports.l1l2 = function (config) {\n        return new regularizers_1.L1L2(config);\n    };\n    RegularizerExports.l1 = function (config) {\n        return regularizers_1.l1(config);\n    };\n    RegularizerExports.l2 = function (config) {\n        return regularizers_1.l2(config);\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l1l2\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l1\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\n    ], RegularizerExports, \"l2\", null);\n    return RegularizerExports;\n}());\nexports.RegularizerExports = RegularizerExports;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/exports.js\n// module id = 134\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar activations_1 = require(\"../activations\");\nvar tfjs_backend_1 = require(\"../backend/tfjs_backend\");\nvar tfjs_backend_2 = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar types_1 = require(\"../types\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar LeakyReLU = (function (_super) {\n    __extends(LeakyReLU, _super);\n    function LeakyReLU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_ALPHA = 0.3;\n        if (config == null) {\n            config = {};\n        }\n        _this.alpha = config.alpha == null ? _this.DEFAULT_ALPHA : config.alpha;\n        return _this;\n    }\n    LeakyReLU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return tfjs_core_1.leakyRelu(x, this.alpha);\n    };\n    LeakyReLU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    LeakyReLU.prototype.getClassName = function () {\n        return 'LeakyReLU';\n    };\n    LeakyReLU.prototype.getConfig = function () {\n        var config = { alpha: this.alpha };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return LeakyReLU;\n}(topology_1.Layer));\nexports.LeakyReLU = LeakyReLU;\ngeneric_utils.ClassNameMap.register('LeakyReLU', LeakyReLU);\nvar ELU = (function (_super) {\n    __extends(ELU, _super);\n    function ELU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_ALPHA = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        if (config.alpha != null && config.alpha !== _this.DEFAULT_ALPHA) {\n            throw new errors_1.NotImplementedError(\"Non-default alpha value (\" + config.alpha + \") is not supported by the \" +\n                \"ELU layer yet.\");\n        }\n        _this.alpha = config.alpha == null ? _this.DEFAULT_ALPHA : config.alpha;\n        return _this;\n    }\n    ELU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return tfjs_core_1.elu(x);\n    };\n    ELU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    ELU.prototype.getClassName = function () {\n        return 'ELU';\n    };\n    ELU.prototype.getConfig = function () {\n        var config = { alpha: this.alpha };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ELU;\n}(topology_1.Layer));\nexports.ELU = ELU;\ngeneric_utils.ClassNameMap.register('ELU', ELU);\nvar ThresholdedReLU = (function (_super) {\n    __extends(ThresholdedReLU, _super);\n    function ThresholdedReLU(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_THETA = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        _this.theta = config.theta == null ? _this.DEFAULT_THETA : config.theta;\n        _this.thetaTensor = tfjs_backend_2.getScalar(_this.theta);\n        return _this;\n    }\n    ThresholdedReLU.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return x.mul(tfjs_backend_1.cast(x.greater(this.thetaTensor), types_1.DType.float32));\n    };\n    ThresholdedReLU.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    ThresholdedReLU.prototype.getClassName = function () {\n        return 'ThresholdedReLU';\n    };\n    ThresholdedReLU.prototype.getConfig = function () {\n        var config = { theta: this.theta };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ThresholdedReLU;\n}(topology_1.Layer));\nexports.ThresholdedReLU = ThresholdedReLU;\ngeneric_utils.ClassNameMap.register('ThresholdedReLU', ThresholdedReLU);\nvar Softmax = (function (_super) {\n    __extends(Softmax, _super);\n    function Softmax(config) {\n        var _this = _super.call(this, config == null ? {} : config) || this;\n        _this.DEFAULT_AXIS = 1.0;\n        if (config == null) {\n            config = {};\n        }\n        _this.axis = config.theta == null ? _this.DEFAULT_AXIS : config.theta;\n        return _this;\n    }\n    Softmax.prototype.call = function (inputs, kwargs) {\n        var x = generic_utils.getExactlyOneTensor(inputs);\n        return activations_1.softmax(x, this.axis);\n    };\n    Softmax.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    Softmax.prototype.getClassName = function () {\n        return 'Softmax';\n    };\n    Softmax.prototype.getConfig = function () {\n        var config = { axis: this.axis };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Softmax;\n}(topology_1.Layer));\nexports.Softmax = Softmax;\ngeneric_utils.ClassNameMap.register('Softmax', Softmax);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/advanced_activations.js\n// module id = 135\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar constraints_1 = require(\"../constraints\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar conv_utils_1 = require(\"../utils/conv_utils\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar convolutional_1 = require(\"./convolutional\");\nvar DepthwiseConv2D = (function (_super) {\n    __extends(DepthwiseConv2D, _super);\n    function DepthwiseConv2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.depthwiseKernel = null;\n        _this.depthMultiplier =\n            config.depthMultiplier == null ? 1 : config.depthMultiplier;\n        _this.depthwiseInitializer = initializers_1.getInitializer(config.depthwiseInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.depthwiseConstraint = constraints_1.getConstraint(config.depthwiseConstraint);\n        _this.depthwiseRegularizer = regularizers_1.getRegularizer(config.depthwiseRegularizer);\n        return _this;\n    }\n    DepthwiseConv2D.prototype.getClassName = function () {\n        return 'DepthwiseConv2D';\n    };\n    DepthwiseConv2D.prototype.build = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        if (inputShape.length < 4) {\n            throw new errors_1.ValueError(\"Inputs to DepthwiseConv2D should have rank 4. \" +\n                (\"Received input shape: \" + JSON.stringify(inputShape) + \".\"));\n        }\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : 3;\n        if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\n            throw new errors_1.ValueError('The channel dimension of the inputs to DepthwiseConv2D should ' +\n                (\"be defined, but is not (\" + inputShape[channelAxis] + \").\"));\n        }\n        var inputDim = inputShape[channelAxis];\n        var depthwiseKernelShape = [\n            this.kernelSize[0], this.kernelSize[1], inputDim, this.depthMultiplier\n        ];\n        this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, null, this.depthwiseInitializer, this.depthwiseRegularizer, true, this.depthwiseConstraint);\n        if (this.useBias) {\n            this.bias = this.addWeight('bias', [inputDim * this.depthMultiplier], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n        }\n        else {\n            this.bias = null;\n        }\n        this.built = true;\n    };\n    DepthwiseConv2D.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils_1.getExactlyOneTensor(inputs);\n        var outputs = K.depthwiseConv2d(inputs, this.depthwiseKernel.read(), this.strides, this.padding, this.dataFormat, null);\n        if (this.useBias) {\n            outputs = K.biasAdd(outputs, this.bias.read(), this.dataFormat);\n        }\n        if (this.activation != null) {\n            outputs = this.activation(outputs);\n        }\n        return outputs;\n    };\n    DepthwiseConv2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        var outFilters = this.dataFormat === 'channelsFirst' ?\n            inputShape[1] * this.depthMultiplier :\n            inputShape[3] * this.depthMultiplier;\n        var outRows = conv_utils_1.convOutputLength(rows, this.kernelSize[0], this.padding, this.strides[0]);\n        var outCols = conv_utils_1.convOutputLength(cols, this.kernelSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], outFilters, outRows, outCols];\n        }\n        else {\n            return [inputShape[0], outRows, outCols, outFilters];\n        }\n    };\n    return DepthwiseConv2D;\n}(convolutional_1.Conv2D));\nexports.DepthwiseConv2D = DepthwiseConv2D;\ngeneric_utils.ClassNameMap.register('DepthwiseConv2D', DepthwiseConv2D);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/convolutional_depthwise.js\n// module id = 136\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar activations_1 = require(\"../activations\");\nvar K = require(\"../backend/tfjs_backend\");\nvar constraints_1 = require(\"../constraints\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar math_utils = require(\"../utils/math_utils\");\nvar Dropout = (function (_super) {\n    __extends(Dropout, _super);\n    function Dropout(config) {\n        var _this = _super.call(this, config) || this;\n        _this.rate = Math.max(Math.min(config.rate, 1), 0);\n        _this.rateScalar = K.getScalar(_this.rate);\n        _this.noiseShape = config.noiseShape;\n        _this.seed = config.seed;\n        if (_this.seed != null) {\n            throw new errors_1.NotImplementedError('Non-default seed is not implemented in Dropout layer yet: ' +\n                _this.seed);\n        }\n        _this.supportsMasking = true;\n        return _this;\n    }\n    Dropout.prototype.getNoiseShape = function (input) {\n        if (this.noiseShape == null) {\n            return this.noiseShape;\n        }\n        var inputShape = input.shape;\n        var noiseShape = [];\n        for (var i = 0; i < this.noiseShape.length; ++i) {\n            noiseShape.push(this.noiseShape[i] == null ? inputShape[i] : this.noiseShape[i]);\n        }\n        return noiseShape;\n    };\n    Dropout.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.noiseShape != null &&\n            !tfjs_core_1.util.arraysEqual(input.shape, this.noiseShape)) {\n            throw new errors_1.NotImplementedError('Non-default noise shape is not implemented in Dropout layer yet: ' +\n                JSON.stringify(this.noiseShape));\n        }\n        if (0 < this.rate && this.rate < 1) {\n            var training = kwargs['training'] == null ? false : kwargs['training'];\n            var noiseShape_1 = this.getNoiseShape(input);\n            var output = K.inTrainPhase(function () { return K.dropout(input, _this.rateScalar, noiseShape_1, _this.seed); }, function () { return input; }, training);\n            return output;\n        }\n        return inputs;\n    };\n    Dropout.prototype.getClassName = function () {\n        return 'Dropout';\n    };\n    Dropout.prototype.getConfig = function () {\n        var config = {\n            rate: this.rate,\n            noiseShape: this.noiseShape,\n            seed: this.seed,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Dropout;\n}(topology_1.Layer));\nexports.Dropout = Dropout;\ngeneric_utils.ClassNameMap.register('Dropout', Dropout);\nvar Dense = (function (_super) {\n    __extends(Dense, _super);\n    function Dense(config) {\n        var _this = _super.call(this, config) || this;\n        _this.activation = null;\n        _this.useBias = true;\n        _this.kernel = null;\n        _this.bias = null;\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\n        if (config.batchInputShape == null && config.inputShape == null &&\n            config.inputDim != null) {\n            var batchSize = null;\n            if (config.batchSize != null) {\n                batchSize = config.batchSize;\n            }\n            _this.batchInputShape = [batchSize, config.inputDim];\n        }\n        _this.units = config.units;\n        _this.activation = activations_1.getActivation(config.activation);\n        if (config.useBias != null) {\n            _this.useBias = config.useBias;\n        }\n        _this.kernelInitializer = initializers_1.getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\n        _this.biasInitializer =\n            initializers_1.getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\n        _this.kernelConstraint = constraints_1.getConstraint(config.kernelConstraint);\n        _this.biasConstraint = constraints_1.getConstraint(config.biasConstraint);\n        _this.kernelRegularizer = regularizers_1.getRegularizer(config.kernelRegularizer);\n        _this.biasRegularizer = regularizers_1.getRegularizer(config.biasRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        _this.inputSpec = [{ minNDim: 2 }];\n        return _this;\n    }\n    Dense.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var inputLastDim = inputShape[inputShape.length - 1];\n        if (this.kernel == null) {\n            this.kernel = this.addWeight('kernel', [inputLastDim, this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\n            if (this.useBias) {\n                this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\n            }\n        }\n        this.inputSpec = [{ minNDim: 2, axes: (_a = {}, _a[-1] = inputLastDim, _a) }];\n        this.built = true;\n        var _a;\n    };\n    Dense.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var outputShape = inputShape.slice();\n        outputShape[outputShape.length - 1] = this.units;\n        return outputShape;\n    };\n    Dense.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        var output = K.dot(input, this.kernel.read());\n        if (this.bias != null) {\n            output = K.biasAdd(output, this.bias.read());\n        }\n        if (this.activation != null) {\n            output = this.activation(output);\n        }\n        return output;\n    };\n    Dense.prototype.getClassName = function () {\n        return 'Dense';\n    };\n    Dense.prototype.getConfig = function () {\n        var config = {\n            units: this.units,\n            activation: activations_1.serializeActivation(this.activation),\n            useBias: this.useBias,\n            kernelInitializer: initializers_1.serializeInitializer(this.kernelInitializer),\n            biasInitializer: initializers_1.serializeInitializer(this.biasInitializer),\n            kernelRegularizer: regularizers_1.serializeRegularizer(this.kernelRegularizer),\n            biasRegularizer: regularizers_1.serializeRegularizer(this.biasRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            kernelConstraint: constraints_1.serializeConstraint(this.kernelConstraint),\n            biasConstraint: constraints_1.serializeConstraint(this.biasConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Dense;\n}(topology_1.Layer));\nexports.Dense = Dense;\ngeneric_utils.ClassNameMap.register('Dense', Dense);\nvar Flatten = (function (_super) {\n    __extends(Flatten, _super);\n    function Flatten(config) {\n        var _this = _super.call(this, config || {}) || this;\n        _this.inputSpec = [{ minNDim: 3 }];\n        return _this;\n    }\n    Flatten.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        for (var _i = 0, _a = inputShape.slice(1); _i < _a.length; _i++) {\n            var dim = _a[_i];\n            if (dim == null) {\n                throw new errors_1.ValueError(\"The shape of the input to \\\"Flatten\\\" is not fully defined \" +\n                    (\"(got \" + inputShape.slice(1) + \"). Make sure to pass a complete \") +\n                    \"\\\"input_shape\\\" or \\\"batch_input_shape\\\" argument to the first \" +\n                    \"layer in your model.\");\n            }\n        }\n        return [inputShape[0], math_utils.arrayProd(inputShape, 1)];\n    };\n    Flatten.prototype.getClassName = function () {\n        return 'Flatten';\n    };\n    Flatten.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        return K.batchFlatten(generic_utils.getExactlyOneTensor(inputs));\n    };\n    return Flatten;\n}(topology_1.Layer));\nexports.Flatten = Flatten;\ngeneric_utils.ClassNameMap.register('Flatten', Flatten);\nvar Activation = (function (_super) {\n    __extends(Activation, _super);\n    function Activation(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        _this.activation = activations_1.getActivation(config.activation);\n        return _this;\n    }\n    Activation.prototype.getClassName = function () {\n        return 'Activation';\n    };\n    Activation.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return this.activation(input);\n    };\n    return Activation;\n}(topology_1.Layer));\nexports.Activation = Activation;\ngeneric_utils.ClassNameMap.register('Activation', Activation);\nvar RepeatVector = (function (_super) {\n    __extends(RepeatVector, _super);\n    function RepeatVector(config) {\n        var _this = _super.call(this, config) || this;\n        _this.n = config.n;\n        _this.inputSpec = [{ ndim: 2 }];\n        return _this;\n    }\n    RepeatVector.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], this.n, inputShape[1]];\n    };\n    RepeatVector.prototype.call = function (inputs, kwargs) {\n        inputs = generic_utils_1.getExactlyOneTensor(inputs);\n        return K.repeat(inputs, this.n);\n    };\n    RepeatVector.prototype.getClassName = function () {\n        return 'RepeatVector';\n    };\n    RepeatVector.prototype.getConfig = function () {\n        var config = {\n            n: this.n,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return RepeatVector;\n}(topology_1.Layer));\nexports.RepeatVector = RepeatVector;\ngeneric_utils.ClassNameMap.register('RepeatVector', RepeatVector);\nvar Reshape = (function (_super) {\n    __extends(Reshape, _super);\n    function Reshape(config) {\n        var _this = _super.call(this, config) || this;\n        _this.targetShape = config.targetShape;\n        for (var i = 0; i < _this.targetShape.length; ++i) {\n            if (_this.isUnknown(_this.targetShape[i])) {\n                _this.targetShape[i] = null;\n            }\n        }\n        return _this;\n    }\n    Reshape.prototype.isUnknown = function (dim) {\n        return dim < 0 || dim == null;\n    };\n    Reshape.prototype.fixUnknownDimension = function (inputShape, outputShape) {\n        var errorMsg = 'Total size of new array must be unchanged.';\n        var finalShape = outputShape.slice();\n        var known = 1;\n        var unknown = null;\n        for (var i = 0; i < finalShape.length; ++i) {\n            var dim = finalShape[i];\n            if (this.isUnknown(dim)) {\n                if (unknown === null) {\n                    unknown = i;\n                }\n                else {\n                    throw new errors_1.ValueError('Can only specifiy one unknown dimension.');\n                }\n            }\n            else {\n                known *= dim;\n            }\n        }\n        var originalSize = math_utils.arrayProd(inputShape);\n        if (unknown !== null) {\n            if (known === 0 || originalSize % known !== 0) {\n                throw new errors_1.ValueError(errorMsg);\n            }\n            finalShape[unknown] = originalSize / known;\n        }\n        else if (originalSize !== known) {\n            throw new errors_1.ValueError(errorMsg);\n        }\n        return finalShape;\n    };\n    Reshape.prototype.computeOutputShape = function (inputShape) {\n        var anyUnknownDims = false;\n        for (var i = 0; i < inputShape.length; ++i) {\n            if (this.isUnknown(inputShape[i])) {\n                anyUnknownDims = true;\n                break;\n            }\n        }\n        if (anyUnknownDims) {\n            return inputShape.slice(0, 1).concat(this.targetShape);\n        }\n        else {\n            return inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n        }\n    };\n    Reshape.prototype.getClassName = function () {\n        return 'Reshape';\n    };\n    Reshape.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        var inputShape = K.shape(input);\n        var outputShape = inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\n        return K.reshape(input, outputShape);\n    };\n    return Reshape;\n}(topology_1.Layer));\nexports.Reshape = Reshape;\ngeneric_utils.ClassNameMap.register('Reshape', Reshape);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/core.js\n// module id = 137\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar constraints_1 = require(\"../constraints\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar Embedding = (function (_super) {\n    __extends(Embedding, _super);\n    function Embedding(config) {\n        var _this = _super.call(this, config) || this;\n        _this.embeddings = null;\n        _this.DEFAULT_EMBEDDINGS_INITIALIZER = 'randomUniform';\n        if (config.batchInputShape == null && config.inputShape == null) {\n            var batchSize = null;\n            if (config.batchSize != null) {\n                batchSize = config.batchSize;\n            }\n            if (config.inputLength == null) {\n                _this.batchInputShape = [batchSize, null];\n            }\n            else {\n                _this.batchInputShape =\n                    [batchSize].concat(generic_utils.toList(config.inputLength));\n            }\n        }\n        _this.inputDim = config.inputDim;\n        _this.outputDim = config.outputDim;\n        _this.embeddingsInitializer = initializers_1.getInitializer(config.embeddingsInitializer || _this.DEFAULT_EMBEDDINGS_INITIALIZER);\n        _this.embeddingsRegularizer = regularizers_1.getRegularizer(config.embeddingsRegularizer);\n        _this.activityRegularizer = regularizers_1.getRegularizer(config.activityRegularizer);\n        _this.embeddingsConstraint = constraints_1.getConstraint(config.embeddingsConstraint);\n        _this.maskZero = config.maskZero;\n        _this.inputLength = config.inputLength;\n        return _this;\n    }\n    Embedding.prototype.build = function (inputShape) {\n        this.embeddings = this.addWeight('embeddings', [this.inputDim, this.outputDim], this.dtype, this.embeddingsInitializer, this.embeddingsRegularizer, true, this.embeddingsConstraint);\n        this.built = true;\n    };\n    Embedding.prototype.computeMask = function (inputs, mask) {\n        throw new errors_1.NotImplementedError('computeMask has not been implemented for Embedding yet');\n    };\n    Embedding.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (this.inputLength == null) {\n            return inputShape.concat([this.outputDim]);\n        }\n        var inLens = generic_utils.toList(this.inputLength);\n        if (inLens.length !== inputShape.length - 1) {\n            throw new errors_1.ValueError(\"\\\"inputLength\\\" is \" + this.inputLength + \", but received \" +\n                (\"input shape has shape \" + inputShape));\n        }\n        else {\n            var i = 0;\n            for (var k = 0; k < inLens.length; ++k) {\n                var s1 = inLens[k];\n                var s2 = inputShape[k + 1];\n                if ((s1 != null) && (s2 != null) && (s1 !== s2)) {\n                    throw new errors_1.ValueError(\"\\\"inputLength\\\" is \" + this.inputLength + \", but received \" +\n                        (\"input shape has shape \" + inputShape));\n                }\n                else if (s1 == null) {\n                    inLens[i] = s2;\n                }\n                i++;\n            }\n        }\n        return [inputShape[0]].concat(inLens, [this.outputDim]);\n    };\n    Embedding.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (K.dtype(input) !== 'int32') {\n            input = K.cast(input, 'int32');\n        }\n        var output = K.gather(this.embeddings.read(), input.as1D());\n        return K.reshape(output, generic_utils_1.getExactlyOneShape(this.computeOutputShape(input.shape)));\n    };\n    Embedding.prototype.getClassName = function () {\n        return 'Embedding';\n    };\n    Embedding.prototype.getConfig = function () {\n        var config = {\n            inputDim: this.inputDim,\n            outputDim: this.outputDim,\n            embeddingsInitializer: initializers_1.serializeInitializer(this.embeddingsInitializer),\n            embeddingsRegularizer: regularizers_1.serializeRegularizer(this.embeddingsRegularizer),\n            activityRegularizer: regularizers_1.serializeRegularizer(this.activityRegularizer),\n            embeddingsConstraint: constraints_1.serializeConstraint(this.embeddingsConstraint),\n            maskZero: this.maskZero,\n            inputLength: this.inputLength\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Embedding;\n}(topology_1.Layer));\nexports.Embedding = Embedding;\ngeneric_utils.ClassNameMap.register('Embedding', Embedding);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/embeddings.js\n// module id = 138\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar mathUtils = require(\"../utils/math_utils\");\nvar Merge = (function (_super) {\n    __extends(Merge, _super);\n    function Merge(config) {\n        var _this = _super.call(this, config || {}) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    Merge.prototype.getClassName = function () {\n        return 'Merge';\n    };\n    Merge.prototype.mergeFunction = function (inputs) {\n        throw new errors_1.NotImplementedError();\n    };\n    Merge.prototype.computeElementwiseOpOutputShape = function (shape1, shape2) {\n        if (shape1 == null || shape2 == null) {\n            return null;\n        }\n        else if (shape1.length < shape2.length) {\n            return this.computeElementwiseOpOutputShape(shape2, shape1);\n        }\n        else if (shape2.length === 0) {\n            return shape1;\n        }\n        var outputShape = shape1.slice(0, shape1.length - shape2.length);\n        for (var k = 0; k < shape2.length; ++k) {\n            var i = shape1[shape1.length - shape2.length + k];\n            var j = shape2[k];\n            if (i == null || j == null || i < 0 || j < 0) {\n                outputShape.push(null);\n            }\n            else if (i === 1) {\n                outputShape.push(j);\n            }\n            else if (j === 1) {\n                outputShape.push(i);\n            }\n            else {\n                if (i !== j) {\n                    throw new errors_1.ValueError('Operands could not be broadcast together with shapes ' +\n                        JSON.stringify(shape1) + ' ' + JSON.stringify(shape2));\n                }\n                outputShape.push(i);\n            }\n        }\n        return outputShape;\n    };\n    Merge.prototype.build = function (inputShape) {\n        if (Array.isArray(inputShape) && !Array.isArray(inputShape[0])) {\n            inputShape = [generic_utils.getExactlyOneShape(inputShape)];\n        }\n        inputShape = inputShape;\n        if (inputShape.length < 2) {\n            throw new errors_1.ValueError('A merge layer should be called on an Array of at least 2 inputs.' +\n                (\" Got \" + inputShape.length + \" input(s).\"));\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_1 = inputShape; _i < inputShape_1.length; _i++) {\n            var shape = inputShape_1[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length > 1) {\n            throw new errors_1.ValueError(\"Can not merge tensors with different batch sizes. \" +\n                (\"Got tensors with shapes: \" + JSON.stringify(inputShape) + \".\"));\n        }\n        var outputShape = inputShape[0] == null ? null : inputShape[0].slice(1);\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var allRanks = inputShape.map(function (shape) { return shape.length; });\n        if (inputShape.indexOf(null) === -1 &&\n            generic_utils.unique(allRanks).length === 1) {\n            this.reshapeRequired = false;\n        }\n        else {\n            this.reshapeRequired = true;\n        }\n    };\n    Merge.prototype.call = function (inputs, kwargs) {\n        inputs = inputs;\n        if (this.reshapeRequired) {\n            var reshapedInputs = [];\n            var inputDims = inputs.map(function (input) { return K.ndim(input); });\n            if (inputDims.indexOf(null) === -1) {\n                var maxNDim = mathUtils.max(inputDims);\n                for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n                    var x = inputs_1[_i];\n                    var xNDim = K.ndim(x);\n                    for (var k = 0; k < maxNDim - xNDim; ++k) {\n                        x = K.expandDims(x, 1);\n                    }\n                    reshapedInputs.push(x);\n                }\n                return this.mergeFunction(reshapedInputs);\n            }\n            else {\n                var transposed = false;\n                for (var _a = 0, inputs_2 = inputs; _a < inputs_2.length; _a++) {\n                    var x = inputs_2[_a];\n                    var xNDim = K.ndim(x);\n                    if (xNDim == null) {\n                        var xShape = K.shape(x);\n                        var batchSize = xShape[0];\n                        var newShape = xShape.slice(1).concat([batchSize]);\n                        var xTransposed = K.reshape(x, [batchSize].concat(mathUtils.arrayProd(xShape.slice(1))));\n                        xTransposed = K.permuteDimensions(xTransposed, [1, 0]);\n                        xTransposed = K.reshape(xTransposed, newShape);\n                        reshapedInputs.push(xTransposed);\n                        transposed = true;\n                    }\n                    else if (xNDim > 1) {\n                        var dims = mathUtils.range(1, xNDim).concat([0]);\n                        reshapedInputs.push(K.permuteDimensions(x, dims));\n                        transposed = true;\n                    }\n                    else {\n                        reshapedInputs.push(x);\n                    }\n                }\n                var y = this.mergeFunction(reshapedInputs);\n                var yNDim = K.ndim(y);\n                if (transposed) {\n                    if (yNDim == null) {\n                        var yShape = K.shape(y);\n                        var yNDim_1 = yShape.length;\n                        var batchSize = yShape[yNDim_1 - 1];\n                        var newShape = [batchSize].concat(yShape.slice(0, yShape.length - 1));\n                        y = K.reshape(K.permuteDimensions(K.reshape(y, [-1, batchSize]), [1, 0]), newShape);\n                    }\n                    else if (yNDim > 1) {\n                        var dims = [yNDim - 1].concat(mathUtils.range(0, yNDim - 1));\n                        y = K.permuteDimensions(y, dims);\n                    }\n                }\n                return y;\n            }\n        }\n        else {\n            return this.mergeFunction(inputs);\n        }\n    };\n    Merge.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        var outputShape;\n        if (inputShape[0] == null) {\n            outputShape = null;\n        }\n        else {\n            outputShape = inputShape[0].slice(1);\n        }\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_2 = inputShape; _i < inputShape_2.length; _i++) {\n            var shape = inputShape_2[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length === 1) {\n            outputShape = batchSizes.concat(outputShape);\n        }\n        else {\n            outputShape = [null].concat(outputShape);\n        }\n        return outputShape;\n    };\n    return Merge;\n}(topology_1.Layer));\nexports.Merge = Merge;\nvar Add = (function (_super) {\n    __extends(Add, _super);\n    function Add(config) {\n        return _super.call(this, config) || this;\n    }\n    Add.prototype.getClassName = function () {\n        return 'Add';\n    };\n    Add.prototype.mergeFunction = function (inputs) {\n        var output = K.zeros(inputs[0].shape);\n        for (var _i = 0, inputs_3 = inputs; _i < inputs_3.length; _i++) {\n            var input = inputs_3[_i];\n            output = K.add(output, input);\n        }\n        return output;\n    };\n    return Add;\n}(Merge));\nexports.Add = Add;\ngeneric_utils.ClassNameMap.register('Add', Add);\nfunction add(config) {\n    if (Array.isArray(config)) {\n        var layer = new Add({});\n        return layer.apply(config);\n    }\n    else {\n        return new Add(config);\n    }\n}\nexports.add = add;\nvar Multiply = (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply(config) {\n        return _super.call(this, config) || this;\n    }\n    Multiply.prototype.getClassName = function () {\n        return 'Multiply';\n    };\n    Multiply.prototype.mergeFunction = function (inputs) {\n        var output = K.ones(inputs[0].shape);\n        for (var _i = 0, inputs_4 = inputs; _i < inputs_4.length; _i++) {\n            var input = inputs_4[_i];\n            output = K.multiply(output, input);\n        }\n        return output;\n    };\n    return Multiply;\n}(Merge));\nexports.Multiply = Multiply;\ngeneric_utils.ClassNameMap.register('Multiply', Multiply);\nfunction multiply(config) {\n    if (Array.isArray(config)) {\n        var layer = new Multiply({});\n        return layer.apply(config);\n    }\n    else {\n        return new Multiply(config);\n    }\n}\nexports.multiply = multiply;\nvar Average = (function (_super) {\n    __extends(Average, _super);\n    function Average(config) {\n        return _super.call(this, config) || this;\n    }\n    Average.prototype.getClassName = function () {\n        return 'Average';\n    };\n    Average.prototype.mergeFunction = function (inputs) {\n        var output = K.zeros(inputs[0].shape);\n        for (var _i = 0, inputs_5 = inputs; _i < inputs_5.length; _i++) {\n            var input = inputs_5[_i];\n            output = K.add(output, input);\n        }\n        return K.scalarTimesArray(K.getScalar(1 / inputs.length), output);\n    };\n    return Average;\n}(Merge));\nexports.Average = Average;\ngeneric_utils.ClassNameMap.register('Average', Average);\nfunction average(config) {\n    if (Array.isArray(config)) {\n        var layer = new Average({});\n        return layer.apply(config);\n    }\n    else {\n        return new Average(config);\n    }\n}\nexports.average = average;\nvar Maximum = (function (_super) {\n    __extends(Maximum, _super);\n    function Maximum(config) {\n        return _super.call(this, config) || this;\n    }\n    Maximum.prototype.getClassName = function () {\n        return 'Maximum';\n    };\n    Maximum.prototype.mergeFunction = function (inputs) {\n        var output = inputs[0];\n        for (var i = 1; i < inputs.length; ++i) {\n            output = K.maximum(output, inputs[i]);\n        }\n        return output;\n    };\n    return Maximum;\n}(Merge));\nexports.Maximum = Maximum;\ngeneric_utils.ClassNameMap.register('Maximum', Maximum);\nfunction maximum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Maximum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Maximum(config);\n    }\n}\nexports.maximum = maximum;\nvar Minimum = (function (_super) {\n    __extends(Minimum, _super);\n    function Minimum(config) {\n        return _super.call(this, config) || this;\n    }\n    Minimum.prototype.getClassName = function () {\n        return 'Minimum';\n    };\n    Minimum.prototype.mergeFunction = function (inputs) {\n        var output = inputs[0];\n        for (var i = 1; i < inputs.length; ++i) {\n            output = K.minimum(output, inputs[i]);\n        }\n        return output;\n    };\n    return Minimum;\n}(Merge));\nexports.Minimum = Minimum;\ngeneric_utils.ClassNameMap.register('Minimum', Minimum);\nfunction minimum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Minimum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Minimum(config);\n    }\n}\nexports.minimum = minimum;\nvar Concatenate = (function (_super) {\n    __extends(Concatenate, _super);\n    function Concatenate(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_AXIS = -1;\n        if (config == null) {\n            config = {};\n        }\n        _this.axis = config.axis == null ? _this.DEFAULT_AXIS : config.axis;\n        _this.supportsMasking = true;\n        _this.reshapeRequired = false;\n        return _this;\n    }\n    Concatenate.prototype.getClassName = function () {\n        return 'Concatenate';\n    };\n    Concatenate.prototype.build = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0])) ||\n            inputShape.length === 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of at least 2 ' +\n                'inputs');\n        }\n        inputShape = inputShape;\n        var allNoneShape = true;\n        for (var _i = 0, inputShape_3 = inputShape; _i < inputShape_3.length; _i++) {\n            var shape = inputShape_3[_i];\n            if (shape != null) {\n                allNoneShape = false;\n                break;\n            }\n        }\n        if (allNoneShape) {\n            return;\n        }\n        var shapeSet = [];\n        for (var i = 0; i < inputShape.length; ++i) {\n            var shapeWithoutConcatAxis = inputShape[i].slice();\n            shapeWithoutConcatAxis.splice(this.axis, 1);\n            var exists = false;\n            for (var _a = 0, shapeSet_1 = shapeSet; _a < shapeSet_1.length; _a++) {\n                var shape = shapeSet_1[_a];\n                if (tfjs_core_1.util.arraysEqual(shape, shapeWithoutConcatAxis)) {\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                shapeSet.push(shapeWithoutConcatAxis);\n            }\n        }\n        if (shapeSet.length > 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer requires inputs with matching shapes ' +\n                'except for the concat axis. Got input shapes: ' +\n                JSON.stringify(inputShape));\n        }\n    };\n    Concatenate.prototype.mergeFunction = function (inputs) {\n        return K.concatenate(inputs, this.axis);\n    };\n    Concatenate.prototype.computeOutputShape = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0]))) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of inputs.');\n        }\n        var inputShapes = inputShape;\n        var outputShape = inputShapes[0].slice();\n        var axis = this.axis < 0 ? outputShape.length + this.axis : this.axis;\n        for (var _i = 0, _a = inputShapes.slice(1); _i < _a.length; _i++) {\n            var shape = _a[_i];\n            if (outputShape[axis] == null || shape[axis] == null) {\n                outputShape[axis] = null;\n                break;\n            }\n            outputShape[axis] += shape[axis];\n        }\n        return outputShape;\n    };\n    return Concatenate;\n}(Merge));\nexports.Concatenate = Concatenate;\ngeneric_utils.ClassNameMap.register('Concatenate', Concatenate);\nfunction concatenate(config) {\n    if (Array.isArray(config)) {\n        var layer = new Concatenate({});\n        return layer.apply(config);\n    }\n    else {\n        return new Concatenate(config);\n    }\n}\nexports.concatenate = concatenate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/merge.js\n// module id = 139\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"../backend/tfjs_backend\");\nvar constraints_1 = require(\"../constraints\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar initializers_1 = require(\"../initializers\");\nvar regularizers_1 = require(\"../regularizers\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar math_utils_1 = require(\"../utils/math_utils\");\nvar BatchNormalization = (function (_super) {\n    __extends(BatchNormalization, _super);\n    function BatchNormalization(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        _this.axis = config.axis == null ? -1 : config.axis;\n        _this.momentum = config.momentum == null ? 0.99 : config.momentum;\n        _this.epsilon = config.epsilon == null ? 1e-3 : config.epsilon;\n        _this.center = config.center == null ? true : config.center;\n        _this.scale = config.scale == null ? true : config.scale;\n        _this.betaInitializer = initializers_1.getInitializer(config.betaInitializer || 'zeros');\n        _this.gammaInitializer = initializers_1.getInitializer(config.gammaInitializer || 'ones');\n        _this.movingMeanInitializer =\n            initializers_1.getInitializer(config.movingMeanInitializer || 'zeros');\n        _this.movingVarianceInitializer =\n            initializers_1.getInitializer(config.movingVarianceInitializer || 'ones');\n        _this.betaConstraint = constraints_1.getConstraint(config.betaConstraint);\n        _this.gammaConstraint = constraints_1.getConstraint(config.gammaConstraint);\n        _this.betaRegularizer = regularizers_1.getRegularizer(config.betaRegularizer);\n        _this.gammaRegularizer = regularizers_1.getRegularizer(config.gammaRegularizer);\n        _this.stepCount = 0;\n        return _this;\n    }\n    BatchNormalization.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var axis = this.axis >= 0 ? this.axis : (this.axis + inputShape.length);\n        var dim = inputShape[axis];\n        if (dim == null) {\n            throw new errors_1.ValueError(\"Axis \" + axis + \" of input tensor should have a defined dimension but \" +\n                \"the layer received an input with shape \" +\n                (JSON.stringify(inputShape) + \".\"));\n        }\n        this.inputSpec =\n            [new topology_1.InputSpec({ ndim: inputShape.length, axes: (_a = {}, _a[axis] = dim, _a) })];\n        var shape = [dim];\n        if (this.scale) {\n            this.gamma = this.addWeight('gamma', shape, null, this.gammaInitializer, this.gammaRegularizer, true, this.gammaConstraint);\n        }\n        if (this.center) {\n            this.beta = this.addWeight('beta', shape, null, this.betaInitializer, this.betaRegularizer, true, this.betaConstraint);\n        }\n        this.movingMean = this.addWeight('moving_mean', shape, null, this.movingMeanInitializer, null, false);\n        this.movingVariance = this.addWeight('moving_variance', shape, null, this.movingVarianceInitializer, null, false);\n        this.built = true;\n        var _a;\n    };\n    BatchNormalization.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var training = kwargs['training'] == null ? false : kwargs['training'];\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            var inputShape = K.shape(input);\n            var ndim = inputShape.length;\n            var reductionAxes = math_utils_1.range(0, ndim);\n            var axis = _this.axis >= 0 ? _this.axis : (_this.axis + ndim);\n            reductionAxes.splice(axis, 1);\n            var broadcastShape = generic_utils.pyListRepeat(1, ndim);\n            broadcastShape[axis] = inputShape[axis];\n            var sortedReductionAxes = reductionAxes.slice();\n            sortedReductionAxes.sort();\n            var needsBroadcasting = !tfjs_core_1.util.arraysEqual(sortedReductionAxes, math_utils_1.range(0, ndim).slice(0, ndim - 1));\n            var normalizeInference = function () {\n                if (needsBroadcasting) {\n                    var broadcastMovingMean = K.reshape(_this.movingMean.read(), broadcastShape);\n                    var broadcastMovingVariance = K.reshape(_this.movingVariance.read(), broadcastShape);\n                    var broadcastBeta = _this.center ? K.reshape(_this.beta.read(), broadcastShape) : null;\n                    var broadcastGamma = _this.scale ? K.reshape(_this.gamma.read(), broadcastShape) : null;\n                    return K.batchNormalization(input, broadcastMovingMean, broadcastMovingVariance, broadcastBeta, broadcastGamma, _this.epsilon);\n                }\n                else {\n                    return K.batchNormalization(input, _this.movingMean.read(), _this.movingVariance.read(), _this.beta == null ? null : _this.beta.read(), _this.gamma == null ? null : _this.gamma.read(), _this.epsilon);\n                }\n            };\n            if (!training) {\n                return normalizeInference();\n            }\n            var _a = K.normalizeBatchInTraining(input, _this.gamma.read(), _this.beta.read(), reductionAxes, _this.epsilon), normedTraining = _a[0], mean = _a[1], variance = _a[2];\n            var sampleSize = math_utils_1.arrayProd(reductionAxes.map(function (axis) { return input.shape[axis]; }));\n            var varianceDebiased = variance.mul(K.getScalar(sampleSize / (sampleSize - (1 + _this.epsilon))));\n            var updateMovingMeanAndVariance = function () {\n                _this.stepCount++;\n                var newMovingMean = tfjs_core_1.movingAverage(_this.movingMean.read(), mean, _this.momentum, _this.stepCount);\n                _this.movingMean.write(newMovingMean);\n                var newMovingVariance = tfjs_core_1.movingAverage(_this.movingVariance.read(), varianceDebiased, _this.momentum, _this.stepCount);\n                _this.movingVariance.write(newMovingVariance);\n            };\n            updateMovingMeanAndVariance();\n            return normedTraining;\n        });\n    };\n    BatchNormalization.prototype.getClassName = function () {\n        return 'BatchNormalization';\n    };\n    BatchNormalization.prototype.getConfig = function () {\n        var config = {\n            axis: this.axis,\n            momentum: this.momentum,\n            epsilon: this.epsilon,\n            center: this.center,\n            scale: this.scale,\n            betaInitializer: initializers_1.serializeInitializer(this.betaInitializer),\n            gammaInitializer: initializers_1.serializeInitializer(this.gammaInitializer),\n            movingMeanInitializer: initializers_1.serializeInitializer(this.movingMeanInitializer),\n            movingVarianceInitializer: initializers_1.serializeInitializer(this.movingVarianceInitializer),\n            betaRegularizer: regularizers_1.serializeRegularizer(this.betaRegularizer),\n            gammaRegularizer: regularizers_1.serializeRegularizer(this.gammaRegularizer),\n            betaConstraint: constraints_1.serializeConstraint(this.betaConstraint),\n            gammaConstraint: constraints_1.serializeConstraint(this.gammaConstraint)\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return BatchNormalization;\n}(topology_1.Layer));\nexports.BatchNormalization = BatchNormalization;\ngeneric_utils.ClassNameMap.register('BatchNormalization', BatchNormalization);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/normalization.js\n// module id = 140\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../backend/common\");\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar ZeroPadding2D = (function (_super) {\n    __extends(ZeroPadding2D, _super);\n    function ZeroPadding2D(config) {\n        var _this = this;\n        if (config == null) {\n            config = {};\n        }\n        _this = _super.call(this, config) || this;\n        _this.dataFormat =\n            config.dataFormat == null ? common_1.imageDataFormat() : config.dataFormat;\n        if (config.padding == null) {\n            _this.padding = [[1, 1], [1, 1]];\n        }\n        else if (typeof config.padding === 'number') {\n            _this.padding =\n                [[config.padding, config.padding], [config.padding, config.padding]];\n        }\n        else {\n            config.padding = config.padding;\n            if (config.padding.length !== 2) {\n                throw new errors_1.ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" +\n                    (\"received a length-\" + config.padding.length + \" array.\"));\n            }\n            var heightPadding = void 0;\n            var widthPadding = void 0;\n            if (typeof config.padding[0] === 'number') {\n                heightPadding =\n                    [config.padding[0], config.padding[0]];\n                widthPadding =\n                    [config.padding[1], config.padding[1]];\n            }\n            else {\n                config.padding = config.padding;\n                if (config.padding[0].length !== 2) {\n                    throw new errors_1.ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" +\n                        (\"but received a length-\" + config.padding[0].length + \" array.\"));\n                }\n                heightPadding = config.padding[0];\n                if (config.padding[1].length !== 2) {\n                    throw new errors_1.ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" +\n                        (\"but received a length-\" + config.padding[1].length + \" array.\"));\n                }\n                widthPadding = config.padding[1];\n            }\n            _this.padding = [heightPadding, widthPadding];\n        }\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    ZeroPadding2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils_1.getExactlyOneShape(inputShape);\n        var rows;\n        var cols;\n        if (this.dataFormat === 'channelsFirst') {\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[3] != null && inputShape[3] >= 0) {\n                cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            if (inputShape[1] != null && inputShape[1] >= 0) {\n                rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    ZeroPadding2D.prototype.call = function (inputs, kwargs) {\n        return K.spatial2dPadding(generic_utils_1.getExactlyOneTensor(inputs), this.padding, this.dataFormat);\n    };\n    ZeroPadding2D.prototype.getClassName = function () {\n        return 'ZeroPadding2D';\n    };\n    ZeroPadding2D.prototype.getConfig = function () {\n        var config = {\n            padding: this.padding,\n            dataFormat: this.dataFormat,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return ZeroPadding2D;\n}(topology_1.Layer));\nexports.ZeroPadding2D = ZeroPadding2D;\ngeneric_utils_1.ClassNameMap.register('ZeroPadding2D', ZeroPadding2D);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/padding.js\n// module id = 141\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar common_1 = require(\"../common\");\nvar topology_1 = require(\"../engine/topology\");\nvar topology_2 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar conv_utils_1 = require(\"../utils/conv_utils\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar Pooling1D = (function (_super) {\n    __extends(Pooling1D, _super);\n    function Pooling1D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = 2;\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = [config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : [config.strides];\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    Pooling1D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        length = conv_utils_1.convOutputLength(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n        return [inputShape[0], length, inputShape[2]];\n    };\n    Pooling1D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        inputs = K.expandDims(generic_utils.getExactlyOneTensor(inputs), 2);\n        var output = this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), [this.poolSize[0], 1], [this.strides[0], 1], this.padding, 'channelsLast');\n        return K.squeeze(output, 2);\n    };\n    Pooling1D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling1D;\n}(topology_2.Layer));\nexports.Pooling1D = Pooling1D;\nvar MaxPooling1D = (function (_super) {\n    __extends(MaxPooling1D, _super);\n    function MaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling1D.prototype.getClassName = function () {\n        return 'MaxPooling1D';\n    };\n    MaxPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling1D;\n}(Pooling1D));\nexports.MaxPooling1D = MaxPooling1D;\ngeneric_utils.ClassNameMap.register('MaxPooling1D', MaxPooling1D);\nvar AveragePooling1D = (function (_super) {\n    __extends(AveragePooling1D, _super);\n    function AveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling1D.prototype.getClassName = function () {\n        return 'AveragePooling1D';\n    };\n    AveragePooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AveragePooling1D;\n}(Pooling1D));\nexports.AveragePooling1D = AveragePooling1D;\ngeneric_utils.ClassNameMap.register('AveragePooling1D', AveragePooling1D);\nvar Pooling2D = (function (_super) {\n    __extends(Pooling2D, _super);\n    function Pooling2D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = [2, 2];\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = Array.isArray(config.poolSize) ?\n            config.poolSize :\n            [config.poolSize, config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : config.strides;\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    Pooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        rows =\n            conv_utils_1.convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\n        cols =\n            conv_utils_1.convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    Pooling2D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        return this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), this.poolSize, this.strides, this.padding, this.dataFormat);\n    };\n    Pooling2D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n            dataFormat: this.dataFormat\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling2D;\n}(topology_2.Layer));\nexports.Pooling2D = Pooling2D;\nvar MaxPooling2D = (function (_super) {\n    __extends(MaxPooling2D, _super);\n    function MaxPooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling2D.prototype.getClassName = function () {\n        return 'MaxPooling2D';\n    };\n    MaxPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling2D;\n}(Pooling2D));\nexports.MaxPooling2D = MaxPooling2D;\ngeneric_utils.ClassNameMap.register('MaxPooling2D', MaxPooling2D);\nvar AveragePooling2D = (function (_super) {\n    __extends(AveragePooling2D, _super);\n    function AveragePooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling2D.prototype.getClassName = function () {\n        return 'AveragePooling2D';\n    };\n    AveragePooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AveragePooling2D;\n}(Pooling2D));\nexports.AveragePooling2D = AveragePooling2D;\ngeneric_utils.ClassNameMap.register('AveragePooling2D', AveragePooling2D);\nvar GlobalPooling1D = (function (_super) {\n    __extends(GlobalPooling1D, _super);\n    function GlobalPooling1D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    GlobalPooling1D.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], inputShape[2]];\n    };\n    GlobalPooling1D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    return GlobalPooling1D;\n}(topology_2.Layer));\nexports.GlobalPooling1D = GlobalPooling1D;\nvar GlobalAveragePooling1D = (function (_super) {\n    __extends(GlobalAveragePooling1D, _super);\n    function GlobalAveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalAveragePooling1D.prototype.getClassName = function () {\n        return 'GlobalAveragePooling1D';\n    };\n    GlobalAveragePooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.mean(input, 1);\n    };\n    return GlobalAveragePooling1D;\n}(GlobalPooling1D));\nexports.GlobalAveragePooling1D = GlobalAveragePooling1D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling1D', GlobalAveragePooling1D);\nvar GlobalMaxPooling1D = (function (_super) {\n    __extends(GlobalMaxPooling1D, _super);\n    function GlobalMaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalMaxPooling1D.prototype.getClassName = function () {\n        return 'GlobalMaxPooling1D';\n    };\n    GlobalMaxPooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.max(input, 1);\n    };\n    return GlobalMaxPooling1D;\n}(GlobalPooling1D));\nexports.GlobalMaxPooling1D = GlobalMaxPooling1D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling1D', GlobalMaxPooling1D);\nvar GlobalPooling2D = (function (_super) {\n    __extends(GlobalPooling2D, _super);\n    function GlobalPooling2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    GlobalPooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        if (this.dataFormat === 'channelsLast') {\n            return [inputShape[0], inputShape[3]];\n        }\n        else {\n            return [inputShape[0], inputShape[1]];\n        }\n    };\n    GlobalPooling2D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    GlobalPooling2D.prototype.getConfig = function () {\n        var config = { dataFormat: this.dataFormat };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GlobalPooling2D;\n}(topology_2.Layer));\nexports.GlobalPooling2D = GlobalPooling2D;\nvar GlobalAveragePooling2D = (function (_super) {\n    __extends(GlobalAveragePooling2D, _super);\n    function GlobalAveragePooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalAveragePooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.mean(input, [1, 2]);\n        }\n        else {\n            return K.mean(input, [2, 3]);\n        }\n    };\n    GlobalAveragePooling2D.prototype.getClassName = function () {\n        return 'GlobalAveragePooling2D';\n    };\n    return GlobalAveragePooling2D;\n}(GlobalPooling2D));\nexports.GlobalAveragePooling2D = GlobalAveragePooling2D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling2D', GlobalAveragePooling2D);\nvar GlobalMaxPooling2D = (function (_super) {\n    __extends(GlobalMaxPooling2D, _super);\n    function GlobalMaxPooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalMaxPooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.max(input, [1, 2]);\n        }\n        else {\n            return K.max(input, [2, 3]);\n        }\n    };\n    GlobalMaxPooling2D.prototype.getClassName = function () {\n        return 'GlobalMaxPooling2D';\n    };\n    return GlobalMaxPooling2D;\n}(GlobalPooling2D));\nexports.GlobalMaxPooling2D = GlobalMaxPooling2D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling2D', GlobalMaxPooling2D);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/pooling.js\n// module id = 142\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar serialization_1 = require(\"./serialization\");\nvar Wrapper = (function (_super) {\n    __extends(Wrapper, _super);\n    function Wrapper(config) {\n        var _this = _super.call(this, config) || this;\n        _this.layer = config.layer;\n        return _this;\n    }\n    Wrapper.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Object.defineProperty(Wrapper.prototype, \"trainable\", {\n        get: function () {\n            if (this.layer != null) {\n                return this.layer.trainable;\n            }\n            else {\n                return false;\n            }\n        },\n        set: function (value) {\n            if (this.layer != null) {\n                this.layer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.layer.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.layer.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"updates\", {\n        get: function () {\n            return this.layer._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"losses\", {\n        get: function () {\n            return this.layer.losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Wrapper.prototype.getWeights = function () {\n        return this.layer.getWeights();\n    };\n    Wrapper.prototype.setWeights = function (weights) {\n        this.layer.setWeights(weights);\n    };\n    Wrapper.prototype.getConfig = function () {\n        var config = {\n            'layer': {\n                'className': this.layer.getClassName(),\n                'config': this.layer.getConfig(),\n            }\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    Wrapper.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var layerConfig = config['layer'];\n        var layer = serialization_1.deserialize(layerConfig, customObjects);\n        delete config['layer'];\n        var newConfig = { layer: layer };\n        Object.assign(newConfig, config);\n        return new cls(newConfig);\n    };\n    return Wrapper;\n}(topology_1.Layer));\nexports.Wrapper = Wrapper;\nvar TimeDistributed = (function (_super) {\n    __extends(TimeDistributed, _super);\n    function TimeDistributed(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    TimeDistributed.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < 3) {\n            throw new errors_1.ValueError(\"TimeDistributed layer expects an input shape >= 3D, but received \" +\n                (\"input shape \" + JSON.stringify(inputShape)));\n        }\n        this.inputSpec = [{ shape: inputShape }];\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (!this.layer.built) {\n            this.layer.build(childInputShape);\n            this.layer.built = true;\n        }\n        _super.prototype.build.call(this, inputShape);\n    };\n    TimeDistributed.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        var childOutputShape = this.layer.computeOutputShape(childInputShape);\n        var timesteps = inputShape[1];\n        return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n    };\n    TimeDistributed.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var step = function (inputs, states) {\n            var output = _this.layer.call(inputs, kwargs);\n            return [output, []];\n        };\n        var rnnOutputs = K.rnn(step, inputs, [], false, null, null, false, inputs.shape[1]);\n        var y = rnnOutputs[1];\n        return y;\n    };\n    TimeDistributed.prototype.getClassName = function () {\n        return 'TimeDistributed';\n    };\n    return TimeDistributed;\n}(Wrapper));\nexports.TimeDistributed = TimeDistributed;\ngeneric_utils.ClassNameMap.register('TimeDistributed', TimeDistributed);\nvar BidirectionalMergeMode;\n(function (BidirectionalMergeMode) {\n    BidirectionalMergeMode[BidirectionalMergeMode[\"SUM\"] = 0] = \"SUM\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"MUL\"] = 1] = \"MUL\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"CONCAT\"] = 2] = \"CONCAT\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"AVE\"] = 3] = \"AVE\";\n})(BidirectionalMergeMode = exports.BidirectionalMergeMode || (exports.BidirectionalMergeMode = {}));\ngeneric_utils.SerializableEnumRegistry.register('merge_mode', {\n    'sum': BidirectionalMergeMode.SUM,\n    'mul': BidirectionalMergeMode.MUL,\n    'concat': BidirectionalMergeMode.CONCAT,\n    'ave': BidirectionalMergeMode.AVE,\n});\nvar Bidirectional = (function (_super) {\n    __extends(Bidirectional, _super);\n    function Bidirectional(config) {\n        var _this = _super.call(this, config) || this;\n        _this.forwardLayer = config.layer;\n        var layerConfig = config.layer.getConfig();\n        layerConfig['goBackwards'] =\n            layerConfig['goBackwards'] === true ? false : true;\n        _this.backwardLayer =\n            serialization_1.deserialize({ className: config.layer.getClassName(), config: layerConfig });\n        _this.forwardLayer.name = 'forward_' + _this.forwardLayer.name;\n        _this.backwardLayer.name = 'backward_' + _this.backwardLayer.name;\n        _this.mergeMode = config.mergeMode;\n        if (config.weights) {\n            throw new errors_1.NotImplementedError('weights support is not implemented for Bidirectional layer yet.');\n        }\n        _this._stateful = config.layer.stateful;\n        _this.returnSequences = config.layer.returnSequences;\n        _this.returnState = config.layer.returnState;\n        _this.supportsMasking = true;\n        _this._trainable = true;\n        _this.inputSpec = config.layer.inputSpec;\n        return _this;\n    }\n    Object.defineProperty(Bidirectional.prototype, \"trainable\", {\n        get: function () {\n            return this._trainable;\n        },\n        set: function (value) {\n            this._trainable = value;\n            if (this.forwardLayer != null) {\n                this.forwardLayer.trainable = value;\n            }\n            if (this.backwardLayer != null) {\n                this.backwardLayer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getWeights = function () {\n        return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights());\n    };\n    Bidirectional.prototype.setWeights = function (weights) {\n        var numWeights = weights.length;\n        var numeightsOver2 = Math.floor(numWeights / 2);\n        this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n        this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n    };\n    Bidirectional.prototype.computeOutputShape = function (inputShape) {\n        var layerShapes = this.forwardLayer.computeOutputShape(inputShape);\n        if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n            layerShapes = [layerShapes];\n        }\n        layerShapes = layerShapes;\n        var outputShape;\n        var outputShapes;\n        var stateShape;\n        if (this.returnState) {\n            stateShape = layerShapes.slice(1);\n            outputShape = layerShapes[0];\n        }\n        else {\n            outputShape = layerShapes[0];\n        }\n        outputShape = outputShape;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            outputShape[outputShape.length - 1] *= 2;\n            outputShapes = [outputShape];\n        }\n        else if (this.mergeMode == null) {\n            outputShapes = [outputShape, outputShape.slice()];\n        }\n        else {\n            outputShapes = [outputShape];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return outputShapes.concat(stateShape).concat(stateShape.slice());\n            }\n            return [outputShape].concat(stateShape).concat(stateShape.slice());\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Bidirectional.prototype.apply = function (inputs, kwargs) {\n        var initialState = null;\n        if (kwargs != null) {\n            initialState = kwargs['initialState'];\n        }\n        if (Array.isArray(inputs)) {\n            initialState = inputs.slice(1);\n            inputs = inputs[0];\n        }\n        if (initialState == null || initialState.length === 0) {\n            var applyOutputs = _super.prototype.apply.call(this, inputs, kwargs);\n            return applyOutputs;\n        }\n        else {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n    };\n    Bidirectional.prototype.call = function (inputs, kwargs) {\n        if (kwargs['mask'] != null) {\n            throw new errors_1.NotImplementedError('The support for masking is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        if (kwargs['initialState'] != null) {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        var y = this.forwardLayer.call(inputs, kwargs);\n        var yRev = this.backwardLayer.call(inputs, kwargs);\n        var states;\n        if (this.returnState) {\n            if (Array.isArray(y)) {\n                states = y.slice(1).concat(yRev.slice(1));\n            }\n            else {\n            }\n            y = y[0];\n            yRev = yRev[0];\n        }\n        if (this.returnSequences) {\n            yRev = K.reverse(yRev, 1);\n        }\n        var output;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            output = K.concatenate([y, yRev]);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.SUM) {\n            output = K.add(y, yRev);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.AVE) {\n            output = K.scalarTimesArray(K.getScalar(0.5), K.add(y, yRev));\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.MUL) {\n            output = K.multiply(y, yRev);\n        }\n        else if (this.mergeMode == null) {\n            output = [y, yRev];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return output.concat(states);\n            }\n            return [output].concat(states);\n        }\n        return output;\n    };\n    Bidirectional.prototype.resetStates = function (states) {\n        this.forwardLayer.resetStates();\n        this.backwardLayer.resetStates();\n    };\n    Bidirectional.prototype.build = function (inputShape) {\n        var _this = this;\n        K.nameScope(this.forwardLayer.name, function () {\n            _this.forwardLayer.build(inputShape);\n        });\n        K.nameScope(this.backwardLayer.name, function () {\n            _this.backwardLayer.build(inputShape);\n        });\n        this.built = true;\n    };\n    Object.defineProperty(Bidirectional.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bidirectional.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getClassName = function () {\n        return 'Bidirectional';\n    };\n    return Bidirectional;\n}(Wrapper));\nexports.Bidirectional = Bidirectional;\ngeneric_utils.ClassNameMap.register('Bidirectional', Bidirectional);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/layers/wrappers.js\n// module id = 143\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nfunction getOptimizer(identifier) {\n    var optimizerMap = {\n        'Adagrad': function () { return tfjs_core_1.train.adagrad(.01); },\n        'Adam': function () { return tfjs_core_1.train.adam(.001, .9, .999, K.epsilon()); },\n        'RMSProp': function () { return tfjs_core_1.train.rmsprop(.001, .9, null, K.epsilon()); },\n        'SGD': function () { return tfjs_core_1.train.sgd(.01); }\n    };\n    optimizerMap['adagrad'] = optimizerMap['Adagrad'];\n    optimizerMap['adam'] = optimizerMap['Adam'];\n    optimizerMap['rmsprop'] = optimizerMap['RMSProp'];\n    optimizerMap['sgd'] = optimizerMap['SGD'];\n    if (identifier in optimizerMap) {\n        return optimizerMap[identifier]();\n    }\n    throw new errors_1.ValueError(\"Unknown Optimizer \" + identifier);\n}\nexports.getOptimizer = getOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/optimizers.js\n// module id = 144\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.5.3';\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs-layers/dist/version.js\n// module id = 145\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"@tensorflow/tfjs-core\"));\n__export(require(\"@tensorflow/tfjs-layers\"));\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar tfjs_layers_1 = require(\"@tensorflow/tfjs-layers\");\nvar version_1 = require(\"./version\");\nexports.version = {\n    'tfjs-core': tfjs_core_1.version_core,\n    'tfjs-layers': tfjs_layers_1.version_layers,\n    'tfjs': version_1.version\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs/dist/index.js\n// module id = 146\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version = '0.10.3';\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@tensorflow/tfjs/dist/version.js\n// module id = 147\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 148\n// module chunks = 0","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nexport default class DrawableCanvas extends Component {\n  constructor(props){\n    super(props);\n    this.handleOnMouseDown = this.handleOnMouseDown.bind(this);\n    this.handleOnTouchStart = this.handleOnTouchStart.bind(this);\n    this.handleOnMouseMove = this.handleOnMouseMove.bind(this);\n    this.handleOnTouchMove = this.handleOnTouchMove.bind(this);\n    this.handleonMouseUp = this.handleonMouseUp.bind(this);\n  }\n\n  componentDidMount(){\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.clear){\n      this.resetCanvas();\n    }\n  }\n\n  resetCanvas(){\n    this.ctx.clearRect(\n      0, 0, this.ctx.canvas.width,   this.ctx.canvas.height\n    );\n  }\n\n   handleOnTouchStart (e) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.ctx.beginPath();\n    \n    this.lastX = e.targetTouches[0].pageX - rect.left;\n    this.lastY = e.targetTouches[0].pageY - rect.top;\n    this.drawing = true;\n  }\n\n  handleOnMouseDown(e){\n    const rect = this.canvas.getBoundingClientRect();\n    this.ctx.beginPath();\n\n    this.lastX = e.clientX - rect.left;\n    this.lastY = e.clientY - rect.top;\n    this.drawing = true;\n  }\n\n  handleOnTouchMove (e) {\n    if (this.drawing) {\n      const rect = this.canvas.getBoundingClientRect();\n      const lastX = this.lastX;\n      const lastY = this.lastY;\n      let currentX = e.targetTouches[0].pageX - rect.left;\n      let currentY = e.targetTouches[0].pageY - rect.top;\n      this.draw(lastX, lastY, currentX, currentY);\n      this.lastX = currentX;\n      this.lastY = currentY;\n    }\n  }\n\n  handleOnMouseMove(e){\n    if(this.drawing){\n      const rect = this.canvas.getBoundingClientRect();\n      const lastX = this.lastX;\n      const lastY = this.lastY;\n      let currentX = e.clientX - rect.left;\n      let currentY = e.clientY - rect.top;\n\n      this.draw(lastX, lastY, currentX, currentY);\n      this.lastX = currentX;\n      this.lastY = currentY;\n    }\n  }\n\n  handleonMouseUp() {\n    this.ctx.drawImage(this.canvas, 0, 0, 28, 28);\n    this.drawing = false;\n\n    if(typeof this.props.onGetImage === 'function'){\n      this.props.onGetImage(this.ctx.getImageData(0, 0, 28, 28));\n    }\n  }\n\n  draw(lX, lY, cX, cY) {\n    const newContext = this.ctx;\n    newContext.strokeStyle = this.props.brushColor;\n    newContext.lineWidth = this.props.lineWidth;\n    this.ctx =  newContext;\n    this.ctx.moveTo(lX, lY);\n    this.ctx.lineTo(cX, cY);\n    this.ctx.stroke();\n  }\n\n  render() {\n    const style = {\n      cursor: 'crosshair',\n      border: '1px black solid',\n    };\n\n    return (\n        <canvas \n          ref={(canvas) => {this.canvas = canvas; }}\n          width={this.props.width}\n          style={style}\n          height={this.props.height}\n          onMouseDown = {this.handleOnMouseDown}\n          onTouchStart = {this.handleOnTouchStart}\n          onMouseMove = {this.handleOnMouseMove}\n          onTouchMove = {this.handleOnTouchMove}\n          onMouseUp = {this.handleonMouseUp}\n          onTouchEnd = {this.handleonMouseUp}\n        />\n    );\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawable-canvas.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/regenerator/index.js\n// module id = 150\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/EventListener.js\n// module id = 152\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/ExecutionEnvironment.js\n// module id = 153\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/containsNode.js\n// module id = 154\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/focusNode.js\n// module id = 155\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getActiveElement.js\n// module id = 156\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isNode.js\n// module id = 157\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isTextNode.js\n// module id = 158\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/shallowEqual.js\n// module id = 159\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 160\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 161\n// module chunks = 0","/** @license React v16.1.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),A=require(\"object-assign\"),B=require(\"fbjs/lib/emptyFunction\"),ca=require(\"fbjs/lib/EventListener\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),ha=require(\"fbjs/lib/containsNode\"),ia=require(\"fbjs/lib/focusNode\"),C=require(\"fbjs/lib/emptyObject\");\nfunction D(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:D(\"227\");\nvar la={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function qa(a,b){return(a&b)===b}\nvar ra={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ra,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){sa.hasOwnProperty(f)?D(\"48\",f):void 0;var g=f.toLowerCase(),k=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:qa(k,b.MUST_USE_PROPERTY),\nhasBooleanValue:qa(k,b.HAS_BOOLEAN_VALUE),hasNumericValue:qa(k,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:qa(k,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:qa(k,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:qa(k,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:D(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);sa[f]=g}}},sa={};\nfunction ta(a,b){if(la.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return la.hasOwnProperty(a)?a=!0:(b=ua(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function ua(a){return sa.hasOwnProperty(a)?sa[a]:null}\nvar va=ra,wa=va.MUST_USE_PROPERTY,H=va.HAS_BOOLEAN_VALUE,xa=va.HAS_NUMERIC_VALUE,ya=va.HAS_POSITIVE_NUMERIC_VALUE,za=va.HAS_OVERLOADED_BOOLEAN_VALUE,Aa=va.HAS_STRING_BOOLEAN_VALUE,Ba={Properties:{allowFullScreen:H,async:H,autoFocus:H,autoPlay:H,capture:za,checked:wa|H,cols:ya,contentEditable:Aa,controls:H,\"default\":H,defer:H,disabled:H,download:za,draggable:Aa,formNoValidate:H,hidden:H,loop:H,multiple:wa|H,muted:wa|H,noValidate:H,open:H,playsInline:H,readOnly:H,required:H,reversed:H,rows:ya,rowSpan:xa,\nscoped:H,seamless:H,selected:wa|H,size:ya,start:xa,span:ya,spellCheck:Aa,style:0,tabIndex:0,itemScope:H,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Aa},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\na.setAttribute(\"value\",\"\"+b)}}},Ca=va.HAS_STRING_BOOLEAN_VALUE,K={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Da={Properties:{autoReverse:Ca,externalResourcesRequired:Ca,preserveAlpha:Ca},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:K.xlink,xlinkArcrole:K.xlink,xlinkHref:K.xlink,xlinkRole:K.xlink,xlinkShow:K.xlink,xlinkTitle:K.xlink,xlinkType:K.xlink,\nxmlBase:K.xml,xmlLang:K.xml,xmlSpace:K.xml}},Ea=/[\\-\\:]([a-z])/g;function Ha(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ea,\nHa);Da.Properties[b]=0;Da.DOMAttributeNames[b]=a});va.injectDOMPropertyConfig(Ba);va.injectDOMPropertyConfig(Da);\nvar N={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?D(\"197\"):void 0;Ia=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,k,h){Ia.apply(N,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,k,h){N.invokeGuardedCallback.apply(this,arguments);if(N.hasCaughtError()){var r=N.clearCaughtError();N._hasRethrowError||(N._hasRethrowError=!0,N._rethrowError=\nr)}},rethrowCaughtError:function(){return Ja.apply(N,arguments)},hasCaughtError:function(){return N._hasCaughtError},clearCaughtError:function(){if(N._hasCaughtError){var a=N._caughtError;N._caughtError=null;N._hasCaughtError=!1;return a}D(\"198\")}};function Ia(a,b,c,d,e,f,g,k,h){N._hasCaughtError=!1;N._caughtError=null;var r=Array.prototype.slice.call(arguments,3);try{b.apply(c,r)}catch(n){N._caughtError=n,N._hasCaughtError=!0}}\nfunction Ja(){if(N._hasRethrowError){var a=N._rethrowError;N._rethrowError=null;N._hasRethrowError=!1;throw a;}}var Ka=null,La={};\nfunction Ma(){if(Ka)for(var a in La){var b=La[a],c=Ka.indexOf(a);-1<c?void 0:D(\"96\",a);if(!Na[c]){b.extractEvents?void 0:D(\"97\",a);Na[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,k=d;Oa.hasOwnProperty(k)?D(\"99\",k):void 0;Oa[k]=f;var h=f.phasedRegistrationNames;if(h){for(e in h)h.hasOwnProperty(e)&&Pa(h[e],g,k);e=!0}else f.registrationName?(Pa(f.registrationName,g,k),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction Pa(a,b,c){Qa[a]?D(\"100\",a):void 0;Qa[a]=b;Ra[a]=b.eventTypes[c].dependencies}var Na=[],Oa={},Qa={},Ra={};function Sa(a){Ka?D(\"101\"):void 0;Ka=Array.prototype.slice.call(a);Ma()}function Ta(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];La.hasOwnProperty(c)&&La[c]===d||(La[c]?D(\"102\",c):void 0,La[c]=d,b=!0)}b&&Ma()}\nvar Ua=Object.freeze({plugins:Na,eventNameDispatchConfigs:Oa,registrationNameModules:Qa,registrationNameDependencies:Ra,possibleRegistrationNames:null,injectEventPluginOrder:Sa,injectEventPluginsByName:Ta}),Va=null,Wa=null,Xa=null;function Ya(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Xa(d);N.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Za(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function $a(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var ab=null;\nfunction bb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ya(a,b,c[e],d[e]);else c&&Ya(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function cb(a){return bb(a,!0)}function db(a){return bb(a,!1)}var ib={injectEventPluginOrder:Sa,injectEventPluginsByName:Ta};\nfunction jb(a,b){var c=a.stateNode;if(!c)return null;var d=Va(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function kb(a,b,c,d){for(var e,f=0;f<Na.length;f++){var g=Na[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Za(e,g))}return e}function lb(a){a&&(ab=Za(ab,a))}function mb(a){var b=ab;ab=null;a?$a(b,cb):$a(b,db);ab?D(\"95\"):void 0;N.rethrowCaughtError()}var nb=Object.freeze({injection:ib,getListener:jb,extractEvents:kb,enqueueEvents:lb,processEventQueue:mb}),ob=Math.random().toString(36).slice(2),O=\"__reactInternalInstance$\"+ob,pb=\"__reactEventHandlers$\"+ob;\nfunction qb(a){if(a[O])return a[O];for(var b=[];!a[O];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[O];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[O]);a=b.pop())c=d;return c}function rb(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function sb(a){return a[pb]||null}\nvar tb=Object.freeze({precacheFiberNode:function(a,b){b[O]=a},getClosestInstanceFromNode:qb,getInstanceFromNode:function(a){a=a[O];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:rb,getFiberCurrentPropsFromNode:sb,updateFiberProps:function(a,b){a[pb]=b}});function Q(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=Q(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\nfunction vb(a,b,c){if(b=jb(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Q(b):null;ub(b,vb,a)}}\nfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=jb(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){$a(a,wb)}\nfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,k=e;k;k=Q(k))g++;k=0;for(var h=f;h;h=Q(h))k++;for(;0<g-k;)e=Q(e),g--;for(;0<k-g;)f=Q(f),k--;for(;g--;){if(e===f||e===f.alternate)break a;e=Q(e);f=Q(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=Q(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=Q(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\nvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){$a(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){$a(a,zb)}}),Db=null;function Eb(){!Db&&m.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var R={_root:null,_startText:null,_fallbackText:null};\nfunction Fb(){if(R._fallbackText)return R._fallbackText;var a,b=R._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);R._fallbackText=e.slice(a,1<d?1-d:void 0);return R._fallbackText}function Gb(){return\"value\"in R._root?R._root.value:R._root[Eb()]}\nvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:B.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction S(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?B.thatReturnsTrue:B.thatReturnsFalse;this.isPropagationStopped=B.thatReturnsFalse;return this}\nA(S.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=B.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=B.thatReturnsTrue)},persist:function(){this.isPersistent=B.thatReturnsTrue},isPersistent:B.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});S.Interface=Ib;S.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;A(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=A({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(S);function Qb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Rb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Qb;a.release=Rb}function Sb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Sb,{data:null});function Tb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Tb,{data:null});var Ub=[9,13,27,32],Vb=m.canUseDOM&&\"CompositionEvent\"in window,Wb=null;m.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\nif(Xb=m.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\nvar Zb=Xb,$b=m.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\nfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Ub.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\nfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),R._root=null,R._startText=null,R._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\nvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(R._root=d,R._startText=Gb(),fc=!0)),f=Sb.getPooled(f,b,c,d),e?f.data=\ne:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Tb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Wa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:D(\"194\");var b=Va(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\nfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\nfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;m.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction yc(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\nfunction Ec(a,b,c){a=S.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){lb(a);mb(!1)}function Ic(a){var b=rb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Qc=!1;m.canUseDOM&&(Qc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Rc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Sc),Gc=Fc=null)}function Sc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\nfunction Tc(a,b,c){\"topFocus\"===a?(Rc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Sc)):\"topBlur\"===a&&Rc()}function Uc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Vc(a,b){if(\"topClick\"===a)return Ic(b)}function Wc(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\nvar Xc={eventTypes:Dc,_isInputEventSupported:Qc,extractEvents:function(a,b,c,d){var e=b?rb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Qc)g=Wc;else{g=Uc;var k=Tc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Vc);if(g&&(g=g(a,b)))return Ec(g,c,d);k&&k(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\na&&e.setAttribute(\"value\",a))}};function Yc(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yc,{view:null,detail:null});var Zc={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function $c(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Zc[a])?!!b[a]:!1}function ad(){return $c}function bd(a,b,c,d){return S.call(this,a,b,c,d)}\nYc.augmentClass(bd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ad,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar cd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},dd={eventTypes:cd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?qb(b):null):a=null;if(a===\nb)return null;var f=null==a?e:rb(a);e=null==b?e:rb(b);var g=bd.getPooled(cd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=bd.getPooled(cd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},ed=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function fd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\nfunction gd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function hd(a){return(a=a._reactInternalFiber)?2===gd(a):!1}function id(a){2!==gd(a)?D(\"188\"):void 0}\nfunction jd(a){var b=a.alternate;if(!b)return b=gd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return id(e),a;if(g===d)return id(e),b;g=g.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var k=e.child;k;){if(k===c){g=!0;c=e;d=f;break}if(k===d){g=!0;d=e;c=f;break}k=k.sibling}if(!g){for(k=f.child;k;){if(k===c){g=!0;c=f;d=e;break}if(k===d){g=!0;d=f;c=e;break}k=k.sibling}g?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function kd(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction ld(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var md=[];\nfunction nd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=qb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],od(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var pd=!0,od=void 0;function qd(a){pd=!!a}function U(a,b,c){return c?ca.listen(c,b,rd.bind(null,a)):null}function sd(a,b,c){return c?ca.capture(c,b,rd.bind(null,a)):null}\nfunction rd(a,b){if(pd){var c=wc(b);c=qb(c);null===c||\"number\"!==typeof c.tag||2===gd(c)||(c=null);if(md.length){var d=md.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(nd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>md.length&&md.push(a)}}}\nvar td=Object.freeze({get _enabled(){return pd},get _handleTopLevel(){return od},setHandleTopLevel:function(a){od=a},setEnabled:qd,isEnabled:function(){return pd},trapBubbledEvent:U,trapCapturedEvent:sd,dispatchEvent:rd});function ud(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar vd={animationend:ud(\"Animation\",\"AnimationEnd\"),animationiteration:ud(\"Animation\",\"AnimationIteration\"),animationstart:ud(\"Animation\",\"AnimationStart\"),transitionend:ud(\"Transition\",\"TransitionEnd\")},wd={},xd={};m.canUseDOM&&(xd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete vd.animationend.animation,delete vd.animationiteration.animation,delete vd.animationstart.animation),\"TransitionEvent\"in window||delete vd.transitionend.transition);\nfunction yd(a){if(wd[a])return wd[a];if(!vd[a])return a;var b=vd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in xd)return wd[a]=b[c];return\"\"}\nvar zd={topAbort:\"abort\",topAnimationEnd:yd(\"animationend\")||\"animationend\",topAnimationIteration:yd(\"animationiteration\")||\"animationiteration\",topAnimationStart:yd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:yd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ad={},Bd=0,Cd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Dd(a){Object.prototype.hasOwnProperty.call(a,Cd)||(a[Cd]=Bd++,Ad[a[Cd]]={});return Ad[a[Cd]]}function Ed(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Fd(a,b){var c=Ed(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ed(c)}}function Gd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Hd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Id={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Jd=null,Kd=null,Ld=null,Md=!1;\nfunction Nd(a,b){if(Md||null==Jd||Jd!==da())return null;var c=Jd;\"selectionStart\"in c&&Gd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Ld&&ea(Ld,c)?null:(Ld=c,a=S.getPooled(Id.select,Kd,a,b),a.type=\"select\",a.target=Jd,Ab(a),a)}\nvar Od={eventTypes:Id,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Dd(e);f=Ra.onSelect;for(var g=0;g<f.length;g++){var k=f[g];if(!e.hasOwnProperty(k)||!e[k]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?rb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Jd=e,Kd=b,Ld=null;break;case \"topBlur\":Ld=Kd=Jd=null;break;case \"topMouseDown\":Md=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Md=!1,Nd(c,d);case \"topSelectionChange\":if(Hd)break;\ncase \"topKeyDown\":case \"topKeyUp\":return Nd(c,d)}return null}};function Pd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Pd,{animationName:null,elapsedTime:null,pseudoElement:null});function Qd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Qd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Rd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Rd,{relatedTarget:null});\nfunction Sd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar Td={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Ud={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Vd(a,b,c,d){return S.call(this,a,b,c,d)}\nYc.augmentClass(Vd,{key:function(a){if(a.key){var b=Td[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Sd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Ud[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ad,charCode:function(a){return\"keypress\"===a.type?Sd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?Sd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function Wd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Wd,{dataTransfer:null});function Xd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Xd,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ad});function Yd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yd,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction Zd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Zd,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var $d={},ae={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};$d[a]=c;ae[b]=c});\nvar be={eventTypes:$d,extractEvents:function(a,b,c,d){var e=ae[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Sd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Vd;break;case \"topBlur\":case \"topFocus\":a=Rd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=bd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\nWd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Xd;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Pd;break;case \"topTransitionEnd\":a=Yd;break;case \"topScroll\":a=Yc;break;case \"topWheel\":a=Zd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Qd;break;default:a=S}b=a.getPooled(e,b,c,d);Ab(b);return b}};od=function(a,b,c,d){a=kb(a,b,c,d);lb(a);mb(!1)};ib.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nVa=tb.getFiberCurrentPropsFromNode;Wa=tb.getInstanceFromNode;Xa=tb.getNodeFromInstance;ib.injectEventPluginsByName({SimpleEventPlugin:be,EnterLeaveEventPlugin:dd,ChangeEventPlugin:Xc,SelectEventPlugin:Od,BeforeInputEventPlugin:ic});var ce=[],de=-1;function V(a){0>de||(a.current=ce[de],ce[de]=null,de--)}function W(a,b){de++;ce[de]=a.current;a.current=b}new Set;var ee={current:C},X={current:!1},fe=C;function ge(a){return he(a)?fe:ee.current}\nfunction ie(a,b){var c=a.type.contextTypes;if(!c)return C;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function he(a){return 2===a.tag&&null!=a.type.childContextTypes}function je(a){he(a)&&(V(X,a),V(ee,a))}\nfunction ke(a,b,c){null!=ee.cursor?D(\"168\"):void 0;W(ee,b,a);W(X,c,a)}function le(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",fd(a)||\"Unknown\",e);return A({},b,c)}function me(a){if(!he(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||C;fe=ee.current;W(ee,b,a);W(X,X.current,a);return!0}\nfunction ne(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var d=le(a,fe);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ee,a);W(ee,d,a)}else V(X,a);W(X,b,a)}\nfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction oe(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction pe(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):D(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function qe(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\nfunction re(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function se(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function te(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ue(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ve=null,we=null;\nfunction xe(a){return function(b){try{return a(b)}catch(c){}}}function ye(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ve=xe(function(a){return b.onCommitFiberRoot(c,a)});we=xe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function ze(a){\"function\"===typeof ve&&ve(a)}function Ae(a){\"function\"===typeof we&&we(a)}\nfunction Be(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ce(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\nfunction De(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Be(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Be(null))):a=null;a=a!==d?a:null;null===a?Ce(d,b):null===d.last||null===a.last?(Ce(d,b),Ce(a,b)):(Ce(d,b),a.last=b)}function Ee(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Le(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,k=c.first,h=!1;null!==k;){var r=k.expirationTime;if(r>f){var n=c.expirationTime;if(0===n||n>r)c.expirationTime=r;h||(h=!0,c.baseState=a)}else{h||(c.first=k.next,null===\nc.first&&(c.last=null));if(k.isReplace)a=Ee(k,d,a,e),g=!0;else if(r=Ee(k,d,a,e))a=g?A({},a,r):A(a,r),g=!1;k.isForced&&(c.hasForceUpdate=!0);null!==k.callback&&(r=c.callbackList,null===r&&(r=c.callbackList=[]),r.push(k))}k=k.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);h||(c.baseState=a);return a}\nfunction Me(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Ne(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:hd,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);De(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var f=b(c);De(c,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\na(c,f)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);De(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ge(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?ie(a,d):C;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\nb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:D(\"158\");var k=ge(a);d.props=g;d.state=a.memoizedState=e;d.refs=C;d.context=ie(a,k);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Le(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var k=b.memoizedProps,h=b.pendingProps;h||(h=k,null==h?D(\"159\"):void 0);var u=g.context,x=ge(b);x=ie(b,x);\"function\"!==typeof g.componentWillReceiveProps||k===h&&u===x||(u=g.state,g.componentWillReceiveProps(h,x),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Le(a,b,b.updateQueue,g,h,e):u;if(!(k!==h||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof g.componentDidUpdate||k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var F=h;if(null===k||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)F=!0;else{var L=b.stateNode,G=b.type;F=\"function\"===typeof L.shouldComponentUpdate?L.shouldComponentUpdate(F,e,x):G.prototype&&G.prototype.isPureReactComponent?!ea(k,F)||!ea(u,e):!0}F?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(h,e,x),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\nk===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,h),d(b,e));g.props=h;g.state=e;g.context=x;return F}}}var Oe=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106;function Pe(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Oe,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var Qe=Array.isArray,Re=\"function\"===typeof Symbol&&Symbol.iterator,Se,Te,Ue,Ve;\n\"function\"===typeof Symbol&&Symbol[\"for\"]?(Se=Symbol[\"for\"](\"react.element\"),Te=Symbol[\"for\"](\"react.call\"),Ue=Symbol[\"for\"](\"react.return\"),Ve=Symbol[\"for\"](\"react.fragment\")):(Se=60103,Te=60104,Ue=60105,Ve=60107);function We(a){if(null===a||\"undefined\"===typeof a)return null;a=Re&&a[Re]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Xe(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?D(\"110\"):void 0,d=b.stateNode);d?void 0:D(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===C?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?D(\"148\"):void 0;b._owner?void 0:D(\"149\",c)}return c}\nfunction Ye(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Ze(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var p=c.lastEffect;null!==p?(p.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=8}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c,d){if(a)return b=oe(b,c,d),b.index=0,b.sibling=null,b;b.expirationTime=d;b.effectTag=0;b.index=\n0;b.sibling=null;b.pendingProps=c;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=2,c):d;a.effectTag=2;return c}function k(a){b&&null===a.alternate&&(a.effectTag=2);return a}function h(a,b,c,d){if(null===b||6!==b.tag)return b=re(c,a.internalContextTag,d),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function r(a,b,c,d){if(null!==b&&b.type===c.type)return d=f(b,c.props,d),d.ref=Xe(b,c),d[\"return\"]=a,d;d=pe(c,a.internalContextTag,d);\nd.ref=Xe(b,c);d[\"return\"]=a;return d}function n(a,b,c,d){if(null===b||7!==b.tag)return b=se(c,a.internalContextTag,d),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||9!==b.tag)return b=te(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=f(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function u(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ue(c,a.internalContextTag,\nd),b[\"return\"]=a,b;b=f(b,c.children||[],d);b[\"return\"]=a;return b}function x(a,b,c,d,e){if(null===b||10!==b.tag)return b=qe(c,a.internalContextTag,d,e),b[\"return\"]=a,b;b=f(b,c,d);b[\"return\"]=a;return b}function F(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=re(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Se:if(b.type===Ve)return b=qe(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=pe(b,a.internalContextTag,c);\nc.ref=Xe(null,b);c[\"return\"]=a;return c;case Te:return b=se(b,a.internalContextTag,c),b[\"return\"]=a,b;case Ue:return c=te(b,a.internalContextTag,c),c.type=b.value,c[\"return\"]=a,c;case Oe:return b=ue(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Qe(b)||We(b))return b=qe(b,a.internalContextTag,c,null),b[\"return\"]=a,b;Ye(a,b)}return null}function L(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Se:return c.key===\ne?c.type===Ve?x(a,b,c.props.children,d,e):r(a,b,c,d):null;case Te:return c.key===e?n(a,b,c,d):null;case Ue:return null===e?y(a,b,c,d):null;case Oe:return c.key===e?u(a,b,c,d):null}if(Qe(c)||We(c))return null!==e?null:x(a,b,c,d,null);Ye(a,c)}return null}function G(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Se:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?x(b,a,d.props.children,e,d.key):\nr(b,a,d,e);case Te:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e);case Ue:return a=a.get(c)||null,y(b,a,d,e);case Oe:return a=a.get(null===d.key?c:d.key)||null,u(b,a,d,e)}if(Qe(d)||We(d))return a=a.get(c)||null,x(b,a,d,e,null);Ye(b,d)}return null}function T(a,f,v,k){for(var p=null,z=null,l=f,h=f=0,t=null;null!==l&&h<v.length;h++){l.index>h?(t=l,l=null):t=l.sibling;var w=L(a,l,v[h],k);if(null===w){null===l&&(l=t);break}b&&l&&null===w.alternate&&c(a,l);f=g(w,f,h);null===z?p=w:z.sibling=w;z=w;\nl=t}if(h===v.length)return d(a,l),p;if(null===l){for(;h<v.length;h++)if(l=F(a,v[h],k))f=g(l,f,h),null===z?p=l:z.sibling=l,z=l;return p}for(l=e(a,l);h<v.length;h++)if(t=G(l,a,h,v[h],k)){if(b&&null!==t.alternate)l[\"delete\"](null===t.key?h:t.key);f=g(t,f,h);null===z?p=t:z.sibling=t;z=t}b&&l.forEach(function(b){return c(a,b)});return p}function I(a,f,v,k){var p=We(v);\"function\"!==typeof p?D(\"150\"):void 0;v=p.call(v);null==v?D(\"151\"):void 0;for(var h=p=null,l=f,z=f=0,t=null,w=v.next();null!==l&&!w.done;z++,\nw=v.next()){l.index>z?(t=l,l=null):t=l.sibling;var n=L(a,l,w.value,k);if(null===n){l||(l=t);break}b&&l&&null===n.alternate&&c(a,l);f=g(n,f,z);null===h?p=n:h.sibling=n;h=n;l=t}if(w.done)return d(a,l),p;if(null===l){for(;!w.done;z++,w=v.next())w=F(a,w.value,k),null!==w&&(f=g(w,f,z),null===h?p=w:h.sibling=w,h=w);return p}for(l=e(a,l);!w.done;z++,w=v.next())if(w=G(l,a,z,w.value,k),null!==w){if(b&&null!==w.alternate)l[\"delete\"](null===w.key?z:w.key);f=g(w,f,z);null===h?p=w:h.sibling=w;h=w}b&&l.forEach(function(b){return c(a,\nb)});return p}return function(a,b,e,g){var h=\"object\"===typeof e&&null!==e;if(h)switch(e.$$typeof){case Se:a:{var v=e.key;for(h=b;null!==h;){if(h.key===v)if(10===h.tag?e.type===Ve:h.type===e.type){d(a,h.sibling);b=f(h,e.type===Ve?e.props.children:e.props,g);b.ref=Xe(h,e);b[\"return\"]=a;a=b;break a}else{d(a,h);break}else c(a,h);h=h.sibling}e.type===Ve?(e=qe(e.props.children,a.internalContextTag,g,e.key),e[\"return\"]=a,a=e):(g=pe(e,a.internalContextTag,g),g.ref=Xe(b,e),g[\"return\"]=a,a=g)}return k(a);\ncase Te:a:{for(h=e.key;null!==b;){if(b.key===h)if(7===b.tag){d(a,b.sibling);e=f(b,e,g);e[\"return\"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=se(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return k(a);case Ue:a:{if(null!==b)if(9===b.tag){d(a,b.sibling);b=f(b,null,g);b.type=e.value;b[\"return\"]=a;a=b;break a}else d(a,b);b=te(e,a.internalContextTag,g);b.type=e.value;b[\"return\"]=a;a=b}return k(a);case Oe:a:{for(h=e.key;null!==b;){if(b.key===h)if(4===b.tag&&b.stateNode.containerInfo===e.containerInfo&&\nb.stateNode.implementation===e.implementation){d(a,b.sibling);e=f(b,e.children||[],g);e[\"return\"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=ue(e,a.internalContextTag,g);e[\"return\"]=a;a=e}return k(a)}if(\"string\"===typeof e||\"number\"===typeof e)return e=\"\"+e,null!==b&&6===b.tag?(d(a,b.sibling),e=f(b,e,g)):(d(a,b),e=re(e,a.internalContextTag,g)),e[\"return\"]=a,a=e,k(a);if(Qe(e))return T(a,b,e,g);if(We(e))return I(a,b,e,g);h&&Ye(a,e);if(\"undefined\"===typeof e)switch(a.tag){case 2:case 1:e=\na.type,D(\"152\",e.displayName||e.name||\"Component\")}return d(a,b)}}var $e=Ze(!0,!0),af=Ze(!1,!0),bf=Ze(!1,!1);\nfunction cf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.expirationTime)}function g(a,b,c,d){b.child=null===a?bf(b,b.child,c,d):a.child===b.child?$e(b,b.child,c,d):af(b,b.child,c,d)}function k(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){k(a,b);if(!c)return d&&ne(b,!1),n(a,b);c=b.stateNode;ed.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&ne(b,!0);return b.child}function r(a){var b=a.stateNode;b.pendingContext?ke(a,\nb.pendingContext,b.pendingContext!==b.context):b.context&&ke(a,b.context,!1);G(a,b.containerInfo)}function n(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=oe(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=oe(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function y(a,b){switch(b.tag){case 3:r(b);break;case 2:me(b);break;case 4:G(b,b.stateNode.containerInfo)}return null}var u=\na.shouldSetTextContent,x=a.useSyncScheduling,F=a.shouldDeprioritizeSubtree,L=b.pushHostContext,G=b.pushHostContainer,T=c.enterHydrationState,I=c.resetHydrationState,z=c.tryToClaimNextHydratableInstance;a=Ne(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var p=a.adoptClassInstance,v=a.constructClassInstance,t=a.mountClassInstance,Kb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return y(a,b);switch(b.tag){case 0:null!==a?\nD(\"155\"):void 0;var d=b.type,e=b.pendingProps,g=ge(b);g=ie(b,g);d=d(e,g);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=me(b),p(b,d),t(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=n(a,b);break a}d=ge(b);d=ie(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=me(b),d=void 0,null===\na?b.stateNode?D(\"153\"):(v(b,b.pendingProps),t(b,c),d=!0):d=Kb(a,b,c),h(a,b,d,e);case 3:return r(b),e=b.updateQueue,null!==e?(d=b.memoizedState,e=Le(a,b,e,null,null,c),d===e?(I(),b=n(a,b)):(d=e.element,g=b.stateNode,(null===a||null===a.child)&&g.hydrate&&T(b)?(b.effectTag|=2,b.child=bf(b,b.child,d,c)):(I(),f(a,b,d)),b.memoizedState=e,b=b.child)):(I(),b=n(a,b)),b;case 5:L(b);null===a&&z(b);e=b.type;var l=b.memoizedProps;d=b.pendingProps;null===d&&(d=l,null===d?D(\"154\"):void 0);g=null!==a?a.memoizedProps:\nnull;X.current||null!==d&&l!==d?(l=d.children,u(e,d)?l=null:g&&u(e,g)&&(b.effectTag|=16),k(a,b),2147483647!==c&&!x&&F(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,l),b.memoizedProps=d,b=b.child)):b=n(a,b);return b;case 6:return null===a&&z(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?D(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=\nnull===a?bf(b,b.stateNode,d,c):a.child===b.child?$e(b,b.stateNode,d,c):af(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;case 9:return null;case 4:a:{G(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?D(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=n(a,b);break a}null===a?b.child=af(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||\nb.memoizedProps===c){b=n(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:D(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:me(b);break;case 3:r(b);break;default:D(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return y(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction df(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,k=a.finalizeInitialChildren,h=a.prepareUpdate,r=a.persistence,n=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,x=b.popHostContainer,F=c.prepareToHydrateHostInstance,L=c.prepareToHydrateHostTextInstance,G=c.popHydrationState,T=void 0,I=void 0,z=void 0;a.mutation?(T=function(){},I=function(a,b,c){(b.updateQueue=c)&&d(b)},z=function(a,b,c,e){c!==e&&d(b)}):r?D(\"235\"):D(\"236\");\nreturn{completeWork:function(a,b,c){var p=b.pendingProps;if(null===p)p=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return je(b),null;case 3:x(b);V(X,b);V(ee,b);p=b.stateNode;p.pendingContext&&(p.context=p.pendingContext,p.pendingContext=null);if(null===a||null===a.child)G(b),b.effectTag&=-3;T(b);return null;case 5:y(b);c=n();var v=b.type;if(null!==a&&null!=b.stateNode){var l=a.memoizedProps,t=b.stateNode,r=u();t=\nh(t,v,l,p,c,r);I(a,b,t,v,l,p,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!p)return null===b.stateNode?D(\"166\"):void 0,null;a=u();if(G(b))F(b,c,a)&&d(b);else{a=e(v,p,c,a,b);a:for(l=b.child;null!==l;){if(5===l.tag||6===l.tag)g(a,l.stateNode);else if(4!==l.tag&&null!==l.child){l.child[\"return\"]=l;l=l.child;continue}if(l===b)break;for(;null===l.sibling;){if(null===l[\"return\"]||l[\"return\"]===b)break a;l=l[\"return\"]}l.sibling[\"return\"]=l[\"return\"];l=l.sibling}k(a,v,p,c)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)z(a,b,a.memoizedProps,p);else{if(\"string\"!==typeof p)return null===b.stateNode?D(\"166\"):void 0,null;a=n();c=u();G(b)?L(b)&&d(b):b.stateNode=f(p,a,c,b)}return null;case 7:(p=b.memoizedProps)?void 0:D(\"165\");b.tag=8;v=[];a:for((l=b.stateNode)&&(l[\"return\"]=b);null!==l;){if(5===l.tag||6===l.tag||4===l.tag)D(\"247\");else if(9===l.tag)v.push(l.type);else if(null!==l.child){l.child[\"return\"]=l;l=l.child;continue}for(;null===l.sibling;){if(null===\nl[\"return\"]||l[\"return\"]===b)break a;l=l[\"return\"]}l.sibling[\"return\"]=l[\"return\"];l=l.sibling}l=p.handler;p=l(p.props,v);b.child=$e(b,null!==a?a.child:null,p,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return x(b),T(b),null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction ef(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(v){b(a,v)}}function d(a){\"function\"===typeof Ae&&Ae(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(v){b(a,v)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:h&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||h&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\nb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?I(f,b.stateNode):T(f,b.stateNode);\nelse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var k=a.getPublicInstance,h=a.mutation;a=a.persistence;h||(a?D(\"235\"):D(\"236\"));var r=h.commitMount,n=h.commitUpdate,y=h.resetTextContent,u=h.commitTextUpdate,x=h.appendChild,F=h.appendChildToContainer,L=h.insertBefore,G=h.insertInContainerBefore,\nT=h.removeChild,I=h.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\nnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):L(b,e.stateNode,c):d?F(b,e.stateNode):x(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\na)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&n(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\nc,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Me(b,c);break;case 3:c=b.updateQueue;null!==c&&Me(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&r(c,\nb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:D(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(k(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var ff={};\nfunction gf(a){function b(a){a===ff?D(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:ff},f={current:ff},g={current:ff};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),k=b(e.current);\nd=c(k,a.type,d);k!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=ff;g.current=ff}}}\nfunction hf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,k=a.getNextHydratableSibling,h=a.getFirstHydratableChild,r=a.hydrateInstance,n=a.hydrateTextInstance,y=null,u=null,x=!1;return{enterHydrationState:function(a){u=\nh(a.stateNode.containerInfo);y=a;return x=!0},resetHydrationState:function(){u=y=null;x=!1},tryToClaimNextHydratableInstance:function(a){if(x){var d=u;if(d){if(!c(a,d)){d=k(d);if(!d||!c(a,d)){a.effectTag|=2;x=!1;y=a;return}b(y,u)}y=a;u=h(d)}else a.effectTag|=2,x=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=r(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return n(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\ny)return!1;if(!x)return d(a),x=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=k(c);d(a);u=y?k(a.stateNode):null;return!0}}}\nfunction jf(a){function b(a){Lb=ma=!0;var b=a.stateNode;b.current===a?D(\"177\"):void 0;b.isReadyForCommit=!1;ed.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;vg();for(q=c;null!==q;){var d=!1,e=void 0;try{for(;null!==q;){var f=q.effectTag;f&16&&wg(q);if(f&128){var g=q.alternate;null!==g&&xg(g)}switch(f&-242){case 2:He(q);q.effectTag&=-3;break;case 6:He(q);q.effectTag&=-3;Ie(q.alternate,q);break;case 4:Ie(q.alternate,\nq);break;case 8:Lc=!0,yg(q),Lc=!1}q=q.nextEffect}}catch(Mc){d=!0,e=Mc}d&&(null===q?D(\"178\"):void 0,k(q,e),null!==q&&(q=q.nextEffect))}zg();b.current=a;for(q=c;null!==q;){c=!1;d=void 0;try{for(;null!==q;){var h=q.effectTag;h&36&&Ag(q.alternate,q);h&128&&Bg(q);if(h&64)switch(e=q,f=void 0,null!==P&&(f=P.get(e),P[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=P.get(e),P[\"delete\"](e))),null==f?D(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\nbreak;case 3:null===ba&&(ba=f.error);break;default:D(\"157\")}var Fa=q.nextEffect;q.nextEffect=null;q=Fa}}catch(Mc){c=!0,d=Mc}c&&(null===q?D(\"178\"):void 0,k(q,d),null!==q&&(q=q.nextEffect))}ma=Lb=!1;\"function\"===typeof ze&&ze(a.stateNode);fa&&(fa.forEach(F),fa=null);null!==ba&&(a=ba,ba=null,v(a));b=b.current.expirationTime;0===b&&(na=P=null);return b}function c(a){for(;;){var b=og(a.alternate,a,J),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===J||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\ne.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\nif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=w(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function e(a){var b=ng(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function f(a){if(null!==P){if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=h(E)?e(E):d(E);else for(;null!==E&&!p();)E=h(E)?e(E):d(E)}else if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=d(E);else for(;null!==E&&!p();)E=d(E)}function g(a,b){ma?D(\"243\"):void 0;ma=!0;a.isReadyForCommit=\n!1;if(a!==eb||b!==J||null===E){for(;-1<de;)ce[de]=null,de--;fe=C;ee.current=C;X.current=!1;mg();eb=a;J=b;E=oe(eb.current,null,b)}var c=!1,d=null;try{f(b)}catch(Kc){c=!0,d=Kc}for(;c;){if(fb){ba=d;break}var g=E;if(null===g)fb=!0;else{var h=k(g,d);null===h?D(\"183\"):void 0;if(!fb){try{c=h;d=b;for(h=c;null!==g;){switch(g.tag){case 2:je(g);break;case 5:l(g);break;case 3:Fe(g);break;case 4:Fe(g)}if(g===h||g.alternate===h)break;g=g[\"return\"]}E=e(c);f(d)}catch(Kc){c=!0;d=Kc;continue}break}}}b=ba;fb=ma=!1;\nba=null;null!==b&&v(b);return a.isReadyForCommit?a.current.alternate:null}function k(a,b){var c=ed.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,r(a)&&(fb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=fd(g),c=g,e=!0):3===g.tag&&(c=g);if(r(g)){if(Lc||null!==fa&&(fa.has(g)||null!==g.alternate&&fa.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===na&&(na=new Set);na.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\ng._debugOwner,l=g._debugSource;var Fa=fd(g);var n=null;k&&(n=fd(k));k=l;Fa=\"\\n    in \"+(Fa||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:Fa=\"\"}h+=Fa;g=g[\"return\"]}while(g);g=h;a=fd(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Cg){console.error(Cg)}Lb?(null===fa&&(fa=new Set),\nfa.add(c)):F(c);return c}null===ba&&(ba=b);return null}function h(a){return null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))}function r(a){return null!==na&&(na.has(a)||null!==a.alternate&&na.has(a.alternate))}function n(){return 20*(((L()+100)/20|0)+1)}function y(a){return 0!==ja?ja:ma?Lb?1:J:!Dg||a.internalContextTag&1?n():1}function u(a,b){return x(a,b,!1)}function x(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||\na.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ma&&c===eb&&b<=J&&(E=eb=null,J=0);var d=b;Mb>Eg&&D(\"185\");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===M?(oa=M=c,c.nextScheduledRoot=c):(M=M.nextScheduledRoot=c,M.nextScheduledRoot=oa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}Ga||(ka?Nb&&z(c,1):1===d?I(1,null):gb||(gb=!0,Je(T)))}else break;a=a[\"return\"]}}function F(a){x(a,1,\n!0)}function L(){return Nc=((Ke()-Fg)/10|0)+2}function G(){var a=0,b=null;if(null!==M)for(var c=M,d=oa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===M?D(\"244\"):void 0;if(d===d.nextScheduledRoot){oa=M=d.nextScheduledRoot=null;break}else if(d===oa)oa=e=d.nextScheduledRoot,M.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===M){M=c;M.nextScheduledRoot=oa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===\na||e<a)a=e,b=d;if(d===M)break;c=d;d=d.nextScheduledRoot}}c=pa;null!==c&&c===b?Mb++:Mb=0;pa=b;Ob=a}function T(a){I(0,a)}function I(a,b){hb=b;for(G();null!==pa&&0!==Ob&&(0===a||Ob<=a)&&!Oc;)z(pa,Ob),G();null!==hb&&(gb=!1);null===pa||gb||(gb=!0,Je(T));hb=null;Oc=!1;Mb=0;if(Pb)throw a=Pc,Pc=null,Pb=!1,a;}function z(a,c){Ga?D(\"245\"):void 0;Ga=!0;if(c<=L()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=\nb(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(p()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Ga=!1}function p(){return null===hb||hb.timeRemaining()>Gg?!1:Oc=!0}function v(a){null===pa?D(\"246\"):void 0;pa.remainingExpirationTime=0;Pb||(Pb=!0,Pc=a)}var t=gf(a),Kb=hf(a),Fe=t.popHostContainer,l=t.popHostContext,mg=t.resetHostContainer,Ge=cf(a,t,Kb,u,y),w=Ge.beginWork,ng=Ge.beginFailedWork,og=df(a,t,Kb).completeWork;\nt=ef(a,k);var wg=t.commitResetTextContent,He=t.commitPlacement,yg=t.commitDeletion,Ie=t.commitWork,Ag=t.commitLifeCycles,Bg=t.commitAttachRef,xg=t.commitDetachRef,Ke=a.now,Je=a.scheduleDeferredCallback,Dg=a.useSyncScheduling,vg=a.prepareForCommit,zg=a.resetAfterCommit,Fg=Ke(),Nc=2,ja=0,ma=!1,E=null,eb=null,J=0,q=null,P=null,na=null,fa=null,ba=null,fb=!1,Lb=!1,Lc=!1,oa=null,M=null,gb=!1,Ga=!1,pa=null,Ob=0,Oc=!1,Pb=!1,Pc=null,hb=null,ka=!1,Nb=!1,Eg=1E3,Mb=0,Gg=1;return{computeAsyncExpiration:n,computeExpirationForFiber:y,\nscheduleWork:u,batchedUpdates:function(a,b){var c=ka;ka=!0;try{return a(b)}finally{(ka=c)||Ga||I(1,null)}},unbatchedUpdates:function(a){if(ka&&!Nb){Nb=!0;try{return a()}finally{Nb=!1}}return a()},flushSync:function(a){var b=ka;ka=!0;try{a:{var c=ja;ja=1;try{var d=a();break a}finally{ja=c}d=void 0}return d}finally{ka=b,Ga?D(\"187\"):void 0,I(1,null)}},deferredUpdates:function(a){var b=ja;ja=n();try{return a()}finally{ja=b}}}}\nfunction kf(a){function b(a){a=kd(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=jf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,r){var g=b.current;if(c){c=\nc._reactInternalFiber;var h;b:{2===gd(c)&&2===c.tag?void 0:D(\"170\");for(h=c;3!==h.tag;){if(he(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:D(\"171\")}h=h.stateNode.context}c=he(c)?le(c,h):h}else c=C;null===b.context?b.context=c:b.pendingContext=c;b=r;b=void 0===b?null:b;r=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);De(g,{expirationTime:r,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});f(g,r)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=ld(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return ye(A({},\na,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var lf=Object.freeze({default:kf}),mf=lf&&kf||lf,nf=mf[\"default\"]?mf[\"default\"]:mf,of=\"object\"===typeof performance&&\"function\"===typeof performance.now,pf=void 0;pf=of?function(){return performance.now()}:function(){return Date.now()};var qf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback){var rf=null,sf=!1,tf=!1,uf=0,vf=33,wf=33,xf;xf=of?{timeRemaining:function(){return uf-performance.now()}}:{timeRemaining:function(){return uf-Date.now()}};var yf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){a.source===window&&a.data===yf&&(sf=!1,a=rf,rf=null,null!==a&&a(xf))},!1);var zf=function(a){tf=!1;var b=a-uf+wf;b<wf&&vf<wf?(8>b&&(b=8),wf=b<vf?vf:b):vf=b;uf=a+wf;sf||(sf=!0,\nwindow.postMessage(yf,\"*\"))};qf=function(a){rf=a;tf||(tf=!0,requestAnimationFrame(zf));return 0}}else qf=requestIdleCallback;else qf=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};\nvar Af=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Bf={},Cf={};function Df(a){if(Cf.hasOwnProperty(a))return!0;if(Bf.hasOwnProperty(a))return!1;if(Af.test(a))return Cf[a]=!0;Bf[a]=!0;return!1}\nfunction Ef(a,b,c){var d=ua(b);if(d&&ta(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Ff(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Gf(a,b,ta(b,c)?c:null)}\nfunction Gf(a,b,c){Df(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Ff(a,b){var c=ua(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\nfunction Hf(a,b){var c=b.value,d=b.checked;return A({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function If(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\nfunction Jf(a,b){var c=b.checked;null!=c&&Ef(a,\"checked\",c||!1);c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Kf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Lf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\nfunction Mf(a,b){a=A({children:void 0},b);if(b=Lf(b.children))a.children=b;return a}function Nf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Of(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Pf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Qf(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"),d=c);a._wrapperState={initialValue:\"\"+d}}\nfunction Rf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Sf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Tf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Uf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Vf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Uf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Wf=void 0,Xf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Tf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Wf=Wf||document.createElement(\"div\");Wf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Wf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),Yf=/[\"'&<>]/;\nfunction Zf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nm.canUseDOM&&(\"textContent\"in document.documentElement||(Zf=function(a,b){if(3===a.nodeType)a.nodeValue=b;else{if(\"boolean\"===typeof b||\"number\"===typeof b)b=\"\"+b;else{b=\"\"+b;var c=Yf.exec(b);if(c){var d=\"\",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c=\"\\x26quot;\";break;case 38:c=\"\\x26amp;\";break;case 39:c=\"\\x26#x27;\";break;case 60:c=\"\\x26lt;\";break;case 62:c=\"\\x26gt;\";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Xf(a,b)}}));\nvar $f=Zf,ag={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},bg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(ag).forEach(function(a){bg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);ag[b]=ag[a]})});\nfunction cg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||ag.hasOwnProperty(e)&&ag[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var dg=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction eg(a,b,c){b&&(dg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction fg(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var gg=Tf.html,hg=B.thatReturns(\"\");\nfunction ig(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Dd(a);b=Ra[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topWheel\"===e?yc(\"wheel\")?U(\"topWheel\",\"wheel\",a):yc(\"mousewheel\")?U(\"topWheel\",\"mousewheel\",a):U(\"topWheel\",\"DOMMouseScroll\",a):\"topScroll\"===e?sd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(sd(\"topFocus\",\"focus\",a),sd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&sd(\"topCancel\",\"cancel\",a),c.topCancel=\n!0):\"topClose\"===e?(yc(\"close\",!0)&&sd(\"topClose\",\"close\",a),c.topClose=!0):zd.hasOwnProperty(e)&&U(e,zd[e],a),c[e]=!0)}}\nvar jg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"};function kg(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===gg&&(d=Uf(a));d===gg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function lg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction pg(a,b,c,d){var e=fg(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":If(a,c);f=Hf(a,c);U(\"topInvalid\",\"invalid\",a);\nig(d,\"onChange\");break;case \"option\":f=Mf(a,c);break;case \"select\":Of(a,c);f=A({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);ig(d,\"onChange\");break;case \"textarea\":Qf(a,c);f=Pf(a,c);U(\"topInvalid\",\"invalid\",a);ig(d,\"onChange\");break;default:f=c}eg(b,f,hg);var g=f,k;for(k in g)if(g.hasOwnProperty(k)){var h=g[k];\"style\"===k?cg(a,h,hg):\"dangerouslySetInnerHTML\"===k?(h=h?h.__html:void 0,null!=h&&Xf(a,h)):\"children\"===k?\"string\"===typeof h?(\"textarea\"!==b||\"\"!==h)&&$f(a,h):\"number\"===typeof h&&$f(a,\n\"\"+h):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(Qa.hasOwnProperty(k)?null!=h&&ig(d,k):e?Gf(a,k,h):null!=h&&Ef(a,k,h))}switch(b){case \"input\":Bc(a);Kf(a,c);break;case \"textarea\":Bc(a);Sf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Nf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Nf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\nB)}}\nfunction qg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Hf(a,c);d=Hf(a,d);f=[];break;case \"option\":c=Mf(a,c);d=Mf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Pf(a,c);d=Pf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=B)}eg(b,d,hg);var g,k;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(k in b=c[g],b)b.hasOwnProperty(k)&&(a||(a={}),a[k]=\n\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Qa.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var h=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&h!==b&&(null!=h||null!=b))if(\"style\"===g)if(b){for(k in b)!b.hasOwnProperty(k)||h&&h.hasOwnProperty(k)||(a||(a={}),a[k]=\"\");for(k in h)h.hasOwnProperty(k)&&b[k]!==h[k]&&(a||(a={}),a[k]=h[k])}else a||(f||(f=[]),f.push(g,a)),a=h;else\"dangerouslySetInnerHTML\"===\ng?(h=h?h.__html:void 0,b=b?b.__html:void 0,null!=h&&b!==h&&(f=f||[]).push(g,\"\"+h)):\"children\"===g?b===h||\"string\"!==typeof h&&\"number\"!==typeof h||(f=f||[]).push(g,\"\"+h):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Qa.hasOwnProperty(g)?(null!=h&&ig(e,g),f||b===h||(f=[])):(f=f||[]).push(g,h))}a&&(f=f||[]).push(\"style\",a);return f}\nfunction rg(a,b,c,d,e){fg(c,d);d=fg(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],k=b[f+1];\"style\"===g?cg(a,k,hg):\"dangerouslySetInnerHTML\"===g?Xf(a,k):\"children\"===g?$f(a,k):d?null!=k?Gf(a,g,k):a.removeAttribute(g):null!=k?Ef(a,g,k):Ff(a,g)}switch(c){case \"input\":Jf(a,e);Cc(a);break;case \"textarea\":Rf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Nf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=\ne.defaultValue?Nf(a,!!e.multiple,e.defaultValue,!0):Nf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction sg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":If(a,c);U(\"topInvalid\",\"invalid\",a);ig(e,\"onChange\");break;case \"select\":Of(a,c);\nU(\"topInvalid\",\"invalid\",a);ig(e,\"onChange\");break;case \"textarea\":Qf(a,c),U(\"topInvalid\",\"invalid\",a),ig(e,\"onChange\")}eg(b,c,hg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Qa.hasOwnProperty(g)&&null!=f&&ig(e,g));switch(b){case \"input\":Bc(a);Kf(a,c);break;case \"textarea\":Bc(a);Sf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=B)}return d}function tg(a,b){return a.nodeValue!==b}\nvar ug=Object.freeze({createElement:kg,createTextNode:lg,setInitialProperties:pg,diffProperties:qg,updateProperties:rg,diffHydratedProperties:sg,diffHydratedText:tg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Jf(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=sb(d);e?void 0:D(\"90\");Jf(d,e)}}}break;case \"textarea\":Rf(a,c);break;case \"select\":b=c.value,null!=b&&Nf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(ug);var Hg=null,Ig=null;function Jg(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction Kg(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\nvar Z=nf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Vf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Vf(a,b)}return a},getChildHostContext:function(a,b){return Vf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Hg=pd;var a=da();if(Gd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(x){b=null;break a}var f=0,g=-1,k=-1,h=0,r=0,n=a,y=null;b:for(;;){for(var u;;){n!==b||0!==d&&3!==n.nodeType||(g=f+d);n!==e||0!==c&&3!==n.nodeType||(k=f+c);3===n.nodeType&&(f+=n.nodeValue.length);if(null===(u=n.firstChild))break;y=n;n=u}for(;;){if(n===a)break b;y===b&&++h===d&&(g=f);y===e&&++r===c&&(k=f);if(null!==(u=n.nextSibling))break;n=y;y=n.parentNode}n=u}b=-1===g||-1===k?null:\n{start:g,end:k}}else b=null}b=b||{start:0,end:0}}else b=null;Ig={focusedElem:a,selectionRange:b};qd(!1)},resetAfterCommit:function(){var a=Ig,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ha(document.documentElement,c)){if(Gd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=Fd(c,a);var f=Fd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\na.top}Ig=null;qd(Hg);Hg=null},createInstance:function(a,b,c,d,e){a=kg(a,b,c,d);a[O]=e;a[pb]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return qg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\ntypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=lg(a,b);a[O]=d;return a},now:pf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[pb]=e;rg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\nb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\nb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[O]=f;a[pb]=c;return sg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[O]=c;return tg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\ndidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:qf,useSyncScheduling:!0});rc=Z.batchedUpdates;\nfunction Lg(a,b,c,d,e){Jg(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Kg(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Mg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Jg(b)?void 0:D(\"200\");return Pe(a,b,null,c)}\nfunction Ng(a,b){this._reactRootContainer=Z.createContainer(a,b)}Ng.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Ng.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\nvar Og={createPortal:Mg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?D(\"188\"):D(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Lg(null,a,b,!0,c)},render:function(a,b,c){return Lg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Lg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Jg(a)?void 0:\nD(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Lg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Mg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:nb,EventPluginRegistry:Ua,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:tb,ReactDOMEventListener:td}};\nZ.injectIntoDevTools({findFiberByHostInstance:qb,bundleType:0,version:\"16.1.1\",rendererPackageName:\"react-dom\"});var Pg=Object.freeze({default:Og}),Qg=Pg&&Og||Pg;module.exports=Qg[\"default\"]?Qg[\"default\"]:Qg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 162\n// module chunks = 0","/** @license React v16.1.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/emptyObject\"),p=require(\"fbjs/lib/emptyFunction\");\nfunction q(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar r={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function t(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}t.prototype.isReactComponent={};t.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?q(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};t.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction u(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}function v(){}v.prototype=t.prototype;var w=u.prototype=new v;w.constructor=u;m(w,t.prototype);w.isPureReactComponent=!0;function x(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}var y=x.prototype=new v;y.constructor=x;m(y,t.prototype);y.unstable_isAsyncReactComponent=!0;y.render=function(){return this.props.children};\nvar z={current:null},A=Object.prototype.hasOwnProperty,B=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,C={key:!0,ref:!0,__self:!0,__source:!0};\nfunction D(a,b,e){var d,c={},h=null,k=null;if(null!=b)for(d in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(h=\"\"+b.key),b)A.call(b,d)&&!C.hasOwnProperty(d)&&(c[d]=b[d]);var f=arguments.length-2;if(1===f)c.children=e;else if(1<f){for(var g=Array(f),l=0;l<f;l++)g[l]=arguments[l+2];c.children=g}if(a&&a.defaultProps)for(d in f=a.defaultProps,f)void 0===c[d]&&(c[d]=f[d]);return{$$typeof:B,type:a,key:h,ref:k,props:c,_owner:z.current}}function E(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===B}\nvar F=\"function\"===typeof Symbol&&Symbol.iterator,G=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.element\")||60103,H=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106;function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var I=/\\/+/g,J=[];\nfunction K(a,b,e,d){if(J.length){var c=J.pop();c.result=a;c.keyPrefix=b;c.func=e;c.context=d;c.count=0;return c}return{result:a,keyPrefix:b,func:e,context:d,count:0}}function L(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>J.length&&J.push(a)}\nfunction M(a,b,e,d){var c=typeof a;if(\"undefined\"===c||\"boolean\"===c)a=null;if(null===a||\"string\"===c||\"number\"===c||\"object\"===c&&a.$$typeof===G||\"object\"===c&&a.$$typeof===H)return e(d,a,\"\"===b?\".\"+N(a,0):b),1;var h=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var f=b+N(c,k);h+=M(c,f,e,d)}else if(f=F&&a[F]||a[\"@@iterator\"],\"function\"===typeof f)for(a=f.call(a),k=0;!(c=a.next()).done;)c=c.value,f=b+N(c,k++),h+=M(c,f,e,d);else\"object\"===c&&(e=\"\"+a,q(\"31\",\"[object Object]\"===\ne?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return h}function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function O(a,b){a.func.call(a.context,b,a.count++)}\nfunction P(a,b,e){var d=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?Q(a,d,e,p.thatReturnsArgument):null!=a&&(E(a)&&(b=c+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(I,\"$\\x26/\")+\"/\")+e,a={$$typeof:B,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),d.push(a))}function Q(a,b,e,d,c){var h=\"\";null!=e&&(h=(\"\"+e).replace(I,\"$\\x26/\")+\"/\");b=K(b,h,d,c);null==a||M(a,\"\",P,b);L(b)}\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.fragment\");\nvar R={Children:{map:function(a,b,e){if(null==a)return a;var d=[];Q(a,d,null,b,e);return d},forEach:function(a,b,e){if(null==a)return a;b=K(null,null,b,e);null==a||M(a,\"\",O,b);L(b)},count:function(a){return null==a?0:M(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];Q(a,b,null,p.thatReturnsArgument);return b},only:function(a){E(a)?void 0:q(\"143\");return a}},Component:t,PureComponent:u,unstable_AsyncComponent:x,createElement:D,cloneElement:function(a,b,e){var d=m({},a.props),c=a.key,h=a.ref,\nk=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,k=z.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(g in b)A.call(b,g)&&!C.hasOwnProperty(g)&&(d[g]=void 0===b[g]&&void 0!==f?f[g]:b[g])}var g=arguments.length-2;if(1===g)d.children=e;else if(1<g){f=Array(g);for(var l=0;l<g;l++)f[l]=arguments[l+2];d.children=f}return{$$typeof:B,type:a.type,key:c,ref:h,props:d,_owner:k}},createFactory:function(a){var b=D.bind(null,a);b.type=a;return b},isValidElement:E,\nversion:\"16.1.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:z,assign:m}},S=Object.freeze({default:R}),T=S&&R||S;module.exports=T[\"default\"]?T[\"default\"]:T;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 163\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime-module.js\n// module id = 164\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 165\n// module chunks = 0","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/alea.js\n// module id = 166\n// module chunks = 0","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/tychei.js\n// module id = 167\n// module chunks = 0","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor128.js\n// module id = 168\n// module chunks = 0","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor4096.js\n// module id = 169\n// module chunks = 0","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorshift7.js\n// module id = 170\n// module chunks = 0","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorwow.js\n// module id = 171\n// module chunks = 0","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/seedrandom.js\n// module id = 172\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 173\n// module chunks = 0"],"sourceRoot":""}